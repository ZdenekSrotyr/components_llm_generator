Directory structure:
└── kds_consulting_team-kds-team.ex-xero/
    ├── composer.lock
    ├── tests/
    │   └── data/
    │       ├── config_all.json
    │       ├── config_single.json
    │       └── config.json
    ├── composer.json
    ├── run.php
    ├── Dockerfile
    ├── src/
    │   ├── Exception/
    │   │   ├── UserException.php
    │   │   ├── AuthException.php
    │   │   └── ApplicationException.php
    │   ├── Extractor.php
    │   ├── ConfigDefinition.php
    │   └── Component.php
    ├── docs/
    │   └── README.md
    ├── .gitlab-ci.yml
    ├── bitbucket-pipelines.yml
    ├── component_config/
    │   ├── component_short_description.md
    │   ├── configSchema.json
    │   ├── stack_parameters.json
    │   ├── configuration_description.md
    │   ├── configRowSchema.json
    │   ├── component_long_description.md
    │   └── sample-config/
    │       ├── in/
    │       │   ├── tables/
    │       │   │   ├── test.csv
    │       │   │   └── test.csv.manifest
    │       │   ├── state.json
    │       │   └── files/
    │       │       └── order1.xml
    │       ├── out/
    │       │   ├── tables/
    │       │   │   └── test.csv
    │       │   └── files/
    │       │       └── order1.xml
    │       └── config.json
    ├── deploy.sh
    ├── docker-compose.yml
    ├── docker/
    │   ├── php/
    │   │   └── php.ini
    │   └── xdebug/
    │       └── xdebug.ini.dist
    ├── scripts/
    │   ├── build_n_test.sh
    │   ├── update_dev_portal_properties.sh
    │   ├── build_n_run.ps1
    │   ├── run.bat
    │   └── run_kbc_tests.ps1
    ├── README.md
    └── Dockerfile-debug

================================================
File: /composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "4614519427f90e1b24f8f9aab42ec348",
    "packages": [
        {
            "name": "firebase/php-jwt",
            "version": "v5.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/firebase/php-jwt.git",
                "reference": "f42c9110abe98dd6cfe9053c49bc86acc70b2d23"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/firebase/php-jwt/zipball/f42c9110abe98dd6cfe9053c49bc86acc70b2d23",
                "reference": "f42c9110abe98dd6cfe9053c49bc86acc70b2d23",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "require-dev": {
                "phpunit/phpunit": ">=4.8 <=9"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Firebase\\JWT\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Neuman Vong",
                    "email": "neuman+pear@twilio.com",
                    "role": "Developer"
                },
                {
                    "name": "Anant Narayanan",
                    "email": "anant@php.net",
                    "role": "Developer"
                }
            ],
            "description": "A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.",
            "homepage": "https://github.com/firebase/php-jwt",
            "keywords": [
                "jwt",
                "php"
            ],
            "support": {
                "issues": "https://github.com/firebase/php-jwt/issues",
                "source": "https://github.com/firebase/php-jwt/tree/v5.2.1"
            },
            "time": "2021-02-12T00:02:00+00:00"
        },
        {
            "name": "guzzlehttp/guzzle",
            "version": "7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/guzzle.git",
                "reference": "7008573787b430c1c1f650e3722d9bba59967628"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/7008573787b430c1c1f650e3722d9bba59967628",
                "reference": "7008573787b430c1c1f650e3722d9bba59967628",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "guzzlehttp/promises": "^1.4",
                "guzzlehttp/psr7": "^1.7 || ^2.0",
                "php": "^7.2.5 || ^8.0",
                "psr/http-client": "^1.0"
            },
            "provide": {
                "psr/http-client-implementation": "1.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.4.1",
                "ext-curl": "*",
                "php-http/client-integration-tests": "^3.0",
                "phpunit/phpunit": "^8.5.5 || ^9.3.5",
                "psr/log": "^1.1"
            },
            "suggest": {
                "ext-curl": "Required for CURL handler support",
                "ext-intl": "Required for Internationalized Domain Name (IDN) support",
                "psr/log": "Required for using the Log middleware"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "7.3-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\": "src/"
                },
                "files": [
                    "src/functions_include.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://sagikazarmark.hu"
                }
            ],
            "description": "Guzzle is a PHP HTTP client library",
            "homepage": "http://guzzlephp.org/",
            "keywords": [
                "client",
                "curl",
                "framework",
                "http",
                "http client",
                "psr-18",
                "psr-7",
                "rest",
                "web service"
            ],
            "support": {
                "issues": "https://github.com/guzzle/guzzle/issues",
                "source": "https://github.com/guzzle/guzzle/tree/7.3.0"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://github.com/alexeyshockov",
                    "type": "github"
                },
                {
                    "url": "https://github.com/gmponos",
                    "type": "github"
                }
            ],
            "time": "2021-03-23T11:33:13+00:00"
        },
        {
            "name": "guzzlehttp/promises",
            "version": "1.4.1",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/promises.git",
                "reference": "8e7d04f1f6450fef59366c399cfad4b9383aa30d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/promises/zipball/8e7d04f1f6450fef59366c399cfad4b9383aa30d",
                "reference": "8e7d04f1f6450fef59366c399cfad4b9383aa30d",
                "shasum": ""
            },
            "require": {
                "php": ">=5.5"
            },
            "require-dev": {
                "symfony/phpunit-bridge": "^4.4 || ^5.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.4-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Promise\\": "src/"
                },
                "files": [
                    "src/functions_include.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                }
            ],
            "description": "Guzzle promises library",
            "keywords": [
                "promise"
            ],
            "support": {
                "issues": "https://github.com/guzzle/promises/issues",
                "source": "https://github.com/guzzle/promises/tree/1.4.1"
            },
            "time": "2021-03-07T09:25:29+00:00"
        },
        {
            "name": "guzzlehttp/psr7",
            "version": "1.8.2",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/psr7.git",
                "reference": "dc960a912984efb74d0a90222870c72c87f10c91"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/psr7/zipball/dc960a912984efb74d0a90222870c72c87f10c91",
                "reference": "dc960a912984efb74d0a90222870c72c87f10c91",
                "shasum": ""
            },
            "require": {
                "php": ">=5.4.0",
                "psr/http-message": "~1.0",
                "ralouphie/getallheaders": "^2.0.5 || ^3.0.0"
            },
            "provide": {
                "psr/http-message-implementation": "1.0"
            },
            "require-dev": {
                "ext-zlib": "*",
                "phpunit/phpunit": "~4.8.36 || ^5.7.27 || ^6.5.14 || ^7.5.20 || ^8.5.8 || ^9.3.10"
            },
            "suggest": {
                "laminas/laminas-httphandlerrunner": "Emit PSR-7 responses"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.7-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Psr7\\": "src/"
                },
                "files": [
                    "src/functions_include.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Tobias Schultze",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "PSR-7 message implementation that also provides common utility methods",
            "keywords": [
                "http",
                "message",
                "psr-7",
                "request",
                "response",
                "stream",
                "uri",
                "url"
            ],
            "support": {
                "issues": "https://github.com/guzzle/psr7/issues",
                "source": "https://github.com/guzzle/psr7/tree/1.8.2"
            },
            "time": "2021-04-26T09:17:50+00:00"
        },
        {
            "name": "keboola/common-exceptions",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/common-exceptions.git",
                "reference": "fb3ac03b92e7db56f1f4e1952d232ef8640a18d7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/common-exceptions/zipball/fb3ac03b92e7db56f1f4e1952d232ef8640a18d7",
                "reference": "fb3ac03b92e7db56f1f4e1952d232ef8640a18d7",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": ">=7.0.2",
                "keboola/php-temp": "^1.0",
                "phpstan/phpstan-shim": "^0.10.6",
                "phpunit/phpunit": "^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\CommonExceptions\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Common exceptions shared between different applications",
            "support": {
                "source": "https://github.com/keboola/common-exceptions/tree/master"
            },
            "time": "2020-07-07T07:42:44+00:00"
        },
        {
            "name": "keboola/csv",
            "version": "2.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csv.git",
                "reference": "eb5a835a855f1bf03ddaa330e7b22fc5fb6042d7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csv/zipball/eb5a835a855f1bf03ddaa330e7b22fc5fb6042d7",
                "reference": "eb5a835a855f1bf03ddaa330e7b22fc5fb6042d7",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "ext-json": "*",
                "phpunit/phpunit": "^5.7",
                "squizlabs/php_codesniffer": "^3.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Csv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola CSV reader and writer",
            "homepage": "http://keboola.com",
            "keywords": [
                "csv",
                "rfc4180"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-csv/issues",
                "source": "https://github.com/keboola/php-csv/tree/master"
            },
            "time": "2020-07-28T09:27:05+00:00"
        },
        {
            "name": "keboola/json-parser",
            "version": "3.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-jsonparser.git",
                "reference": "a8b93569f57ba1dae696729f74ffa8f79a0955df"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-jsonparser/zipball/a8b93569f57ba1dae696729f74ffa8f79a0955df",
                "reference": "a8b93569f57ba1dae696729f74ffa8f79a0955df",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "keboola/php-csvtable": "^1.1.1",
                "keboola/php-temp": "^2.0",
                "keboola/php-utils": "^4.1",
                "monolog/monolog": "^2.2",
                "php": ">=7.4"
            },
            "require-dev": {
                "keboola/coding-standard": ">=9.0",
                "php-parallel-lint/php-parallel-lint": "^1.2",
                "phpstan/phpstan": "^0.12.14",
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Json\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola JSON to CSV parser",
            "keywords": [
                "converter",
                "csv",
                "json",
                "json2csv",
                "parser"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-jsonparser/issues",
                "source": "https://github.com/keboola/php-jsonparser/tree/3.0.0"
            },
            "time": "2021-01-14T12:37:59+00:00"
        },
        {
            "name": "keboola/php-component",
            "version": "8.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-component.git",
                "reference": "2791e6eb346dc25a3a82818fd8dbebddc8eeb79b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-component/zipball/2791e6eb346dc25a3a82818fd8dbebddc8eeb79b",
                "reference": "2791e6eb346dc25a3a82818fd8dbebddc8eeb79b",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "keboola/common-exceptions": "^1.0",
                "monolog/monolog": "^2.0",
                "php": "^7.3",
                "symfony/config": "^5.0",
                "symfony/filesystem": "^5.0",
                "symfony/finder": "^5.0",
                "symfony/serializer": "^5.0"
            },
            "require-dev": {
                "devedge/sami-github": "^1.0",
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": ">=7.0.2",
                "keboola/php-temp": "^2.0",
                "phpstan/phpstan": "^0.12.14",
                "phpunit/phpunit": "^9.0"
            },
            "type": "project",
            "autoload": {
                "psr-4": {
                    "Keboola\\Component\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Helper classes for developing Keboola PHP components",
            "keywords": [
                "component",
                "docker",
                "keboola"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-component/issues",
                "source": "https://github.com/keboola/php-component/tree/8.3.0"
            },
            "time": "2021-03-12T08:12:05+00:00"
        },
        {
            "name": "keboola/php-csvtable",
            "version": "1.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csvtable.git",
                "reference": "c5163f1b96c3e35f660b35218781621c789b1a28"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csvtable/zipball/c5163f1b96c3e35f660b35218781621c789b1a28",
                "reference": "c5163f1b96c3e35f660b35218781621c789b1a28",
                "shasum": ""
            },
            "require": {
                "keboola/csv": "^2.2",
                "keboola/php-temp": "^2.0",
                "php": "^7.1"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "dev-master",
                "phpunit/phpunit": ">=7.5"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\CsvTable": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ondrej Vana",
                    "email": "kachna@keboola.cz"
                }
            ],
            "description": "CSV file class with Keboola StorageApi extensions",
            "keywords": [
                "csv",
                "storageapi",
                "table"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-csvtable/issues",
                "source": "https://github.com/keboola/php-csvtable/tree/1.2.0"
            },
            "time": "2021-01-20T10:46:15+00:00"
        },
        {
            "name": "keboola/php-temp",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-temp.git",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-temp/zipball/cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "symfony/filesystem": ">2.8"
            },
            "require-dev": {
                "infection/infection": "^0.12",
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^8.0",
                "phpstan/phpstan-shim": "^0.11",
                "phpunit/phpunit": "^7.0|^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Temp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Temp library handles application temporary files",
            "keywords": [
                "filesystem",
                "temp"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-temp/issues",
                "source": "https://github.com/keboola/php-temp/tree/2.0.1"
            },
            "time": "2019-04-26T07:18:24+00:00"
        },
        {
            "name": "keboola/php-utils",
            "version": "4.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-utils.git",
                "reference": "f5be83a50b5c4858f5698747e8a795048a89c382"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-utils/zipball/f5be83a50b5c4858f5698747e8a795048a89c382",
                "reference": "f5be83a50b5c4858f5698747e8a795048a89c382",
                "shasum": ""
            },
            "require": {
                "keboola/sanitizer": "^0.1",
                "php": ">=5.6.0",
                "seld/jsonlint": "^1.4"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "~0.2",
                "phpunit/phpunit": "~5.0",
                "squizlabs/php_codesniffer": "~2.4"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/Keboola/Utils/jsonDecode.php",
                    "src/Keboola/Utils/sanitizeUtf8.php",
                    "src/Keboola/Utils/objectToArray.php",
                    "src/Keboola/Utils/formatDateTime.php",
                    "src/Keboola/Utils/replaceDates.php",
                    "src/Keboola/Utils/replaceDatesInArray.php",
                    "src/Keboola/Utils/buildUrl.php",
                    "src/Keboola/Utils/httpBuildUrl.php",
                    "src/Keboola/Utils/returnBytes.php",
                    "src/Keboola/Utils/camelize.php",
                    "src/Keboola/Utils/getDataFromPath.php",
                    "src/Keboola/Utils/isValidDateTimeString.php",
                    "src/Keboola/Utils/flattenArray.php",
                    "src/Keboola/Utils/arrayToObject.php",
                    "src/Keboola/Utils/isEmptyObject.php",
                    "src/Keboola/Utils/stripInvalidUtf16.php",
                    "src/Keboola/Utils/toAscii.php",
                    "src/Keboola/Utils/sanitizeColumnName.php",
                    "src/Keboola/Utils/formatBytes.php"
                ],
                "psr-0": {
                    "Keboola\\Utils": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Misc utility functions",
            "keywords": [
                "utility"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-utils/issues",
                "source": "https://github.com/keboola/php-utils/tree/master"
            },
            "time": "2019-10-04T20:55:45+00:00"
        },
        {
            "name": "keboola/sanitizer",
            "version": "0.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/sanitizer.git",
                "reference": "6edda00cd177409a33f180b8f12bdad89bf893c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/sanitizer/zipball/6edda00cd177409a33f180b8f12bdad89bf893c5",
                "reference": "6edda00cd177409a33f180b8f12bdad89bf893c5",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "^1.0",
                "phpunit/phpunit": "^5.7",
                "squizlabs/php_codesniffer": "^3.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Utils\\Sanitizer\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Column name sanitizer",
            "support": {
                "issues": "https://github.com/keboola/sanitizer/issues",
                "source": "https://github.com/keboola/sanitizer/tree/0.1.0"
            },
            "time": "2019-01-11T10:21:17+00:00"
        },
        {
            "name": "league/oauth2-client",
            "version": "2.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/oauth2-client.git",
                "reference": "badb01e62383430706433191b82506b6df24ad98"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/oauth2-client/zipball/badb01e62383430706433191b82506b6df24ad98",
                "reference": "badb01e62383430706433191b82506b6df24ad98",
                "shasum": ""
            },
            "require": {
                "guzzlehttp/guzzle": "^6.0 || ^7.0",
                "paragonie/random_compat": "^1 || ^2 || ^9.99",
                "php": "^5.6 || ^7.0 || ^8.0"
            },
            "require-dev": {
                "mockery/mockery": "^1.3",
                "php-parallel-lint/php-parallel-lint": "^1.2",
                "phpunit/phpunit": "^5.7 || ^6.0 || ^9.3",
                "squizlabs/php_codesniffer": "^2.3 || ^3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-2.x": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "League\\OAuth2\\Client\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Alex Bilbie",
                    "email": "hello@alexbilbie.com",
                    "homepage": "http://www.alexbilbie.com",
                    "role": "Developer"
                },
                {
                    "name": "Woody Gilk",
                    "homepage": "https://github.com/shadowhand",
                    "role": "Contributor"
                }
            ],
            "description": "OAuth 2.0 Client Library",
            "keywords": [
                "Authentication",
                "SSO",
                "authorization",
                "identity",
                "idp",
                "oauth",
                "oauth2",
                "single sign on"
            ],
            "support": {
                "issues": "https://github.com/thephpleague/oauth2-client/issues",
                "source": "https://github.com/thephpleague/oauth2-client/tree/2.6.0"
            },
            "time": "2020-10-28T02:03:40+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "2.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "1cb1cde8e8dd0f70cc0fe51354a59acad9302084"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/1cb1cde8e8dd0f70cc0fe51354a59acad9302084",
                "reference": "1cb1cde8e8dd0f70cc0fe51354a59acad9302084",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2",
                "psr/log": "^1.0.1"
            },
            "provide": {
                "psr/log-implementation": "1.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "elasticsearch/elasticsearch": "^7",
                "graylog2/gelf-php": "^1.4.2",
                "mongodb/mongodb": "^1.8",
                "php-amqplib/php-amqplib": "~2.4",
                "php-console/php-console": "^3.1.3",
                "phpspec/prophecy": "^1.6.1",
                "phpstan/phpstan": "^0.12.59",
                "phpunit/phpunit": "^8.5",
                "predis/predis": "^1.1",
                "rollbar/rollbar": "^1.3",
                "ruflin/elastica": ">=0.90 <7.0.1",
                "swiftmailer/swiftmailer": "^5.3|^6.0"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "elasticsearch/elasticsearch": "Allow sending log messages to an Elasticsearch server via official client",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-mbstring": "Allow to work properly with unicode symbols",
                "ext-mongodb": "Allow sending log messages to a MongoDB server (via driver)",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server (via library)",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "php-console/php-console": "Allow sending log messages to Google Chrome",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "https://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "https://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/monolog/issues",
                "source": "https://github.com/Seldaek/monolog/tree/2.2.0"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/monolog/monolog",
                    "type": "tidelift"
                }
            ],
            "time": "2020-12-14T13:15:25+00:00"
        },
        {
            "name": "paragonie/random_compat",
            "version": "v9.99.100",
            "source": {
                "type": "git",
                "url": "https://github.com/paragonie/random_compat.git",
                "reference": "996434e5492cb4c3edcb9168db6fbb1359ef965a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/paragonie/random_compat/zipball/996434e5492cb4c3edcb9168db6fbb1359ef965a",
                "reference": "996434e5492cb4c3edcb9168db6fbb1359ef965a",
                "shasum": ""
            },
            "require": {
                "php": ">= 7"
            },
            "require-dev": {
                "phpunit/phpunit": "4.*|5.*",
                "vimeo/psalm": "^1"
            },
            "suggest": {
                "ext-libsodium": "Provides a modern crypto API that can be used to generate random bytes."
            },
            "type": "library",
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Paragon Initiative Enterprises",
                    "email": "security@paragonie.com",
                    "homepage": "https://paragonie.com"
                }
            ],
            "description": "PHP 5.x polyfill for random_bytes() and random_int() from PHP 7",
            "keywords": [
                "csprng",
                "polyfill",
                "pseudorandom",
                "random"
            ],
            "support": {
                "email": "info@paragonie.com",
                "issues": "https://github.com/paragonie/random_compat/issues",
                "source": "https://github.com/paragonie/random_compat"
            },
            "time": "2020-10-15T08:29:30+00:00"
        },
        {
            "name": "psr/http-client",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-client.git",
                "reference": "2dfb5f6c5eff0e91e20e913f8c5452ed95b86621"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-client/zipball/2dfb5f6c5eff0e91e20e913f8c5452ed95b86621",
                "reference": "2dfb5f6c5eff0e91e20e913f8c5452ed95b86621",
                "shasum": ""
            },
            "require": {
                "php": "^7.0 || ^8.0",
                "psr/http-message": "^1.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Client\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP clients",
            "homepage": "https://github.com/php-fig/http-client",
            "keywords": [
                "http",
                "http-client",
                "psr",
                "psr-18"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-client/tree/master"
            },
            "time": "2020-06-29T06:28:15+00:00"
        },
        {
            "name": "psr/http-message",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-message.git",
                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363",
                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP messages",
            "homepage": "https://github.com/php-fig/http-message",
            "keywords": [
                "http",
                "http-message",
                "psr",
                "psr-7",
                "request",
                "response"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-message/tree/master"
            },
            "time": "2016-08-06T14:39:51+00:00"
        },
        {
            "name": "psr/log",
            "version": "1.1.4",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "d49695b909c3b7628b6289db5479a1c204601f11"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11",
                "reference": "d49695b909c3b7628b6289db5479a1c204601f11",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.1.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "Psr/Log/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "support": {
                "source": "https://github.com/php-fig/log/tree/1.1.4"
            },
            "time": "2021-05-03T11:20:27+00:00"
        },
        {
            "name": "ralouphie/getallheaders",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/ralouphie/getallheaders.git",
                "reference": "120b605dfeb996808c31b6477290a714d356e822"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822",
                "reference": "120b605dfeb996808c31b6477290a714d356e822",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "php-coveralls/php-coveralls": "^2.1",
                "phpunit/phpunit": "^5 || ^6.5"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/getallheaders.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ralph Khattar",
                    "email": "ralph.khattar@gmail.com"
                }
            ],
            "description": "A polyfill for getallheaders.",
            "support": {
                "issues": "https://github.com/ralouphie/getallheaders/issues",
                "source": "https://github.com/ralouphie/getallheaders/tree/develop"
            },
            "time": "2019-03-08T08:55:37+00:00"
        },
        {
            "name": "seld/jsonlint",
            "version": "1.8.3",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/jsonlint.git",
                "reference": "9ad6ce79c342fbd44df10ea95511a1b24dee5b57"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/jsonlint/zipball/9ad6ce79c342fbd44df10ea95511a1b24dee5b57",
                "reference": "9ad6ce79c342fbd44df10ea95511a1b24dee5b57",
                "shasum": ""
            },
            "require": {
                "php": "^5.3 || ^7.0 || ^8.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0"
            },
            "bin": [
                "bin/jsonlint"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Seld\\JsonLint\\": "src/Seld/JsonLint/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "JSON Linter",
            "keywords": [
                "json",
                "linter",
                "parser",
                "validator"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/jsonlint/issues",
                "source": "https://github.com/Seldaek/jsonlint/tree/1.8.3"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/seld/jsonlint",
                    "type": "tidelift"
                }
            ],
            "time": "2020-11-11T09:19:24+00:00"
        },
        {
            "name": "symfony/config",
            "version": "v5.2.8",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/config.git",
                "reference": "8dfa5f8adea9cd5155920069224beb04f11d6b7e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/config/zipball/8dfa5f8adea9cd5155920069224beb04f11d6b7e",
                "reference": "8dfa5f8adea9cd5155920069224beb04f11d6b7e",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/deprecation-contracts": "^2.1",
                "symfony/filesystem": "^4.4|^5.0",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-php80": "^1.15"
            },
            "conflict": {
                "symfony/finder": "<4.4"
            },
            "require-dev": {
                "symfony/event-dispatcher": "^4.4|^5.0",
                "symfony/finder": "^4.4|^5.0",
                "symfony/messenger": "^4.4|^5.0",
                "symfony/service-contracts": "^1.1|^2",
                "symfony/yaml": "^4.4|^5.0"
            },
            "suggest": {
                "symfony/yaml": "To use the yaml reference dumper"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Config\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Helps you find, load, combine, autofill and validate configuration values of any kind",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/config/tree/v5.2.8"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-05-07T13:41:16+00:00"
        },
        {
            "name": "symfony/deprecation-contracts",
            "version": "v2.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/deprecation-contracts.git",
                "reference": "5f38c8804a9e97d23e0c8d63341088cd8a22d627"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/5f38c8804a9e97d23e0c8d63341088cd8a22d627",
                "reference": "5f38c8804a9e97d23e0c8d63341088cd8a22d627",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.4-dev"
                },
                "thanks": {
                    "name": "symfony/contracts",
                    "url": "https://github.com/symfony/contracts"
                }
            },
            "autoload": {
                "files": [
                    "function.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "A generic function and convention to trigger deprecation notices",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/deprecation-contracts/tree/v2.4.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-03-23T23:28:01+00:00"
        },
        {
            "name": "symfony/filesystem",
            "version": "v5.2.7",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/filesystem.git",
                "reference": "056e92acc21d977c37e6ea8e97374b2a6c8551b0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/filesystem/zipball/056e92acc21d977c37e6ea8e97374b2a6c8551b0",
                "reference": "056e92acc21d977c37e6ea8e97374b2a6c8551b0",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/polyfill-ctype": "~1.8"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Filesystem\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides basic utilities for the filesystem",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/filesystem/tree/v5.2.7"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-04-01T10:42:13+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v5.2.8",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "eccb8be70d7a6a2230d05f6ecede40f3fdd9e252"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/eccb8be70d7a6a2230d05f6ecede40f3fdd9e252",
                "reference": "eccb8be70d7a6a2230d05f6ecede40f3fdd9e252",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Finds files and directories via an intuitive fluent interface",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/finder/tree/v5.2.8"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-05-10T14:39:23+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.22.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "c6c942b1ac76c82448322025e084cadc56048b4e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/c6c942b1ac76c82448322025e084cadc56048b4e",
                "reference": "c6c942b1ac76c82448322025e084cadc56048b4e",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.22-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                },
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.22.1"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-01-07T16:49:33+00:00"
        },
        {
            "name": "symfony/polyfill-php80",
            "version": "v1.22.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php80.git",
                "reference": "dc3063ba22c2a1fd2f45ed856374d79114998f91"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/dc3063ba22c2a1fd2f45ed856374d79114998f91",
                "reference": "dc3063ba22c2a1fd2f45ed856374d79114998f91",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.22-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Polyfill\\Php80\\": ""
                },
                "files": [
                    "bootstrap.php"
                ],
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ion Bazan",
                    "email": "ion.bazan@gmail.com"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php80/tree/v1.22.1"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-01-07T16:49:33+00:00"
        },
        {
            "name": "symfony/serializer",
            "version": "v5.2.7",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/serializer.git",
                "reference": "3698d2611c4917d3689ff89c0a0dcaa761c8e771"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/serializer/zipball/3698d2611c4917d3689ff89c0a0dcaa761c8e771",
                "reference": "3698d2611c4917d3689ff89c0a0dcaa761c8e771",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-php80": "^1.15"
            },
            "conflict": {
                "phpdocumentor/reflection-docblock": "<3.2.2",
                "phpdocumentor/type-resolver": "<1.4.0",
                "symfony/dependency-injection": "<4.4",
                "symfony/property-access": "<4.4",
                "symfony/property-info": "<4.4",
                "symfony/yaml": "<4.4"
            },
            "require-dev": {
                "doctrine/annotations": "^1.10.4",
                "doctrine/cache": "~1.0",
                "phpdocumentor/reflection-docblock": "^3.2|^4.0|^5.0",
                "symfony/cache": "^4.4|^5.0",
                "symfony/config": "^4.4|^5.0",
                "symfony/dependency-injection": "^4.4|^5.0",
                "symfony/error-handler": "^4.4|^5.0",
                "symfony/filesystem": "^4.4|^5.0",
                "symfony/form": "^4.4|^5.0",
                "symfony/http-foundation": "^4.4|^5.0",
                "symfony/http-kernel": "^4.4|^5.0",
                "symfony/mime": "^4.4|^5.0",
                "symfony/property-access": "^4.4.9|^5.0.9",
                "symfony/property-info": "^4.4|^5.0",
                "symfony/uid": "^5.1",
                "symfony/validator": "^4.4|^5.0",
                "symfony/var-exporter": "^4.4|^5.0",
                "symfony/yaml": "^4.4|^5.0"
            },
            "suggest": {
                "psr/cache-implementation": "For using the metadata cache.",
                "symfony/config": "For using the XML mapping loader.",
                "symfony/mime": "For using a MIME type guesser within the DataUriNormalizer.",
                "symfony/property-access": "For using the ObjectNormalizer.",
                "symfony/property-info": "To deserialize relations.",
                "symfony/var-exporter": "For using the metadata compiler.",
                "symfony/yaml": "For using the default YAML mapping loader."
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Serializer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Handles serializing and deserializing data structures, including object graphs, into array structures or other formats like XML and JSON.",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/serializer/tree/v5.2.7"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2021-04-13T14:17:49+00:00"
        },
        {
            "name": "xeroapi/xero-php-oauth2",
            "version": "2.5.3",
            "source": {
                "type": "git",
                "url": "https://github.com/XeroAPI/xero-php-oauth2.git",
                "reference": "032c8b76bfbe904f1a169db75df6606ff5ee03f2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/XeroAPI/xero-php-oauth2/zipball/032c8b76bfbe904f1a169db75df6606ff5ee03f2",
                "reference": "032c8b76bfbe904f1a169db75df6606ff5ee03f2",
                "shasum": ""
            },
            "require": {
                "ext-curl": "*",
                "ext-json": "*",
                "ext-mbstring": "*",
                "firebase/php-jwt": "^5.0",
                "guzzlehttp/guzzle": "^6.2 | ^7.0",
                "league/oauth2-client": "^2.5.0",
                "php": ">=5.6"
            },
            "require-dev": {
                "friendsofphp/php-cs-fixer": "~2.12",
                "phpunit/phpunit": "^4.8",
                "squizlabs/php_codesniffer": "~2.6"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "XeroAPI\\XeroPHP\\": "lib/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Xero API Team",
                    "homepage": "https://developer.xero.com"
                }
            ],
            "description": "Xero official PHP SDK for oAuth2 generated with OpenAPI spec 3",
            "homepage": "https://github.com/xeroapi/xero-php-oauth2",
            "keywords": [
                "api",
                "openapispec",
                "php",
                "rest",
                "sdk",
                "xero"
            ],
            "support": {
                "issues": "https://github.com/XeroAPI/xero-php-oauth2/issues",
                "source": "https://github.com/XeroAPI/xero-php-oauth2/tree/2.5.3"
            },
            "time": "2021-04-15T20:17:04+00:00"
        }
    ],
    "packages-dev": [],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": [],
    "platform-dev": [],
    "plugin-api-version": "2.0.0"
}


================================================
File: /tests/data/config_all.json
================================================
{
  "parameters": {
    "endpoint": [
      "Accounts",
      "BankTransactions",
      "Contacts",
      "Invoices",
      "Overpayments",
      "Prepayments",
      "PurchaseOrders",
      "CreditNotes",
      "ManualJournals",
      "Journals"
    ]
  }
}

================================================
File: /tests/data/config_single.json
================================================
{
  "parameters": {
    "endpoint": ["Accounts"]
  }
}

================================================
File: /tests/data/config.json
================================================
{
  "parameters": {
    "endpoint": [
      "BankTransactions",
      "Contacts",
      "Invoices",
      "Journals",
      "Overpayments",
      "Prepayments",
      "PurchaseOrders",
      "TrackingCategories"
    ],
    "auth": {
      "clientId": "",
      "clientSecret": "",
      "redirectUri": "",
      "urlAuthorize": "",
      "urlAccessToken": "",
      "urlResourceOwnerDetails": "",
      "tenantId": "",
      "accessToken": "",
      "refreshToken": ""
    }
  }
}

================================================
File: /composer.json
================================================
{
    "name": "root/app",
    "type": "project",
    "autoload": {
        "psr-4": {
            "Keboola\\Xero\\": "src/"
        }
    },
    "require": {
        "xeroapi/xero-php-oauth2": "^2.5",
        "league/oauth2-client": "^2.6",
        "keboola/php-component": "^8.3",
        "keboola/json-parser": "^3.0",
        "ext-json": "*"
    }
}


================================================
File: /run.php
================================================
<?php

require __DIR__ . '/vendor/autoload.php';

use Keboola\Component\Logger;

$logger = new Logger();

try {
    $component = new Keboola\Xero\Component($logger);
    $component->execute();
//} catch(Keboola\Component\UserException $e) {
//    $logger->error($e->getMessage());
//
//    exit(1);
} catch(Throwable $e) {
    $logger->critical(
        get_class($e) . ':' . $e->getMessage(),
        [
            'errFile' => $e->getFile(),
            'errLine' => $e->getLine(),
            'errCode' => $e->getCode(),
            'errTrace' => $e->getTraceAsString(),
            'errPrevious' => $e->getPrevious() ? get_class($e->getPrevious()) : '',
        ]
    );
    // TODO: enable application error again
    exit(1);
    //exit(2);
}

exit(0);


================================================
File: /Dockerfile
================================================
FROM php:7.4-cli

RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        unzip \
        curl \
        libicu-dev \
        libonig-dev && \
    docker-php-ext-install \
        sockets \
        mbstring \
        intl && \
    apt-get clean

COPY ./docker/php/php.ini /usr/local/etc/php/php.ini

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer
ENV COMPOSER_ALLOW_SUPERUSER 1

COPY . /app
WORKDIR /app
RUN composer install --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader

CMD ["php", "run.php"]


================================================
File: /src/Exception/UserException.php
================================================
<?php

namespace Keboola\Xero\Exception;

class UserException extends \Keboola\Component\UserException
{
}


================================================
File: /src/Exception/AuthException.php
================================================
<?php

namespace Keboola\Xero\Exception;

class AuthException extends UserException
{
}


================================================
File: /src/Exception/ApplicationException.php
================================================
<?php

namespace Keboola\Xero\Exception;

use Exception;

class ApplicationException extends Exception
{

}


================================================
File: /src/Extractor.php
================================================
<?php declare(strict_types=1);

namespace Keboola\Xero;

use GuzzleHttp;
use Keboola\Json\Analyzer;
use Keboola\Json\Exception\NoDataException;
use Keboola\Json\Parser;
use Keboola\Json\Structure;
use Keboola\Xero\Exception\UserException;
use Keboola\Xero\Exception\AuthException;
use League\OAuth2;
use League\OAuth2\Client\Token\AccessToken as AccessToken;
use Psr\Log\LoggerInterface;
use Psr\Log\NullLogger;
use XeroAPI\XeroPHP as Xero;

class Extractor
{
    /**
     * @var LoggerInterface
     */
    private $logger;

    /**
     * @var Xero\Configuration
     */
    private $config;

    /**
     * @var string
     */
    private $accessToken;

    /**
     * @var string
     */
    private $refreshToken;

    const URL_AUTHORIZE = 'https://api.xero.com/connections/';
    const URL_TOKEN = 'https://identity.xero.com/connect/token';

    /**
     * @var array
     */
    private $tenantIds;

    /**
     * Writer constructor.
     *
     * @param LoggerInterface $logger
     * @param array $authData
     * @throws Exception\UserException
     */
    public function __construct($logger, array $authData)
    {
        $this->logger = $logger;

        // A) Use unexpired access token directly
        // $this->config = XeroAPI\XeroPHP\Configuration::getDefaultConfiguration()->setAccessToken($authData['accessToken']);

        // B) Use refresh token to generate a new access token.
        //    Refresh token is valid for 60 days if not used. Used token is valid for a grace period of 30 minutes.
        $provider = new OAuth2\Client\Provider\GenericProvider([
            'clientId' => $authData['clientId'],
            'clientSecret' => $authData['clientSecret'],
            'redirectUri' => '',
            'urlAuthorize' => $this::URL_AUTHORIZE,
            'urlAccessToken' => $this::URL_TOKEN,
            'urlResourceOwnerDetails' => 'https://api.xero.com/connections/',
        ]);
        $oauthDataArray = json_decode($authData['oauthData']);
        if (isset($authData['refreshToken'])) {
            $this->refreshToken = $authData['refreshToken'];
        } else {
            $this->refreshToken = $oauthDataArray->refresh_token;
        }
        try {
            // refresh the token just in case
            $accessToken = $provider->getAccessToken('refresh_token', [
                'refresh_token' => $this->refreshToken,
            ]);
            $this->logger->info(sprintf("Token expires in: %s", $accessToken->getExpires()));
            $connections = $provider->getResourceOwner($accessToken)->toArray();
            $this->accessToken = $accessToken->getToken();
            $this->refreshToken = $accessToken->getRefreshToken();
        } catch (OAuth2\Client\Provider\Exception\IdentityProviderException $e) {
            throw new AuthException($e->getMessage(), 0, $e);
        }

        $this->config = Xero\Configuration::getDefaultConfiguration()->setAccessToken($this->accessToken);

        $this->logger->info(sprintf("Authorised for scopes: %s", $oauthDataArray->scope));

        $this->tenantIds = [];
        foreach ($connections as $connection) {
            $this->tenantIds[] = $connection['tenantId'];
        }
    }

    public function runExtraction($params, $dirPath): self
    {
        $parser = new Parser(new Analyzer(new NullLogger(), new Structure()));
        foreach ($this->tenantIds as $tenantId) {
            $this->logger->info(sprintf("Extracting tenantId: %s", $tenantId));
            $this->extract($params, $dirPath, $parser, $tenantId);
        }
        foreach ($parser->getCsvFiles() as $file) {
            copy($file->getPathName(), $dirPath . '/' . $file->getName());
        }
        return $this;
    }

    /**
     * @param array $params
     * @param string $dirPath
     * @return Extractor
     * @throws Exception\UserException
     */
    public function extract($params, $dirPath, $parser, $tenantId): self
    {
        if (!isset($params['endpoint'])) {
            return $this;
        }

        if (is_string($params['endpoint'])) {
            $endpoints = [$params['endpoint']];
        } else {
            if (is_array($params['endpoint'])) {
                $endpoints = $params['endpoint'];
            } else {
                throw new Exception\UserException('Invalid "endpoint" config');
            }
        }

        $api = new Xero\Api\AccountingApi(
            new GuzzleHttp\Client(),
            $this->config
        );

        // $single = ['Accounts', 'BankTransfers', 'BatchPayments', 'BrandingThemes', 'ContactGroups', 'Currencies', 'Employees', 'ExpenseClaims', 'InvoiceReminders', 'Items', 'LinkedTransactions', 'Organisation', 'Payments', 'PaymentServices', 'Quotes', 'Receipts', 'RepeatingInvoices', 'Reports', 'Setup', 'TaxRates', 'TrackingCategories', 'Users'];
        // $paged = ['BankTransactions','Contacts','Invoices','Overpayments','Prepayments','PurchaseOrders', 'CreditNotes', 'ManualJournals'];
        // $offsetted = ['Journals'];
        if (!isset($params['modified_since'])) {
            $modSince = '2000-01-01';
        } else {
            $modSince = $params['modified_since'];
        }
        $ifModifiedSince = strtotime($modSince) * 1000;
        $this->logger->info(sprintf("Last updated since: %s", $ifModifiedSince));

        foreach ($endpoints as $endpoint) {
            // TODO: support for $endpoint as a map with params

            switch ($endpoint) {
                // single endpoints
                case 'Accounts':
                case 'BankTransfers':
                case 'BatchPayments':
                case 'BrandingThemes':
                case 'ContactGroups':
                case 'Currencies':
                case 'Employees':
                case 'ExpenseClaims':
                case 'InvoiceReminders':
                case 'Items':
                case 'LinkedTransactions':
                case 'Organisations':
                case 'Payments':
                case 'PaymentServices':
                case 'Quotes':
                case 'Receipts':
                case 'RepeatingInvoices':
                case 'Reports':
                case 'Setup':
                case 'TaxRates':
                case 'Users':
                    $data = $this->fetch($api, $endpoint, $tenantId, function ($api, $tenantId) use (
                        $endpoint,
                        $ifModifiedSince
                    ) {
                        $method = 'get' . $endpoint;
                        return $api->$method($tenantId, $ifModifiedSince)->jsonSerialize();
                    });
                    break;
                case 'TrackingCategories':
                    $data = $this->fetch($api, $endpoint, $tenantId, function ($api, $tenantId) use (
                        $endpoint,
                        $ifModifiedSince
                    ) {
                        $method = 'get' . $endpoint;
                        return $api->$method($tenantId)->jsonSerialize();
                    });
                    break;
                // paged endpoints
                case 'BankTransactions':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getBankTransactions($tenantId, $ifModifiedSince, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'Contacts':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getContacts($tenantId, $ifModifiedSince, null, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'Invoices':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getInvoices($tenantId, $ifModifiedSince, null, null, null, null, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'Overpayments':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getOverpayments($tenantId, $ifModifiedSince, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'Prepayments':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getPrepayments($tenantId, $ifModifiedSince, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'PurchaseOrders':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getPurchaseOrders($tenantId, $ifModifiedSince, null, null, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'CreditNotes':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getCreditNotes($tenantId, $ifModifiedSince, null, null, $page)->jsonSerialize();
                    });
                    break;
                case 'ManualJournals':
                    $data = $this->fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, function (
                        $api,
                        $page,
                        $tenantId,
                        $ifModifiedSince
                    ) {
                        return $api->getManualJournals($tenantId, $ifModifiedSince, null, null, $page)->jsonSerialize();
                    });
                    break;
                // offsetted endpoints
                case 'Journals':
                    $data = $this->fetchOffsetted($api, $endpoint, $tenantId,
                        $ifModifiedSince, function (
                            $api,
                            $offset,
                            $tenantId,
                            $ifModifiedSince
                        ) {
                            $journals = $api->getJournals($tenantId, $ifModifiedSince, $offset);
                            $offset = null;

                            if ($journals->count() > 0) {
                                $journalsArr = $journals->getJournals();
                                $offset = $journalsArr[count($journalsArr) - 1]->getJournalNumber();
                            }

                            return [$journals->jsonSerialize(), $offset];
                        });
                    break;
                default:
                    throw new Exception\UserException('Unknown endpoint: ' . $endpoint);
            }

            $this->logger->info(sprintf("Passed %d rows to parser", count($data)));

            if (count($data) === 0) {
                continue;
            }

            try {
                $parser->process($data, $endpoint);
            } catch (NoDataException $e) {
                throw new UserException('Process data: ' . $e->getMessage(), 0, $e);
            }
        }

        return $this;
    }

    /**
     * @param Xero\Api\AccountingApi $api
     * @param string $endpoint
     * @param callback $callback
     * @return array
     * @throws Exception\UserException
     */
    public function fetch($api, $endpoint, $tenantId, $callback): array
    {
        $this->logger->info(sprintf("Fetching %s...", $endpoint));

        $res = [];

        $count = 0;

        while ($count++ <= 1000) {
            try {
                $res = $callback($api, $tenantId);
            } catch (Xero\ApiException $e) {
                if ($e->getCode() === 429) {
                    $this->logger->notice("Rate limited, sleeping...");
                    sleep(5);
                    continue;
                } else {
                    throw new Exception\UserException('Fetch data from Xero API: ' . $e->getMessage(), 0, $e);
                }
            }

            break;
        }

        $this->logger->info(sprintf("Fetched %d rows of %s", count($res), $endpoint));

        return $res;
    }

    /**
     * @param Xero\Api\AccountingApi $api
     * @param string $endpoint
     * @param callback $callback
     * @return array
     * @throws Exception\UserException
     */
    public function fetchPaged($api, $endpoint, $tenantId, $ifModifiedSince, $callback): array
    {
        $this->logger->info(sprintf("Fetching %s...", $endpoint));

        $page = 1; // page 0 equals to page 1

        $res = [];

        while ($page <= 1000) {
            try {
                $data = $callback($api, $page, $tenantId, $ifModifiedSince);
            } catch (Xero\ApiException $e) {
                if ($e->getCode() === 429) {
                    $this->logger->notice("Rate limited, sleeping...");
                    sleep(5);
                    continue;
                } else {
                    throw new Exception\UserException('Fetch data from Xero API: ' . $e->getMessage(), 0, $e);
                }
            }

            $res = array_merge($res, $data);

            $this->logger->info(sprintf("Got %d data rows at page %d", count($data), $page));

            // To be tested: All API endpoints return up to 100 results, so we could break if count is not 100 and save one request.
            if (count($data) === 0) {
                break;
            }

            $page++;
        }

        $this->logger->info(sprintf("Fetched %d rows of %s", count($res), $endpoint));

        return $res;
    }

    /**
     * @param Xero\Api\AccountingApi $api
     * @param string $endpoint
     * @param callback $callback
     * @return array
     * @throws Exception\UserException
     */
    public function fetchOffsetted(
        $api,
        $endpoint,
        $tenantId,
        $ifModifiedSince,
        $callback
    ): array {
        $this->logger->info(sprintf("Fetching %s...", $endpoint));

        $count = 0;

        $offset = null;

        $res = [];

        while ($count <= 1000) {
            try {
                [$data, $offset] = $callback($api, $offset, $tenantId, $ifModifiedSince);
            } catch (Xero\ApiException $e) {
                if ($e->getCode() === 429) {
                    $this->logger->notice("Rate limited, sleeping...");
                    sleep(5);
                    continue;
                } else {
                    throw new Exception\UserException('Fetch data from Xero API: ' . $e->getMessage(), 0, $e);
                }
            }

            $res = array_merge($res, $data);

            $this->logger->info(sprintf("Got %d data rows at offset %d", count($data), $offset));

            // To be tested: All API endpoints return up to 100 results, so we could break if count is not 100 and save one request.
            if (count($data) === 0) {
                break;
            }

            $count++;
        }

        $this->logger->info(sprintf("Fetched %d rows of %s", count($res), $endpoint));

        return $res;
    }

    /**
     * @return string
     */
    public function getRefreshToken()
    {
        return $this->refreshToken;
    }
}


================================================
File: /src/ConfigDefinition.php
================================================
<?php

namespace Keboola\Xero;

use Keboola\Component\Config\BaseConfigDefinition;
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;
use Symfony\Component\Config\Definition\Builder\NodeDefinition;

class ConfigDefinition extends BaseConfigDefinition
{

    /**
     * @return ArrayNodeDefinition
     */
    protected function getParametersDefinition() : ArrayNodeDefinition
    {
        $parametersNode = parent::getParametersDefinition();

        $parametersNode
            ->children()
                ->scalarNode('modified_since')->end()
                ->arrayNode('endpoint')
                    ->scalarPrototype()->end()
                ->end()
            ->end();

        return $parametersNode;
    }

}


================================================
File: /src/Component.php
================================================
<?php

namespace Keboola\Xero;

use Keboola\Component\BaseComponent;

class Component extends BaseComponent
{
    /**
     * @return string
     */
    protected function getConfigDefinitionClass(): string
    {
        return ConfigDefinition::class;
    }

    /**
     * @return Extractor
     * @throws Exception\UserException
     */
    public function initExtractor(): Extractor
    {
        $params = $this->getConfig()->getParameters();

        $authData = [
            'clientId' => $this->getConfig()->getOAuthApiAppKey(),
            'clientSecret' => $this->getConfig()->getOAuthApiAppSecret(),
            'oauthData' => $this->getConfig()->getOAuthApiData(),
        ];

        $state = $this->getInputState();

        if (isset($state['auth']['#refreshToken'])) {
            $authData['refreshToken'] = $state['auth']['#refreshToken'];
        }

        $ext = new Extractor($this->getLogger(), $authData);

        $this->writeOutputStateToFile(['auth' => ['#refreshToken' => $ext->getRefreshToken()]]);

        return $ext;
    }

    /**
     * @throws Exception\UserException
     */
    protected function run(): void
    {
        $params = $this->getConfig()->getParameters();

        $dirPath = $this->getDataDir() . '/out/tables';

        $this->initExtractor()->runExtraction($params, $dirPath);
    }
}


================================================
File: /docs/README.md
================================================
# XERO extractor - Keboola Connection

Connect your [XERO](https://www.xero.com/) account data with Keboola.

## User documentation

1. Create Keboola component configuration
2. Authorize using Keboola native authorization button
3. Set up configuration parameters - select entities you want to be extracted
```
{
  "endpoint": [
    "Accounts",
    "BankTransactions",
    "Contacts",
    "Invoices",
    "Overpayments",
    "Prepayments",
    "PurchaseOrders",
    "CreditNotes",
    "ManualJournals",
    "Journals"
  ],
}
```


================================================
File: /.gitlab-ci.yml
================================================
image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  APP_IMAGE: keboola-ex-xero

services:
  - docker:dind

before_script:
  - docker info

build-component:
  stage: build
  script:
    - docker build . --tag=$APP_IMAGE

deploy-component:
  stage: deploy
  script:
    - docker build . --tag=$APP_IMAGE
    - pwd
    - ls -la
    - export
    - ./deploy.sh
  only:
    - tags


================================================
File: /bitbucket-pipelines.yml
================================================
options:
  docker: true

image: python:3.7.2
pipelines:
  default:
    - step:
        caches:
          - docker
        script:
          - export APP_IMAGE=keboola-component
          - docker build . --tag=$APP_IMAGE
          - docker images
          - docker -v
          #- pip install docker-compose
          # - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
          # - docker-compose run --rm wait
          # disable tests for now
          # - docker run --rm $APP_IMAGE composer ci
          # push test image to ecr - uncomment for testing before deployment
          - echo 'Pushing test image to repo. [tag=test]'
          - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
          - docker tag $APP_IMAGE:latest $REPOSITORY:test
          - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
          - docker push $REPOSITORY:test

  branches:
    master:
      - step:
          caches:
            - docker
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker -v
            #- pip install docker-compose
            # - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
            # - docker-compose run --rm wait
            # disable tests for now
            # - docker run --rm $APP_IMAGE composer ci
            # push test image to ecr - uncomment for testing before deployment
            - echo 'Pushing test image to repo. [tag=test]'
            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            - docker tag $APP_IMAGE:latest $REPOSITORY:test
            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            - docker push $REPOSITORY:test
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - ./scripts/update_dev_portal_properties.sh
  tags:
    '*':
      - step:
          deployment: production
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            # - pip install docker-compose
            # - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
            # - docker-compose run --rm wait
            # - docker-compose run --rm app composer ci
            # disable tests for now
            # - docker run --rm $APP_IMAGE composer ci
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - chmod +x ./deploy.sh
            - ./scripts/update_dev_portal_properties.sh
            - ./deploy.sh

================================================
File: /component_config/component_short_description.md
================================================
Testing functional sample extractor for purposes of the python component template. 

================================================
File: /component_config/configSchema.json
================================================
{}

================================================
File: /component_config/stack_parameters.json
================================================
{}

================================================
File: /component_config/configuration_description.md
================================================
**Parameters**

- endpoint --- list of endpoints to download
- modified_since --- [OPTIONAL] date (2020-01-01) or relative date (yesterday, -5 weeks, etc.) , only modified records will be fetched. 

Add or remove required endpoints:

```
{
  "modified_since": "-2 days",
  "endpoint": [
    		"Accounts",
                "BankTransfers",
                "BatchPayments",
                "BrandingThemes",
                "ContactGroups",
                "Currencies",
                "Employees",
                "ExpenseClaims",
                "InvoiceReminders",
                "Items",
                "LinkedTransactions",
                "Organisations",
                "Payments",
                "PaymentServices",
                "Quotes",
                "Receipts",
                "RepeatingInvoices",
                "Reports",
                "Setup",
                "TaxRates",
                "Users",
                "BankTransactions",
                "Contacts",
                "Invoices",
                "Overpayments",
                "Prepayments",
                "PurchaseOrders",
                "CreditNotes",
                "ManualJournals",
                "Journals"
  ]
}
```

================================================
File: /component_config/configRowSchema.json
================================================
{}

================================================
File: /component_config/component_long_description.md
================================================
Testing functional sample extractor for purposes of the python component template. 
Implements partial Hubspot extractor using the public sandbox token.

================================================
File: /component_config/sample-config/in/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"


================================================
File: /component_config/sample-config/in/tables/test.csv.manifest
================================================
{
    "id": "in.c-test.test",
    "uri": "https:\/\/connection.keboola.com\/v2\/storage\/tables\/in.c-test.test",
    "name": "test",
    "primary_key": [],
    "indexed_columns": [],
    "created": "2018-03-02T15:36:50+0100",
    "last_change_date": "2018-03-02T15:36:54+0100",
    "last_import_date": "2018-03-02T15:36:54+0100",
    "rows_count": 0,
    "data_size_bytes": 0,
    "is_alias": false,
    "attributes": [],
    "columns": [
        "Type",
        "Campaign_Name",
        "Status",
        "Start_Date",
        "End_Date",
        "Location",
        "Eventbrite_link"
    ],
    "metadata": [
        {
            "id": "18271581",
            "key": "KBC.createdBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271582",
            "key": "KBC.createdBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271583",
            "key": "KBC.createdBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271584",
            "key": "KBC.lastUpdatedBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271585",
            "key": "KBC.lastUpdatedBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271586",
            "key": "KBC.lastUpdatedBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        }
    ],
    "column_metadata": {
        "Type": [],
        "Campaign_Name": [],
        "Status": [],
        "Start_Date": [],
        "End_Date": [],
        "Location": [],
        "Eventbrite_link": []
    }
}

================================================
File: /component_config/sample-config/in/state.json
================================================
{"data_delta": "10222018"}

================================================
File: /component_config/sample-config/in/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>

================================================
File: /component_config/sample-config/out/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"


================================================
File: /component_config/sample-config/out/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>

================================================
File: /component_config/sample-config/config.json
================================================
{
  "storage": {
    "input": {
      "files": [],
      "tables": [
        {
          "source": "in.c-test.test",
          "destination": "test.csv",
          "limit": 50,
          "columns": [],
          "where_values": [],
          "where_operator": "eq"
        }
      ]
    },
    "output": {
      "files": [],
      "tables": []
    }
  },
  "parameters": {
    "#api_token": "demo",
    "period_from": "yesterday",
    "endpoints": [
      "deals",
      "companies"
    ],
    "company_properties": "",
    "deal_properties": "",
    "debug": true
  },
  "image_parameters": {
    "syrup_url": "https://syrup.keboola.com/"
  },
  "authorization": {
    "oauth_api": {
      "id": "OAUTH_API_ID",
      "credentials": {
        "id": "main",
        "authorizedFor": "Myself",
        "creator": {
          "id": "1234",
          "description": "me@keboola.com"
        },
        "created": "2016-01-31 00:13:30",
        "#data": "{\"refresh_token\":\"MCWBkfdK9m5YK*Oqahwm6XN6elMAEwcH5kYcK8Ku!bpiOgSDZN9MQIzunpMsh6LyKH0i!7OcwwwajuxPfvm2PrrWYSs*HerDr2ZSJ39pqHJcvwUNIvHdtcgFFr3Em*yhn3GKBwM2p9UrjtgdAriSDny5YgUYGuI3gYJY1ypD*wBaAOzzeeXZx6CdgjruJ7gboTAngbWk3CzO9rORIwXAAlGUH6ZgBQJL3AwkYVMRFV4BvIvDAMF*0DcGDyrcyYDw9X3vYn*Wy!OqgrenKCGowdJk0C0136SUv4PJI383y76UMim6Q7KGDj7Lf!K2N2FDbxsz2iZKZTBr2vHx8pEC1oBc$\"}",
        "oauthVersion": "2.0",
        "appKey": "000000004C184A49",
        "#appSecret": "vBAYak49pVK1zghHAgDH4tCSCNlT-CiN"
      }
    }
  }
}


================================================
File: /deploy.sh
================================================
#!/bin/sh
set -e

env

# compatibility with travis and bitbucket
if [ ! -z ${BITBUCKET_TAG} ]
then
	echo "asigning bitbucket tag"
	export TAG="$BITBUCKET_TAG"
elif [ ! -z ${TRAVIS_TAG} ]
then
	echo "asigning travis tag"
	export TAG="$TRAVIS_TAG"
else
	echo No Tag is set!
	exit 1
fi

echo "Tag is '${TAG}'"

#check if deployment is triggered only in master
if [ ${BITBUCKET_BRANCH} != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi

# Obtain the component repository and log in
echo "Obtain the component repository and log in"
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`

echo "Set credentials"
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})

# Push to the repository
echo "Push to the repository"
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
docker push ${REPOSITORY}:${TAG}
docker push ${REPOSITORY}:latest

# Update the tag in Keboola Developer Portal -> Deploy to KBC
if echo ${TAG} | grep -c '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$'
then
    docker run --rm \
        -e KBC_DEVELOPERPORTAL_USERNAME \
        -e KBC_DEVELOPERPORTAL_PASSWORD \
        quay.io/keboola/developer-portal-cli-v2:latest \
        update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${TAG} ecr ${REPOSITORY}
else
    echo "Skipping deployment to KBC, tag ${TAG} is not allowed."
fi


================================================
File: /docker-compose.yml
================================================
version: '3'
services:
  dev:
    build:
      context: .
    image: keboola-xero-ex
    volumes:
      - ./:/code
      - ./data:/data

      - ODBC_PASSWORD



================================================
File: /docker/php/php.ini
================================================
; Maximum amount of memory a script may consume (128MB)
; http://php.net/memory-limit
memory_limit = -1

; Defines the default timezone used by the date functions
; http://php.net/date.timezone
date.timezone = UTC


================================================
File: /docker/xdebug/xdebug.ini.dist
================================================
xdebug.start_with_request = yes
xdebug.client_host = host.docker.internal
xdebug.mode = debug
xdebug.discover_client_host = 1
; uncomment in case of problems - will create xdebug log inside your project
;xdebug.log=/var/www/html/docker/xdebug/xdebug.log

================================================
File: /scripts/build_n_test.sh
================================================
#!/bin/sh
set -e

flake8 --config=flake8.cfg
python -m unittest discover

================================================
File: /scripts/update_dev_portal_properties.sh
================================================
#!/usr/bin/env bash

set -e
# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest


# Update properties in Keboola Developer Portal
echo "Updating long description"
value=`cat component_config/component_long_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} longDescription --value="$value"
else
    echo "longDescription is empty!"
    exit 1
fi

echo "Updating config schema"
value=`cat component_config/configSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationSchema --value="$value"
else
    echo "configurationSchema is empty!"
fi

echo "Updating row config schema"
value=`cat component_config/configRowSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationRowSchema --value="$value"
else
    echo "configurationRowSchema is empty!"
fi


echo "Updating config description"

value=`cat component_config/configuration_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationDescription --value="$value"
else
    echo "configurationDescription is empty!"
fi


echo "Updating short description"

value=`cat component_config/component_short_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} shortDescription --value="$value"
else
    echo "shortDescription is empty!"
    exit 1
fi

================================================
File: /scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -rm -t $COMP_TAG ../

echo Running component...
Write-host "Would you like to use default data folder? (../data)" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes use: " (join-path (Split-Path -Path (Get-Location).Path) "data"); $DATA_PATH = (join-path (Split-Path -Path (Get-Location).Path) "data") } 
       N {Write-Host "No, I'll specify myself"; $DATA_PATH = Read-Host -Prompt 'Input data folder path:'} 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 

Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 




================================================
File: /scripts/run.bat
================================================
@echo off

echo Running component...
docker run -v %cd%:/data -e KBC_DATADIR=/data comp-tag

================================================
File: /scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test


================================================
File: /README.md
================================================
# XERO extractor - Keboola Connection

The extractor will download data for all tenants that are authorized for the account used.

## Configuration


**Parameters**

- endpoint --- list of endpoints to download
- modified_since --- [OPTIONAL] date (2020-01-01) or relative date (yesterday, -5 weeks, etc.) , only modified records will be fetched. 

Add or remove required endpoints:

```
{
  "modified_since": "-2 days",
  "endpoint": [
    		"Accounts",
                "BankTransfers",
                "BatchPayments",
                "BrandingThemes",
                "ContactGroups",
                "Currencies",
                "Employees",
                "ExpenseClaims",
                "InvoiceReminders",
                "Items",
                "LinkedTransactions",
                "Organisations",
                "Payments",
                "PaymentServices",
                "Quotes",
                "Receipts",
                "RepeatingInvoices",
                "Reports",
                "Setup",
                "TaxRates",
                "Users",
                "BankTransactions",
                "Contacts",
                "Invoices",
                "Overpayments",
                "Prepayments",
                "PurchaseOrders",
                "CreditNotes",
                "ManualJournals",
                "Journals"
  ]
}
```

## Deployment

Gitlab  CI builds image from the Dockerfile and creates a new version of the component on every vX.Y.Z git tag.

## Keboola OAuth - XERO App

- Create App at [developer.xero.com](https://developer.xero.com/)


================================================
File: /Dockerfile-debug
================================================
FROM php:7.4-cli

RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        unzip \
        curl \
        libicu-dev \
        libonig-dev && \
    docker-php-ext-install \
        sockets \
        mbstring \
        intl && \
    apt-get clean

COPY ./docker/php/php.ini /usr/local/etc/php/php.ini
# Xdebug
RUN pecl install xdebug \
  && docker-php-ext-enable xdebug
COPY docker/xdebug/xdebug.ini.dist /usr/local/etc/php/conf.d/xdebug.ini

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer
ENV COMPOSER_ALLOW_SUPERUSER 1

COPY . /app
WORKDIR /app
RUN composer install --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader

CMD ["php", "run.php"]


