Directory structure:
└── kds_consulting_team-kds-team.ex-google-cm-360/
    ├── README.md
    ├── bitbucket-pipelines.yml
    ├── deploy.sh
    ├── docker-compose.yml
    ├── Dockerfile
    ├── flake8.cfg
    ├── LICENSE.md
    ├── requirements.txt
    ├── component_config/
    │   ├── component_long_description.md
    │   ├── component_short_description.md
    │   ├── configRowSchema.json
    │   ├── configSchema.json
    │   ├── configuration_description.md
    │   ├── logger
    │   ├── loggerConfiguration.json
    │   ├── report_resources/
    │   │   ├── dimensions_cross_dimension_reach.csv
    │   │   ├── dimensions_floodlight.csv
    │   │   ├── dimensions_path.csv
    │   │   ├── dimensions_path_attribution.csv
    │   │   ├── dimensions_path_to_conversion.csv
    │   │   ├── dimensions_reach.csv
    │   │   ├── dimensions_standard.csv
    │   │   ├── filters_cross_dimension_reach.csv
    │   │   ├── filters_floodlight.csv
    │   │   ├── filters_path.csv
    │   │   ├── filters_path_attribution.csv
    │   │   ├── filters_path_to_conversion.csv
    │   │   ├── filters_reach.csv
    │   │   ├── filters_standard.csv
    │   │   ├── metrics_cross_dimension_reach.csv
    │   │   ├── metrics_floodlight.csv
    │   │   ├── metrics_path.csv
    │   │   ├── metrics_path_attribution.csv
    │   │   ├── metrics_path_to_conversion.csv
    │   │   ├── metrics_reach.csv
    │   │   ├── metrics_standard.csv
    │   │   └── update_schema.py
    │   └── sample-config/
    │       ├── config.json
    │       └── in/
    │           ├── state.json
    │           ├── files/
    │           │   └── order1.xml
    │           └── tables/
    │               ├── test.csv
    │               └── test.csv.manifest
    ├── scripts/
    │   ├── build_n_run.ps1
    │   ├── build_n_test.sh
    │   ├── run_kbc_tests.ps1
    │   └── update_dev_portal_properties.sh
    ├── src/
    │   ├── component.py
    │   ├── configuration.py
    │   ├── docscraper.py
    │   ├── labels.json
    │   └── google_cm360/
    │       ├── __init__.py
    │       ├── client.py
    │       └── report_specification.py
    └── tests/
        ├── __init__.py
        └── test_component.py

================================================
FILE: README.md
================================================
# Google Campaign Manager 360 Data Source

[Google Campaign Manager 360](https://support.google.com/campaignmanager/answer/2709362?hl=en) orchestrates digital advertising campaigns, offering precise ad placements across multiple
channels. 

This connector enables easy retrieval of Campaign Manager 360 reports **from multiple ad accounts** and allows you to run CM360 reports in several modes:

1. Export of metadata
2. Define customized reports directly in the UI.
2. Select multiple reports with the same structure across multiple accounts.
3. Use an existing report as a template and run it across multiple selected accounts.

**Table of contents:**

[TOC]


## Prerequisites

1. Get access to your [account](https://support.google.com/campaignmanager?sjid=[REDACTED]-EU#topic=2758513).

2. Log in to your account using the Authorize Account button in the Keboola interface. 

![OAuth Authorization](docs/imgs/config_oauth.png)

## Functionality & Configuration

The connector supports four modes:

1. Export of selected metadata.
2. Template-based report execution: Use an existing report definition as a template and execute it across selected accounts.
    - It’s ideal if you need to define a complex report in the [CM360 Report Builder](https://www.google.com/analytics/dfa/) and use it across multiple accounts. 
    - The selected report is left untouched, and its copy is created in all selected accounts. The resulting reports are linked to the configuration. Naming convention: `keboola_generated_{PROJECT_ID}_{CONFIG_ID}_{ROWID}`
3. Running and downloading existing report definitions: Suitable for multiple identical reports across required ad accounts, previously defined using the [CM360 Report Builder](https://support.google.com/campaignmanager/answer/2823849?sjid=[REDACTED]-EU&visit_id=638403222303021904-3691116343&rd=1).
4. Defining report definition directly in the UI: Define simple report definition directly in the configuration UI, automatically creating an offline report in the [CM360 Report Builder](https://www.google.com/analytics/dfa) that will be linked to the configuration. Naming convention: `keboola_generated_{PROJECT_ID}_{CONFIG_ID}_{ROWID}`

### Export of selected metadata

This option is helpful if you need to export metadata from the CM360 account. The metadata is exported into separate table.
You can select which metadata to export in the `Metadata` section.

### Creating and running reports from an existing report definitions (template)

This option is helpful if you need to define a complex report in the [CM360 Report Builder](https://www.google.com/analytics/dfa/) nd use it across multiple accounts. The selected report is left untouched, and its copy is created in all selected accounts. The resulting reports are linked to the configuration. 

The naming convention of the created report is: `keboola_generated_{PROJECT_ID}_{CONFIG_ID}_{ROWID}`

All results are downloaded into a single table.

To use an existing report as a template, follow these steps:

1. Set up your report in the [CM360 Report Builder](https://www.google.com/analytics/dfa/). See the official [docs](https://support.google.com/campaignmanager/answer/2823849?sjid=[REDACTED]-EU&visit_id=638403222303021904-3691116343&rd=1).
2. Select the `Report template` in the `Report definition mode` configuration option.
3. Select the existing report from the dropdown of available reports. This report will be then used as a template and recreated across selected accounts.
4. Select the desired `Time Range` (either a predefined period or `Custom Date Range`). This option allows you to define a relative report period range.
5. Set the **Destination** parameters to control how the result is stored. See the `Destination` section.

### Running existing reports

This option is suitable when you already have multiple identical reports defined across required ad accounts.

To run an existing report, follow these steps:

1. Set up your report in the [CM360 Report Builder](https://www.google.com/analytics/dfa/). See the official [documentation](https://support.google.com/campaignmanager/answer/2823849?sjid=[REDACTED]-EU&visit_id=638403222303021904-3691116343&rd=1).
2. Select `Existing report ID(s)` in `Report definition mode`. 
    - **WARNING**: Ensure selected reports have the same structure and definition; otherwise extraction will fail.
3. Select the existing report ID from the dropdown of available reports.
4. The time range is, in this case, defined by the source report. This is to keep the source reports untouched since they are not controlled by the component.
5. Set the **Destination** parameters to control how the result is stored. See the `Destination` section.

### Setting up reports directly in the UI

1. Select `Report specification` in `Report definition mode`.
2. Set up your report in  `Report Details`.
   1. `Report Type`
   2. `Dimensions`
   3. `Metrics`
   4. Optional filters
3. Select the desired `Time Range` (either a predefined period or `Custom Date Range`). This option allows you to define a relative report period range.
4. Set the **Destination** parameters to control how the result is stored. See the `Destination` section.

### Destination – report output

This section defines how the extracted data will be saved in Keboola Storage. The resulting table always contains `Profile ID` and `Profile Name` columns because the component runs through multiple accounts.

- **Load type** – If `full load` is used, the destination table will be overwritten every run. If `incremental load` is used, data will be “upserted” into the destination table.
- **Storage table name** – Name of the resulting table stored in Storage.
- **Primary key** - Since the reports are always custom-defined, define what dimensions (columns) represent the unique primary key. This is then used to perform "upserts".
    - **Note**: If the primary key is not defined properly, you may lose some data during deduplication. If there is no primary key defined and `incremental load` mode is used, each execution leads to a new set of records. Also, if this field is not empty, `Profile ID` and `Profile Name` are always used as the primary key because the component runs through multiple accounts.

## Features

| **Feature**             | **Note**                                      |
|-------------------------|-----------------------------------------------|
| Generic UI form         | Dynamic UI form                               |
| Row Based configuration | Allows structuring the configuration in rows  |
| oAuth                   | oAuth authentication enabled                  |
| Incremental loading     | Allows fetching data in new increments        |
| Dimension filter        | Fetch data of certain dimension values only   |
| Date range filter       | Specify date range                            |

## Sample Raw Configuration

### Existing report IDs

```json
{
    "parameters": {
    "debug": false,
    "profiles": [
      "8467304",
      "8653652"
    ],
    "time_range": {
      "period": "LAST_7_DAYS"
    },
    "destination": {
      "table_name": "vystup",
      "selected_variant": "existing_report_ids",
      "incremental_loading": true,
      "primary_key_existing": []
    },
    "input_variant": "existing_report_ids",
    "existing_report_ids": [
      "1079840351"
    ]
  }
}
```


### Template report

```json
{
  "parameters": {
    "debug": true,
    "profiles": [
      "8653652",
      "8467304"
    ],
    "time_range": {
      "period": "LAST_7_DAYS"
    },
    "destination": {
      "table_name": "templated",
      "selected_variant": "report_template_id",
      "incremental_loading": true,
      "primary_key_existing": [
        "activity",
        "country",
        "environment"
      ]
    },
    "input_variant": "report_template_id",
    "report_template_id": "8653652:1096894707"
  }
}
```

### Report specification

```json
{
  "parameters": {
    "debug": true,
    "profiles": [
      "8467304",
      "8653652"
    ],
    "time_range": {
      "period": "CUSTOM_DATES",
      "date_to": "today",
      "date_from": "today - 4"
    },
    "destination": {
      "table_name": "vystup",
      "primary_key": [
        "activityId",
        "campaignId"
      ],
      "selected_variant": "report_specification",
      "incremental_loading": true
    },
    "input_variant": "report_specification",
    "report_specification": {
      "metrics": [
        "clicks",
        "costPerClick"
      ],
      "dimensions": [
        "activityId",
        "campaignId"
      ],
      "report_type": "STANDARD"
    }
  }
}
```

Development
-----------

If required, change the local data folder (the `CUSTOM_FOLDER` placeholder) path to your custom path in
the `docker-compose.yml` file:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    volumes:
      - ./:/code
      - ./CUSTOM_FOLDER:/data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Clone this repository, initialize the workspace, and run the component with the following command:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker-compose build
docker-compose run --rm dev
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run the test suite and lint check using this command:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker-compose run --rm test
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Integration
===========

For information about deployment and integration with Keboola, please refer to the
[deployment section of our developer documentation](https://developers.keboola.com/extend/component/deployment/).


================================================
FILE: bitbucket-pipelines.yml
================================================
options:
  docker: true

pipelines:
  default:
    - step:
        caches:
          - docker
        script:
          - export APP_IMAGE=keboola-component
          - docker build . --tag=$APP_IMAGE
          - docker images
          - docker -v
          - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
          - echo "Running unit-tests..."
          - docker run $APP_IMAGE python -m unittest discover
          # push test image to ecr - uncomment for testing before deployment
          - export TEST_TAG=${BITBUCKET_BRANCH//\//-}
          - echo "Pushing test image to repo. [tag=${TEST_TAG}]"
          - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
          - docker tag $APP_IMAGE:latest $REPOSITORY:$TEST_TAG
          - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
          - docker push $REPOSITORY:$TEST_TAG


  branches:
    master:
      - step:
          caches:
            - docker
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker -v
            - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
            - echo "Running unit-tests..."
            - docker run $APP_IMAGE python -m unittest discover
            # push test image to ecr - uncomment for testing before deployment
            - echo 'Pushing test image to repo. [tag=test]'
            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            - docker tag $APP_IMAGE:latest $REPOSITORY:test
            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            - docker push $REPOSITORY:test
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - ./scripts/update_dev_portal_properties.sh
  tags:
    '*':
      - step:
          deployment: production
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
            - echo "Running unit-tests..."
            - docker run $APP_IMAGE python -m unittest discover
            - echo "Preparing KBC test image"
            - docker pull quay.io/keboola/developer-portal-cli-v2:latest
            # push test image to ECR - uncomment when initialised
            # - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            # - docker tag $APP_IMAGE:latest $REPOSITORY:test
            # - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            # - docker push $REPOSITORY:test
            # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test
            # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $KBC_CONFIG_1 test
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - chmod +x ./deploy.sh
            - ./scripts/update_dev_portal_properties.sh
            - ./deploy.sh


================================================
FILE: deploy.sh
================================================
#!/bin/sh
set -e

env

# compatibility with travis and bitbucket
if [ ! -z ${BITBUCKET_TAG} ]
then
	echo "assigning bitbucket tag"
	export TAG="$BITBUCKET_TAG"
elif [ ! -z ${TRAVIS_TAG} ]
then
	echo "assigning travis tag"
	export TAG="$TRAVIS_TAG"
elif [ ! -z ${GITHUB_TAG} ]
then
	echo "assigning github tag"
	export TAG="$GITHUB_TAG"
else
	echo No Tag is set!
	exit 1
fi

echo "Tag is '${TAG}'"

#check if deployment is triggered only in master
if [ ${BITBUCKET_BRANCH} != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi

# Obtain the component repository and log in
echo "Obtain the component repository and log in"
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`

echo "Set credentials"
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})

# Push to the repository
echo "Push to the repository"
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
docker push ${REPOSITORY}:${TAG}
docker push ${REPOSITORY}:latest

# Update the tag in Keboola Developer Portal -> Deploy to KBC
if echo ${TAG} | grep -c '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$'
then
    docker run --rm \
        -e KBC_DEVELOPERPORTAL_USERNAME \
        -e KBC_DEVELOPERPORTAL_PASSWORD \
        quay.io/keboola/developer-portal-cli-v2:latest \
        update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${TAG} ecr ${REPOSITORY}
else
    echo "Skipping deployment to KBC, tag ${TAG} is not allowed."
fi



================================================
FILE: docker-compose.yml
================================================
version: "2"
services:
  # for development purposes
  dev:
    build: .
    volumes:
        - ./:/code
        - ./data:/data
    environment:
      - KBC_DATADIR=./data
  test:
    # Use to run flake8 and unittests checks
    build: .
    volumes:
      - ./:/code
      - ./data:/data
    environment:
      - KBC_DATADIR=./data
    command:
      - /bin/sh
      - /code/scripts/build_n_test.sh


================================================
FILE: Dockerfile
================================================
FROM python:3.11-slim
ENV PYTHONIOENCODING utf-8

COPY /src /code/src/
COPY /tests /code/tests/
COPY /scripts /code/scripts/
COPY requirements.txt /code/requirements.txt
COPY flake8.cfg /code/flake8.cfg
COPY deploy.sh /code/deploy.sh

# install gcc to be able to build packages - e.g. required by regex, dateparser, also required for pandas
RUN apt-get update && apt-get install -y build-essential

RUN pip install flake8

RUN pip install -r /code/requirements.txt

WORKDIR /code/


CMD ["python", "-u", "/code/src/component.py"]



================================================
FILE: flake8.cfg
================================================
[flake8]
exclude =
    .git,
    __pycache__,
    tests,
    example
    venv
max-line-length = 120

# F812: list comprehension redefines ...
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H233: Python 3.x incompatible use of print operator
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting



================================================
FILE: LICENSE.md
================================================
The MIT License (MIT)

Copyright (c) 2018 Keboola DS, http://keboola.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files, to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


================================================
FILE: requirements.txt
================================================
keboola.component==1.4.2
keboola.utils==1.1.0
google-api-python-client==2.119.0
google-auth-oauthlib==1.2.0
mock~=5.0.0
freezegun~=1.2.2
keboola.csvwriter==1.0.1

https://github.com/bakobako/dataconf/zipball/main#egg=dataconf
requests~=2.28.1
dateparser~=1.1.7
pyhocon~=0.3.59

beautifulsoup4==4.12.2

exceptiongroup~=1.2.1
dataconf~=2.1.3


================================================
FILE: component_config/component_long_description.md
================================================
[Google Campaign Manager 360](https://support.google.com/campaignmanager/answer/2709362?hl=en) orchestrates digital advertising campaigns, enabling precise ad placements across multiple
channels. 

This connector enables retrieval of Campaign Manager 360 reports **across multiple Ad Accounts**. It allows you to run CM360 reports in several modes:

1. Define custom reports directly in the UI.
2. Select multiple existing reports with the same structure across multiple accounts. The reports can be created via the [CM360 Report Builder](https://www.google.com/analytics/dfa/).
3. Select one existing report definition that is used as a template and run across multiple selected accounts. The reports can be created via the [CM360 Report Builder](https://www.google.com/analytics/dfa/).


**Google Limited Use Policy Disclosure:**

App’s use and transfer to any other app of information received from Google APIs will adhere
to [Google API Services User Data Policy](https://developers.google.com/terms/api-services-user-data-policy#additional_requirements_for_specific_api_scopes)
, including the Limited Use requirements.



================================================
FILE: component_config/component_short_description.md
================================================
Google Campaign Manager 360 orchestrates digital advertising campaigns, enabling precise ad placements across multiple
channels. It streamlines ad management, tracking, and optimization for marketers seeking comprehensive control and
insights.


================================================
FILE: component_config/configRowSchema.json
================================================
{
  "title": "DM360 report",
  "type": "object",
  "required": [
    "input_variant",
    "time_range",
    "destination"
  ],
  "properties": {
    "profiles": {
      "type": "array",
      "title": "Profiles",
      "propertyOrder": 50,
      "description": "Select profiles to be used in reporting or extracting metadata.",
      "items": {
        "type": "string",
        "enum": [],
        "minLength": 1,
        "title": "Profiles"
      },
      "format": "select",
      "uniqueItems": true,
      "options": {
        "async": {
          "label": "Load available profiles",
          "action": "load_profiles"
        }
      }
    },
    "input_variant": {
      "type": "string",
      "title": "Data to extract",
      "propertyOrder": 100,
      "description": "Select a metadata or which variant of report to extract. You may choose to either create a new report or to enter an existing report ID.",
      "enum": [
        "metadata",
        "report_specification",
        "report_template_id",
        "existing_report_ids"
      ],
      "options": {
        "enum_titles": [
          "Metadata",
          "Report specification",
          "Report template",
          "Existing report ID(s)"
        ]
      },
      "default": "report_specification"
    },
        "metadata": {
      "title": "Metadata",
      "description": "Which metadata to fetch",
      "type": "array",
      "format": "select",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "accountPermissionGroups",
          "accountPermissions",
          "accounts",
          "ads",
          "advertisers",
          "browsers",
          "campaigns",
          "changeLogs",
          "cities",
          "connectionTypes",
          "contentCategories",
          "countries",
          "creativeFields",
          "creativeGroups",
          "creatives",
          "directorySites",
          "floodlightActivityGroups",
          "floodlightActivities",
          "floodlightConfigurations",
          "inventoryItems",
          "advertiserInvoices",
          "advertiserLandingPages",
          "languages",
          "metros",
          "mobileApps",
          "mobileCarriers",
          "operatingSystems",
          "operatingSystemVersions",
          "sites",
          "subaccounts",
          "userRoles",
          "targetingTemplates",
          "placements",
          "placementGroups",
          "placementStrategies",
          "platformTypes",
          "postalCodes",
          "projects",
          "regions",
          "sizes",
          "userRolePermissionGroups",
          "userRolePermissions",
          "videoFormats"
        ],
        "minLength": 0,
        "title": "Metadata"
      },
      "options": {
        "dependencies": {
          "input_variant": "metadata"
        }
          },
      "propertyOrder": 200
    },
    "time_range": {
      "type": "object",
      "title": "Time range",
      "propertyOrder": 450,
      "properties": {
        "period": {
          "type": "string",
          "title": "Report period",
          "propertyOrder": 10,
          "default": "LAST_7_DAYS",
          "enum": [
            "CUSTOM_DATES",
            "TODAY",
            "YESTERDAY",
            "WEEK_TO_DATE",
            "MONTH_TO_DATE",
            "QUARTER_TO_DATE",
            "YEAR_TO_DATE",
            "PREVIOUS_WEEK",
            "PREVIOUS_MONTH",
            "PREVIOUS_QUARTER",
            "PREVIOUS_YEAR",
            "LAST_7_DAYS",
            "LAST_14_DAYS",
            "LAST_30_DAYS",
            "LAST_60_DAYS",
            "LAST_90_DAYS",
            "LAST_365_DAYS",
            "LAST_24_MONTHS"
          ],
          "options": {
            "enum_titles": [
              "Custom date range",
              "Today",
              "Yesterday",
              "All days, including the current day, since the most recent Sunday",
              "All days, including the current day, since the start of the current month",
              "All days, including the current day, since the start of the current quarter",
              "All days, including the current day, since the start of the current calendar year",
              "The previous completed week, beginning from Sunday",
              "The previous completed calendar month",
              "The previous completed quarter",
              "The previous completed calendar year",
              "The previous 7 days, excluding the current day",
              "The previous 14 days, excluding the current day",
              "The previous 30 days, excluding the current day",
              "The previous 60 days, excluding the current day",
              "The previous 90 days, excluding the current day",
              "The previous 365 days, excluding the current day",
              "The previous 24 months"
            ]
          }
        },
        "date_from": {
          "type": "string",
          "title": "Date from",
          "propertyOrder": 20,
          "description": "Start date: either in YYYY-MM-DD format or a relative date string, e.g., 5 days ago, 1 month ago, yesterday, etc.",
          "options": {
            "dependencies": {
              "period": "CUSTOM_DATES"
            }
          }
        },
        "date_to": {
          "type": "string",
          "title": "Date to",
          "propertyOrder": 30,
          "description": "End date: either in YYYY-MM-DD format or a relative date string, e.g., 5 days ago, 1 month ago, yesterday, etc.",
          "options": {
            "dependencies": {
              "period": "CUSTOM_DATES"
            }
          }
        }
      },
      "options": {
        "dependencies": {
          "input_variant": ["report_specification", "report_template_id"]
        }
      }
    },
    "report_specification": {
      "type": "object",
      "title": "Report details",
      "propertyOrder": 300,
      "properties": {
        "report_type": {
          "title": "Report type",
          "type": "string",
          "enum": [
            "STANDARD",
            "REACH",
            "FLOODLIGHT",
            "PATH",
            "PATH_ATTRIBUTION"
          ],
          "options": {
            "enum_titles": [
              "Standard",
              "Reach",
              "Floodlight",
              "Path",
              "Path attribution"
            ]
          },
          "propertyOrder": 500
        },
        "dimensions": {
          "options": {
            "async": {
              "label": "Load available dimensions",
              "action": "load_dimensions"
            }
          },
          "title": "Dimensions",
          "type": "array",
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [],
            "minLength": 1,
            "title": "Dimensions"
          },
          "propertyOrder": 600
        },
        "metrics": {
          "options": {
            "async": {
              "label": "Load available metrics",
              "action": "load_metrics"
            }
          },
          "type": "array",
          "title": "Metrics",
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [],
            "minLength": 1,
            "title": "Metrics"
          },
          "propertyOrder": 700
        }
      },
      "options": {
        "dependencies": {
          "input_variant": "report_specification"
        }
      }
    },
    "report_template_id": {
      "type": "string",
      "title": "Report ID as a template",
      "propertyOrder": 350,
      "minLength": 1,
      "description": "Select a report to be used as a template for all profiles.",
      "enum": [],
      "options": {
        "dependencies": {
          "input_variant": "report_template_id"
        },
        "async": {
          "label": "Load available reports",
          "action": "load_reports"
        }
      }
    },
    "existing_report_ids": {
      "type": "array",
      "title": "Report ID(s) to be run in parallel",
      "propertyOrder": 400,
      "minLength": 1,
      "description": "Select reports to run in parallel. If reports have a schedule/delivery format defined, it must be in CSV format! Setup details <a href=\"https://support.google.com/campaignmanager/answer/7674615?hl=en#:~:text=Click%20the%20%22-,Delivery,-%22%20toggle%20to%20turn\">here.</a>",
      "format": "select",
      "uniqueItems": true,
      "items": {
        "title": "Report ID",
        "type": "string",
        "enum": [],
        "minLength": 1
      },
      "options": {
        "tooltip": "**Reports must be in CSV format!**\n Format setup is in the report's schedule/delivery settings.\n If you need to run a report in a different format, please use the 'Report ID as a template' option.",
        "dependencies": {
          "input_variant": "existing_report_ids"
        },
        "async": {
          "label": "Load available reports",
          "action": "load_reports"
        }
      }
    },
    "destination": {
      "type": "object",
      "title": "Destination",
      "propertyOrder": 600,
      "options": {
        "dependencies": {
          "input_variant": ["report_specification", "report_template_id", "existing_report_ids"]
        }
      },
      "required": [
        "table_name",
        "incremental_loading"
      ],
      "properties": {
        "selected_variant": {
          "type": "string",
          "title": "Selected variant",
          "description": "Helper dummy element to render pkeys",
          "template": "{{var}}",
          "watch": {
            "var": "input_variant"
          },
          "options": {
            "hidden": true
          }
        },
        "table_name": {
          "type": "string",
          "title": "Storage table name",
          "propertyOrder": 10,
          "minLength": 1,
          "description": "Name of the destination table for this report (e.g., standard_performance_data)"
        },
        "primary_key": {
          "type": "array",
          "title": "Primary key",
          "description": "List of columns (from selected dimensions) to be used as the primary key of the resulting table. We recommend using ID columns where possible to avoid ambiguity if the dimension name changes.",
          "propertyOrder": 20,
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "watch": {
              "dim": "report_specification.dimensions"
            },
            "enumSource": "dim"
          },
          "options": {
            "dependencies": {
              "selected_variant": "report_specification"
            }
          }
        },
        "primary_key_existing": {
          "type": "array",
          "title": "Primary key",
          "description": "List of columns (loaded from the report) to be used as the primary key of the resulting table. We recommend using ID columns where possible to avoid ambiguity if the dimension name changes.",
          "propertyOrder": 21,
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [],
            "minLength": 1,
            "title": "Dimension"
          },
          "options": {
            "async": {
              "label": "Load available dimensions",
              "action": "list_report_dimensions"
            },
            "dependencies": {
              "selected_variant": ["report_template_id", "existing_report_ids"]
            }
          }
        },
        "incremental_loading": {
          "enum": [
            false,
            true
          ],
          "type": "boolean",
          "title": "Load type",
          "default": true,
          "options": {
            "enum_titles": [
              "Full load",
              "Incremental load"
            ]
          },
          "description": "If full load is used, the destination table will be overwritten every run. If incremental load is used, data will be upserted into the destination table.",
          "propertyOrder": 30
        }
      }
    }
  }
}



================================================
FILE: component_config/configSchema.json
================================================
{}


================================================
FILE: component_config/configuration_description.md
================================================
[Empty file]


================================================
FILE: component_config/logger
================================================
gelf


================================================
FILE: component_config/loggerConfiguration.json
================================================
{
  "verbosity": {
    "100": "normal",
    "200": "normal",
    "250": "normal",
    "300": "verbose",
    "400": "verbose",
    "500": "camouflage",
    "550": "camouflage",
    "600": "camouflage"
  },
  "gelf_server_type": "tcp"
}


================================================
FILE: component_config/report_resources/dimensions_cross_dimension_reach.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_floodlight.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_path.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_path_attribution.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_path_to_conversion.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_reach.csv
================================================
id_reach	switech to reach	long
id_reach2	switech to reach 2	long


================================================
FILE: component_config/report_resources/dimensions_standard.csv
================================================
activeViewCustomMetricId	Active View: Custom Metric ID	long
activeViewCustomMetricName	Active View: Custom Metric Name	string
activity	Activity	string
activityGroup	Activity Group	string
activityGroupId	Activity Group ID	long
activityId	Activity ID	long
ad	Ad	string
adId	Ad ID	long
adStatus	Ad Status	string
adType	Ad Type	string
advertiser	Advertiser	string
advertiserGroup	Advertiser Group	string
advertiserId	Advertiser ID	long
app	App	string
appId	App ID	string
asset	Asset	string
assetCategory	Asset Category	string
assetId	Asset ID	long
assetOrientation	Asset Orientation	string
attributedEventConnectionType	Attributed Event Connection Type	string
attributedEventEnvironment	Attributed Event Environment	string
audienceTargeted	Audience Targeted	string
browserPlatform	Browser/Platform	string
campaign	Campaign	string
campaignEndDate	Campaign End Date	string
campaignExternalId	Campaign External ID	string
campaignId	Campaign ID	long
campaignStartDate	Campaign Start Date	string
city	City	string
clickThroughUrl	Click-through URL	string
companionCreative	Companion Creative	string
companionCreativeId	Companion Creative ID	long
companionCreativeSize	Companion Creative Pixel Size	string
connectionType	Connection Type	string
contentCategory	Content Category	string
country	Country	string
creative	Creative	string
creativeEndDate	Creative End Date	string
creativeField1	Creative Field 1	string
creativeField2	Creative Field 2	string
creativeField3	Creative Field 3	string
creativeField4	Creative Field 4	string
creativeField5	Creative Field 5	string
creativeField6	Creative Field 6	string
creativeField7	Creative Field 7	string
creativeField8	Creative Field 8	string
creativeField9	Creative Field 9	string
creativeField10	Creative Field 10	string
creativeField11	Creative Field 11	string
creativeField12	Creative Field 12	string
creativeGroup1	Creative Groups 1	string
creativeGroup2	Creative Groups 2	string
creativeId	Creative ID	long
creativeSize	Creative Pixel Size	string
creativeStartDate	Creative Start Date	string
creativeType	Creative Type	string
creativeVersion	Creative Version	string
dataSource	Data Source	string
date	Date	string
digitalContentLabel	Digital Content Label	string
dmaRegion	Designated Market Area (DMA)	string
domain	Domain	string
dv360Advertiser	DV360 Advertiser	string
dv360AdvertiserId	DV360 Advertiser ID	long
dv360Campaign	DV360 Campaign	string
dv360CampaignId	DV360 Campaign ID	long
dv360Creative	DV360 Creative	string
dv360CreativeId	DV360 Creative ID	long
dv360InsertionOrder	DV360 Insertion Order	string
dv360InsertionOrderId	DV360 Insertion Order ID	long
dv360LineItem	DV360 Line Item	string
dv360LineItemId	DV360 Line Item ID	long
dv360Partner	DV360 Partner	string
dv360PartnerId	DV360 Partner ID	long
dv360Site	DV360 Site	string
dv360SiteId	DV360 Site ID	long
dynamicElement1Field1Value	Feed 1 - Reporting dimension 1 value	string
dynamicElement1Field2Value	Feed 1 - Reporting dimension 2 value	string
dynamicElement1Field3Value	Feed 1 - Reporting dimension 3 value	string
dynamicElement1Field4Value	Feed 1 - Reporting dimension 4 value	string
dynamicElement1Field5Value	Feed 1 - Reporting dimension 5 value	string
dynamicElement1Field6Value	Feed 1 - Reporting dimension 6 value	string
dynamicElement2Field1Value	Feed 2 - Reporting dimension 1 value	string
dynamicElement2Field2Value	Feed 2 - Reporting dimension 2 value	string
dynamicElement2Field3Value	Feed 2 - Reporting dimension 3 value	string
dynamicElement2Field4Value	Feed 2 - Reporting dimension 4 value	string
dynamicElement2Field5Value	Feed 2 - Reporting dimension 5 value	string
dynamicElement2Field6Value	Feed 2 - Reporting dimension 6 value	string
dynamicElement3Field1Value	Feed 3 - Reporting dimension 1 value	string
dynamicElement3Field2Value	Feed 3 - Reporting dimension 2 value	string
dynamicElement3Field3Value	Feed 3 - Reporting dimension 3 value	string
dynamicElement3Field4Value	Feed 3 - Reporting dimension 4 value	string
dynamicElement3Field5Value	Feed 3 - Reporting dimension 5 value	string
dynamicElement3Field6Value	Feed 3 - Reporting dimension 6 value	string
dynamicElement4Field1Value	Feed 4 - Reporting dimension 1 value	string
dynamicElement4Field2Value	Feed 4 - Reporting dimension 2 value	string
dynamicElement4Field3Value	Feed 4 - Reporting dimension 3 value	string
dynamicElement4Field4Value	Feed 4 - Reporting dimension 4 value	string
dynamicElement4Field5Value	Feed 4 - Reporting dimension 5 value	string
dynamicElement4Field6Value	Feed 4 - Reporting dimension 6 value	string
dynamicElement5Field1Value	Feed 5 - Reporting dimension 1 value	string
dynamicElement5Field2Value	Feed 5 - Reporting dimension 2 value	string
dynamicElement5Field3Value	Feed 5 - Reporting dimension 3 value	string
dynamicElement5Field4Value	Feed 5 - Reporting dimension 4 value	string
dynamicElement5Field5Value	Feed 5 - Reporting dimension 5 value	string
dynamicElement5Field6Value	Feed 5 - Reporting dimension 6 value	string
dynamicElement6Field1Value	Feed 6 - Reporting dimension 1 value	string
dynamicElement6Field2Value	Feed 6 - Reporting dimension 2 value	string
dynamicElement6Field3Value	Feed 6 - Reporting dimension 3 value	string
dynamicElement6Field4Value	Feed 6 - Reporting dimension 4 value	string
dynamicElement6Field5Value	Feed 6 - Reporting dimension 5 value	string
dynamicElement6Field6Value	Feed 6 - Reporting dimension 6 value	string
dynamicElement7Field1Value	Feed 7 - Reporting dimension 1 value	string
dynamicElement7Field2Value	Feed 7 - Reporting dimension 2 value	string
dynamicElement7Field3Value	Feed 7 - Reporting dimension 3 value	string
dynamicElement7Field4Value	Feed 7 - Reporting dimension 4 value	string
dynamicElement7Field5Value	Feed 7 - Reporting dimension 5 value	string
dynamicElement7Field6Value	Feed 7 - Reporting dimension 6 value	string
dynamicElement8Field1Value	Feed 8 - Reporting dimension 1 value	string
dynamicElement8Field2Value	Feed 8 - Reporting dimension 2 value	string
dynamicElement8Field3Value	Feed 8 - Reporting dimension 3 value	string
dynamicElement8Field4Value	Feed 8 - Reporting dimension 4 value	string
dynamicElement8Field5Value	Feed 8 - Reporting dimension 5 value	string
dynamicElement8Field6Value	Feed 8 - Reporting dimension 6 value	string
dynamicElement9Field1Value	Feed 9 - Reporting dimension 1 value	string
dynamicElement9Field2Value	Feed 9 - Reporting dimension 2 value	string
dynamicElement9Field3Value	Feed 9 - Reporting dimension 3 value	string
dynamicElement9Field4Value	Feed 9 - Reporting dimension 4 value	string
dynamicElement9Field5Value	Feed 9 - Reporting dimension 5 value	string
dynamicElement9Field6Value	Feed 9 - Reporting dimension 6 value	string
dynamicElement10Field1Value	Feed 10 - Reporting dimension 1 value	string
dynamicElement10Field2Value	Feed 10 - Reporting dimension 2 value	string
dynamicElement10Field3Value	Feed 10 - Reporting dimension 3 value	string
dynamicElement10Field4Value	Feed 10 - Reporting dimension 4 value	string
dynamicElement10Field5Value	Feed 10 - Reporting dimension 5 value	string
dynamicElement10Field6Value	Feed 10 - Reporting dimension 6 value	string
dynamicElement11Field1Value	Feed 11 - Reporting dimension 1 value	string
dynamicElement11Field2Value	Feed 11 - Reporting dimension 2 value	string
dynamicElement11Field3Value	Feed 11 - Reporting dimension 3 value	string
dynamicElement11Field4Value	Feed 11 - Reporting dimension 4 value	string
dynamicElement11Field5Value	Feed 11 - Reporting dimension 5 value	string
dynamicElement11Field6Value	Feed 11 - Reporting dimension 6 value	string
dynamicElement12Field1Value	Feed 12 - Reporting dimension 1 value	string
dynamicElement12Field2Value	Feed 12 - Reporting dimension 2 value	string
dynamicElement12Field3Value	Feed 12 - Reporting dimension 3 value	string
dynamicElement12Field4Value	Feed 12 - Reporting dimension 4 value	string
dynamicElement12Field6Value	Feed 12 - Reporting dimension 6 value	string
dynamicElement13Field1Value	Feed 13 - Reporting dimension 1 value	string
dynamicElement13Field2Value	Feed 13 - Reporting dimension 2 value	string
dynamicElement13Field4Value	Feed 13 - Reporting dimension 4 value	string
dynamicElement13Field5Value	Feed 13 - Reporting dimension 5 value	string
dynamicElement13Field6Value	Feed 13 - Reporting dimension 6 value	string
dynamicElement14Field1Value	Feed 14 - Reporting dimension 1 value	string
dynamicElement14Field2Value	Feed 14 - Reporting dimension 2 value	string
dynamicElement14Field3Value	Feed 14 - Reporting dimension 3 value	string
dynamicElement14Field4Value	Feed 14 - Reporting dimension 4 value	string
dynamicElement14Field5Value	Feed 14 - Reporting dimension 5 value	string
dynamicElement14Field6Value	Feed 14 - Reporting dimension 6 value	string
dynamicElement15Field1Value	Feed 15 - Reporting dimension 1 value	string
dynamicElement15Field2Value	Feed 15 - Reporting dimension 2 value	string
dynamicElement15Field3Value	Feed 15 - Reporting dimension 3 value	string
dynamicElement15Field4Value	Feed 15 - Reporting dimension 4 value	string
dynamicElement15Field5Value	Feed 15 - Reporting dimension 5 value	string
dynamicElement15Field6Value	Feed 15 - Reporting dimension 6 value	string
dynamicElement16Field1Value	Feed 16 - Reporting dimension 1 value	string
dynamicElement16Field2Value	Feed 16 - Reporting dimension 2 value	string
dynamicElement16Field3Value	Feed 16 - Reporting dimension 3 value	string
dynamicElement16Field4Value	Feed 16 - Reporting dimension 4 value	string
dynamicElement16Field5Value	Feed 16 - Reporting dimension 5 value	string
dynamicElement16Field6Value	Feed 16 - Reporting dimension 6 value	string
dynamicElement17Field1Value	Feed 17 - Reporting dimension 1 value	string
dynamicElement17Field2Value	Feed 17 - Reporting dimension 2 value	string
dynamicElement17Field3Value	Feed 17 - Reporting dimension 3 value	string
dynamicElement17Field4Value	Feed 17 - Reporting dimension 4 value	string
dynamicElement17Field5Value	Feed 17 - Reporting dimension 5 value	string
dynamicElement17Field6Value	Feed 17 - Reporting dimension 6 value	string
dynamicElement18Field1Value	Feed 18 - Reporting dimension 1 value	string
dynamicElement18Field2Value	Feed 18 - Reporting dimension 2 value	string
dynamicElement18Field3Value	Feed 18 - Reporting dimension 3 value	string
dynamicElement18Field4Value	Feed 18 - Reporting dimension 4 value	string
dynamicElement18Field5Value	Feed 18 - Reporting dimension 5 value	string
dynamicElement18Field6Value	Feed 18 - Reporting dimension 6 value	string
dynamicElement19Field1Value	Feed 19 - Reporting dimension 1 value	string
dynamicElement19Field2Value	Feed 19 - Reporting dimension 2 value	string
dynamicElement19Field3Value	Feed 19 - Reporting dimension 3 value	string
dynamicElement19Field4Value	Feed 19 - Reporting dimension 4 value	string
dynamicElement19Field5Value	Feed 19 - Reporting dimension 5 value	string
dynamicElement19Field6Value	Feed 19 - Reporting dimension 6 value	string
dynamicElement20Field1Value	Feed 20 - Reporting dimension 1 value	string
dynamicElement20Field2Value	Feed 20 - Reporting dimension 2 value	string
dynamicElement20Field3Value	Feed 20 - Reporting dimension 3 value	string
dynamicElement20Field4Value	Feed 20 - Reporting dimension 4 value	string
dynamicElement20Field5Value	Feed 20 - Reporting dimension 5 value	string
dynamicElement20Field6Value	Feed 20 - Reporting dimension 6 value	string
dynamicProfile	Dynamic Profile	string
dynamicProfileId	Dynamic Profile Id	long
environment	Environment	string
eventPlatformType	Attributed Event Platform Type	string
exitUrl	Exit URL	string
feed1	Dynamic Element 1	string
feed1ReportingLabel	Feed 1 - Reporting label	string
feed1UniqueId	Feed 1 - Unique ID	string
feed2	Dynamic Element 2	string
feed2ReportingLabel	Feed 2 - Reporting label	string
feed2UniqueId	Feed 2 - Unique ID	string
feed3	Dynamic Element 3	string
feed3ReportingLabel	Feed 3 - Reporting label	string
feed3UniqueId	Feed 3 - Unique ID	string
feed4	Dynamic Element 4	string
feed4ReportingLabel	Feed 4 - Reporting label	string
feed4UniqueId	Feed 4 - Unique ID	string
feed5	Dynamic Element 5	string
feed5ReportingLabel	Feed 5 - Reporting label	string
feed5UniqueId	Feed 5 - Unique ID	string
feed6	Dynamic Element 6	string
feed6ReportingLabel	Feed 6 - Reporting label	string
feed6UniqueId	Feed 6 - Unique ID	string
feed7	Dynamic Element 7	string
feed7ReportingLabel	Feed 7 - Reporting label	string
feed7UniqueId	Feed 7 - Unique ID	string
feed8	Dynamic Element 8	string
feed8ReportingLabel	Feed 8 - Reporting label	string
feed8UniqueId	Feed 8 - Unique ID	string
feed9	Dynamic Element 9	string
feed9ReportingLabel	Feed 9 - Reporting label	string
feed9UniqueId	Feed 9 - Unique ID	string
feed10	Dynamic Element 10	string
feed10ReportingLabel	Feed 10 - Reporting label	string
feed10UniqueId	Feed 10 - Unique ID	string
feed11	Dynamic Element 11	string
feed11ReportingLabel	Feed 11 - Reporting label	string
feed11UniqueId	Feed 11 - Unique ID	string
feed12	Dynamic Element 12	string
feed12ReportingLabel	Feed 12 - Reporting label	string
feed12UniqueId	Feed 12 - Unique ID	string
feed13	Dynamic Element 13	string
feed13ReportingLabel	Feed 13 - Reporting label	string
feed13UniqueId	Feed 13 - Unique ID	string
feed14	Dynamic Element 14	string
feed14ReportingLabel	Feed 14 - Reporting label	string
feed14UniqueId	Feed 14 - Unique ID	string
feed15	Dynamic Element 15	string
feed15ReportingLabel	Feed 15 - Reporting label	string
feed15UniqueId	Feed 15 - Unique ID	string
feed16	Dynamic Element 16	string
feed16ReportingLabel	Feed 16 - Reporting label	string
feed16UniqueId	Feed 16 - Unique ID	string
feed17	Dynamic Element 17	string
feed17ReportingLabel	Feed 17 - Reporting label	string
feed17UniqueId	Feed 17 - Unique ID	string
feed18	Dynamic Element 18	string
feed18ReportingLabel	Feed 18 - Reporting label	string
feed18UniqueId	Feed 18 - Unique ID	string
feed19	Dynamic Element 19	string
feed19ReportingLabel	Feed 19 - Reporting label	string
feed19UniqueId	Feed 19 - Unique ID	string
feed20	Dynamic Element 20	string
feed20ReportingLabel	Feed 20 - Reporting label	string
feed20UniqueId	Feed 20 - Unique ID	string
flightBookedCost	Flight Booked Cost	string
flightBookedRate	Flight Booked Rate	string
flightBookedUnits	Flight Booked Units	string
flightEndDate	Flight End Date	string
flightStartDate	Flight Start Date	string
floodlightConfigId	Floodlight Configuration	long
floodlightVariableDimension1	Custom Floodlight Variable 1	string
floodlightVariableDimension2	Custom Floodlight Variable 2	string
floodlightVariableDimension3	Custom Floodlight Variable 3	string
floodlightVariableDimension4	Custom Floodlight Variable 4	string
floodlightVariableDimension5	Custom Floodlight Variable 5	string
floodlightVariableDimension6	Custom Floodlight Variable 6	string
floodlightVariableDimension7	Custom Floodlight Variable 7	string
floodlightVariableDimension8	Custom Floodlight Variable 8	string
floodlightVariableDimension9	Custom Floodlight Variable 9	string
floodlightVariableDimension10	Custom Floodlight Variable 10	string
floodlightVariableDimension11	Custom Floodlight Variable 11	string
floodlightVariableDimension12	Custom Floodlight Variable 12	string
floodlightVariableDimension13	Custom Floodlight Variable 13	string
floodlightVariableDimension14	Custom Floodlight Variable 14	string
floodlightVariableDimension15	Custom Floodlight Variable 15	string
floodlightVariableDimension16	Custom Floodlight Variable 16	string
floodlightVariableDimension17	Custom Floodlight Variable 17	string
floodlightVariableDimension18	Custom Floodlight Variable 18	string
floodlightVariableDimension19	Custom Floodlight Variable 19	string
floodlightVariableDimension20	Custom Floodlight Variable 20	string
floodlightVariableDimension21	Custom Floodlight Variable 21	string
floodlightVariableDimension22	Custom Floodlight Variable 22	string
floodlightVariableDimension23	Custom Floodlight Variable 23	string
floodlightVariableDimension24	Custom Floodlight Variable 24	string
floodlightVariableDimension25	Custom Floodlight Variable 25	string
floodlightVariableDimension26	Custom Floodlight Variable 26	string
floodlightVariableDimension27	Custom Floodlight Variable 27	string
floodlightVariableDimension28	Custom Floodlight Variable 28	string
floodlightVariableDimension29	Custom Floodlight Variable 29	string
floodlightVariableDimension30	Custom Floodlight Variable 30	string
floodlightVariableDimension31	Custom Floodlight Variable 31	string
floodlightVariableDimension32	Custom Floodlight Variable 32	string
floodlightVariableDimension33	Custom Floodlight Variable 33	string
floodlightVariableDimension34	Custom Floodlight Variable 34	string
floodlightVariableDimension35	Custom Floodlight Variable 35	string
floodlightVariableDimension36	Custom Floodlight Variable 36	string
floodlightVariableDimension37	Custom Floodlight Variable 37	string
floodlightVariableDimension38	Custom Floodlight Variable 38	string
floodlightVariableDimension39	Custom Floodlight Variable 39	string
floodlightVariableDimension40	Custom Floodlight Variable 40	string
floodlightVariableDimension41	Custom Floodlight Variable 41	string
floodlightVariableDimension42	Custom Floodlight Variable 42	string
floodlightVariableDimension43	Custom Floodlight Variable 43	string
floodlightVariableDimension44	Custom Floodlight Variable 44	string
floodlightVariableDimension45	Custom Floodlight Variable 45	string
floodlightVariableDimension46	Custom Floodlight Variable 46	string
floodlightVariableDimension47	Custom Floodlight Variable 47	string
floodlightVariableDimension48	Custom Floodlight Variable 48	string
floodlightVariableDimension49	Custom Floodlight Variable 49	string
floodlightVariableDimension50	Custom Floodlight Variable 50	string
floodlightVariableDimension51	Custom Floodlight Variable 51	string
floodlightVariableDimension52	Custom Floodlight Variable 52	string
floodlightVariableDimension53	Custom Floodlight Variable 53	string
floodlightVariableDimension54	Custom Floodlight Variable 54	string
floodlightVariableDimension55	Custom Floodlight Variable 55	string
floodlightVariableDimension56	Custom Floodlight Variable 56	string
floodlightVariableDimension57	Custom Floodlight Variable 57	string
floodlightVariableDimension58	Custom Floodlight Variable 58	string
floodlightVariableDimension59	Custom Floodlight Variable 59	string
floodlightVariableDimension60	Custom Floodlight Variable 60	string
floodlightVariableDimension61	Custom Floodlight Variable 61	string
floodlightVariableDimension62	Custom Floodlight Variable 62	string
floodlightVariableDimension63	Custom Floodlight Variable 63	string
floodlightVariableDimension64	Custom Floodlight Variable 64	string
floodlightVariableDimension65	Custom Floodlight Variable 65	string
floodlightVariableDimension66	Custom Floodlight Variable 66	string
floodlightVariableDimension67	Custom Floodlight Variable 67	string
floodlightVariableDimension68	Custom Floodlight Variable 68	string
floodlightVariableDimension69	Custom Floodlight Variable 69	string
floodlightVariableDimension70	Custom Floodlight Variable 70	string
floodlightVariableDimension71	Custom Floodlight Variable 71	string
floodlightVariableDimension72	Custom Floodlight Variable 72	string
floodlightVariableDimension73	Custom Floodlight Variable 73	string
floodlightVariableDimension74	Custom Floodlight Variable 74	string
floodlightVariableDimension75	Custom Floodlight Variable 75	string
floodlightVariableDimension76	Custom Floodlight Variable 76	string
floodlightVariableDimension77	Custom Floodlight Variable 77	string
floodlightVariableDimension78	Custom Floodlight Variable 78	string
floodlightVariableDimension79	Custom Floodlight Variable 79	string
floodlightVariableDimension80	Custom Floodlight Variable 80	string
floodlightVariableDimension81	Custom Floodlight Variable 81	string
floodlightVariableDimension82	Custom Floodlight Variable 82	string
floodlightVariableDimension83	Custom Floodlight Variable 83	string
floodlightVariableDimension84	Custom Floodlight Variable 84	string
floodlightVariableDimension85	Custom Floodlight Variable 85	string
floodlightVariableDimension86	Custom Floodlight Variable 86	string
floodlightVariableDimension87	Custom Floodlight Variable 87	string
floodlightVariableDimension88	Custom Floodlight Variable 88	string
floodlightVariableDimension89	Custom Floodlight Variable 89	string
floodlightVariableDimension90	Custom Floodlight Variable 90	string
floodlightVariableDimension91	Custom Floodlight Variable 91	string
floodlightVariableDimension92	Custom Floodlight Variable 92	string
floodlightVariableDimension93	Custom Floodlight Variable 93	string
floodlightVariableDimension94	Custom Floodlight Variable 94	string
floodlightVariableDimension95	Custom Floodlight Variable 95	string
floodlightVariableDimension96	Custom Floodlight Variable 96	string
floodlightVariableDimension97	Custom Floodlight Variable 97	string
floodlightVariableDimension98	Custom Floodlight Variable 98	string
floodlightVariableDimension99	Custom Floodlight Variable 99	string
floodlightVariableDimension100	Custom Floodlight Variable 100	string
hour	Hour	string
impressionCountingMethod	Impression Counting Method	string
keyword	Keyword	string
landingPageUrl	Landing Page URL	string
measurementSource	Measurement Source	string
mediaType	Media Type	string
mobileCarrier	Mobile Carrier	string
month	Month	string
naturalSearchEngineCountry	Natural Search Engine Country	string
naturalSearchEngineProperty	Natural Search Engine Property	string
naturalSearchLandingPage	Natural Search Landing Page	string
naturalSearchLandingPageQueryString	Natural Search Landing Page Query String	string
naturalSearchProcessedLandingPage	Natural Search Processed Landing Page	string
naturalSearchProcessedLandingPageQueryString	Natural Search Processed Landing Page Query String	string
naturalSearchQuery	Natural Search Query	string
omSdkAvailable	OM SDK Available	string
operatingSystem	Operating System	string
operatingSystemVersion	Operating System Version	string
packageRoadblock	Package/Roadblock	string
packageRoadblockId	Package/Roadblock ID	long
packageRoadblockStrategy	Package/Roadblock Strategy	string
packageRoadblockTotalBookedUnits	Package/Roadblock Total Booked Units	string
paidSearchAd	Paid Search Ad	string
paidSearchAdGroup	Paid Search Ad Group	string
paidSearchAdGroupId	Paid Search Ad Group ID	long
paidSearchAdId	Paid Search Ad ID	long
paidSearchAdvertiser	Paid Search Advertiser	string
paidSearchAdvertiserId	Paid Search Advertiser ID	long
paidSearchAgency	Paid Search Agency	string
paidSearchAgencyId	Paid Search Agency ID	long
paidSearchBidStrategy	Paid Search Bid Strategy	string
paidSearchBidStrategyId	Paid Search Bid Strategy ID	long
paidSearchCampaign	Paid Search Campaign	string
paidSearchCampaignId	Paid Search Campaign ID	long
paidSearchEngineAccount	Paid Search Engine Account	string
paidSearchEngineAccountCategory	Paid Search Engine Account Category	string
paidSearchEngineAccountId	Paid Search Engine Account ID	long
paidSearchExternalAdGroupId	Paid Search External Ad Group ID	long
paidSearchExternalAdId	Paid Search External Ad ID	long
paidSearchExternalCampaignId	Paid Search External Campaign ID	long
paidSearchExternalKeywordId	Paid Search External Keyword ID	long
paidSearchKeyword	Paid Search Keyword	string
paidSearchKeywordId	Paid Search Keyword ID	long
paidSearchLandingPageUrl	Paid Search Landing Page URL	string
paidSearchLegacyKeywordId	Paid Search Legacy Keyword ID	long
paidSearchMatchType	Paid Search Match Type	string
paidSocialAd	Paid Social Ad	string
paidSocialAdGroup	Paid Social Ad Group	string
paidSocialAdGroupId	Paid Social Ad Group ID	long
paidSocialAdId	Paid Social Ad ID	long
paidSocialAdvertiser	Paid Social Advertiser	string
paidSocialAdvertiserId	Paid Social Advertiser ID	long
paidSocialAgency	Paid Social Agency	string
paidSocialAgencyId	Paid Social Agency ID	long
paidSocialCampaign	Paid Social Campaign	string
paidSocialCampaignId	Paid Social Campaign ID	long
paidSocialEngineAccount	Paid Social Engine Account	string
paidSocialEngineAccountId	Paid Social Engine Account ID	long
paidSocialExternalAdGroupId	Paid Social External Ad Group ID	long
paidSocialExternalAdId	Paid Social External Ad ID	long
paidSocialExternalCampaignId	Paid Social External Campaign ID	long
paidSocialExternalEngineAccountId	Paid Social External Engine Account ID	long
paymentSource	Payment Source	string
placement	Placement	string
placementCompatibility	Placement Compatibility	string
placementCostStructure	Placement Cost Structure	string
placementEndDate	Placement End Date	string
placementExternalId	Placement External ID	string
placementId	Placement ID	long
placementRate	Placement Rate	string
placementSize	Placement Pixel Size	string
placementStartDate	Placement Start Date	string
placementStrategy	Placement Strategy	string
placementTagType	Placement Tag Type	string
placementTotalBookedUnits	Placement Total Booked Units	string
placementTotalPlannedMediaCost	Placement Total Planned Media Cost	string
platformType	Platform Type	string
playbackMethod	Playback Method	string
positionInContent	Position In Content	string
publisherTrafficSource	Publisher Traffic Source	string
refreshedAd	Refreshed Ad	string
renderingId	Rendering ID	long
richMediaCustomVariable	Custom Variable	string
richMediaEvent	Rich Media Event	string
richMediaVideo4asaId	Video 4A's Ad-ID	string
richMediaVideoLength	Video Length	string
sensitiveCategory	Sensitive Category	string
servedPixelDensity	Served Pixel Density	string
site	Site (CM360)	string
siteDirectory	Site (Site Directory)	string
siteDirectoryId	Site ID (Site Directory)	long
siteId	Site ID (CM360)	long
siteKeyname	Site Keyname	string
state	State/Region	string
twitterCampaignId	Twitter Campaign ID	long
twitterCreativeId	Twitter Creative ID	long
twitterCreativeMediaId	Twitter Creative Media ID	long
twitterCreativeType	Twitter Creative Type	string
twitterImpressionType	Twitter Impression Type	string
twitterLineItemId	Twitter Line Item ID	long
twitterPlacementType	Twitter Placement Type	string
verificationAudibilityComplete	Audibility At Complete	string
verificationAudibilityStart	Audibility At Start	string
verificationVideoPlayerSize	Video Player Size	string
verificationVideoPlayerSizeComplete	Video Player Size at Completion	string
verificationVideoPlayerSizeFirstQuartile	Video Player Size at First Quartile	string
verificationVideoPlayerSizeMidPoint	Video Player Size at Midpoint	string
verificationVideoPlayerSizeStart	Video Player Size at Start	string
verificationVideoPlayerSizeThirdQuartile	Video Player Size at Third Quartile	string
verificationVideoProminenceScoreDimension	Video Prominence Score	string
verificationVideoResized	Video Resized	string
videoContinuousPlay	Video Continuous Play	string
week	Week	string
zipCode	ZIP/Postal Code	long


================================================
FILE: component_config/report_resources/filters_cross_dimension_reach.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_floodlight.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_path.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_path_attribution.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_path_to_conversion.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_reach.csv
================================================
id_reach	switech to filters reach	long
id_reach2	switech to filters reach 2	long


================================================
FILE: component_config/report_resources/filters_standard.csv
================================================
activity	Activity	string
activityGroup	Activity Group	string
ad	Ad	string
adStatus	Ad Status	string
adType	Ad Type	string
advertiser	Advertiser	string
advertiserGroup	Advertiser Group	string
attributedEventConnectionType	Attributed Event Connection Type	string
attributedEventEnvironment	Attributed Event Environment	string
attributionModelConfig	Attribution Model	string
browserPlatform	Browser/Platform	string
campaign	Campaign	string
campaignEndDate	Campaign End Date	string
campaignExternalId	Campaign External ID	string
campaignStartDate	Campaign Start Date	string
city	City	string
clickThroughUrl	Click-through URL	string
connectionType	Connection Type	string
contentCategory	Content Category	string
country	Country	string
creative	Creative	string
creativeEndDate	Creative End Date	string
creativeField1	Creative Field 1	string
creativeField2	Creative Field 2	string
creativeField3	Creative Field 3	string
creativeField4	Creative Field 4	string
creativeField5	Creative Field 5	string
creativeField6	Creative Field 6	string
creativeField7	Creative Field 7	string
creativeField8	Creative Field 8	string
creativeField9	Creative Field 9	string
creativeField10	Creative Field 10	string
creativeField11	Creative Field 11	string
creativeField12	Creative Field 12	string
creativeGroup1	Creative Groups 1	string
creativeGroup2	Creative Groups 2	string
creativeSize	Creative Pixel Size	string
creativeStartDate	Creative Start Date	string
creativeType	Creative Type	string
digitalContentLabel	Digital Content Label	string
dmaRegion	Designated Market Area (DMA)	string
domain	Domain	string
environment	Environment	string
eventPlatformType	Attributed Event Platform Type	string
floodlightConfigId	Floodlight Configuration	long
hour	Hour	string
impressionCountingMethod	Impression Counting Method	string
mediaType	Media Type	string
mobileCarrier	Mobile Carrier	string
naturalSearchEngineCountry	Natural Search Engine Country	string
naturalSearchEngineProperty	Natural Search Engine Property	string
naturalSearchLandingPage	Natural Search Landing Page	string
naturalSearchLandingPageQueryString	Natural Search Landing Page Query String	string
naturalSearchProcessedLandingPage	Natural Search Processed Landing Page	string
naturalSearchProcessedLandingPageQueryString	Natural Search Processed Landing Page Query String	string
naturalSearchQuery	Natural Search Query	string
operatingSystem	Operating System	string
packageRoadblockStrategy	Package/Roadblock Strategy	string
packageRoadblockTotalBookedUnits	Package/Roadblock Total Booked Units	string
paidSearchAd	Paid Search Ad	string
paidSearchAdGroup	Paid Search Ad Group	string
paidSearchAdvertiser	Paid Search Advertiser	string
paidSearchAgency	Paid Search Agency	string
paidSearchBidStrategy	Paid Search Bid Strategy	string
paidSearchCampaign	Paid Search Campaign	string
paidSearchEngineAccount	Paid Search Engine Account	string
paidSearchKeyword	Paid Search Keyword	string
paidSearchLandingPageUrl	Paid Search Landing Page URL	string
paymentSource	Payment Source	string
placement	Placement	string
placementCompatibility	Placement Compatibility	string
placementCostStructure	Placement Cost Structure	string
placementExternalId	Placement External ID	string
placementSize	Placement Pixel Size	string
placementStrategy	Placement Strategy	string
placementTagType	Placement Tag Type	string
placementTotalBookedUnits	Placement Total Booked Units	string
platformType	Platform Type	string
positionInContent	Position In Content	string
refreshedAd	Refreshed Ad	string
renderingId	Rendering ID	long
sensitiveCategory	Sensitive Category	string
site	Site (CM360)	string
siteDirectory	Site (Site Directory)	string
state	State/Region	string
verificationAudibilityComplete	Audibility At Complete	string
verificationAudibilityStart	Audibility At Start	string
verificationVideoPlayerSizeComplete	Video Player Size at Completion	string
verificationVideoPlayerSizeFirstQuartile	Video Player Size at First Quartile	string
verificationVideoPlayerSizeMidPoint	Video Player Size at Midpoint	string
verificationVideoPlayerSizeStart	Video Player Size at Start	string
verificationVideoPlayerSizeThirdQuartile	Video Player Size at Third Quartile	string
verificationVideoResized	Video Resized	string
videoContinuousPlay	Video Continuous Play	string


================================================
FILE: component_config/report_resources/metrics_cross_dimension_reach.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_floodlight.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_path.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_path_attribution.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_path_to_conversion.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_reach.csv
================================================
id_reach	switech to metrics reach	long
id_reach2	switech to metrics reach 2	long


================================================
FILE: component_config/report_resources/metrics_standard.csv
================================================
actiewViewPercentAdPlayed	Active View: % of Ad Played	double
activeViewAverageViewableTimeSecond	Active View: Average Viewable Time (Seconds)	double
activeViewCustomMetricMeasurableImpressions	Active View: Custom Metric Measurable Impressions	long
activeViewCustomMetricViewableImpressions	Active View: Custom Metric Viewable Impressions	long
activeViewCustomMetricViewableRate	Active View: Custom Metric Viewable Rate	double
activeViewEligibleImpressions	Active View: Eligible Impressions	long
activeViewGroupmMeasurableImpressions	Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Measurable Impressions	long
activeViewGroupmTrvMeasurableImpressions	Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Measurable Impressions	long
activeViewGroupmTrvViewableImpressions	Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Impressions	long
activeViewGroupmViewableImpressions	Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Impressions	long
activeViewImpressionDistributionNotMeasurable	Active View: Impression Distribution (Not Measurable)	double
activeViewImpressionDistributionNotViewable	Active View: Impression Distribution (Not Viewable)	double
activeViewImpressionDistributionViewable	Active View: Impression Distribution (Viewable)	double
activeViewImpressionsAudibleAndVisibleAtCompletion	Active View: Impressions Audible and Visible at Completion	long
activeViewImpressionsVisible10Seconds	Active View: Impressions Visible 10 Seconds	long
activeViewMeasurableImpressions	Active View: Measurable Impressions	long
activeViewNotMeasurableImpressions	Active View: Not Measurable Impressions	long
activeViewNotViewableImpressions	Active View: Not Viewable Impressions	long
activeViewPercentAudibleAndVisibleAtCompletion	Active View: % Audible and Visible at Completion	double
activeViewPercentAudibleAndVisibleAtFirstQuartile	Active View: % Audible and Visible at First Quartile	double
activeViewPercentAudibleAndVisibleAtMidpoint	Active View: % Audible and Visible at Midpoint	double
activeViewPercentAudibleAndVisibleAtStart	Active View: % Audible and Visible at Start	double
activeViewPercentAudibleAndVisibleAtThirdQuartile	Active View: % Audible and Visible at Third Quartile	double
activeViewPercentAudibleImpressions	Active View: % Audible Impressions	double
activeViewPercentBackground	Active View: % In Background	double
activeViewPercentFullscreen	Active View: % Full-Screen	double
activeViewPercentImpressionsAudibleAndFullyOnscreen	Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Rate	double
activeViewPercentImpressionsAudibleAndFullyOnscreenForHalfDuration	Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Rate	double
activeViewPercentImpressionsAudibleAndVisibleAtCompletion	Active View: % of Completed Impressions Audible and Visible	double
activeViewPercentImpressionsAudibleAndVisibleAtFirstQuartile	Active View: % of First Quartile Impressions Audible and Visible	double
activeViewPercentImpressionsAudibleAndVisibleAtMidpoint	Active View: % of Midpoint Impressions Audible and Visible	double
activeViewPercentImpressionsAudibleAndVisibleAtThirdQuartile	Active View: % of Third Quartile Impressions Audible and Visible	double
activeViewPercentImpressionsVisibleAtCompletion	Active View: % of Completed Impressions Visible	double
activeViewPercentImpressionsVisibleAtFirstQuartile	Active View: % of First Quartile Impressions Visible	double
activeViewPercentImpressionsVisibleAtMidpoint	Active View: % of Midpoint Impressions Visible	double
activeViewPercentImpressionsVisibleAtThirdQuartile	Active View: % of Third Quartile Impressions Visible	double
activeViewPercentPlayTimeAudible	Active View: % Play Time Audible	double
activeViewPercentPlayTimeAudibleAndVisible	Active View: % Play Time Audible and Visible	double
activeViewPercentPlayTimeVisible	Active View: % Play Time Visible	double
activeViewPercentVisible10Seconds	Active View: % Visible 10 Seconds	double
activeViewPercentVisibleAtCompletion	Active View: % Visible at Completion	double
activeViewPercentVisibleAtFirstQuartile	Active View: % Visible at First Quartile	double
activeViewPercentVisibleAtMidpoint	Active View: % Visible at Midpoint	double
activeViewPercentVisibleAtStart	Active View: % Visible at Start	double
activeViewPercentVisibleAtThirdQuartile	Active View: % Visible at Third Quartile	double
activeViewPercentageMeasurableImpressions	Active View: % Measurable Impressions	double
activeViewPercentageViewableImpressions	Active View: % Viewable Impressions	double
activeViewViewableImpressions	Active View: Viewable Impressions	long
activityClickThroughConversions	Click-through Conversions	double
activityClickThroughRevenue	Click-through Revenue	double
activityDeliveryStatus	Activity Delivery Status	double
activityPerClick	Activity Per Click	double
activityPerThousandImpressions	Activity Per Thousand Impressions	double
activityViewThroughConversions	View-through Conversions	double
activityViewThroughRevenue	View-through Revenue	double
audioCompanionClicks	Audio Companion Clicks	long
audioCompanionImpressions	Audio Companion Views	long
beginToRenderEligibleImpressions	Begin to Render Eligible Impressions	long
beginToRenderImpressions	Begin to Render Impressions	long
bookedActivities	Booked Activities	double
bookedClicks	Booked Clicks	double
bookedImpressions	Booked Impressions	double
bookedViewableImpressions	Booked Viewable Impressions	double
clickDeliveryStatus	Click Delivery Status	double
clickRate	Click Rate	double
clicks	Clicks	string
cookieUnconsentedClicks	Cookie Unconsented Clicks	long
cookieUnconsentedImpressions	Cookie Unconsented Impressions	long
costPerActivity	Cost Per Activity	double
costPerClick	Cost Per Click	double
costPerRevenue	Cost Per Revenue	double
crossDeviceClickThroughConversionQuantity	Click-through Conversions + Cross-Environment	long
crossDeviceClickThroughConversionRevenue	Click-through Revenue + Cross-Environment	double
crossDeviceClickThroughConversions	Click-through Conversion Events + Cross-Environment	long
crossDeviceTotalConversionQuantity	Total Conversions + Cross-Environment	long
crossDeviceTotalConversionRevenue	Total Revenue + Cross-Environment	double
crossDeviceTotalConversions	Total Conversion Events + Cross-Environment	long
crossDeviceViewThroughConversionQuantity	View-through Conversions + Cross-Environment	long
crossDeviceViewThroughConversionRevenue	View-through Revenue + Cross-Environment	double
crossDeviceViewThroughConversions	View-through Conversion Events + Cross-Environment	long
downloadedImpressions	Downloaded Impressions	long
dv360Cost	DV360 Cost (Account Currency)	double
dv360CostUsd	DV360 Cost USD	double
effectiveCpm	Effective CPM	double
floodlightVariableMetric1	Custom Floodlight Variable 1	double
floodlightVariableMetric2	Custom Floodlight Variable 2	double
floodlightVariableMetric3	Custom Floodlight Variable 3	double
floodlightVariableMetric4	Custom Floodlight Variable 4	double
floodlightVariableMetric5	Custom Floodlight Variable 5	double
floodlightVariableMetric6	Custom Floodlight Variable 6	double
floodlightVariableMetric7	Custom Floodlight Variable 7	double
floodlightVariableMetric8	Custom Floodlight Variable 8	double
floodlightVariableMetric9	Custom Floodlight Variable 9	double
floodlightVariableMetric10	Custom Floodlight Variable 10	double
floodlightVariableMetric11	Custom Floodlight Variable 11	double
floodlightVariableMetric12	Custom Floodlight Variable 12	double
floodlightVariableMetric13	Custom Floodlight Variable 13	double
floodlightVariableMetric14	Custom Floodlight Variable 14	double
floodlightVariableMetric15	Custom Floodlight Variable 15	double
floodlightVariableMetric16	Custom Floodlight Variable 16	double
floodlightVariableMetric17	Custom Floodlight Variable 17	double
floodlightVariableMetric18	Custom Floodlight Variable 18	double
floodlightVariableMetric19	Custom Floodlight Variable 19	double
floodlightVariableMetric20	Custom Floodlight Variable 20	double
floodlightVariableMetric21	Custom Floodlight Variable 21	double
floodlightVariableMetric22	Custom Floodlight Variable 22	double
floodlightVariableMetric23	Custom Floodlight Variable 23	double
floodlightVariableMetric24	Custom Floodlight Variable 24	double
floodlightVariableMetric25	Custom Floodlight Variable 25	double
floodlightVariableMetric26	Custom Floodlight Variable 26	double
floodlightVariableMetric27	Custom Floodlight Variable 27	double
floodlightVariableMetric28	Custom Floodlight Variable 28	double
floodlightVariableMetric29	Custom Floodlight Variable 29	double
floodlightVariableMetric30	Custom Floodlight Variable 30	double
floodlightVariableMetric31	Custom Floodlight Variable 31	double
floodlightVariableMetric32	Custom Floodlight Variable 32	double
floodlightVariableMetric33	Custom Floodlight Variable 33	double
floodlightVariableMetric34	Custom Floodlight Variable 34	double
floodlightVariableMetric35	Custom Floodlight Variable 35	double
floodlightVariableMetric36	Custom Floodlight Variable 36	double
floodlightVariableMetric37	Custom Floodlight Variable 37	double
floodlightVariableMetric38	Custom Floodlight Variable 38	double
floodlightVariableMetric39	Custom Floodlight Variable 39	double
floodlightVariableMetric40	Custom Floodlight Variable 40	double
floodlightVariableMetric41	Custom Floodlight Variable 41	double
floodlightVariableMetric42	Custom Floodlight Variable 42	double
floodlightVariableMetric43	Custom Floodlight Variable 43	double
floodlightVariableMetric44	Custom Floodlight Variable 44	double
floodlightVariableMetric45	Custom Floodlight Variable 45	double
floodlightVariableMetric46	Custom Floodlight Variable 46	double
floodlightVariableMetric47	Custom Floodlight Variable 47	double
floodlightVariableMetric48	Custom Floodlight Variable 48	double
floodlightVariableMetric49	Custom Floodlight Variable 49	double
floodlightVariableMetric50	Custom Floodlight Variable 50	double
floodlightVariableMetric51	Custom Floodlight Variable 51	double
floodlightVariableMetric52	Custom Floodlight Variable 52	double
floodlightVariableMetric53	Custom Floodlight Variable 53	double
floodlightVariableMetric54	Custom Floodlight Variable 54	double
floodlightVariableMetric55	Custom Floodlight Variable 55	double
floodlightVariableMetric56	Custom Floodlight Variable 56	double
floodlightVariableMetric57	Custom Floodlight Variable 57	double
floodlightVariableMetric58	Custom Floodlight Variable 58	double
floodlightVariableMetric59	Custom Floodlight Variable 59	double
floodlightVariableMetric60	Custom Floodlight Variable 60	double
floodlightVariableMetric61	Custom Floodlight Variable 61	double
floodlightVariableMetric62	Custom Floodlight Variable 62	double
floodlightVariableMetric63	Custom Floodlight Variable 63	double
floodlightVariableMetric64	Custom Floodlight Variable 64	double
floodlightVariableMetric65	Custom Floodlight Variable 65	double
floodlightVariableMetric66	Custom Floodlight Variable 66	double
floodlightVariableMetric67	Custom Floodlight Variable 67	double
floodlightVariableMetric68	Custom Floodlight Variable 68	double
floodlightVariableMetric69	Custom Floodlight Variable 69	double
floodlightVariableMetric70	Custom Floodlight Variable 70	double
floodlightVariableMetric71	Custom Floodlight Variable 71	double
floodlightVariableMetric72	Custom Floodlight Variable 72	double
floodlightVariableMetric73	Custom Floodlight Variable 73	double
floodlightVariableMetric74	Custom Floodlight Variable 74	double
floodlightVariableMetric75	Custom Floodlight Variable 75	double
floodlightVariableMetric76	Custom Floodlight Variable 76	double
floodlightVariableMetric77	Custom Floodlight Variable 77	double
floodlightVariableMetric78	Custom Floodlight Variable 78	double
floodlightVariableMetric79	Custom Floodlight Variable 79	double
floodlightVariableMetric80	Custom Floodlight Variable 80	double
floodlightVariableMetric81	Custom Floodlight Variable 81	double
floodlightVariableMetric82	Custom Floodlight Variable 82	double
floodlightVariableMetric83	Custom Floodlight Variable 83	double
floodlightVariableMetric84	Custom Floodlight Variable 84	double
floodlightVariableMetric85	Custom Floodlight Variable 85	double
floodlightVariableMetric86	Custom Floodlight Variable 86	double
floodlightVariableMetric87	Custom Floodlight Variable 87	double
floodlightVariableMetric88	Custom Floodlight Variable 88	double
floodlightVariableMetric89	Custom Floodlight Variable 89	double
floodlightVariableMetric90	Custom Floodlight Variable 90	double
floodlightVariableMetric91	Custom Floodlight Variable 91	double
floodlightVariableMetric92	Custom Floodlight Variable 92	double
floodlightVariableMetric93	Custom Floodlight Variable 93	double
floodlightVariableMetric94	Custom Floodlight Variable 94	double
floodlightVariableMetric95	Custom Floodlight Variable 95	double
floodlightVariableMetric96	Custom Floodlight Variable 96	double
floodlightVariableMetric97	Custom Floodlight Variable 97	double
floodlightVariableMetric98	Custom Floodlight Variable 98	double
floodlightVariableMetric99	Custom Floodlight Variable 99	double
floodlightVariableMetric100	Custom Floodlight Variable 100	double
generalInvalidTrafficActiveViewEligibleImpressions	General Invalid Traffic (GIVT) Active View Eligible Impressions	long
generalInvalidTrafficActiveViewMeasurableImpressions	General Invalid Traffic (GIVT) Active View Measurable Impressions	long
generalInvalidTrafficActiveViewViewableImpressions	General Invalid Traffic (GIVT) Active View Viewable Impressions	long
generalInvalidTrafficBeginToRenderImpressions	General Invalid Traffic (GIVT) Begin to Render Impressions	long
generalInvalidTrafficClicks	General Invalid Traffic (GIVT) Clicks	long
generalInvalidTrafficImpressions	General Invalid Traffic (GIVT) Impressions	long
generalInvalidTrafficTrackedAds	General Invalid Traffic (GIVT) Tracked Ads	long
gmailClickThroughConversions	Gmail Click-through Conversions	long
gmailClickThroughRevenue	Gmail Click-through Revenue	double
gmailConversions	Gmail Conversions	long
gmailTotalRevenue	Gmail Total Revenue	double
gmailViewThroughConversions	Gmail View-through Conversions	long
gmailViewThroughRevenue	Gmail View-through Revenue	double
impressionDeliveryStatus	Impression Delivery Status	double
impressions	Impressions	string
inactiveImpressions	Inactive Impressions	long
invalidActiveViewEligibleImpressions	Invalid Active View Eligible Impressions	long
invalidActiveViewMeasurableImpressions	Invalid Active View Measurable Impressions	long
invalidActiveViewViewableImpressions	Invalid Active View Viewable Impressions	long
invalidBeginToRenderImpressions	Invalid Begin to Render Impressions	long
invalidClicks	Invalid Clicks	long
invalidImpressions	Invalid Impressions	long
invalidTrackedAds	Invalid Tracked Ads	long
mediaCost	Media Cost	double
naturalSearchActions	Natural Search Actions	double
naturalSearchClicks	Natural Search Clicks	long
naturalSearchRevenue	Natural Search Revenue	double
naturalSearchTransactions	Natural Search Transactions	double
paidSearchActionConversionPercentage	Floodlight: Paid Search Action Conversion Percentage	double
paidSearchActions	Paid Search Actions	double
paidSearchAverageCostPerAction	Floodlight: Paid Search Average Cost Per Action	double
paidSearchAverageCostPerTransaction	Floodlight: Paid Search Average Cost Per Transaction	double
paidSearchAverageDfaTransactionAmount	Floodlight: Paid Search Average CM360 Transaction Amount	double
paidSearchAveragePosition	Paid Search Average Position	double
paidSearchClickRate	Paid Search Click Rate	double
paidSearchClicks	Paid Search Clicks	long
paidSearchCost	Paid Search Cost	double
paidSearchImpressions	Paid Search Impressions	long
paidSearchRevenue	Paid Search Revenue	double
paidSearchSpendPerTransactionRevenue	Floodlight: Paid Search Spend Per Transaction Revenue	double
paidSearchTransactionConversionPercentage	Floodlight: Paid Search Transaction Conversion Percentage	double
paidSearchTransactionRevenuePerSpend	Floodlight: Paid Search Transaction Revenue Per Spend	double
paidSearchTransactions	Paid Search Transactions	double
paidSearchVisits	Paid Search Visits	long
paidSocialClicks	Paid Social Clicks	long
paidSocialCost	Paid Social Cost	double
paidSocialImpressions	Paid Social Impressions	long
percentInvalidClicks	% Invalid Clicks	double
percentInvalidImpressions	% Invalid Impressions	double
plannedMediaCost	Planned Media Cost	double
provisionalImpressions	Provisional Impressions	long
revenuePerClick	Revenue Per Click	double
revenuePerThousandImpressions	Revenue Per Thousand Impressions	double
richMediaAudioCompletions	Audio Completions	long
richMediaAudioFirstQuartileCompletes	Audio First Quartile Completions	long
richMediaAudioMidpoints	Audio Midpoints	long
richMediaAudioMutes	Audio Mutes	long
richMediaAudioPauses	Audio Pauses	long
richMediaAudioPlays	Audio Plays	long
richMediaAudioReplays	Audio Replays	long
richMediaAudioThirdQuartileCompletes	Audio Third Quartile Completions	long
richMediaAudioUnmutes	Audio Unmutes	long
richMediaAverageDisplayTime	Average Display Time	double
richMediaAverageExpansionTime	Average Expansion Time	double
richMediaAverageFullScreenViewTime	Full-Screen Average View Time	double
richMediaAverageInteractionTime	Average Interaction Time	double
richMediaAverageVideoViewTime	Video Average View Time	double
richMediaBackupImages	Backup Image	long
richMediaClickRate	Rich Media Click Rate	double
richMediaClicks	Rich Media Clicks	long
richMediaCodeServes	Code Serves	long
richMediaCustomAverageTime	Average Time	double
richMediaCustomCounters	Counters	long
richMediaCustomExits	Exits	long
richMediaCustomTimers	Timers	long
richMediaCustomVariableCount1	Custom Variable Count 1	long
richMediaCustomVariableCount2	Custom Variable Count 2	long
richMediaDisplayTime	Total Display Time	long
richMediaEngagements	Rich Media Engagements	long
richMediaEventCounters	Event Counters	long
richMediaEventTimers	Event Timers	double
richMediaExpansionTime	Expansion Time	long
richMediaExpansions	Expansions	long
richMediaFullScreenImpressions	Full-Screen Impressions	long
richMediaFullScreenVideoCompletes	Full-Screen Video Completions	long
richMediaFullScreenVideoPlays	Full-Screen Video Plays	long
richMediaHtml5Impressions	HTML5 Impressions	long
richMediaImpressions	Rich Media Impressions	long
richMediaInteractionRate	Interaction Rate	double
richMediaInteractionTime	Total Interaction Time	long
richMediaInteractions	Total Interactions	long
richMediaInteractiveImpressions	Interactive Impressions	long
richMediaManualCloses	Manual Closes	long
richMediaScrolls	Rich Media Scrolls	long
richMediaTrueViewViews	TrueView Views	long
richMediaVideoCompanionClicks	Video Companion Clicks	long
richMediaVideoCompletions	Video Completions	long
richMediaVideoFirstQuartileCompletes	Video First Quartile Completions	long
richMediaVideoFullScreens	Video Full-Screen	long
richMediaVideoInteractionRate	Video Interaction Rate	double
richMediaVideoInteractions	Video Interactions	long
richMediaVideoMidpoints	Video Midpoints	long
richMediaVideoMutes	Video Mutes	long
richMediaVideoPauses	Video Pauses	long
richMediaVideoPlays	Video Plays	long
richMediaVideoProgressEvents	Video Progress Events	long
richMediaVideoReplays	Video Replays	long
richMediaVideoSkips	Video Skips	long
richMediaVideoStops	Video Stops	long
richMediaVideoThirdQuartileCompletes	Video Third Quartile Completions	long
richMediaVideoUnmutes	Video Unmutes	long
richMediaVideoViewRate	Video View Rate	double
richMediaVideoViews	Video Views	long
roadblockImpressions	Roadblock Impressions	long
socialEngagementRate	Social Engagement Rate	double
socialFollows	Follows	long
socialLeadSubmissions	Twitter Leads Generated	long
socialLikes	Likes	long
socialOfferAccepts	Twitter Offers Accepted	long
socialOtherInteractions	Other Social Interactions	long
socialReplies	Replies	long
socialSharesExternal	Shares (External)	long
socialSharesInternal	Shares (Internal)	long
socialTotalEngagements	Total Social Engagements	long
totalConversions	Total Conversions	double
totalConversionsRevenue	Total Revenue	double
trackedAds	Tracked Ads	long
twitterAppClicks	Twitter App Install Clicks	long
twitterBuyNowCardClicks	Twitter Buy Now Clicks	long
twitterBuyNowPurchaseSuccessfuls	Twitter Buy Now Purchases	long
twitterUrlClicks	Twitter URL Clicks	long
twitterVideo50PercentInViewFor2Seconds	Twitter: Video 50% In View For 2 Seconds	long
twitterVideo100PercentInViewFor3Seconds	Twitter: Video 100% In View For 3 Seconds	long
vendorBlockedAds	Vendor Blocked Ads	long
verificationBlockedImpressions	Blocked Impressions	long
verificationBlockedPercentage	Blocked Percentage	double
verificationClassifiedImpressions	Classified Impressions	long
verificationMeasurableImpressionsForAudio	Measurable Impressions For Audio	long
verificationMeasurableImpressionsForVideoPlayerLocation	Measurable Impressions For Video Player Location	long
verificationMeasurableImpressionsForVideoPlayerSize	Measurable Impressions For Video Player Size	long
verificationPercentageMeasurableImpressionsForAudio	Percentage Of Measurable Impressions For Audio	double
verificationPercentageMeasurableImpressionsForVideoPlayerLocation	Percentage Of Measurable Impressions For Video Player Location	double
verificationPercentageMeasurableImpressionsForVideoPlayerSize	Percentage Of Measurable Impressions For Video Player Size	double
verificationPublisherProblems	Publisher Problems	long
verificationReportingProblems	Reporting Problems	long
verificationServingProblems	Serving Problems	long
verificationVerifiableImpressions	Verifiable Impressions	long
verificationVideoMutedAtStart	Video Muted At Start	long
verificationVideoPlayerHdSizeImpressions	HD Video Player Size Impressions	long
verificationVideoPlayerLargeSizeImpressions	Large Video Player Size Impressions	long
verificationVideoPlayerLocationAvgPixelsFromLeft	Video Player Location Avg Pixels From Left	long
verificationVideoPlayerLocationAvgPixelsFromTop	Video Player Location Avg Pixels From Top	long
verificationVideoPlayerSizeAvgHeight	Video Player Size Avg Height	long
verificationVideoPlayerSizeAvgWidth	Video Player Size Avg Width	long
verificationVideoPlayerSmallSizeImpressions	Small Video Player Size Impressions	long
verificationVideoProminenceScore	Video Prominence Score	double
verificationWarnings	Warnings	long
videoCompanionClicks	Companion Clicks	long
videoCompanionImpressions	Companion Views	long


================================================
FILE: component_config/report_resources/update_schema.py
================================================
import csv
import json

from tkinter import Tk


def copy_to_clipbard(par: dict):
    res = json.dumps(par)
    r = Tk()
    r.withdraw()
    r.clipboard_clear()
    r.clipboard_append(res)
    r.update()  # now it stays on the clipboard after the window is closed
    r.destroy()


with open('../configRowSchema.json', 'r') as f:
    schema = json.load(f)

report_properties = schema['properties']['report_specification']['properties']

dimensions = [
    'dimensions_standard',
    'dimensions_reach',
    'dimensions_path_to_conversion',
    'dimensions_cross_dimension_reach',
    'dimensions_floodlight',
    'dimensions_path',
    'dimensions_path_attribution'
]

metrics = [
    'metrics_standard',
    'metrics_reach',
    'metrics_path_to_conversion',
    'metrics_cross_dimension_reach',
    'metrics_floodlight',
    'metrics_path',
    'metrics_path_attribution'
]

filters = [
    'filters_standard',
    'filters_reach',
    'filters_path_to_conversion',
    'filters_cross_dimension_reach',
    'filters_floodlight',
    'filters_path',
    'filters_path_attribution'
]


def read_ids_labels(file_name):
    with open(file_name, 'r') as file:
        reader = csv.DictReader(file, fieldnames=['id', 'label', 'type'], dialect=csv.excel_tab)
        ids = []
        labels = []
        counter = 0
        for row in reader:
            ids.append(row['id'])
            labels.append(row['label'])
            counter += 1
            if counter >= 5:
                break
    return ids, labels


def update_item(item: str):
    file_name = f'{item}.csv'
    ids, labels = read_ids_labels(file_name)
    if item.startswith('filter'):
        report_properties[item]['items']['properties']['name']['enum'] = ids
        report_properties[item]['items']['properties']['name']['options']['enum_titles'] = labels
    else:
        report_properties[item]['items']['enum'] = ids
        report_properties[item]['items']['options']['enum_titles'] = labels


for item in dimensions + metrics + filters:
    update_item(item)

copy_to_clipbard(schema)
print('New version in clipbard')



================================================
FILE: component_config/sample-config/config.json
================================================
{
  "storage": {
    "input": {
      "files": [],
      "tables": [
        {
          "source": "in.c-test.test",
          "destination": "test.csv",
          "limit": 50,
          "columns": [],
          "where_values": [],
          "where_operator": "eq"
        }
      ]
    },
    "output": {
      "files": [],
      "tables": []
    }
  },
  "parameters": {
    "#api_token": "demo",
    "period_from": "yesterday",
    "endpoints": [
      "deals",
      "companies"
    ],
    "company_properties": "",
    "deal_properties": "",
    "debug": true
  },
  "image_parameters": {
    "syrup_url": "https://syrup.keboola.com/"
  },
  "authorization": {
    "oauth_api": {
      "id": "OAUTH_API_ID",
      "credentials": {
        "id": "main",
        "authorizedFor": "Myself",
        "creator": {
          "id": "1234",
          "description": "me@keboola.com"
        },
        "created": "2016-01-31 00:13:30",
        "#data": "{\"refresh_token\":\"MCWBkfdK9m5YK*Oqahwm6XN6elMAEwcH5kYcK8Ku!bpiOgSDZN9MQIzunpMsh6LyKH0i!7OcwwwajuxPfvm2PrrWYSs*HerDr2ZSJ39pqHJcvwUNIvHdtcgFFr3Em*yhn3GKBwM2p9UrjtgdAriSDny5YgUYGuI3gYJY1ypD*wBaAOzzeeXZx6CdgjruJ7gboTAngbWk3CzO9rORIwXAAlGUH6ZgBQJL3AwkYVMRFV4BvIvDAMF*0DcGDyrcyYDw9X3vYn*Wy!OqgrenKCGowdJk0C0136SUv4PJI383y76UMim6Q7KGDj7Lf!K2N2FDbxsz2iZKZTBr2vHx8pEC1oBc$\"}",
        "oauthVersion": "2.0",
        "appKey": "000000004C184A49",
        "#appSecret": "vBAYak49pVK1zghHAgDH4tCSCNlT-CiN"
      }
    }
  }
}



================================================
FILE: component_config/sample-config/in/state.json
================================================
{"data_delta": "10222018"}


================================================
FILE: component_config/sample-config/in/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>


================================================
FILE: component_config/sample-config/in/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"



================================================
FILE: component_config/sample-config/in/tables/test.csv.manifest
================================================
{
    "id": "in.c-test.test",
    "uri": "https:\/\/connection.keboola.com\/v2\/storage\/tables\/in.c-test.test",
    "name": "test",
    "primary_key": [],
    "indexed_columns": [],
    "created": "2018-03-02T15:36:50+0100",
    "last_change_date": "2018-03-02T15:36:54+0100",
    "last_import_date": "2018-03-02T15:36:54+0100",
    "rows_count": 0,
    "data_size_bytes": 0,
    "is_alias": false,
    "attributes": [],
    "columns": [
        "Type",
        "Campaign_Name",
        "Status",
        "Start_Date",
        "End_Date",
        "Location",
        "Eventbrite_link"
    ],
    "metadata": [
        {
            "id": "18271581",
            "key": "KBC.createdBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271582",
            "key": "KBC.createdBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271583",
            "key": "KBC.createdBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271584",
            "key": "KBC.lastUpdatedBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271585",
            "key": "KBC.lastUpdatedBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271586",
            "key": "KBC.lastUpdatedBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        }
    ],
    "column_metadata": {
        "Type": [],
        "Campaign_Name": [],
        "Status": [],
        "Start_Date": [],
        "End_Date": [],
        "Location": [],
        "Eventbrite_link": []
    }
}


================================================
FILE: scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -rm -t $COMP_TAG ../

echo Running component...
Write-host "Would you like to use default data folder? (../data)" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes use: " (join-path (Split-Path -Path (Get-Location).Path) "data"); $DATA_PATH = (join-path (Split-Path -Path (Get-Location).Path) "data") } 
       N {Write-Host "No, I'll specify myself"; $DATA_PATH = Read-Host -Prompt 'Input data folder path:'} 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 

Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 





================================================
FILE: scripts/build_n_test.sh
================================================
#!/bin/sh
set -e

flake8 --config=flake8.cfg
python -m unittest discover


================================================
FILE: scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test



================================================
FILE: scripts/update_dev_portal_properties.sh
================================================
#!/usr/bin/env bash

set -e
# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest


# Update properties in Keboola Developer Portal
echo "Updating long description"
value=`cat component_config/component_long_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} longDescription --value="$value"
else
    echo "longDescription is empty!"
    exit 1
fi

echo "Updating config schema"
value=`cat component_config/configSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationSchema --value="$value"
else
    echo "configurationSchema is empty!"
fi

echo "Updating row config schema"
value=`cat component_config/configRowSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationRowSchema --value="$value"
else
    echo "configurationRowSchema is empty!"
fi


echo "Updating config description"

value=`cat component_config/configuration_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationDescription --value="$value"
else
    echo "configurationDescription is empty!"
fi


echo "Updating short description"

value=`cat component_config/component_short_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} shortDescription --value="$value"
else
    echo "shortDescription is empty!"
fi

echo "Updating logger settings"

value=`cat component_config/logger`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} logger --value="$value"
else
    echo "logger type is empty!"
fi

echo "Updating logger configuration"
value=`cat component_config/loggerConfiguration.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} loggerConfiguration --value="$value"
else
    echo "loggerConfiguration is empty!"
fi


================================================
FILE: src/component.py
================================================
"""
Template Component main class.

"""
import csv
# from typing import List, Tuple
import json
import logging
import os
import time
from typing import Dict, List

import dateparser
import requests
from google.auth.exceptions import RefreshError
from keboola.component.base import ComponentBase, sync_action
from keboola.component.exceptions import UserException
from keboola.component.sync_actions import SelectElement
from keboola.csvwriter import ElasticDictWriter

from configuration import Configuration, InputVariant
from configuration import FILE_JSON_LABELS
from google_cm360 import GoogleCM360Client
from google_cm360.report_specification import \
    CsvReportSpecification, MAP_REPORT_TYPE_2_COMPATIBLE_SECTION, MAP_REPORT_TYPE_2_CRITERIA


def _load_attribute_labels_from_json(report_type, attribute):
    all_labels = None
    try:
        path = os.path.join(os.path.dirname(__file__), FILE_JSON_LABELS)
        with open(path, mode='r') as file:
            all_labels = json.load(fp=file)
        return all_labels.get(report_type).get(attribute)
    except Exception:
        return {}


def _translate_dimensions(report_type: str, dims: list):
    labels = _load_attribute_labels_from_json(report_type=report_type, attribute="dimensions")
    return [labels.get(dim_id) if dim_id in labels else dim_id for dim_id in dims]


class Component(ComponentBase):
    """
        Extends base class for general Python components. Initializes the CommonInterface
        and performs configuration validation.

        For easier debugging the data folder is picked up by default from `../data` path,
        relative to working directory.

        If `debug` parameter is present in the `config.json`, the default logger is set to verbose DEBUG mode.
    """

    def __init__(self):
        super().__init__()
        self.cfg: Configuration = None
        self.google_client: GoogleCM360Client

        self.existing_reports_cache: dict = {}
        self.common_report_type: str = None
        self.common_dimensions: list = None
        self.common_metrics: list = None

    def run(self):
        """Main extractor method - it reads current configuration, run report(s)
        and collects reported data into CSV tables.

        Main steps
        - Get metadata
        - Prepare a list reports
        - Run all prepared reports
        - Wait for completion of reports
        - Collect reported data into an output table(s)
        """

        self.init_configuration()

        prev_state = self.get_state_file()
        self.existing_reports_cache = prev_state.get('reports')
        if not self.existing_reports_cache:
            self.existing_reports_cache = {}

        """
            Prepare a list reports
                Create a report definition based on configuration.
                (either from report specification or from existing report template)
                for each profile:
                    Check whether re-usable report exists in current state
                    If a report was found apply a patch if necessary (date changed...)
                    If no report was found create a new one based on report definition
        """
        self._init_google_client()

        if self.cfg.input_variant == InputVariant.METADATA:
            metadata = self.cfg.metadata
            profile_ids = self.cfg.profiles

            if not profile_ids:
                profile_ids = list(self.google_client.list_profiles().keys())

            for endpoint in metadata:
                writer = None

                for profile in profile_ids:

                    logging.info(f'Listing metadata for {endpoint} in profile {profile}')

                    result = self.google_client.list_metadata(profile_id=profile, endpoint_name=endpoint)

                    if first := next(result, None):

                        if not writer:
                            table_def = self.create_out_table_definition(name=f'metadata_{endpoint}.csv',
                                                                         primary_key=["profile_id", "id"])
                            writer = ElasticDictWriter(table_def.full_path, fieldnames=["profile_id", "id"])
                            writer.writeheader()

                        first['profile_id'] = profile
                        writer.writerow(first)

                        for item in result:
                            item['profile_id'] = profile
                            writer.writerow(item)

                if writer:
                    writer.close()
                    self.write_manifest(table_def)

        if self.cfg.input_variant != InputVariant.METADATA:
            if self.cfg.input_variant != InputVariant.REPORT_IDS:
                reports_2_run = self._process_generated_reports()
            else:
                reports_2_run = self._process_existing_reports()

            # Run all reports
            report_files = []
            for item in reports_2_run:
                profile_id = item['profile_id']
                report_id = item['report_id']
                report_file = self.google_client.run_report(profile_id=profile_id, report_id=report_id)
                logging.info(f'Report {report_id} started')
                report_files.append(dict(profile_id=profile_id, report_id=report_id, file_id=report_file['id']))

            self._assign_profile_names(report_files)
            time.sleep(5)

            wait_files = report_files.copy()
            while wait_files:
                logging.info(f'Waiting for {len(wait_files)} running report(s)')
                wait_files = self._wait_process_report_files(wait_files)
                if wait_files:
                    time.sleep(20)

            self.write_state_file(state_dict=dict(reports=self.existing_reports_cache))

            header = self._process_report_files(report_files)
            final_header = self.common_dimensions.copy()
            final_header.insert(0, header[1])
            final_header.insert(0, header[0])
            self._write_common_manifest(dimensions=final_header, metrics=self.common_metrics)

    def _create_date_range(self) -> dict:
        if self.cfg.time_range.period == 'CUSTOM_DATES':
            date_from = dateparser.parse(self.cfg.time_range.date_from)
            date_to = dateparser.parse(self.cfg.time_range.date_to)
            if not date_from or not date_to:
                raise UserException("Error with dates, make sure both start and end date are defined properly")
            day_diff = (date_to - date_from).days
            if day_diff < 0:
                raise UserException("start_date cannot exceed end_date.")
            date_range = {
                'relativeDateRange': None,
                'startDate': f'{date_from.year:04}-{date_from.month:02}-{date_from.day:02}',
                'endDate': f'{date_to.year:04}-{date_to.month:02}-{date_to.day:02}'
            }
        else:
            date_range = {
                'relativeDateRange': self.cfg.time_range.period,
                'startDate': None,
                'endDate': None
            }
        return date_range

    def _get_report_raw_file_path(self, profile_id, report_id) -> str:
        path = f'{self.files_out_path}/{profile_id}_{report_id}.raw'
        return path

    def _get_final_directory(self) -> str:
        path = f'{self.tables_out_path}/{self.cfg.destination.table_name}.csv'
        return path

    def _get_final_file_path(self, profile_id, report_id) -> str:
        path = f'{self._get_final_directory()}/{profile_id}_{report_id}.csv'
        return path

    def _retrieve_table_from_raw(self, profile_id, profile_name, report_id) -> list:
        in_file = self._get_report_raw_file_path(profile_id=profile_id, report_id=report_id)
        out_file = self._get_final_file_path(profile_id=profile_id, report_id=report_id)
        logging.debug(f'Processing raw file {in_file}')
        with open(in_file, 'rt') as src, open(out_file, 'wt') as tgt:
            csv_src = csv.reader(src, delimiter=',')
            csv_tgt = csv.writer(tgt, delimiter=',', lineterminator='\n')
            for row in csv_src:
                if row == ['Report Fields']:
                    break

            header = next(csv_src)
            header.insert(0, 'profileName')
            header.insert(0, 'profileId')

            for row in csv_src:
                if row[0] == 'Grand Total:':
                    break
                row.insert(0, profile_name)
                row.insert(0, profile_id)
                csv_tgt.writerow(row)

        logging.debug(f'Final table file {out_file} was saved')
        return header

    def init_configuration(self):
        self.cfg: Configuration = Configuration.load_from_dict(self.configuration.parameters)

        if not self.cfg.destination.table_name and self.cfg.input_variant != InputVariant.METADATA:
            raise UserException("Destination table name is missing!")

    def _process_report_files(self, report_files: list):
        os.makedirs(self._get_final_directory(), exist_ok=True)
        header = []
        for rf in report_files:
            cur_header = self._retrieve_table_from_raw(rf['profile_id'], rf['profile_name'], rf['report_id'])
            # header_normalizer = DefaultHeaderNormalizer()
            # cur_header = header_normalizer.normalize_header(cur_header)
            if not header:
                header = cur_header
            else:
                if header != cur_header:
                    raise UserException(f'missmatch in headers found: {header} x {cur_header}')

        return header

    def _assign_profile_names(self, report_files: list):
        profiles_2_names = self.google_client.list_profiles()
        for report_file in report_files:
            report_file['profile_name'] = profiles_2_names[report_file['profile_id']] \
                if report_file['profile_id'] in profiles_2_names else report_file['profile_id']
            pass

    def _write_common_manifest(self, dimensions, metrics):
        pks = self.cfg.destination.primary_key if self.cfg.input_variant == 'report_specification' else \
            self.cfg.destination.primary_key_existing
        # if any primary key is defined, make sure also profile_id and profile_name are added
        if pks:
            pks.insert(0, dimensions[1])
            pks.insert(0, dimensions[0])
        result_table = self.create_out_table_definition(f"{self.cfg.destination.table_name}.csv",
                                                        primary_key=pks,
                                                        incremental=self.cfg.destination.incremental_loading,
                                                        columns=dimensions + metrics)
        self.write_manifest(result_table)

    def _wait_process_report_files(self, wait_files):
        report_files = []
        for report_file in wait_files:
            profile_id, report_id, file_id = report_file['profile_id'], report_file['report_id'], \
                report_file['file_id']
            file = self.google_client.report_status(report_id=report_id, file_id=file_id)
            status = file['status']
            # Available statuses: PROCESSING|REPORT_AVAILABLE|FAILED|CANCELLED|QUEUED
            if status == 'REPORT_AVAILABLE':
                file_name = self._get_report_raw_file_path(profile_id, report_id)
                self.google_client.get_report_file(report_id=report_id, file_id=file_id, local_file_name=file_name)
                logging.debug(f'Report file {file_name} in format {file["format"]} was saved')
            elif status == 'FAILED' or status == 'CANCELLED':
                logging.info(f'Report {report_id} failed or canceled')
            else:
                logging.debug(f'Report {file["reportId"]} : {status}')
                report_files.append(report_file)

        return report_files

    def _process_generated_reports(self) -> List[Dict[str, str]]:
        """
        Process generated reports either from template or custom mode.
        Cleans unused profiles from remote.
        Updates state cache.

        Returns: List of profile and report ids to process

        """

        report_definition = self._get_report_definition()
        self.common_report_type = report_definition.report_type
        self.common_dimensions = report_definition.get_dimensions_names()
        self.common_metrics = report_definition.get_metrics_names()

        current_reports = {}
        for profile_id in self.cfg.profiles:
            existing_report_def = self._get_existing_report_for_profile(profile_id)

            if existing_report_def:
                current_report_id = self._update_existing_report(profile_id, existing_report_def,
                                                                 report_definition)
            else:
                logging.info(f"Creating a new report in profile {profile_id}")
                current_report_id = self._create_new_report(profile_id, report_definition)

            # Register a report ID in current state
            current_reports[profile_id] = current_report_id
        """
            We now have current set of reports in current_reports dictionary
            Let's remove any report that will not be re-used in case a profile has been removed from the config.
        """
        for profile_id, report_id in self.existing_reports_cache.items():
            if profile_id not in current_reports or report_id != current_reports[profile_id]:
                self.google_client.delete_report(profile_id=profile_id, report_id=report_id, ignore_error=True)

        return [dict(profile_id=key, report_id=value) for key, value in current_reports.items()]

    def _process_existing_reports(self) -> List[Dict[str, str]]:
        """
        Process reports found in configuration.
        Cleans unused profiles from remote.
        No state handling.
        Only used for existing reports input variant.

        Returns: List of profile and report ids to process

        """
        reports_2_process = []
        errors = []
        for rep_ids in self.cfg.existing_report_ids:
            profile_id, report_id = rep_ids.split(':')
            report_spec = self._get_existing_report(profile_id=profile_id, report_id=report_id)
            if not self.common_report_type:
                self.common_report_type = report_spec.report_type
                self.common_dimensions = report_spec.get_dimensions_names()
                self.common_metrics = report_spec.get_metrics_names()
            else:
                if self.common_report_type != report_spec.report_type:
                    errors.append(f'Missmatch in report type {self.common_report_type} x {report_spec.report_type} '
                                  f'for profile {profile_id} / report {report_id}')

                if self.common_dimensions != report_spec.get_dimensions_names():
                    errors.append(f'Missmatch in report dimensions {self.common_dimensions} x '
                                  f'{report_spec.get_dimensions_names()} '
                                  f'for profile {profile_id} / report {report_id}')

                if self.common_metrics != report_spec.get_metrics_names():
                    errors.append(f'Missmatch in report metrics {self.common_metrics} x '
                                  f'{report_spec.get_metrics_names()} '
                                  f'for profile {profile_id} / report {report_id}')

            if report_spec.report_representation.get('format', 'CSV') != 'CSV':
                errors.append(f'Missmatch in report format {report_spec.report_representation.get("format")} '
                              f'for profile {profile_id} / report {report_id}')

            reports_2_process.append(dict(profile_id=profile_id, report_id=report_id))
        if errors:
            raise UserException('\n'.join(errors))
        return reports_2_process

    def _get_existing_report(self, profile_id: str, report_id: str) -> CsvReportSpecification:
        report_response = self.google_client.get_report(profile_id=profile_id, report_id=report_id)
        return CsvReportSpecification(report_response)

    def _update_existing_report(self, profile_id: str, existing_report: CsvReportSpecification,
                                report_definition: CsvReportSpecification) -> str:
        """
        Updates existing report definition based on the new definition (user or template)
        Args:
            profile_id:
            existing_report:
            new_report:

        Returns: ID of existing report

        """
        logging.info(f"Updating an existing report in profile {profile_id}")
        # Report is available - check whether it needs a patch
        logging.debug(f'Report will be re-used {existing_report.report_id} for {profile_id}')

        updated_report_body = existing_report.prepare_update_body(report_definition)

        logging.debug(f'Report will be updated {updated_report_body}')

        self.google_client.update_report(report=updated_report_body,
                                         profile_id=profile_id,
                                         report_id=existing_report.report_id)
        return existing_report.report_id

    def _create_new_report(self, profile_id: str, report_definition: CsvReportSpecification) -> str:
        """
        Creates new report based on the specification. Updates state.
        Args:
            profile_id:
            report_definition:

        Returns: Id of the newly created report.

        """
        new_report_body = report_definition.prepare_insert_body()

        report = self.google_client.create_report(new_report_body, profile_id=profile_id)
        self.existing_reports_cache[profile_id] = report['id']
        logging.debug(f'New report {report["id"]} created for {profile_id}')
        return report['id']

    def _get_existing_report_for_profile(self, profile_id: str) -> CsvReportSpecification:
        """
        Returns the existing report assinged to this profile and configuration if exists. None otherwise
        Args:
            profile_id: profile_id to look in state

        Returns: CsvReportSpecification

        """
        existing_report_id = self.existing_reports_cache.get(profile_id)
        if existing_report_id:
            report_response = self.google_client.get_report(profile_id=profile_id, report_id=existing_report_id,
                                                            ignore_error=True)
            if not report_response:
                # Report is no longer available - remove it from the state and cancel the candidate ID
                logging.warning(f"The report ID {existing_report_id} in state was deleted manually from the source!")
                self.existing_reports_cache.pop(profile_id)
                return None
            return CsvReportSpecification(report_response)
        else:
            return None

    def _get_report_definition(self) -> CsvReportSpecification:
        """Method creates a report definition based either on a report specification found in parameters
        or on existing report, which acts as a template. The method is not used for existing reports variant.

        In both cases the date range specification is based on parameters settings.

        Returns: Report definition in a form of CsvReportSpecification class.

        """
        if self.cfg.input_variant == 'report_specification':
            logging.debug('Input variant: report_specification')
            specification = self.cfg.report_specification

            dimensions = [{'name': name} for name in
                          (specification.dimensions if specification.dimensions else [])]
            metrics = specification.metrics if specification.metrics else []

            report_def = CsvReportSpecification.custom_from_specification(report_name=self._generate_report_name(),
                                                                          report_type=specification.report_type,
                                                                          date_range=self._create_date_range(),
                                                                          dimensions=dimensions,
                                                                          metrics=metrics)
        elif self.cfg.input_variant == "report_template_id":
            logging.debug('Input variant: report_template_id')
            src_profile_id, src_report_id = self.cfg.report_template_id.split(':')
            report_template = self.google_client.get_report(profile_id=src_profile_id, report_id=src_report_id)
            report_def = CsvReportSpecification(report_template)
            report_def.modify_date_range(date_range=self._create_date_range())
        else:
            raise UserException(f'Unsupported mode: {self.cfg.input_variant}')
        return report_def

    def _init_google_client(self):
        client = GoogleCM360Client(
            self.configuration.oauth_credentials.appKey,
            self.configuration.oauth_credentials.appSecret,
            self.configuration.oauth_credentials.data,
            self.configuration.oauth_credentials.data["scope"].split(" "),
        )
        self.google_client = client

    @staticmethod
    def download_file(url: str, result_file_path: str):
        # avoid loading all into memory
        res = requests.get(url, stream=True, timeout=180)
        res.raise_for_status()

        with open(result_file_path, 'wb') as out:
            for chunk in res.iter_content(chunk_size=8192):
                out.write(chunk)

    def _generate_report_name(self):
        return 'keboola_generated_' + self.environment_variables.project_id + '_' + \
            self.environment_variables.config_id + '_' + \
            self.environment_variables.config_row_id

    @sync_action('load_profiles')
    def load_profiles(self):
        self._init_google_client()
        ids_2_names = self.google_client.list_profiles()
        prof_w_labels = [SelectElement(value=pid, label=f'{pid} ({name})') for pid, name in ids_2_names.items()]
        return prof_w_labels

    def _load_attribute_values(self, attribute: str):

        report_type = self.configuration.parameters.get('report_specification').get('report_type')
        if not report_type or report_type not in MAP_REPORT_TYPE_2_COMPATIBLE_SECTION:
            raise ValueError('No or invalid report_type')

        dims = _load_attribute_labels_from_json(report_type, attribute)
        self._init_google_client()
        ids = self.google_client.list_compatible_fields(report_type=report_type,
                                                        compat_fields=MAP_REPORT_TYPE_2_COMPATIBLE_SECTION[report_type],
                                                        attribute=attribute)

        # assign labels to attribute ids an generate a response to action
        result = []
        for id in ids:
            label = dims.get(id)
            if not label:
                label = id
            result.append(SelectElement(value=id, label=label))
        return result

    @sync_action('load_dimensions')
    def load_dimensions_standard(self):
        return self._load_attribute_values('dimensions')

    @sync_action('load_metrics')
    def load_metrics(self):
        return self._load_attribute_values('metrics')

    @sync_action('load_reports')
    def load_reports(self):
        profile_ids = self.configuration.parameters.get('profiles')
        if not profile_ids or len(profile_ids) == 0:
            raise ValueError('No profiles were specified')

        def _check_format_existing_report(report) -> bool:
            """
            if is choice existing report we return reports only in CSV format
            or None (with None format CM360 API returns CSV)
            """
            input_variant = self.configuration.parameters.get('input_variant')
            if input_variant == 'existing_report_ids':
                return report.get('format', 'CSV') == 'CSV'
            return True

        self._init_google_client()
        profiles_2_names = self.google_client.list_profiles()
        reports_w_labels = []
        for profile_id in profile_ids:
            reports = self.google_client.list_reports(profile_id=profile_id)

            reports_w_labels.extend([SelectElement(value=f'{profile_id}:{report["id"]}',
                                                   label=f'[{profiles_2_names[profile_id]}] '
                                                         f'{report["name"]} ({profile_id}:{report["id"]})')
                                     for report in reports if _check_format_existing_report(report)])
        return reports_w_labels

    @sync_action('list_report_dimensions')
    def list_report_dimensions(self):
        input_variant = self.configuration.parameters.get('input_variant')
        try:
            profile_id = None
            report_id = None
            if input_variant == 'report_template_id':
                value = self.configuration.parameters.get('report_template_id')
            else:
                value = self.configuration.parameters.get('existing_report_ids')[0]
            profile_id, report_id = value.split(':')
        except Exception:
            raise UserException(f'Report id / profile id not specified: {report_id} / {profile_id}')

        try:
            self._init_google_client()
            report = self.google_client.get_report(profile_id=profile_id, report_id=report_id)
            report_type = report.get('type')
            if not report_type or report_type not in MAP_REPORT_TYPE_2_CRITERIA:
                raise ValueError('No or invalid report_type')

            dimensions = report.get(MAP_REPORT_TYPE_2_CRITERIA[report_type]).get('dimensions')
            dimensions = [item['name'] for item in dimensions]
            map_2_labels = _load_attribute_labels_from_json(report_type=report_type, attribute="dimensions")
            dims_w_labels = [SelectElement(value=id, label=map_2_labels[id] if id in map_2_labels else id)
                             for id in dimensions]
            return dims_w_labels
        except Exception:
            raise UserException(f'Cannot load Report id / profile: {report_id} / {profile_id}')


"""
        Main entrypoint
"""
if __name__ == "__main__":
    try:
        comp = Component()
        comp.execute_action()
    except UserException as exc:
        logging.exception(exc)
        exit(1)
    except RefreshError as exc:
        logging.error("The OAuth token has expired. Please reauthorize the application.", extra={"exception": exc})
        exit(1)
    except Exception as exc:
        logging.exception(exc)
        exit(2)



================================================
FILE: src/configuration.py
================================================
import dataclasses
import json
from dataclasses import dataclass, field
from enum import Enum

import dataconf
from keboola.component.exceptions import UserException
from pyhocon.config_tree import ConfigTree

FILE_JSON_LABELS = 'labels.json'


class ConfigurationException(UserException):
    pass


@dataclass
class FilterPair:
    name: str
    value: str


@dataclass
class Destination:
    table_name: str = ""
    incremental_loading: bool = True
    primary_key: list[str] = None
    primary_key_existing: list[str] = None


@dataclass
class TimeRange:
    period: str = ""
    date_from: str = ""
    date_to: str = ""


@dataclass
class ReportSettings:
    report_type: str = ""
    dimensions: list[str] = None
    metrics: list[str] = None


class ConfigurationBase:

    @staticmethod
    def _convert_private_value(value: str):
        return value.replace('"#', '"pswd_')

    @staticmethod
    def _convert_private_value_inv(value: str):
        if value and value.startswith('pswd_'):
            return value.replace('pswd_', '#', 1)
        else:
            return value

    @classmethod
    def load_from_dict(cls, configuration: dict):
        """
        Initialize the configuration dataclass object from dictionary.
        Args:
            configuration: Dictionary loaded from json configuration.

        Returns:

        """
        json_conf = json.dumps(configuration)
        json_conf = ConfigurationBase._convert_private_value(json_conf)
        return dataconf.loads(json_conf, cls, ignore_unexpected=True)

    @classmethod
    def get_dataclass_required_parameters(cls) -> list[str]:
        """
        Return list of required parameters based on the dataclass definition (no default value)
        Returns: List[str]

        """
        return [cls._convert_private_value_inv(f.name) for f in dataclasses.fields(cls)
                if f.default == dataclasses.MISSING
                and f.default_factory == dataclasses.MISSING]


class InputVariant(str, Enum):
    REPORT_SPEC = "report_specification"
    REPORT_TEMPLATE = "report_template_id"
    REPORT_IDS = "existing_report_ids"
    METADATA = "metadata"


@dataclass
class Configuration(ConfigurationBase):
    profiles: list[str]
    input_variant: InputVariant
    destination: Destination = field(default_factory=lambda: ConfigTree({}))
    metadata: list[str] = field(default_factory=lambda: "")
    time_range: TimeRange = field(default_factory=lambda: ConfigTree({}))
    report_specification: ReportSettings = field(default_factory=lambda: ConfigTree({}))
    existing_report_ids: list[str] = field(default_factory=lambda: "")
    report_template_id: str = ""

    debug: bool = False



================================================
FILE: src/docscraper.py
================================================
import requests
from bs4 import BeautifulSoup as bs
import logging
import json
import os
from configuration import FILE_JSON_LABELS

URL = "https://developers.google.com/doubleclick-advertisers/v4/dimensions"


logger = logging.getLogger(name=__name__)


def map2id(report_type: str, attribute):
    return report_type.lower().replace('_', '-')+'-'+attribute


def scrape_props_from_doc(report_type: str, attributes: list([str])):
    results = []
    try:
        logger.info(f'Reading from: {URL}')
        page = requests.get(URL)
        soup = bs(page.content, 'html.parser')
        for attribute in attributes:
            h2_id = map2id(report_type, attribute)
            logger.info(f'search for h2 of class "{h2_id}"')
            result = {}
            results.append(result)
            try:
                h2 = soup.find('h2', id=h2_id)
                if not h2:
                    continue
                table = h2.findNext('table')
                if not table:
                    continue
                logger.info('  table found...')
                rows = table.findAll('tr')
                for row in rows:
                    cols = row.findAll("td")
                    if not cols or len(cols) < 2:
                        continue
                    result[cols[0].text] = cols[1].text
                logger.info(f'    items found: {len(result)}')
            except Exception:  # noqa: F841
                pass
        return [result for result in results]
    except Exception:
        return [{} for it in attributes]  # noqa: F841


if __name__ == '__main__':
    logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.INFO)
    all_mapping = {}

    for report_type in ['STANDARD', 'REACH', 'FLOODLIGHT', 'PATH', 'PATH_ATTRIBUTION']:
        dims, metrics = scrape_props_from_doc(report_type, ['dimensions', 'metrics'])
        all_mapping[report_type] = {'dimensions': dims, 'metrics': metrics}

    logger.info(f'Writing file {FILE_JSON_LABELS}')
    with open(FILE_JSON_LABELS, mode='w') as file:
        json.dump(all_mapping, fp=file, indent=2)

    logger.info(f'File written: {os.path.realpath(FILE_JSON_LABELS)}')



================================================
FILE: src/labels.json
================================================
{
  "STANDARD": {
    "dimensions": {
      "activeViewCustomMetricId": "Active View: Custom Metric ID",
      "activeViewCustomMetricName": "Active View: Custom Metric Name",
      "activity": "Activity",
      "activityGroup": "Activity Group",
      "activityGroupId": "Activity Group ID",
      "activityId": "Activity ID",
      "ad": "Ad",
      "adId": "Ad ID",
      "adStatus": "Ad Status",
      "adType": "Ad Type",
      "advertiser": "Advertiser",
      "advertiserGroup": "Advertiser Group",
      "advertiserId": "Advertiser ID",
      "app": "App",
      "appId": "App ID",
      "asset": "Asset",
      "assetCategory": "Asset Category",
      "assetId": "Asset ID",
      "assetOrientation": "Asset Orientation",
      "attributedEventConnectionType": "Attributed Event Connection Type",
      "attributedEventEnvironment": "Attributed Event Environment",
      "audienceTargeted": "Audience Targeted",
      "browserPlatform": "Browser/Platform",
      "campaign": "Campaign",
      "campaignEndDate": "Campaign End Date",
      "campaignExternalId": "Campaign External ID",
      "campaignId": "Campaign ID",
      "campaignStartDate": "Campaign Start Date",
      "city": "City",
      "clickThroughUrl": "Click-through URL",
      "companionCreative": "Companion Creative",
      "companionCreativeId": "Companion Creative ID",
      "companionCreativeSize": "Companion Creative Pixel Size",
      "connectionType": "Connection Type",
      "contentCategory": "Content Category",
      "country": "Country",
      "creative": "Creative",
      "creativeEndDate": "Creative End Date",
      "creativeField1": "Creative Field 1",
      "creativeField2": "Creative Field 2",
      "creativeField3": "Creative Field 3",
      "creativeField4": "Creative Field 4",
      "creativeField5": "Creative Field 5",
      "creativeField6": "Creative Field 6",
      "creativeField7": "Creative Field 7",
      "creativeField8": "Creative Field 8",
      "creativeField9": "Creative Field 9",
      "creativeField10": "Creative Field 10",
      "creativeField11": "Creative Field 11",
      "creativeField12": "Creative Field 12",
      "creativeGroup1": "Creative Groups 1",
      "creativeGroup2": "Creative Groups 2",
      "creativeId": "Creative ID",
      "creativeSize": "Creative Pixel Size",
      "creativeStartDate": "Creative Start Date",
      "creativeType": "Creative Type",
      "creativeVersion": "Creative Version",
      "dataSource": "Data Source",
      "date": "Date",
      "digitalContentLabel": "Digital Content Label",
      "dmaRegion": "Designated Market Area (DMA)",
      "domain": "Domain",
      "dv360Advertiser": "DV360 Advertiser",
      "dv360AdvertiserId": "DV360 Advertiser ID",
      "dv360Campaign": "DV360 Campaign",
      "dv360CampaignId": "DV360 Campaign ID",
      "dv360Creative": "DV360 Creative",
      "dv360CreativeId": "DV360 Creative ID",
      "dv360InsertionOrder": "DV360 Insertion Order",
      "dv360InsertionOrderId": "DV360 Insertion Order ID",
      "dv360LineItem": "DV360 Line Item",
      "dv360LineItemId": "DV360 Line Item ID",
      "dv360Partner": "DV360 Partner",
      "dv360PartnerId": "DV360 Partner ID",
      "dv360Site": "DV360 Site",
      "dv360SiteId": "DV360 Site ID",
      "dynamicElement1Field1Value": "Feed 1 - Reporting dimension 1 value",
      "dynamicElement1Field2Value": "Feed 1 - Reporting dimension 2 value",
      "dynamicElement1Field3Value": "Feed 1 - Reporting dimension 3 value",
      "dynamicElement1Field4Value": "Feed 1 - Reporting dimension 4 value",
      "dynamicElement1Field5Value": "Feed 1 - Reporting dimension 5 value",
      "dynamicElement1Field6Value": "Feed 1 - Reporting dimension 6 value",
      "dynamicElement2Field1Value": "Feed 2 - Reporting dimension 1 value",
      "dynamicElement2Field2Value": "Feed 2 - Reporting dimension 2 value",
      "dynamicElement2Field3Value": "Feed 2 - Reporting dimension 3 value",
      "dynamicElement2Field4Value": "Feed 2 - Reporting dimension 4 value",
      "dynamicElement2Field5Value": "Feed 2 - Reporting dimension 5 value",
      "dynamicElement2Field6Value": "Feed 2 - Reporting dimension 6 value",
      "dynamicElement3Field1Value": "Feed 3 - Reporting dimension 1 value",
      "dynamicElement3Field2Value": "Feed 3 - Reporting dimension 2 value",
      "dynamicElement3Field3Value": "Feed 3 - Reporting dimension 3 value",
      "dynamicElement3Field4Value": "Feed 3 - Reporting dimension 4 value",
      "dynamicElement3Field5Value": "Feed 3 - Reporting dimension 5 value",
      "dynamicElement3Field6Value": "Feed 3 - Reporting dimension 6 value",
      "dynamicElement4Field1Value": "Feed 4 - Reporting dimension 1 value",
      "dynamicElement4Field2Value": "Feed 4 - Reporting dimension 2 value",
      "dynamicElement4Field3Value": "Feed 4 - Reporting dimension 3 value",
      "dynamicElement4Field4Value": "Feed 4 - Reporting dimension 4 value",
      "dynamicElement4Field5Value": "Feed 4 - Reporting dimension 5 value",
      "dynamicElement4Field6Value": "Feed 4 - Reporting dimension 6 value",
      "dynamicElement5Field1Value": "Feed 5 - Reporting dimension 1 value",
      "dynamicElement5Field2Value": "Feed 5 - Reporting dimension 2 value",
      "dynamicElement5Field3Value": "Feed 5 - Reporting dimension 3 value",
      "dynamicElement5Field4Value": "Feed 5 - Reporting dimension 4 value",
      "dynamicElement5Field5Value": "Feed 5 - Reporting dimension 5 value",
      "dynamicElement5Field6Value": "Feed 5 - Reporting dimension 6 value",
      "dynamicElement6Field1Value": "Feed 6 - Reporting dimension 1 value",
      "dynamicElement6Field2Value": "Feed 6 - Reporting dimension 2 value",
      "dynamicElement6Field3Value": "Feed 6 - Reporting dimension 3 value",
      "dynamicElement6Field4Value": "Feed 6 - Reporting dimension 4 value",
      "dynamicElement6Field5Value": "Feed 6 - Reporting dimension 5 value",
      "dynamicElement6Field6Value": "Feed 6 - Reporting dimension 6 value",
      "dynamicElement7Field1Value": "Feed 7 - Reporting dimension 1 value",
      "dynamicElement7Field2Value": "Feed 7 - Reporting dimension 2 value",
      "dynamicElement7Field3Value": "Feed 7 - Reporting dimension 3 value",
      "dynamicElement7Field4Value": "Feed 7 - Reporting dimension 4 value",
      "dynamicElement7Field5Value": "Feed 7 - Reporting dimension 5 value",
      "dynamicElement7Field6Value": "Feed 7 - Reporting dimension 6 value",
      "dynamicElement8Field1Value": "Feed 8 - Reporting dimension 1 value",
      "dynamicElement8Field2Value": "Feed 8 - Reporting dimension 2 value",
      "dynamicElement8Field3Value": "Feed 8 - Reporting dimension 3 value",
      "dynamicElement8Field4Value": "Feed 8 - Reporting dimension 4 value",
      "dynamicElement8Field5Value": "Feed 8 - Reporting dimension 5 value",
      "dynamicElement8Field6Value": "Feed 8 - Reporting dimension 6 value",
      "dynamicElement9Field1Value": "Feed 9 - Reporting dimension 1 value",
      "dynamicElement9Field2Value": "Feed 9 - Reporting dimension 2 value",
      "dynamicElement9Field3Value": "Feed 9 - Reporting dimension 3 value",
      "dynamicElement9Field4Value": "Feed 9 - Reporting dimension 4 value",
      "dynamicElement9Field5Value": "Feed 9 - Reporting dimension 5 value",
      "dynamicElement9Field6Value": "Feed 9 - Reporting dimension 6 value",
      "dynamicElement10Field1Value": "Feed 10 - Reporting dimension 1 value",
      "dynamicElement10Field2Value": "Feed 10 - Reporting dimension 2 value",
      "dynamicElement10Field3Value": "Feed 10 - Reporting dimension 3 value",
      "dynamicElement10Field4Value": "Feed 10 - Reporting dimension 4 value",
      "dynamicElement10Field5Value": "Feed 10 - Reporting dimension 5 value",
      "dynamicElement10Field6Value": "Feed 10 - Reporting dimension 6 value",
      "dynamicElement11Field1Value": "Feed 11 - Reporting dimension 1 value",
      "dynamicElement11Field2Value": "Feed 11 - Reporting dimension 2 value",
      "dynamicElement11Field3Value": "Feed 11 - Reporting dimension 3 value",
      "dynamicElement11Field4Value": "Feed 11 - Reporting dimension 4 value",
      "dynamicElement11Field5Value": "Feed 11 - Reporting dimension 5 value",
      "dynamicElement11Field6Value": "Feed 11 - Reporting dimension 6 value",
      "dynamicElement12Field1Value": "Feed 12 - Reporting dimension 1 value",
      "dynamicElement12Field2Value": "Feed 12 - Reporting dimension 2 value",
      "dynamicElement12Field3Value": "Feed 12 - Reporting dimension 3 value",
      "dynamicElement12Field4Value": "Feed 12 - Reporting dimension 4 value",
      "dynamicElement12Field6Value": "Feed 12 - Reporting dimension 6 value",
      "dynamicElement13Field1Value": "Feed 13 - Reporting dimension 1 value",
      "dynamicElement13Field2Value": "Feed 13 - Reporting dimension 2 value",
      "dynamicElement13Field4Value": "Feed 13 - Reporting dimension 4 value",
      "dynamicElement13Field5Value": "Feed 13 - Reporting dimension 5 value",
      "dynamicElement13Field6Value": "Feed 13 - Reporting dimension 6 value",
      "dynamicElement14Field1Value": "Feed 14 - Reporting dimension 1 value",
      "dynamicElement14Field2Value": "Feed 14 - Reporting dimension 2 value",
      "dynamicElement14Field3Value": "Feed 14 - Reporting dimension 3 value",
      "dynamicElement14Field4Value": "Feed 14 - Reporting dimension 4 value",
      "dynamicElement14Field5Value": "Feed 14 - Reporting dimension 5 value",
      "dynamicElement14Field6Value": "Feed 14 - Reporting dimension 6 value",
      "dynamicElement15Field1Value": "Feed 15 - Reporting dimension 1 value",
      "dynamicElement15Field2Value": "Feed 15 - Reporting dimension 2 value",
      "dynamicElement15Field3Value": "Feed 15 - Reporting dimension 3 value",
      "dynamicElement15Field4Value": "Feed 15 - Reporting dimension 4 value",
      "dynamicElement15Field5Value": "Feed 15 - Reporting dimension 5 value",
      "dynamicElement15Field6Value": "Feed 15 - Reporting dimension 6 value",
      "dynamicElement16Field1Value": "Feed 16 - Reporting dimension 1 value",
      "dynamicElement16Field2Value": "Feed 16 - Reporting dimension 2 value",
      "dynamicElement16Field3Value": "Feed 16 - Reporting dimension 3 value",
      "dynamicElement16Field4Value": "Feed 16 - Reporting dimension 4 value",
      "dynamicElement16Field5Value": "Feed 16 - Reporting dimension 5 value",
      "dynamicElement16Field6Value": "Feed 16 - Reporting dimension 6 value",
      "dynamicElement17Field1Value": "Feed 17 - Reporting dimension 1 value",
      "dynamicElement17Field2Value": "Feed 17 - Reporting dimension 2 value",
      "dynamicElement17Field3Value": "Feed 17 - Reporting dimension 3 value",
      "dynamicElement17Field4Value": "Feed 17 - Reporting dimension 4 value",
      "dynamicElement17Field5Value": "Feed 17 - Reporting dimension 5 value",
      "dynamicElement17Field6Value": "Feed 17 - Reporting dimension 6 value",
      "dynamicElement18Field1Value": "Feed 18 - Reporting dimension 1 value",
      "dynamicElement18Field2Value": "Feed 18 - Reporting dimension 2 value",
      "dynamicElement18Field3Value": "Feed 18 - Reporting dimension 3 value",
      "dynamicElement18Field4Value": "Feed 18 - Reporting dimension 4 value",
      "dynamicElement18Field5Value": "Feed 18 - Reporting dimension 5 value",
      "dynamicElement18Field6Value": "Feed 18 - Reporting dimension 6 value",
      "dynamicElement19Field1Value": "Feed 19 - Reporting dimension 1 value",
      "dynamicElement19Field2Value": "Feed 19 - Reporting dimension 2 value",
      "dynamicElement19Field3Value": "Feed 19 - Reporting dimension 3 value",
      "dynamicElement19Field4Value": "Feed 19 - Reporting dimension 4 value",
      "dynamicElement19Field5Value": "Feed 19 - Reporting dimension 5 value",
      "dynamicElement19Field6Value": "Feed 19 - Reporting dimension 6 value",
      "dynamicElement20Field1Value": "Feed 20 - Reporting dimension 1 value",
      "dynamicElement20Field2Value": "Feed 20 - Reporting dimension 2 value",
      "dynamicElement20Field3Value": "Feed 20 - Reporting dimension 3 value",
      "dynamicElement20Field4Value": "Feed 20 - Reporting dimension 4 value",
      "dynamicElement20Field5Value": "Feed 20 - Reporting dimension 5 value",
      "dynamicElement20Field6Value": "Feed 20 - Reporting dimension 6 value",
      "dynamicProfile": "Dynamic Profile",
      "dynamicProfileId": "Dynamic Profile Id",
      "environment": "Environment",
      "eventPlatformType": "Attributed Event Platform Type",
      "exitUrl": "Exit URL",
      "feed1": "Dynamic Element 1",
      "feed1ReportingLabel": "Feed 1 - Reporting label",
      "feed1UniqueId": "Feed 1 - Unique ID",
      "feed2": "Dynamic Element 2",
      "feed2ReportingLabel": "Feed 2 - Reporting label",
      "feed2UniqueId": "Feed 2 - Unique ID",
      "feed3": "Dynamic Element 3",
      "feed3ReportingLabel": "Feed 3 - Reporting label",
      "feed3UniqueId": "Feed 3 - Unique ID",
      "feed4": "Dynamic Element 4",
      "feed4ReportingLabel": "Feed 4 - Reporting label",
      "feed4UniqueId": "Feed 4 - Unique ID",
      "feed5": "Dynamic Element 5",
      "feed5ReportingLabel": "Feed 5 - Reporting label",
      "feed5UniqueId": "Feed 5 - Unique ID",
      "feed6": "Dynamic Element 6",
      "feed6ReportingLabel": "Feed 6 - Reporting label",
      "feed6UniqueId": "Feed 6 - Unique ID",
      "feed7": "Dynamic Element 7",
      "feed7ReportingLabel": "Feed 7 - Reporting label",
      "feed7UniqueId": "Feed 7 - Unique ID",
      "feed8": "Dynamic Element 8",
      "feed8ReportingLabel": "Feed 8 - Reporting label",
      "feed8UniqueId": "Feed 8 - Unique ID",
      "feed9": "Dynamic Element 9",
      "feed9ReportingLabel": "Feed 9 - Reporting label",
      "feed9UniqueId": "Feed 9 - Unique ID",
      "feed10": "Dynamic Element 10",
      "feed10ReportingLabel": "Feed 10 - Reporting label",
      "feed10UniqueId": "Feed 10 - Unique ID",
      "feed11": "Dynamic Element 11",
      "feed11ReportingLabel": "Feed 11 - Reporting label",
      "feed11UniqueId": "Feed 11 - Unique ID",
      "feed12": "Dynamic Element 12",
      "feed12ReportingLabel": "Feed 12 - Reporting label",
      "feed12UniqueId": "Feed 12 - Unique ID",
      "feed13": "Dynamic Element 13",
      "feed13ReportingLabel": "Feed 13 - Reporting label",
      "feed13UniqueId": "Feed 13 - Unique ID",
      "feed14": "Dynamic Element 14",
      "feed14ReportingLabel": "Feed 14 - Reporting label",
      "feed14UniqueId": "Feed 14 - Unique ID",
      "feed15": "Dynamic Element 15",
      "feed15ReportingLabel": "Feed 15 - Reporting label",
      "feed15UniqueId": "Feed 15 - Unique ID",
      "feed16": "Dynamic Element 16",
      "feed16ReportingLabel": "Feed 16 - Reporting label",
      "feed16UniqueId": "Feed 16 - Unique ID",
      "feed17": "Dynamic Element 17",
      "feed17ReportingLabel": "Feed 17 - Reporting label",
      "feed17UniqueId": "Feed 17 - Unique ID",
      "feed18": "Dynamic Element 18",
      "feed18ReportingLabel": "Feed 18 - Reporting label",
      "feed18UniqueId": "Feed 18 - Unique ID",
      "feed19": "Dynamic Element 19",
      "feed19ReportingLabel": "Feed 19 - Reporting label",
      "feed19UniqueId": "Feed 19 - Unique ID",
      "feed20": "Dynamic Element 20",
      "feed20ReportingLabel": "Feed 20 - Reporting label",
      "feed20UniqueId": "Feed 20 - Unique ID",
      "flightBookedCost": "Flight Booked Cost",
      "flightBookedRate": "Flight Booked Rate",
      "flightBookedUnits": "Flight Booked Units",
      "flightEndDate": "Flight End Date",
      "flightStartDate": "Flight Start Date",
      "floodlightConfigId": "Floodlight Configuration",
      "floodlightVariableDimension1": "Custom Floodlight Variable 1",
      "floodlightVariableDimension2": "Custom Floodlight Variable 2",
      "floodlightVariableDimension3": "Custom Floodlight Variable 3",
      "floodlightVariableDimension4": "Custom Floodlight Variable 4",
      "floodlightVariableDimension5": "Custom Floodlight Variable 5",
      "floodlightVariableDimension6": "Custom Floodlight Variable 6",
      "floodlightVariableDimension7": "Custom Floodlight Variable 7",
      "floodlightVariableDimension8": "Custom Floodlight Variable 8",
      "floodlightVariableDimension9": "Custom Floodlight Variable 9",
      "floodlightVariableDimension10": "Custom Floodlight Variable 10",
      "floodlightVariableDimension11": "Custom Floodlight Variable 11",
      "floodlightVariableDimension12": "Custom Floodlight Variable 12",
      "floodlightVariableDimension13": "Custom Floodlight Variable 13",
      "floodlightVariableDimension14": "Custom Floodlight Variable 14",
      "floodlightVariableDimension15": "Custom Floodlight Variable 15",
      "floodlightVariableDimension16": "Custom Floodlight Variable 16",
      "floodlightVariableDimension17": "Custom Floodlight Variable 17",
      "floodlightVariableDimension18": "Custom Floodlight Variable 18",
      "floodlightVariableDimension19": "Custom Floodlight Variable 19",
      "floodlightVariableDimension20": "Custom Floodlight Variable 20",
      "floodlightVariableDimension21": "Custom Floodlight Variable 21",
      "floodlightVariableDimension22": "Custom Floodlight Variable 22",
      "floodlightVariableDimension23": "Custom Floodlight Variable 23",
      "floodlightVariableDimension24": "Custom Floodlight Variable 24",
      "floodlightVariableDimension25": "Custom Floodlight Variable 25",
      "floodlightVariableDimension26": "Custom Floodlight Variable 26",
      "floodlightVariableDimension27": "Custom Floodlight Variable 27",
      "floodlightVariableDimension28": "Custom Floodlight Variable 28",
      "floodlightVariableDimension29": "Custom Floodlight Variable 29",
      "floodlightVariableDimension30": "Custom Floodlight Variable 30",
      "floodlightVariableDimension31": "Custom Floodlight Variable 31",
      "floodlightVariableDimension32": "Custom Floodlight Variable 32",
      "floodlightVariableDimension33": "Custom Floodlight Variable 33",
      "floodlightVariableDimension34": "Custom Floodlight Variable 34",
      "floodlightVariableDimension35": "Custom Floodlight Variable 35",
      "floodlightVariableDimension36": "Custom Floodlight Variable 36",
      "floodlightVariableDimension37": "Custom Floodlight Variable 37",
      "floodlightVariableDimension38": "Custom Floodlight Variable 38",
      "floodlightVariableDimension39": "Custom Floodlight Variable 39",
      "floodlightVariableDimension40": "Custom Floodlight Variable 40",
      "floodlightVariableDimension41": "Custom Floodlight Variable 41",
      "floodlightVariableDimension42": "Custom Floodlight Variable 42",
      "floodlightVariableDimension43": "Custom Floodlight Variable 43",
      "floodlightVariableDimension44": "Custom Floodlight Variable 44",
      "floodlightVariableDimension45": "Custom Floodlight Variable 45",
      "floodlightVariableDimension46": "Custom Floodlight Variable 46",
      "floodlightVariableDimension47": "Custom Floodlight Variable 47",
      "floodlightVariableDimension48": "Custom Floodlight Variable 48",
      "floodlightVariableDimension49": "Custom Floodlight Variable 49",
      "floodlightVariableDimension50": "Custom Floodlight Variable 50",
      "floodlightVariableDimension51": "Custom Floodlight Variable 51",
      "floodlightVariableDimension52": "Custom Floodlight Variable 52",
      "floodlightVariableDimension53": "Custom Floodlight Variable 53",
      "floodlightVariableDimension54": "Custom Floodlight Variable 54",
      "floodlightVariableDimension55": "Custom Floodlight Variable 55",
      "floodlightVariableDimension56": "Custom Floodlight Variable 56",
      "floodlightVariableDimension57": "Custom Floodlight Variable 57",
      "floodlightVariableDimension58": "Custom Floodlight Variable 58",
      "floodlightVariableDimension59": "Custom Floodlight Variable 59",
      "floodlightVariableDimension60": "Custom Floodlight Variable 60",
      "floodlightVariableDimension61": "Custom Floodlight Variable 61",
      "floodlightVariableDimension62": "Custom Floodlight Variable 62",
      "floodlightVariableDimension63": "Custom Floodlight Variable 63",
      "floodlightVariableDimension64": "Custom Floodlight Variable 64",
      "floodlightVariableDimension65": "Custom Floodlight Variable 65",
      "floodlightVariableDimension66": "Custom Floodlight Variable 66",
      "floodlightVariableDimension67": "Custom Floodlight Variable 67",
      "floodlightVariableDimension68": "Custom Floodlight Variable 68",
      "floodlightVariableDimension69": "Custom Floodlight Variable 69",
      "floodlightVariableDimension70": "Custom Floodlight Variable 70",
      "floodlightVariableDimension71": "Custom Floodlight Variable 71",
      "floodlightVariableDimension72": "Custom Floodlight Variable 72",
      "floodlightVariableDimension73": "Custom Floodlight Variable 73",
      "floodlightVariableDimension74": "Custom Floodlight Variable 74",
      "floodlightVariableDimension75": "Custom Floodlight Variable 75",
      "floodlightVariableDimension76": "Custom Floodlight Variable 76",
      "floodlightVariableDimension77": "Custom Floodlight Variable 77",
      "floodlightVariableDimension78": "Custom Floodlight Variable 78",
      "floodlightVariableDimension79": "Custom Floodlight Variable 79",
      "floodlightVariableDimension80": "Custom Floodlight Variable 80",
      "floodlightVariableDimension81": "Custom Floodlight Variable 81",
      "floodlightVariableDimension82": "Custom Floodlight Variable 82",
      "floodlightVariableDimension83": "Custom Floodlight Variable 83",
      "floodlightVariableDimension84": "Custom Floodlight Variable 84",
      "floodlightVariableDimension85": "Custom Floodlight Variable 85",
      "floodlightVariableDimension86": "Custom Floodlight Variable 86",
      "floodlightVariableDimension87": "Custom Floodlight Variable 87",
      "floodlightVariableDimension88": "Custom Floodlight Variable 88",
      "floodlightVariableDimension89": "Custom Floodlight Variable 89",
      "floodlightVariableDimension90": "Custom Floodlight Variable 90",
      "floodlightVariableDimension91": "Custom Floodlight Variable 91",
      "floodlightVariableDimension92": "Custom Floodlight Variable 92",
      "floodlightVariableDimension93": "Custom Floodlight Variable 93",
      "floodlightVariableDimension94": "Custom Floodlight Variable 94",
      "floodlightVariableDimension95": "Custom Floodlight Variable 95",
      "floodlightVariableDimension96": "Custom Floodlight Variable 96",
      "floodlightVariableDimension97": "Custom Floodlight Variable 97",
      "floodlightVariableDimension98": "Custom Floodlight Variable 98",
      "floodlightVariableDimension99": "Custom Floodlight Variable 99",
      "floodlightVariableDimension100": "Custom Floodlight Variable 100",
      "hour": "Hour",
      "impressionCountingMethod": "Impression Counting Method",
      "keyword": "Keyword",
      "landingPageUrl": "Landing Page URL",
      "measurementSource": "Measurement Source",
      "mediaType": "Media Type",
      "mobileCarrier": "Mobile Carrier",
      "month": "Month",
      "naturalSearchEngineCountry": "Natural Search Engine Country",
      "naturalSearchEngineProperty": "Natural Search Engine Property",
      "naturalSearchLandingPage": "Natural Search Landing Page",
      "naturalSearchLandingPageQueryString": "Natural Search Landing Page Query String",
      "naturalSearchProcessedLandingPage": "Natural Search Processed Landing Page",
      "naturalSearchProcessedLandingPageQueryString": "Natural Search Processed Landing Page Query String",
      "naturalSearchQuery": "Natural Search Query",
      "omSdkAvailable": "OM SDK Available",
      "operatingSystem": "Operating System",
      "operatingSystemVersion": "Operating System Version",
      "packageRoadblock": "Package/Roadblock",
      "packageRoadblockId": "Package/Roadblock ID",
      "packageRoadblockStrategy": "Package/Roadblock Strategy",
      "packageRoadblockTotalBookedUnits": "Package/Roadblock Total Booked Units",
      "paidSearchAd": "Paid Search Ad",
      "paidSearchAdGroup": "Paid Search Ad Group",
      "paidSearchAdGroupId": "Paid Search Ad Group ID",
      "paidSearchAdId": "Paid Search Ad ID",
      "paidSearchAdvertiser": "Paid Search Advertiser",
      "paidSearchAdvertiserId": "Paid Search Advertiser ID",
      "paidSearchAgency": "Paid Search Agency",
      "paidSearchAgencyId": "Paid Search Agency ID",
      "paidSearchBidStrategy": "Paid Search Bid Strategy",
      "paidSearchBidStrategyId": "Paid Search Bid Strategy ID",
      "paidSearchCampaign": "Paid Search Campaign",
      "paidSearchCampaignId": "Paid Search Campaign ID",
      "paidSearchEngineAccount": "Paid Search Engine Account",
      "paidSearchEngineAccountCategory": "Paid Search Engine Account Category",
      "paidSearchEngineAccountId": "Paid Search Engine Account ID",
      "paidSearchExternalAdGroupId": "Paid Search External Ad Group ID",
      "paidSearchExternalAdId": "Paid Search External Ad ID",
      "paidSearchExternalCampaignId": "Paid Search External Campaign ID",
      "paidSearchExternalKeywordId": "Paid Search External Keyword ID",
      "paidSearchKeyword": "Paid Search Keyword",
      "paidSearchKeywordId": "Paid Search Keyword ID",
      "paidSearchLandingPageUrl": "Paid Search Landing Page URL",
      "paidSearchLegacyKeywordId": "Paid Search Legacy Keyword ID",
      "paidSearchMatchType": "Paid Search Match Type",
      "paidSocialAd": "Paid Social Ad",
      "paidSocialAdGroup": "Paid Social Ad Group",
      "paidSocialAdGroupId": "Paid Social Ad Group ID",
      "paidSocialAdId": "Paid Social Ad ID",
      "paidSocialAdvertiser": "Paid Social Advertiser",
      "paidSocialAdvertiserId": "Paid Social Advertiser ID",
      "paidSocialAgency": "Paid Social Agency",
      "paidSocialAgencyId": "Paid Social Agency ID",
      "paidSocialCampaign": "Paid Social Campaign",
      "paidSocialCampaignId": "Paid Social Campaign ID",
      "paidSocialEngineAccount": "Paid Social Engine Account",
      "paidSocialEngineAccountId": "Paid Social Engine Account ID",
      "paidSocialExternalAdGroupId": "Paid Social External Ad Group ID",
      "paidSocialExternalAdId": "Paid Social External Ad ID",
      "paidSocialExternalCampaignId": "Paid Social External Campaign ID",
      "paidSocialExternalEngineAccountId": "Paid Social External Engine Account ID",
      "paymentSource": "Payment Source",
      "placement": "Placement",
      "placementCompatibility": "Placement Compatibility",
      "placementCostStructure": "Placement Cost Structure",
      "placementEndDate": "Placement End Date",
      "placementExternalId": "Placement External ID",
      "placementId": "Placement ID",
      "placementRate": "Placement Rate",
      "placementSize": "Placement Pixel Size",
      "placementStartDate": "Placement Start Date",
      "placementStrategy": "Placement Strategy",
      "placementTagType": "Placement Tag Type",
      "placementTotalBookedUnits": "Placement Total Booked Units",
      "placementTotalPlannedMediaCost": "Placement Total Planned Media Cost",
      "platformType": "Platform Type",
      "playbackMethod": "Playback Method",
      "positionInContent": "Position In Content",
      "publisherTrafficSource": "Publisher Traffic Source",
      "refreshedAd": "Refreshed Ad",
      "renderingId": "Rendering ID",
      "richMediaCustomVariable": "Custom Variable",
      "richMediaEvent": "Rich Media Event",
      "richMediaVideo4asaId": "Video 4A's Ad-ID",
      "richMediaVideoLength": "Video Length",
      "sensitiveCategory": "Sensitive Category",
      "servedPixelDensity": "Served Pixel Density",
      "site": "Site (CM360)",
      "siteDirectory": "Site (Site Directory)",
      "siteDirectoryId": "Site ID (Site Directory)",
      "siteId": "Site ID (CM360)",
      "siteKeyname": "Site Keyname",
      "state": "State/Region",
      "twitterCampaignId": "Twitter Campaign ID",
      "twitterCreativeId": "Twitter Creative ID",
      "twitterCreativeMediaId": "Twitter Creative Media ID",
      "twitterCreativeType": "Twitter Creative Type",
      "twitterImpressionType": "Twitter Impression Type",
      "twitterLineItemId": "Twitter Line Item ID",
      "twitterPlacementType": "Twitter Placement Type",
      "verificationAudibilityComplete": "Audibility At Complete",
      "verificationAudibilityStart": "Audibility At Start",
      "verificationVideoPlayerSize": "Video Player Size",
      "verificationVideoPlayerSizeComplete": "Video Player Size at Completion",
      "verificationVideoPlayerSizeFirstQuartile": "Video Player Size at First Quartile",
      "verificationVideoPlayerSizeMidPoint": "Video Player Size at Midpoint",
      "verificationVideoPlayerSizeStart": "Video Player Size at Start",
      "verificationVideoPlayerSizeThirdQuartile": "Video Player Size at Third Quartile",
      "verificationVideoProminenceScoreDimension": "Video Prominence Score",
      "verificationVideoResized": "Video Resized",
      "videoContinuousPlay": "Video Continuous Play",
      "week": "Week",
      "zipCode": "ZIP/Postal Code"
    },
    "metrics": {
      "actiewViewPercentAdPlayed": "Active View: % of Ad Played",
      "activeViewAudible2SecImpressions": "Active View: Audible (Unmuted) for 2 sec Impressions",
      "activeViewAudibleAndBackgroundImpressions": "Active View: Audible and Background Impressions",
      "activeViewAverageViewableTimeSecond": "Active View: Average Viewable Time (Seconds)",
      "activeViewCustomMetricMeasurableImpressions": "Active View: Custom Metric Measurable Impressions",
      "activeViewCustomMetricViewableImpressions": "Active View: Custom Metric Viewable Impressions",
      "activeViewCustomMetricViewableRate": "Active View: Custom Metric Viewable Rate",
      "activeViewEligibleImpressions": "Active View: Eligible Impressions",
      "activeViewGroupmMeasurableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Measurable Impressions",
      "activeViewGroupmTrvMeasurableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Measurable Impressions",
      "activeViewGroupmTrvViewableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Impressions",
      "activeViewGroupmViewableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Impressions",
      "activeViewImpressionDistributionNotMeasurable": "Active View: Impression Distribution (Not Measurable)",
      "activeViewImpressionDistributionNotViewable": "Active View: Impression Distribution (Not Viewable)",
      "activeViewImpressionDistributionViewable": "Active View: Impression Distribution (Viewable)",
      "activeViewImpressionsAudibleAndVisibleAtCompletion": "Active View: Impressions Audible and Visible at Completion",
      "activeViewImpressionsVisible10Seconds": "Active View: Impressions Visible 10 Seconds",
      "activeViewMeasurableImpressions": "Active View: Measurable Impressions",
      "activeViewNotMeasurableImpressions": "Active View: Not Measurable Impressions",
      "activeViewNotViewableImpressions": "Active View: Not Viewable Impressions",
      "activeViewPercentAudible2Sec": "Active View: % of Audible (Unmuted) for 2 sec Impressions",
      "activeViewPercentAudible30Sec": "Active View: % of Audible (Unmuted) for 30 sec Impressions",
      "activeViewPercentAudibleAndBackground": "Active View: % of Audible and Background Impressions",
      "activeViewPercentAudibleAndVisibleAtCompletion": "Active View: % Audible and Visible at Completion",
      "activeViewPercentAudibleAndVisibleAtFirstQuartile": "Active View: % Audible and Visible at First Quartile",
      "activeViewPercentAudibleAndVisibleAtMidpoint": "Active View: % Audible and Visible at Midpoint",
      "activeViewPercentAudibleAndVisibleAtStart": "Active View: % Audible and Visible at Start",
      "activeViewPercentAudibleAndVisibleAtThirdQuartile": "Active View: % Audible and Visible at Third Quartile",
      "activeViewPercentAudibleImpressions": "Active View: % Audible Impressions",
      "activeViewPercentBackground": "Active View: % In Background",
      "activeViewPercentCompleteAudible": "Active View: % of Complete Audible Impressions",
      "activeViewPercentEverMuted": "Active View: % of Ever Muted",
      "activeViewPercentFirstQuartileAudible": "Active View: % of First Quartile Audible Impressions",
      "activeViewPercentFullscreen": "Active View: % Full-Screen",
      "activeViewPercentImpressionsAudibleAndFullyOnscreen": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Rate",
      "activeViewPercentImpressionsAudibleAndFullyOnscreenForHalfDuration": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Rate",
      "activeViewPercentImpressionsAudibleAndVisibleAtCompletion": "Active View: % of Completed Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtFirstQuartile": "Active View: % of First Quartile Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtMidpoint": "Active View: % of Midpoint Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtThirdQuartile": "Active View: % of Third Quartile Impressions Audible and Visible",
      "activeViewPercentImpressionsVisibleAtCompletion": "Active View: % of Completed Impressions Visible",
      "activeViewPercentImpressionsVisibleAtFirstQuartile": "Active View: % of First Quartile Impressions Visible",
      "activeViewPercentImpressionsVisibleAtMidpoint": "Active View: % of Midpoint Impressions Visible",
      "activeViewPercentImpressionsVisibleAtThirdQuartile": "Active View: % of Third Quartile Impressions Visible",
      "activeViewPercentMidpointAudible": "Active View: % of Midpoint Audible Impressions",
      "activeViewPercentPlayTimeAudible": "Active View: % Play Time Audible",
      "activeViewPercentPlayTimeAudibleAndVisible": "Active View: % Play Time Audible and Visible",
      "activeViewPercentPlayTimeVisible": "Active View: % Play Time Visible",
      "activeViewPercentThirdQuartileAudible": "Active View: % of Third Quartile Audible Impressions",
      "activeViewPercentVisible10Seconds": "Active View: % Visible 10 Seconds",
      "activeViewPercentVisibleAtCompletion": "Active View: % Visible at Completion",
      "activeViewPercentVisibleAtFirstQuartile": "Active View: % Visible at First Quartile",
      "activeViewPercentVisibleAtMidpoint": "Active View: % Visible at Midpoint",
      "activeViewPercentVisibleAtStart": "Active View: % Visible at Start",
      "activeViewPercentVisibleAtThirdQuartile": "Active View: % Visible at Third Quartile",
      "activeViewPercentageMeasurableImpressions": "Active View: % Measurable Impressions",
      "activeViewPercentageViewableImpressions": "Active View: % Viewable Impressions",
      "activeViewViewableImpressions": "Active View: Viewable Impressions",
      "activityClickThroughConversions": "Click-through Conversions",
      "activityClickThroughRevenue": "Click-through Revenue",
      "activityDeliveryStatus": "Activity Delivery Status",
      "activityPerClick": "Activity Per Click",
      "activityPerThousandImpressions": "Activity Per Thousand Impressions",
      "activityViewThroughConversions": "View-through Conversions",
      "activityViewThroughRevenue": "View-through Revenue",
      "audioCompanionClicks": "Audio Companion Clicks",
      "audioCompanionImpressions": "Audio Companion Views",
      "beginToRenderEligibleImpressions": "Begin to Render Eligible Impressions",
      "beginToRenderImpressions": "Begin to Render Impressions",
      "bookedActivities": "Booked Activities",
      "bookedClicks": "Booked Clicks",
      "bookedImpressions": "Booked Impressions",
      "bookedViewableImpressions": "Booked Viewable Impressions",
      "clickDeliveryStatus": "Click Delivery Status",
      "clickRate": "Click Rate",
      "clicks": "Clicks",
      "cookieUnconsentedClicks": "Cookie Unconsented Clicks",
      "cookieUnconsentedImpressions": "Cookie Unconsented Impressions",
      "costPerActivity": "Cost Per Activity",
      "costPerClick": "Cost Per Click",
      "costPerRevenue": "Cost Per Revenue",
      "crossDeviceClickThroughConversionQuantity": "Click-through Conversions + Cross-Environment",
      "crossDeviceClickThroughConversionRevenue": "Click-through Revenue + Cross-Environment",
      "crossDeviceClickThroughConversions": "Click-through Conversion Events + Cross-Environment",
      "crossDeviceTotalConversionQuantity": "Total Conversions + Cross-Environment",
      "crossDeviceTotalConversionRevenue": "Total Revenue + Cross-Environment",
      "crossDeviceTotalConversions": "Total Conversion Events + Cross-Environment",
      "crossDeviceViewThroughConversionQuantity": "View-through Conversions + Cross-Environment",
      "crossDeviceViewThroughConversionRevenue": "View-through Revenue + Cross-Environment",
      "crossDeviceViewThroughConversions": "View-through Conversion Events + Cross-Environment",
      "downloadedImpressions": "Downloaded Impressions",
      "dv360Cost": "DV360 Cost (Account Currency)",
      "dv360CostUsd": "DV360 Cost USD",
      "effectiveCpm": "Effective CPM",
      "floodlightVariableMetric1": "Custom Floodlight Variable 1",
      "floodlightVariableMetric2": "Custom Floodlight Variable 2",
      "floodlightVariableMetric3": "Custom Floodlight Variable 3",
      "floodlightVariableMetric4": "Custom Floodlight Variable 4",
      "floodlightVariableMetric5": "Custom Floodlight Variable 5",
      "floodlightVariableMetric6": "Custom Floodlight Variable 6",
      "floodlightVariableMetric7": "Custom Floodlight Variable 7",
      "floodlightVariableMetric8": "Custom Floodlight Variable 8",
      "floodlightVariableMetric9": "Custom Floodlight Variable 9",
      "floodlightVariableMetric10": "Custom Floodlight Variable 10",
      "floodlightVariableMetric11": "Custom Floodlight Variable 11",
      "floodlightVariableMetric12": "Custom Floodlight Variable 12",
      "floodlightVariableMetric13": "Custom Floodlight Variable 13",
      "floodlightVariableMetric14": "Custom Floodlight Variable 14",
      "floodlightVariableMetric15": "Custom Floodlight Variable 15",
      "floodlightVariableMetric16": "Custom Floodlight Variable 16",
      "floodlightVariableMetric17": "Custom Floodlight Variable 17",
      "floodlightVariableMetric18": "Custom Floodlight Variable 18",
      "floodlightVariableMetric19": "Custom Floodlight Variable 19",
      "floodlightVariableMetric20": "Custom Floodlight Variable 20",
      "floodlightVariableMetric21": "Custom Floodlight Variable 21",
      "floodlightVariableMetric22": "Custom Floodlight Variable 22",
      "floodlightVariableMetric23": "Custom Floodlight Variable 23",
      "floodlightVariableMetric24": "Custom Floodlight Variable 24",
      "floodlightVariableMetric25": "Custom Floodlight Variable 25",
      "floodlightVariableMetric26": "Custom Floodlight Variable 26",
      "floodlightVariableMetric27": "Custom Floodlight Variable 27",
      "floodlightVariableMetric28": "Custom Floodlight Variable 28",
      "floodlightVariableMetric29": "Custom Floodlight Variable 29",
      "floodlightVariableMetric30": "Custom Floodlight Variable 30",
      "floodlightVariableMetric31": "Custom Floodlight Variable 31",
      "floodlightVariableMetric32": "Custom Floodlight Variable 32",
      "floodlightVariableMetric33": "Custom Floodlight Variable 33",
      "floodlightVariableMetric34": "Custom Floodlight Variable 34",
      "floodlightVariableMetric35": "Custom Floodlight Variable 35",
      "floodlightVariableMetric36": "Custom Floodlight Variable 36",
      "floodlightVariableMetric37": "Custom Floodlight Variable 37",
      "floodlightVariableMetric38": "Custom Floodlight Variable 38",
      "floodlightVariableMetric39": "Custom Floodlight Variable 39",
      "floodlightVariableMetric40": "Custom Floodlight Variable 40",
      "floodlightVariableMetric41": "Custom Floodlight Variable 41",
      "floodlightVariableMetric42": "Custom Floodlight Variable 42",
      "floodlightVariableMetric43": "Custom Floodlight Variable 43",
      "floodlightVariableMetric44": "Custom Floodlight Variable 44",
      "floodlightVariableMetric45": "Custom Floodlight Variable 45",
      "floodlightVariableMetric46": "Custom Floodlight Variable 46",
      "floodlightVariableMetric47": "Custom Floodlight Variable 47",
      "floodlightVariableMetric48": "Custom Floodlight Variable 48",
      "floodlightVariableMetric49": "Custom Floodlight Variable 49",
      "floodlightVariableMetric50": "Custom Floodlight Variable 50",
      "floodlightVariableMetric51": "Custom Floodlight Variable 51",
      "floodlightVariableMetric52": "Custom Floodlight Variable 52",
      "floodlightVariableMetric53": "Custom Floodlight Variable 53",
      "floodlightVariableMetric54": "Custom Floodlight Variable 54",
      "floodlightVariableMetric55": "Custom Floodlight Variable 55",
      "floodlightVariableMetric56": "Custom Floodlight Variable 56",
      "floodlightVariableMetric57": "Custom Floodlight Variable 57",
      "floodlightVariableMetric58": "Custom Floodlight Variable 58",
      "floodlightVariableMetric59": "Custom Floodlight Variable 59",
      "floodlightVariableMetric60": "Custom Floodlight Variable 60",
      "floodlightVariableMetric61": "Custom Floodlight Variable 61",
      "floodlightVariableMetric62": "Custom Floodlight Variable 62",
      "floodlightVariableMetric63": "Custom Floodlight Variable 63",
      "floodlightVariableMetric64": "Custom Floodlight Variable 64",
      "floodlightVariableMetric65": "Custom Floodlight Variable 65",
      "floodlightVariableMetric66": "Custom Floodlight Variable 66",
      "floodlightVariableMetric67": "Custom Floodlight Variable 67",
      "floodlightVariableMetric68": "Custom Floodlight Variable 68",
      "floodlightVariableMetric69": "Custom Floodlight Variable 69",
      "floodlightVariableMetric70": "Custom Floodlight Variable 70",
      "floodlightVariableMetric71": "Custom Floodlight Variable 71",
      "floodlightVariableMetric72": "Custom Floodlight Variable 72",
      "floodlightVariableMetric73": "Custom Floodlight Variable 73",
      "floodlightVariableMetric74": "Custom Floodlight Variable 74",
      "floodlightVariableMetric75": "Custom Floodlight Variable 75",
      "floodlightVariableMetric76": "Custom Floodlight Variable 76",
      "floodlightVariableMetric77": "Custom Floodlight Variable 77",
      "floodlightVariableMetric78": "Custom Floodlight Variable 78",
      "floodlightVariableMetric79": "Custom Floodlight Variable 79",
      "floodlightVariableMetric80": "Custom Floodlight Variable 80",
      "floodlightVariableMetric81": "Custom Floodlight Variable 81",
      "floodlightVariableMetric82": "Custom Floodlight Variable 82",
      "floodlightVariableMetric83": "Custom Floodlight Variable 83",
      "floodlightVariableMetric84": "Custom Floodlight Variable 84",
      "floodlightVariableMetric85": "Custom Floodlight Variable 85",
      "floodlightVariableMetric86": "Custom Floodlight Variable 86",
      "floodlightVariableMetric87": "Custom Floodlight Variable 87",
      "floodlightVariableMetric88": "Custom Floodlight Variable 88",
      "floodlightVariableMetric89": "Custom Floodlight Variable 89",
      "floodlightVariableMetric90": "Custom Floodlight Variable 90",
      "floodlightVariableMetric91": "Custom Floodlight Variable 91",
      "floodlightVariableMetric92": "Custom Floodlight Variable 92",
      "floodlightVariableMetric93": "Custom Floodlight Variable 93",
      "floodlightVariableMetric94": "Custom Floodlight Variable 94",
      "floodlightVariableMetric95": "Custom Floodlight Variable 95",
      "floodlightVariableMetric96": "Custom Floodlight Variable 96",
      "floodlightVariableMetric97": "Custom Floodlight Variable 97",
      "floodlightVariableMetric98": "Custom Floodlight Variable 98",
      "floodlightVariableMetric99": "Custom Floodlight Variable 99",
      "floodlightVariableMetric100": "Custom Floodlight Variable 100",
      "generalInvalidTrafficActiveViewAudibleImpressions": "General Invalid Traffic (GIVT) Active View Audible Impressions",
      "generalInvalidTrafficActiveViewEligibleImpressions": "General Invalid Traffic (GIVT) Active View Eligible Impressions",
      "generalInvalidTrafficActiveViewMeasurableImpressions": "General Invalid Traffic (GIVT) Active View Measurable Impressions",
      "generalInvalidTrafficActiveViewViewableImpressions": "General Invalid Traffic (GIVT) Active View Viewable Impressions",
      "generalInvalidTrafficBeginToRenderImpressions": "General Invalid Traffic (GIVT) Begin to Render Impressions",
      "generalInvalidTrafficClicks": "General Invalid Traffic (GIVT) Clicks",
      "generalInvalidTrafficImpressions": "General Invalid Traffic (GIVT) Impressions",
      "generalInvalidTrafficTrackedAds": "General Invalid Traffic (GIVT) Tracked Ads",
      "gmailClickThroughConversions": "Gmail Click-through Conversions",
      "gmailClickThroughRevenue": "Gmail Click-through Revenue",
      "gmailConversions": "Gmail Conversions",
      "gmailTotalRevenue": "Gmail Total Revenue",
      "gmailViewThroughConversions": "Gmail View-through Conversions",
      "gmailViewThroughRevenue": "Gmail View-through Revenue",
      "impressionDeliveryStatus": "Impression Delivery Status",
      "impressions": "Impressions",
      "inactiveImpressions": "Inactive Impressions",
      "invalidActiveViewAudibleImpressions": "Invalid Active View Audible Impressions",
      "invalidActiveViewEligibleImpressions": "Invalid Active View Eligible Impressions",
      "invalidActiveViewMeasurableImpressions": "Invalid Active View Measurable Impressions",
      "invalidActiveViewViewableImpressions": "Invalid Active View Viewable Impressions",
      "invalidBeginToRenderImpressions": "Invalid Begin to Render Impressions",
      "invalidClicks": "Invalid Clicks",
      "invalidImpressions": "Invalid Impressions",
      "invalidTrackedAds": "Invalid Tracked Ads",
      "mediaCost": "Media Cost",
      "naturalSearchActions": "Natural Search Actions",
      "naturalSearchClicks": "Natural Search Clicks",
      "naturalSearchRevenue": "Natural Search Revenue",
      "naturalSearchTransactions": "Natural Search Transactions",
      "paidSearchActionConversionPercentage": "Floodlight: Paid Search Action Conversion Percentage",
      "paidSearchActions": "Paid Search Actions",
      "paidSearchAverageCostPerAction": "Floodlight: Paid Search Average Cost Per Action",
      "paidSearchAverageCostPerTransaction": "Floodlight: Paid Search Average Cost Per Transaction",
      "paidSearchAverageDfaTransactionAmount": "Floodlight: Paid Search Average CM360 Transaction Amount",
      "paidSearchAveragePosition": "Paid Search Average Position",
      "paidSearchClickRate": "Paid Search Click Rate",
      "paidSearchClicks": "Paid Search Clicks",
      "paidSearchCost": "Paid Search Cost",
      "paidSearchImpressions": "Paid Search Impressions",
      "paidSearchRevenue": "Paid Search Revenue",
      "paidSearchSpendPerTransactionRevenue": "Floodlight: Paid Search Spend Per Transaction Revenue",
      "paidSearchTransactionConversionPercentage": "Floodlight: Paid Search Transaction Conversion Percentage",
      "paidSearchTransactionRevenuePerSpend": "Floodlight: Paid Search Transaction Revenue Per Spend",
      "paidSearchTransactions": "Paid Search Transactions",
      "paidSearchVisits": "Paid Search Visits",
      "paidSocialClicks": "Paid Social Clicks",
      "paidSocialCost": "Paid Social Cost",
      "paidSocialImpressions": "Paid Social Impressions",
      "percentInvalidClicks": "% Invalid Clicks",
      "percentInvalidImpressions": "% Invalid Impressions",
      "plannedMediaCost": "Planned Media Cost",
      "provisionalImpressions": "Provisional Impressions",
      "revenuePerClick": "Revenue Per Click",
      "revenuePerThousandImpressions": "Revenue Per Thousand Impressions",
      "richMediaAudioCompletions": "Audio Completions",
      "richMediaAudioFirstQuartileCompletes": "Audio First Quartile Completions",
      "richMediaAudioMidpoints": "Audio Midpoints",
      "richMediaAudioMutes": "Audio Mutes",
      "richMediaAudioPauses": "Audio Pauses",
      "richMediaAudioPlays": "Audio Plays",
      "richMediaAudioReplays": "Audio Replays",
      "richMediaAudioThirdQuartileCompletes": "Audio Third Quartile Completions",
      "richMediaAudioUnmutes": "Audio Unmutes",
      "richMediaAverageDisplayTime": "Average Display Time",
      "richMediaAverageExpansionTime": "Average Expansion Time",
      "richMediaAverageFullScreenViewTime": "Full-Screen Average View Time",
      "richMediaAverageInteractionTime": "Average Interaction Time",
      "richMediaAverageVideoViewTime": "Video Average View Time",
      "richMediaBackupImages": "Backup Image",
      "richMediaClickRate": "Rich Media Click Rate",
      "richMediaClicks": "Rich Media Clicks",
      "richMediaCodeServes": "Code Serves",
      "richMediaCustomAverageTime": "Average Time",
      "richMediaCustomCounters": "Counters",
      "richMediaCustomExits": "Exits",
      "richMediaCustomTimers": "Timers",
      "richMediaCustomVariableCount1": "Custom Variable Count 1",
      "richMediaCustomVariableCount2": "Custom Variable Count 2",
      "richMediaDisplayTime": "Total Display Time",
      "richMediaEngagements": "Rich Media Engagements",
      "richMediaEventCounters": "Event Counters",
      "richMediaEventTimers": "Event Timers",
      "richMediaExpansionTime": "Expansion Time",
      "richMediaExpansions": "Expansions",
      "richMediaFullScreenImpressions": "Full-Screen Impressions",
      "richMediaFullScreenVideoCompletes": "Full-Screen Video Completions",
      "richMediaFullScreenVideoPlays": "Full-Screen Video Plays",
      "richMediaHtml5Impressions": "HTML5 Impressions",
      "richMediaImpressions": "Rich Media Impressions",
      "richMediaInteractionRate": "Interaction Rate",
      "richMediaInteractionTime": "Total Interaction Time",
      "richMediaInteractions": "Total Interactions",
      "richMediaInteractiveImpressions": "Interactive Impressions",
      "richMediaManualCloses": "Manual Closes",
      "richMediaScrolls": "Rich Media Scrolls",
      "richMediaTrueViewViews": "TrueView Views",
      "richMediaVideoCompanionClicks": "Video Companion Clicks",
      "richMediaVideoCompletions": "Video Completions",
      "richMediaVideoFirstQuartileCompletes": "Video First Quartile Completions",
      "richMediaVideoFullScreens": "Video Full-Screen",
      "richMediaVideoInteractionRate": "Video Interaction Rate",
      "richMediaVideoInteractions": "Video Interactions",
      "richMediaVideoMidpoints": "Video Midpoints",
      "richMediaVideoMutes": "Video Mutes",
      "richMediaVideoPauses": "Video Pauses",
      "richMediaVideoPlays": "Video Plays",
      "richMediaVideoProgressEvents": "Video Progress Events",
      "richMediaVideoReplays": "Video Replays",
      "richMediaVideoSkips": "Video Skips",
      "richMediaVideoStops": "Video Stops",
      "richMediaVideoThirdQuartileCompletes": "Video Third Quartile Completions",
      "richMediaVideoUnmutes": "Video Unmutes",
      "richMediaVideoViewRate": "Video View Rate",
      "richMediaVideoViews": "Video Views",
      "roadblockImpressions": "Roadblock Impressions",
      "socialEngagementRate": "Social Engagement Rate",
      "socialFollows": "Follows",
      "socialLeadSubmissions": "Twitter Leads Generated",
      "socialLikes": "Likes",
      "socialOfferAccepts": "Twitter Offers Accepted",
      "socialOtherInteractions": "Other Social Interactions",
      "socialReplies": "Replies",
      "socialSharesExternal": "Shares (External)",
      "socialSharesInternal": "Shares (Internal)",
      "socialTotalEngagements": "Total Social Engagements",
      "totalConversions": "Total Conversions",
      "totalConversionsRevenue": "Total Revenue",
      "trackedAds": "Tracked Ads",
      "twitterAppClicks": "Twitter App Install Clicks",
      "twitterBuyNowCardClicks": "Twitter Buy Now Clicks",
      "twitterBuyNowPurchaseSuccessfuls": "Twitter Buy Now Purchases",
      "twitterUrlClicks": "Twitter URL Clicks",
      "twitterVideo50PercentInViewFor2Seconds": "Twitter: Video 50% In View For 2 Seconds",
      "twitterVideo100PercentInViewFor3Seconds": "Twitter: Video 100% In View For 3 Seconds",
      "vendorBlockedAds": "Vendor Blocked Ads",
      "verificationBlockedImpressions": "Blocked Impressions",
      "verificationBlockedPercentage": "Blocked Percentage",
      "verificationClassifiedImpressions": "Classified Impressions",
      "verificationMeasurableImpressionsForAudio": "Measurable Impressions For Audio",
      "verificationMeasurableImpressionsForVideoPlayerLocation": "Measurable Impressions For Video Player Location",
      "verificationMeasurableImpressionsForVideoPlayerSize": "Measurable Impressions For Video Player Size",
      "verificationPercentageMeasurableImpressionsForAudio": "Percentage Of Measurable Impressions For Audio",
      "verificationPercentageMeasurableImpressionsForVideoPlayerLocation": "Percentage Of Measurable Impressions For Video Player Location",
      "verificationPercentageMeasurableImpressionsForVideoPlayerSize": "Percentage Of Measurable Impressions For Video Player Size",
      "verificationPublisherProblems": "Publisher Problems",
      "verificationReportingProblems": "Reporting Problems",
      "verificationServingProblems": "Serving Problems",
      "verificationVerifiableImpressions": "Verifiable Impressions",
      "verificationVideoMutedAtStart": "Video Muted At Start",
      "verificationVideoPlayerHdSizeImpressions": "HD Video Player Size Impressions",
      "verificationVideoPlayerLargeSizeImpressions": "Large Video Player Size Impressions",
      "verificationVideoPlayerLocationAvgPixelsFromLeft": "Video Player Location Avg Pixels From Left",
      "verificationVideoPlayerLocationAvgPixelsFromTop": "Video Player Location Avg Pixels From Top",
      "verificationVideoPlayerSizeAvgHeight": "Video Player Size Avg Height",
      "verificationVideoPlayerSizeAvgWidth": "Video Player Size Avg Width",
      "verificationVideoPlayerSmallSizeImpressions": "Small Video Player Size Impressions",
      "verificationVideoProminenceScore": "Video Prominence Score",
      "verificationWarnings": "Warnings",
      "videoCompanionClicks": "Companion Clicks",
      "videoCompanionImpressions": "Companion Views"
    }
  },
  "REACH": {
    "dimensions": {
      "advertiser (required)": "Advertiser",
      "ad": "Ad",
      "adId": "Ad ID",
      "adStatus": "Ad Status",
      "adType": "Ad Type",
      "advertiserGroup": "Advertiser Group",
      "advertiserId": "Advertiser ID",
      "browserPlatform": "Browser/Platform",
      "campaign": "Campaign",
      "campaignEndDate": "Campaign End Date",
      "campaignExternalId": "Campaign External ID",
      "campaignId": "Campaign ID",
      "campaignStartDate": "Campaign Start Date",
      "city": "City",
      "connectionType": "Connection Type",
      "contentCategory": "Content Category",
      "country": "Country",
      "date": "Date",
      "dmaRegion": "Designated Market Area (DMA)",
      "floodlightConfigId": "Floodlight Configuration",
      "hour": "Hour",
      "mobileCarrier": "Mobile Carrier",
      "month": "Month",
      "operatingSystem": "Operating System",
      "operatingSystemVersion": "Operating System Version",
      "packageRoadblock": "Package/Roadblock",
      "packageRoadblockId": "Package/Roadblock ID",
      "packageRoadblockStrategy": "Package/Roadblock Strategy",
      "packageRoadblockTotalBookedUnits": "Package/Roadblock Total Booked Units",
      "paymentSource": "Payment Source",
      "placement": "Placement",
      "placementCompatibility": "Placement Compatibility",
      "placementCostStructure": "Placement Cost Structure",
      "placementEndDate": "Placement End Date",
      "placementExternalId": "Placement External ID",
      "placementId": "Placement ID",
      "placementRate": "Placement Rate",
      "placementStartDate": "Placement Start Date",
      "placementStrategy": "Placement Strategy",
      "placementTotalBookedUnits": "Placement Total Booked Units",
      "placementTotalPlannedMediaCost": "Placement Total Planned Media Cost",
      "platformType": "Platform Type",
      "site": "Site (CM360)",
      "siteId": "Site ID (CM360)",
      "siteKeyname": "Site Keyname",
      "week": "Week"
    },
    "metrics": {
      "actiewViewPercentAdPlayed": "Active View: % of Ad Played",
      "activeViewAudible2SecImpressions": "Active View: Audible (Unmuted) for 2 sec Impressions",
      "activeViewAudibleAndBackgroundImpressions": "Active View: Audible and Background Impressions",
      "activeViewAverageViewableTimeSecond": "Active View: Average Viewable Time (Seconds)",
      "activeViewCustomMetricMeasurableImpressions": "Active View: Custom Metric Measurable Impressions",
      "activeViewCustomMetricViewableImpressions": "Active View: Custom Metric Viewable Impressions",
      "activeViewCustomMetricViewableRate": "Active View: Custom Metric Viewable Rate",
      "activeViewEligibleImpressions": "Active View: Eligible Impressions",
      "activeViewGroupmMeasurableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Measurable Impressions",
      "activeViewGroupmTrvMeasurableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Measurable Impressions",
      "activeViewGroupmTrvViewableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Impressions",
      "activeViewGroupmViewableImpressions": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Impressions",
      "activeViewImpressionDistributionNotMeasurable": "Active View: Impression Distribution (Not Measurable)",
      "activeViewImpressionDistributionNotViewable": "Active View: Impression Distribution (Not Viewable)",
      "activeViewImpressionDistributionViewable": "Active View: Impression Distribution (Viewable)",
      "activeViewImpressionsAudibleAndVisibleAtCompletion": "Active View: Impressions Audible and Visible at Completion",
      "activeViewImpressionsVisible10Seconds": "Active View: Impressions Visible 10 Seconds",
      "activeViewMeasurableImpressions": "Active View: Measurable Impressions",
      "activeViewNotMeasurableImpressions": "Active View: Not Measurable Impressions",
      "activeViewNotViewableImpressions": "Active View: Not Viewable Impressions",
      "activeViewPercentAudible2Sec": "Active View: % of Audible (Unmuted) for 2 sec Impressions",
      "activeViewPercentAudible30Sec": "Active View: % of Audible (Unmuted) for 30 sec Impressions",
      "activeViewPercentAudibleAndBackground": "Active View: % of Audible and Background Impressions",
      "activeViewPercentAudibleAndVisibleAtCompletion": "Active View: % Audible and Visible at Completion",
      "activeViewPercentAudibleAndVisibleAtFirstQuartile": "Active View: % Audible and Visible at First Quartile",
      "activeViewPercentAudibleAndVisibleAtMidpoint": "Active View: % Audible and Visible at Midpoint",
      "activeViewPercentAudibleAndVisibleAtStart": "Active View: % Audible and Visible at Start",
      "activeViewPercentAudibleAndVisibleAtThirdQuartile": "Active View: % Audible and Visible at Third Quartile",
      "activeViewPercentAudibleImpressions": "Active View: % Audible Impressions",
      "activeViewPercentBackground": "Active View: % In Background",
      "activeViewPercentCompleteAudible": "Active View: % of Complete Audible Impressions",
      "activeViewPercentEverMuted": "Active View: % of Ever Muted",
      "activeViewPercentFirstQuartileAudible": "Active View: % of First Quartile Audible Impressions",
      "activeViewPercentFullscreen": "Active View: % Full-Screen",
      "activeViewPercentImpressionsAudibleAndFullyOnscreen": "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Rate",
      "activeViewPercentImpressionsAudibleAndFullyOnscreenForHalfDuration": "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Rate",
      "activeViewPercentImpressionsAudibleAndVisibleAtCompletion": "Active View: % of Completed Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtFirstQuartile": "Active View: % of First Quartile Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtMidpoint": "Active View: % of Midpoint Impressions Audible and Visible",
      "activeViewPercentImpressionsAudibleAndVisibleAtThirdQuartile": "Active View: % of Third Quartile Impressions Audible and Visible",
      "activeViewPercentImpressionsVisibleAtCompletion": "Active View: % of Completed Impressions Visible",
      "activeViewPercentImpressionsVisibleAtFirstQuartile": "Active View: % of First Quartile Impressions Visible",
      "activeViewPercentImpressionsVisibleAtMidpoint": "Active View: % of Midpoint Impressions Visible",
      "activeViewPercentImpressionsVisibleAtThirdQuartile": "Active View: % of Third Quartile Impressions Visible",
      "activeViewPercentMidpointAudible": "Active View: % of Midpoint Audible Impressions",
      "activeViewPercentPlayTimeAudible": "Active View: % Play Time Audible",
      "activeViewPercentPlayTimeAudibleAndVisible": "Active View: % Play Time Audible and Visible",
      "activeViewPercentPlayTimeVisible": "Active View: % Play Time Visible",
      "activeViewPercentThirdQuartileAudible": "Active View: % of Third Quartile Audible Impressions",
      "activeViewPercentVisible10Seconds": "Active View: % Visible 10 Seconds",
      "activeViewPercentVisibleAtCompletion": "Active View: % Visible at Completion",
      "activeViewPercentVisibleAtFirstQuartile": "Active View: % Visible at First Quartile",
      "activeViewPercentVisibleAtMidpoint": "Active View: % Visible at Midpoint",
      "activeViewPercentVisibleAtStart": "Active View: % Visible at Start",
      "activeViewPercentVisibleAtThirdQuartile": "Active View: % Visible at Third Quartile",
      "activeViewPercentageMeasurableImpressions": "Active View: % Measurable Impressions",
      "activeViewPercentageViewableImpressions": "Active View: % Viewable Impressions",
      "activeViewViewableImpressionCookieReach": "Active View: Viewable Impression Cookie Reach",
      "activeViewViewableImpressions": "Active View: Viewable Impressions",
      "activityClickThroughConversions": "Click-through Conversions",
      "activityClickThroughRevenue": "Click-through Revenue",
      "activityDeliveryStatus": "Activity Delivery Status",
      "activityPerClick": "Activity Per Click",
      "activityPerThousandImpressions": "Activity Per Thousand Impressions",
      "activityViewThroughConversions": "View-through Conversions",
      "activityViewThroughRevenue": "View-through Revenue",
      "beginToRenderEligibleImpressions": "Begin to Render Eligible Impressions",
      "beginToRenderImpressions": "Begin to Render Impressions",
      "bookedActivities": "Booked Activities",
      "bookedClicks": "Booked Clicks",
      "bookedImpressions": "Booked Impressions",
      "bookedViewableImpressions": "Booked Viewable Impressions",
      "clickDeliveryStatus": "Click Delivery Status",
      "clickRate": "Click Rate",
      "clicks": "Clicks",
      "cookieReachAverageImpressionFrequency": "Cookie Reach: Average Impression Frequency",
      "cookieReachClickReach": "Cookie Reach: Click Reach",
      "cookieReachImpressionReach": "Cookie Reach: Impression Reach",
      "cookieReachIncrementalClickReach": "Cookie Reach: Incremental Click Reach",
      "cookieReachIncrementalImpressionReach": "Cookie Reach: Incremental Impression Reach",
      "cookieReachIncrementalTotalReach": "Cookie Reach: Incremental Total Reach",
      "cookieReachTotalReach": "Cookie Reach: Total Reach",
      "cookieUnconsentedClicks": "Cookie Unconsented Clicks",
      "cookieUnconsentedImpressions": "Cookie Unconsented Impressions",
      "costPerActivity": "Cost Per Activity",
      "costPerClick": "Cost Per Click",
      "costPerRevenue": "Cost Per Revenue",
      "crossDeviceClickThroughConversionQuantity": "Click-through Conversions + Cross-Environment",
      "crossDeviceClickThroughConversionRevenue": "Click-through Revenue + Cross-Environment",
      "crossDeviceClickThroughConversions": "Click-through Conversion Events + Cross-Environment",
      "crossDeviceTotalConversionQuantity": "Total Conversions + Cross-Environment",
      "crossDeviceTotalConversionRevenue": "Total Revenue + Cross-Environment",
      "crossDeviceTotalConversions": "Total Conversion Events + Cross-Environment",
      "crossDeviceViewThroughConversionQuantity": "View-through Conversions + Cross-Environment",
      "crossDeviceViewThroughConversionRevenue": "View-through Revenue + Cross-Environment",
      "crossDeviceViewThroughConversions": "View-through Conversion Events + Cross-Environment",
      "downloadedImpressions": "Downloaded Impressions",
      "dv360Cost": "DV360 Cost (Account Currency)",
      "dv360CostUsd": "DV360 Cost USD",
      "effectiveCpm": "Effective CPM",
      "impressionDeliveryStatus": "Impression Delivery Status",
      "impressions": "Impressions",
      "impressionsCoviewed": "Impressions (Co-Viewed)",
      "mediaCost": "Media Cost",
      "naturalSearchActions": "Natural Search Actions",
      "naturalSearchClicks": "Natural Search Clicks",
      "naturalSearchRevenue": "Natural Search Revenue",
      "naturalSearchTransactions": "Natural Search Transactions",
      "paidSearchActionConversionPercentage": "Floodlight: Paid Search Action Conversion Percentage",
      "paidSearchActions": "Paid Search Actions",
      "paidSearchAverageCostPerAction": "Floodlight: Paid Search Average Cost Per Action",
      "paidSearchAverageCostPerTransaction": "Floodlight: Paid Search Average Cost Per Transaction",
      "paidSearchAverageDfaTransactionAmount": "Floodlight: Paid Search Average CM360 Transaction Amount",
      "paidSearchAveragePosition": "Paid Search Average Position",
      "paidSearchClickRate": "Paid Search Click Rate",
      "paidSearchClicks": "Paid Search Clicks",
      "paidSearchCost": "Paid Search Cost",
      "paidSearchImpressions": "Paid Search Impressions",
      "paidSearchRevenue": "Paid Search Revenue",
      "paidSearchSpendPerTransactionRevenue": "Floodlight: Paid Search Spend Per Transaction Revenue",
      "paidSearchTransactionConversionPercentage": "Floodlight: Paid Search Transaction Conversion Percentage",
      "paidSearchTransactionRevenuePerSpend": "Floodlight: Paid Search Transaction Revenue Per Spend",
      "paidSearchTransactions": "Paid Search Transactions",
      "paidSearchVisits": "Paid Search Visits",
      "plannedMediaCost": "Planned Media Cost",
      "provisionalImpressions": "Provisional Impressions",
      "revenuePerClick": "Revenue Per Click",
      "revenuePerThousandImpressions": "Revenue Per Thousand Impressions",
      "richMediaAverageDisplayTime": "Average Display Time",
      "richMediaAverageExpansionTime": "Average Expansion Time",
      "richMediaAverageFullScreenViewTime": "Full-Screen Average View Time",
      "richMediaAverageInteractionTime": "Average Interaction Time",
      "richMediaAverageVideoViewTime": "Video Average View Time",
      "richMediaBackupImages": "Backup Image",
      "richMediaClickRate": "Rich Media Click Rate",
      "richMediaClicks": "Rich Media Clicks",
      "richMediaCodeServes": "Code Serves",
      "richMediaCustomAverageTime": "Average Time",
      "richMediaCustomCounters": "Counters",
      "richMediaCustomExits": "Exits",
      "richMediaCustomTimers": "Timers",
      "richMediaDisplayTime": "Total Display Time",
      "richMediaEngagements": "Rich Media Engagements",
      "richMediaEventCounters": "Event Counters",
      "richMediaEventTimers": "Event Timers",
      "richMediaExpansionTime": "Expansion Time",
      "richMediaExpansions": "Expansions",
      "richMediaFullScreenImpressions": "Full-Screen Impressions",
      "richMediaFullScreenVideoCompletes": "Full-Screen Video Completions",
      "richMediaFullScreenVideoPlays": "Full-Screen Video Plays",
      "richMediaHtml5Impressions": "HTML5 Impressions",
      "richMediaImpressions": "Rich Media Impressions",
      "richMediaInteractionRate": "Interaction Rate",
      "richMediaInteractionTime": "Total Interaction Time",
      "richMediaInteractions": "Total Interactions",
      "richMediaInteractiveImpressions": "Interactive Impressions",
      "richMediaManualCloses": "Manual Closes",
      "richMediaScrolls": "Rich Media Scrolls",
      "richMediaTrueViewViews": "TrueView Views",
      "richMediaVideoCompanionClicks": "Video Companion Clicks",
      "richMediaVideoCompletions": "Video Completions",
      "richMediaVideoFirstQuartileCompletes": "Video First Quartile Completions",
      "richMediaVideoFullScreens": "Video Full-Screen",
      "richMediaVideoInteractionRate": "Video Interaction Rate",
      "richMediaVideoInteractions": "Video Interactions",
      "richMediaVideoMidpoints": "Video Midpoints",
      "richMediaVideoMutes": "Video Mutes",
      "richMediaVideoPauses": "Video Pauses",
      "richMediaVideoPlays": "Video Plays",
      "richMediaVideoProgressEvents": "Video Progress Events",
      "richMediaVideoReplays": "Video Replays",
      "richMediaVideoSkips": "Video Skips",
      "richMediaVideoStops": "Video Stops",
      "richMediaVideoThirdQuartileCompletes": "Video Third Quartile Completions",
      "richMediaVideoUnmutes": "Video Unmutes",
      "richMediaVideoViewRate": "Video View Rate",
      "richMediaVideoViews": "Video Views",
      "roadblockImpressions": "Roadblock Impressions",
      "socialEngagementRate": "Social Engagement Rate",
      "socialFollows": "Follows",
      "socialLeadSubmissions": "Twitter Leads Generated",
      "socialLikes": "Likes",
      "socialOfferAccepts": "Twitter Offers Accepted",
      "socialOtherInteractions": "Other Social Interactions",
      "socialReplies": "Replies",
      "socialSharesExternal": "Shares (External)",
      "socialSharesInternal": "Shares (Internal)",
      "socialTotalEngagements": "Total Social Engagements",
      "totalConversions": "Total Conversions",
      "totalConversionsRevenue": "Total Revenue",
      "trackedAds": "Tracked Ads",
      "twitterAppClicks": "Twitter App Install Clicks",
      "twitterBuyNowCardClicks": "Twitter Buy Now Clicks",
      "twitterBuyNowPurchaseSuccessfuls": "Twitter Buy Now Purchases",
      "twitterUrlClicks": "Twitter URL Clicks",
      "twitterVideo50PercentInViewFor2Seconds": "Twitter: Video 50% In View For 2 Seconds",
      "twitterVideo100PercentInViewFor3Seconds": "Twitter: Video 100% In View For 3 Seconds",
      "uniqueReachAverageImpressionFrequency": "Unique Reach: Average Impression Frequency",
      "uniqueReachAverageImpressionFrequencyCoviewed": "Unique Reach: Average Impression Frequency (Co-Viewed)",
      "uniqueReachAverageViewableImpressionFrequency": "Unique Reach: Average Viewable Impression Frequency",
      "uniqueReachClickReach": "Unique Reach: Click Reach",
      "uniqueReachDuplicateClickReach": "Unique Reach: Duplicate Click Reach",
      "uniqueReachDuplicateClickReachPercent": "Unique Reach: Duplicate Click Reach Percent",
      "uniqueReachDuplicateImpressionReach": "Unique Reach: Duplicate Impression Reach",
      "uniqueReachDuplicateImpressionReachPercent": "Unique Reach: Duplicate Impression Reach Percent",
      "uniqueReachDuplicateTotalReach": "Unique Reach: Duplicate Total Reach",
      "uniqueReachDuplicateTotalReachPercent": "Unique Reach: Duplicate Total Reach Percent",
      "uniqueReachDuplicateViewableImpressionReach": "Unique Reach: Duplicate Viewable Impression Reach",
      "uniqueReachDuplicateViewableImpressionReachPercent": "Unique Reach: Duplicate Viewable Impression Reach Percent",
      "uniqueReachExclusiveClickReach": "Unique Reach: Exclusive Click Reach",
      "uniqueReachExclusiveClickReachPercent": "Unique Reach: Exclusive Click Reach Percent",
      "uniqueReachExclusiveImpressionReach": "Unique Reach: Exclusive Impression Reach",
      "uniqueReachExclusiveImpressionReachPercent": "Unique Reach: Exclusive Impression Reach Percent",
      "uniqueReachExclusiveTotalReach": "Unique Reach: Exclusive Total Reach",
      "uniqueReachExclusiveTotalReachPercent": "Unique Reach: Exclusive Total Reach Percent",
      "uniqueReachExclusiveViewableImpressionReach": "Unique Reach: Exclusive Viewable Impression Reach",
      "uniqueReachExclusiveViewableImpressionReachPercent": "Unique Reach: Exclusive Viewable Impression Reach Percent",
      "uniqueReachImpressionReach": "Unique Reach: Impression Reach",
      "uniqueReachImpressionReachCoviewed": "Unique Reach: Impression Reach (Co-Viewed)",
      "uniqueReachIncrementalClickReach": "Unique Reach: Incremental Click Reach",
      "uniqueReachIncrementalImpressionReach": "Unique Reach: Incremental Impression Reach",
      "uniqueReachIncrementalTotalReach": "Unique Reach: Incremental Total Reach",
      "uniqueReachIncrementalViewableImpressionReach": "Unique Reach: Incremental Viewable Impression Reach",
      "uniqueReachTotalReach": "Unique Reach: Total Reach",
      "uniqueReachTotalReachCoviewed": "Unique Reach: Total Reach (Co-Viewed)",
      "uniqueReachViewableImpressionReach": "Unique Reach: Viewable Impression Reach",
      "verificationBlockedImpressions": "Blocked Impressions",
      "verificationBlockedPercentage": "Blocked Percentage",
      "verificationClassifiedImpressions": "Classified Impressions",
      "verificationMeasurableImpressionsForAudio": "Measurable Impressions For Audio",
      "verificationMeasurableImpressionsForVideoPlayerLocation": "Measurable Impressions For Video Player Location",
      "verificationMeasurableImpressionsForVideoPlayerSize": "Measurable Impressions For Video Player Size",
      "verificationPercentageMeasurableImpressionsForAudio": "Percentage Of Measurable Impressions For Audio",
      "verificationPercentageMeasurableImpressionsForVideoPlayerLocation": "Percentage Of Measurable Impressions For Video Player Location",
      "verificationPercentageMeasurableImpressionsForVideoPlayerSize": "Percentage Of Measurable Impressions For Video Player Size",
      "verificationPublisherProblems": "Publisher Problems",
      "verificationReportingProblems": "Reporting Problems",
      "verificationServingProblems": "Serving Problems",
      "verificationVerifiableImpressions": "Verifiable Impressions",
      "verificationVideoMutedAtStart": "Video Muted At Start",
      "verificationVideoPlayerHdSizeImpressions": "HD Video Player Size Impressions",
      "verificationVideoPlayerLargeSizeImpressions": "Large Video Player Size Impressions",
      "verificationVideoPlayerLocationAvgPixelsFromLeft": "Video Player Location Avg Pixels From Left",
      "verificationVideoPlayerLocationAvgPixelsFromTop": "Video Player Location Avg Pixels From Top",
      "verificationVideoPlayerSizeAvgHeight": "Video Player Size Avg Height",
      "verificationVideoPlayerSizeAvgWidth": "Video Player Size Avg Width",
      "verificationVideoPlayerSmallSizeImpressions": "Small Video Player Size Impressions",
      "verificationVideoProminenceScore": "Video Prominence Score",
      "verificationWarnings": "Warnings",
      "videoCompanionClicks": "Companion Clicks",
      "videoCompanionImpressions": "Companion Views"
    }
  },
  "FLOODLIGHT": {
    "dimensions": {
      "activity": "Activity",
      "activityGroup": "Activity Group",
      "activityGroupId": "Activity Group ID",
      "activityId": "Activity ID",
      "activityTime": "Activity Date/Time",
      "ad": "Ad",
      "adId": "Ad ID",
      "adType": "Ad Type",
      "advertiser": "Advertiser",
      "advertiserGroup": "Advertiser Group",
      "advertiserId": "Advertiser ID",
      "asset": "Asset",
      "assetCategory": "Asset Category",
      "assetId": "Asset ID",
      "assetOrientation": "Asset Orientation",
      "audienceTargeted": "Audience Targeted",
      "browserPlatform": "Browser/Platform",
      "campaign": "Campaign",
      "campaignEndDate": "Campaign End Date",
      "campaignId": "Campaign ID",
      "campaignStartDate": "Campaign Start Date",
      "channelMix": "Channel Mix",
      "city": "City",
      "clickCount": "Click Count",
      "clickThroughUrl": "Click-through URL",
      "connectionType": "Connection Type",
      "conversionReferrer": "Conversion Referrer",
      "conversionUrl": "Conversion URL",
      "country": "Country",
      "creative": "Creative",
      "creativeGroup1": "Creative Groups 1",
      "creativeGroup2": "Creative Groups 2",
      "creativeId": "Creative ID",
      "creativeSize": "Creative Pixel Size",
      "creativeType": "Creative Type",
      "creativeVersion": "Creative Version",
      "dataSource": "Data Source",
      "date": "Date",
      "daysSinceAttributedInteraction": "Days Since Attributed Interaction",
      "daysSinceFirstInteraction": "Days Since First Interaction",
      "dmaRegion": "Designated Market Area (DMA)",
      "dynamicProfile": "Dynamic Profile",
      "dynamicProfileId": "Dynamic Profile Id",
      "feed1": "Dynamic Element 1",
      "feed1ReportingDimension1": "Feed 1 - Reporting dimension 1",
      "feed1ReportingDimension2": "Feed 1 - Reporting dimension 2",
      "feed1ReportingDimension3": "Feed 1 - Reporting dimension 3",
      "feed1ReportingLabel": "Feed 1 - Reporting label",
      "feed1UniqueId": "Feed 1 - Unique ID",
      "feed2": "Dynamic Element 2",
      "feed2ReportingDimension1": "Feed 2 - Reporting dimension 1",
      "feed2ReportingDimension2": "Feed 2 - Reporting dimension 2",
      "feed2ReportingDimension3": "Feed 2 - Reporting dimension 3",
      "feed2ReportingLabel": "Feed 2 - Reporting label",
      "feed2UniqueId": "Feed 2 - Unique ID",
      "feed3": "Dynamic Element 3",
      "feed3ReportingDimension1": "Feed 3 - Reporting dimension 1",
      "feed3ReportingDimension2": "Feed 3 - Reporting dimension 2",
      "feed3ReportingDimension3": "Feed 3 - Reporting dimension 3",
      "feed3ReportingLabel": "Feed 3 - Reporting label",
      "feed3UniqueId": "Feed 3 - Unique ID",
      "feed4": "Dynamic Element 4",
      "feed4ReportingDimension1": "Feed 4 - Reporting dimension 1",
      "feed4ReportingDimension2": "Feed 4 - Reporting dimension 2",
      "feed4ReportingDimension3": "Feed 4 - Reporting dimension 3",
      "feed4ReportingLabel": "Feed 4 - Reporting label",
      "feed4UniqueId": "Feed 4 - Unique ID",
      "feed5": "Dynamic Element 5",
      "feed5ReportingDimension1": "Feed 5 - Reporting dimension 1",
      "feed5ReportingDimension2": "Feed 5 - Reporting dimension 2",
      "feed5ReportingDimension3": "Feed 5 - Reporting dimension 3",
      "feed5ReportingLabel": "Feed 5 - Reporting label",
      "feed5UniqueId": "Feed 5 - Unique ID",
      "floodlightAttributionType": "Floodlight Attribution Type",
      "floodlightConfigId": "Floodlight Configuration",
      "floodlightVariableDimension1": "Custom Floodlight Variable 1",
      "floodlightVariableDimension2": "Custom Floodlight Variable 2",
      "floodlightVariableDimension3": "Custom Floodlight Variable 3",
      "floodlightVariableDimension4": "Custom Floodlight Variable 4",
      "floodlightVariableDimension5": "Custom Floodlight Variable 5",
      "floodlightVariableDimension6": "Custom Floodlight Variable 6",
      "floodlightVariableDimension7": "Custom Floodlight Variable 7",
      "floodlightVariableDimension8": "Custom Floodlight Variable 8",
      "floodlightVariableDimension9": "Custom Floodlight Variable 9",
      "floodlightVariableDimension10": "Custom Floodlight Variable 10",
      "floodlightVariableDimension11": "Custom Floodlight Variable 11",
      "floodlightVariableDimension12": "Custom Floodlight Variable 12",
      "floodlightVariableDimension13": "Custom Floodlight Variable 13",
      "floodlightVariableDimension14": "Custom Floodlight Variable 14",
      "floodlightVariableDimension15": "Custom Floodlight Variable 15",
      "floodlightVariableDimension16": "Custom Floodlight Variable 16",
      "floodlightVariableDimension17": "Custom Floodlight Variable 17",
      "floodlightVariableDimension18": "Custom Floodlight Variable 18",
      "floodlightVariableDimension19": "Custom Floodlight Variable 19",
      "floodlightVariableDimension20": "Custom Floodlight Variable 20",
      "floodlightVariableDimension21": "Custom Floodlight Variable 21",
      "floodlightVariableDimension22": "Custom Floodlight Variable 22",
      "floodlightVariableDimension23": "Custom Floodlight Variable 23",
      "floodlightVariableDimension24": "Custom Floodlight Variable 24",
      "floodlightVariableDimension25": "Custom Floodlight Variable 25",
      "floodlightVariableDimension26": "Custom Floodlight Variable 26",
      "floodlightVariableDimension27": "Custom Floodlight Variable 27",
      "floodlightVariableDimension28": "Custom Floodlight Variable 28",
      "floodlightVariableDimension29": "Custom Floodlight Variable 29",
      "floodlightVariableDimension30": "Custom Floodlight Variable 30",
      "floodlightVariableDimension31": "Custom Floodlight Variable 31",
      "floodlightVariableDimension32": "Custom Floodlight Variable 32",
      "floodlightVariableDimension33": "Custom Floodlight Variable 33",
      "floodlightVariableDimension34": "Custom Floodlight Variable 34",
      "floodlightVariableDimension35": "Custom Floodlight Variable 35",
      "floodlightVariableDimension36": "Custom Floodlight Variable 36",
      "floodlightVariableDimension37": "Custom Floodlight Variable 37",
      "floodlightVariableDimension38": "Custom Floodlight Variable 38",
      "floodlightVariableDimension39": "Custom Floodlight Variable 39",
      "floodlightVariableDimension40": "Custom Floodlight Variable 40",
      "floodlightVariableDimension41": "Custom Floodlight Variable 41",
      "floodlightVariableDimension42": "Custom Floodlight Variable 42",
      "floodlightVariableDimension43": "Custom Floodlight Variable 43",
      "floodlightVariableDimension44": "Custom Floodlight Variable 44",
      "floodlightVariableDimension45": "Custom Floodlight Variable 45",
      "floodlightVariableDimension46": "Custom Floodlight Variable 46",
      "floodlightVariableDimension47": "Custom Floodlight Variable 47",
      "floodlightVariableDimension48": "Custom Floodlight Variable 48",
      "floodlightVariableDimension49": "Custom Floodlight Variable 49",
      "floodlightVariableDimension50": "Custom Floodlight Variable 50",
      "floodlightVariableDimension51": "Custom Floodlight Variable 51",
      "floodlightVariableDimension52": "Custom Floodlight Variable 52",
      "floodlightVariableDimension53": "Custom Floodlight Variable 53",
      "floodlightVariableDimension54": "Custom Floodlight Variable 54",
      "floodlightVariableDimension55": "Custom Floodlight Variable 55",
      "floodlightVariableDimension56": "Custom Floodlight Variable 56",
      "floodlightVariableDimension57": "Custom Floodlight Variable 57",
      "floodlightVariableDimension58": "Custom Floodlight Variable 58",
      "floodlightVariableDimension59": "Custom Floodlight Variable 59",
      "floodlightVariableDimension60": "Custom Floodlight Variable 60",
      "floodlightVariableDimension61": "Custom Floodlight Variable 61",
      "floodlightVariableDimension62": "Custom Floodlight Variable 62",
      "floodlightVariableDimension63": "Custom Floodlight Variable 63",
      "floodlightVariableDimension64": "Custom Floodlight Variable 64",
      "floodlightVariableDimension65": "Custom Floodlight Variable 65",
      "floodlightVariableDimension66": "Custom Floodlight Variable 66",
      "floodlightVariableDimension67": "Custom Floodlight Variable 67",
      "floodlightVariableDimension68": "Custom Floodlight Variable 68",
      "floodlightVariableDimension69": "Custom Floodlight Variable 69",
      "floodlightVariableDimension70": "Custom Floodlight Variable 70",
      "floodlightVariableDimension71": "Custom Floodlight Variable 71",
      "floodlightVariableDimension72": "Custom Floodlight Variable 72",
      "floodlightVariableDimension73": "Custom Floodlight Variable 73",
      "floodlightVariableDimension74": "Custom Floodlight Variable 74",
      "floodlightVariableDimension75": "Custom Floodlight Variable 75",
      "floodlightVariableDimension76": "Custom Floodlight Variable 76",
      "floodlightVariableDimension77": "Custom Floodlight Variable 77",
      "floodlightVariableDimension78": "Custom Floodlight Variable 78",
      "floodlightVariableDimension79": "Custom Floodlight Variable 79",
      "floodlightVariableDimension80": "Custom Floodlight Variable 80",
      "floodlightVariableDimension81": "Custom Floodlight Variable 81",
      "floodlightVariableDimension82": "Custom Floodlight Variable 82",
      "floodlightVariableDimension83": "Custom Floodlight Variable 83",
      "floodlightVariableDimension84": "Custom Floodlight Variable 84",
      "floodlightVariableDimension85": "Custom Floodlight Variable 85",
      "floodlightVariableDimension86": "Custom Floodlight Variable 86",
      "floodlightVariableDimension87": "Custom Floodlight Variable 87",
      "floodlightVariableDimension88": "Custom Floodlight Variable 88",
      "floodlightVariableDimension89": "Custom Floodlight Variable 89",
      "floodlightVariableDimension90": "Custom Floodlight Variable 90",
      "floodlightVariableDimension91": "Custom Floodlight Variable 91",
      "floodlightVariableDimension92": "Custom Floodlight Variable 92",
      "floodlightVariableDimension93": "Custom Floodlight Variable 93",
      "floodlightVariableDimension94": "Custom Floodlight Variable 94",
      "floodlightVariableDimension95": "Custom Floodlight Variable 95",
      "floodlightVariableDimension96": "Custom Floodlight Variable 96",
      "floodlightVariableDimension97": "Custom Floodlight Variable 97",
      "floodlightVariableDimension98": "Custom Floodlight Variable 98",
      "floodlightVariableDimension99": "Custom Floodlight Variable 99",
      "floodlightVariableDimension100": "Custom Floodlight Variable 100",
      "hour": "Hour",
      "hoursSinceAttributedInteraction": "Hours Since Attributed Interaction",
      "hoursSinceFirstInteraction": "Hours Since First Interaction",
      "impressionCount": "Impression Count",
      "interactionChannel": "Interaction Channel",
      "interactionCountClickTracker": "Interaction Count: Click Tracker",
      "interactionCountMobileStaticImage": "Interaction Count: Mobile Static Image",
      "interactionCountMobileVideo": "Interaction Count: Mobile Video",
      "interactionCountNaturalSearch": "Interaction Count: Natural Search",
      "interactionCountPaidSearch": "Interaction Count: Paid Search",
      "interactionCountStaticImage": "Interaction Count: Static Image",
      "interactionCountVideo": "Interaction Count: Video",
      "interactionType": "Interaction Type",
      "mobileCarrier": "Mobile Carrier",
      "month": "Month",
      "naturalSearchEngineCountry": "Natural Search Engine Country",
      "naturalSearchEngineProperty": "Natural Search Engine Property",
      "naturalSearchEngineUrl": "Natural Search Engine URL",
      "naturalSearchLandingPage": "Natural Search Landing Page",
      "naturalSearchLandingPageQueryString": "Natural Search Landing Page Query String",
      "naturalSearchProcessedLandingPage": "Natural Search Processed Landing Page",
      "naturalSearchProcessedLandingPageQueryString": "Natural Search Processed Landing Page Query String",
      "naturalSearchQuery": "Natural Search Query",
      "numValue": "NUM Value",
      "operatingSystem": "Operating System",
      "operatingSystemVersion": "Operating System Version",
      "ordValue": "ORD Value",
      "packageRoadblock": "Package/Roadblock",
      "packageRoadblockId": "Package/Roadblock ID",
      "packageRoadblockStrategy": "Package/Roadblock Strategy",
      "paidSearchAd": "Paid Search Ad",
      "paidSearchAdGroup": "Paid Search Ad Group",
      "paidSearchAdGroupId": "Paid Search Ad Group ID",
      "paidSearchAdId": "Paid Search Ad ID",
      "paidSearchAdvertiser": "Paid Search Advertiser",
      "paidSearchAdvertiserId": "Paid Search Advertiser ID",
      "paidSearchAgency": "Paid Search Agency",
      "paidSearchAgencyId": "Paid Search Agency ID",
      "paidSearchBidStrategy": "Paid Search Bid Strategy",
      "paidSearchBidStrategyId": "Paid Search Bid Strategy ID",
      "paidSearchCampaign": "Paid Search Campaign",
      "paidSearchCampaignId": "Paid Search Campaign ID",
      "paidSearchEngineAccount": "Paid Search Engine Account",
      "paidSearchEngineAccountCategory": "Paid Search Engine Account Category",
      "paidSearchEngineAccountId": "Paid Search Engine Account ID",
      "paidSearchExternalAdGroupId": "Paid Search External Ad Group ID",
      "paidSearchExternalAdId": "Paid Search External Ad ID",
      "paidSearchExternalCampaignId": "Paid Search External Campaign ID",
      "paidSearchExternalKeywordId": "Paid Search External Keyword ID",
      "paidSearchKeyword": "Paid Search Keyword",
      "paidSearchKeywordId": "Paid Search Keyword ID",
      "paidSearchLabels": "Paid Search Labels",
      "paidSearchLandingPageUrl": "Paid Search Landing Page URL",
      "paidSearchLegacyKeywordId": "Paid Search Legacy Keyword ID",
      "paidSearchMatchType": "Paid Search Match Type",
      "paidSocialAd": "Paid Social Ad",
      "paidSocialAdGroup": "Paid Social Ad Group",
      "paidSocialAdGroupId": "Paid Social Ad Group ID",
      "paidSocialAdId": "Paid Social Ad ID",
      "paidSocialAdvertiser": "Paid Social Advertiser",
      "paidSocialAdvertiserId": "Paid Social Advertiser ID",
      "paidSocialAgency": "Paid Social Agency",
      "paidSocialAgencyId": "Paid Social Agency ID",
      "paidSocialCampaign": "Paid Social Campaign",
      "paidSocialCampaignId": "Paid Social Campaign ID",
      "paidSocialEngineAccount": "Paid Social Engine Account",
      "paidSocialEngineAccountId": "Paid Social Engine Account ID",
      "paidSocialExternalAdGroupId": "Paid Social External Ad Group ID",
      "paidSocialExternalAdId": "Paid Social External Ad ID",
      "paidSocialExternalCampaignId": "Paid Social External Campaign ID",
      "paidSocialExternalEngineAccountId": "Paid Social External Engine Account ID",
      "pathLength": "Path Length",
      "pathType": "Path Type",
      "placement": "Placement",
      "placementEndDate": "Placement End Date",
      "placementId": "Placement ID",
      "placementSize": "Placement Pixel Size",
      "placementStartDate": "Placement Start Date",
      "platformType": "Platform Type",
      "renderingId": "Rendering ID",
      "richMediaVideoLength": "Video Length",
      "site": "Site (CM360)",
      "siteDirectory": "Site (Site Directory)",
      "siteDirectoryId": "Site ID (Site Directory)",
      "siteId": "Site ID (CM360)",
      "siteKeyname": "Site Keyname",
      "state": "State/Region",
      "tranValue": "TRAN Value",
      "uValue": "U Value",
      "week": "Week",
      "zipCode": "ZIP/Postal Code"
    },
    "metrics": {
      "activityClickThroughConversions": "Click-through Conversions",
      "activityClickThroughRevenue": "Click-through Revenue",
      "activityViewThroughConversions": "View-through Conversions",
      "activityViewThroughRevenue": "View-through Revenue",
      "cookieConsentedFloodlightImpressions": "Cookie Consented Floodlight Impressions",
      "cookieUnconsentedFloodlightImpressions": "Cookie Unconsented Floodlight Impressions",
      "duplicateFloodlightImpressions": "Duplicate Consented Floodlight Impressions",
      "floodlightImpressions": "Floodlight Impressions",
      "floodlightVariableMetric1": "Custom Floodlight Variable 1",
      "floodlightVariableMetric2": "Custom Floodlight Variable 2",
      "floodlightVariableMetric3": "Custom Floodlight Variable 3",
      "floodlightVariableMetric4": "Custom Floodlight Variable 4",
      "floodlightVariableMetric5": "Custom Floodlight Variable 5",
      "floodlightVariableMetric6": "Custom Floodlight Variable 6",
      "floodlightVariableMetric7": "Custom Floodlight Variable 7",
      "floodlightVariableMetric8": "Custom Floodlight Variable 8",
      "floodlightVariableMetric9": "Custom Floodlight Variable 9",
      "floodlightVariableMetric10": "Custom Floodlight Variable 10",
      "floodlightVariableMetric11": "Custom Floodlight Variable 11",
      "floodlightVariableMetric12": "Custom Floodlight Variable 12",
      "floodlightVariableMetric13": "Custom Floodlight Variable 13",
      "floodlightVariableMetric14": "Custom Floodlight Variable 14",
      "floodlightVariableMetric15": "Custom Floodlight Variable 15",
      "floodlightVariableMetric16": "Custom Floodlight Variable 16",
      "floodlightVariableMetric17": "Custom Floodlight Variable 17",
      "floodlightVariableMetric18": "Custom Floodlight Variable 18",
      "floodlightVariableMetric19": "Custom Floodlight Variable 19",
      "floodlightVariableMetric20": "Custom Floodlight Variable 20",
      "floodlightVariableMetric21": "Custom Floodlight Variable 21",
      "floodlightVariableMetric22": "Custom Floodlight Variable 22",
      "floodlightVariableMetric23": "Custom Floodlight Variable 23",
      "floodlightVariableMetric24": "Custom Floodlight Variable 24",
      "floodlightVariableMetric25": "Custom Floodlight Variable 25",
      "floodlightVariableMetric26": "Custom Floodlight Variable 26",
      "floodlightVariableMetric27": "Custom Floodlight Variable 27",
      "floodlightVariableMetric28": "Custom Floodlight Variable 28",
      "floodlightVariableMetric29": "Custom Floodlight Variable 29",
      "floodlightVariableMetric30": "Custom Floodlight Variable 30",
      "floodlightVariableMetric31": "Custom Floodlight Variable 31",
      "floodlightVariableMetric32": "Custom Floodlight Variable 32",
      "floodlightVariableMetric33": "Custom Floodlight Variable 33",
      "floodlightVariableMetric34": "Custom Floodlight Variable 34",
      "floodlightVariableMetric35": "Custom Floodlight Variable 35",
      "floodlightVariableMetric36": "Custom Floodlight Variable 36",
      "floodlightVariableMetric37": "Custom Floodlight Variable 37",
      "floodlightVariableMetric38": "Custom Floodlight Variable 38",
      "floodlightVariableMetric39": "Custom Floodlight Variable 39",
      "floodlightVariableMetric40": "Custom Floodlight Variable 40",
      "floodlightVariableMetric41": "Custom Floodlight Variable 41",
      "floodlightVariableMetric42": "Custom Floodlight Variable 42",
      "floodlightVariableMetric43": "Custom Floodlight Variable 43",
      "floodlightVariableMetric44": "Custom Floodlight Variable 44",
      "floodlightVariableMetric45": "Custom Floodlight Variable 45",
      "floodlightVariableMetric46": "Custom Floodlight Variable 46",
      "floodlightVariableMetric47": "Custom Floodlight Variable 47",
      "floodlightVariableMetric48": "Custom Floodlight Variable 48",
      "floodlightVariableMetric49": "Custom Floodlight Variable 49",
      "floodlightVariableMetric50": "Custom Floodlight Variable 50",
      "floodlightVariableMetric51": "Custom Floodlight Variable 51",
      "floodlightVariableMetric52": "Custom Floodlight Variable 52",
      "floodlightVariableMetric53": "Custom Floodlight Variable 53",
      "floodlightVariableMetric54": "Custom Floodlight Variable 54",
      "floodlightVariableMetric55": "Custom Floodlight Variable 55",
      "floodlightVariableMetric56": "Custom Floodlight Variable 56",
      "floodlightVariableMetric57": "Custom Floodlight Variable 57",
      "floodlightVariableMetric58": "Custom Floodlight Variable 58",
      "floodlightVariableMetric59": "Custom Floodlight Variable 59",
      "floodlightVariableMetric60": "Custom Floodlight Variable 60",
      "floodlightVariableMetric61": "Custom Floodlight Variable 61",
      "floodlightVariableMetric62": "Custom Floodlight Variable 62",
      "floodlightVariableMetric63": "Custom Floodlight Variable 63",
      "floodlightVariableMetric64": "Custom Floodlight Variable 64",
      "floodlightVariableMetric65": "Custom Floodlight Variable 65",
      "floodlightVariableMetric66": "Custom Floodlight Variable 66",
      "floodlightVariableMetric67": "Custom Floodlight Variable 67",
      "floodlightVariableMetric68": "Custom Floodlight Variable 68",
      "floodlightVariableMetric69": "Custom Floodlight Variable 69",
      "floodlightVariableMetric70": "Custom Floodlight Variable 70",
      "floodlightVariableMetric71": "Custom Floodlight Variable 71",
      "floodlightVariableMetric72": "Custom Floodlight Variable 72",
      "floodlightVariableMetric73": "Custom Floodlight Variable 73",
      "floodlightVariableMetric74": "Custom Floodlight Variable 74",
      "floodlightVariableMetric75": "Custom Floodlight Variable 75",
      "floodlightVariableMetric76": "Custom Floodlight Variable 76",
      "floodlightVariableMetric77": "Custom Floodlight Variable 77",
      "floodlightVariableMetric78": "Custom Floodlight Variable 78",
      "floodlightVariableMetric79": "Custom Floodlight Variable 79",
      "floodlightVariableMetric80": "Custom Floodlight Variable 80",
      "floodlightVariableMetric81": "Custom Floodlight Variable 81",
      "floodlightVariableMetric82": "Custom Floodlight Variable 82",
      "floodlightVariableMetric83": "Custom Floodlight Variable 83",
      "floodlightVariableMetric84": "Custom Floodlight Variable 84",
      "floodlightVariableMetric85": "Custom Floodlight Variable 85",
      "floodlightVariableMetric86": "Custom Floodlight Variable 86",
      "floodlightVariableMetric87": "Custom Floodlight Variable 87",
      "floodlightVariableMetric88": "Custom Floodlight Variable 88",
      "floodlightVariableMetric89": "Custom Floodlight Variable 89",
      "floodlightVariableMetric90": "Custom Floodlight Variable 90",
      "floodlightVariableMetric91": "Custom Floodlight Variable 91",
      "floodlightVariableMetric92": "Custom Floodlight Variable 92",
      "floodlightVariableMetric93": "Custom Floodlight Variable 93",
      "floodlightVariableMetric94": "Custom Floodlight Variable 94",
      "floodlightVariableMetric95": "Custom Floodlight Variable 95",
      "floodlightVariableMetric96": "Custom Floodlight Variable 96",
      "floodlightVariableMetric97": "Custom Floodlight Variable 97",
      "floodlightVariableMetric98": "Custom Floodlight Variable 98",
      "floodlightVariableMetric99": "Custom Floodlight Variable 99",
      "floodlightVariableMetric100": "Custom Floodlight Variable 100",
      "lastClickAttributedTransactionCount": "Click-through Transaction Count",
      "lastImpressionAttributedTransactionCount": "View-through Transaction Count",
      "totalConversions": "Total Conversions",
      "totalConversionsRevenue": "Total Revenue",
      "transactionCount": "Transaction Count"
    }
  },
  "PATH": {
    "dimensions": {
      "activity": "Activity",
      "activityId": "Activity ID",
      "ad": "Ad",
      "adId": "Ad ID",
      "campaign": "Campaign",
      "campaignId": "Campaign ID",
      "creative": "Creative",
      "creativeId": "Creative ID",
      "eventType": "Event Type",
      "pathChannelGroupingName": "Channel Grouping",
      "pathEventIndex": "Path Event Index",
      "pathPatternId": "Path Pattern ID",
      "placement": "Placement",
      "placementId": "Placement ID",
      "site": "Site (CM360)",
      "siteId": "Site ID (CM360)"
    },
    "metrics": {
      "activityRevenue": "Total Revenue",
      "pathTotalConversions": "Total Conversions",
      "totalPaths": "Total Paths"
    }
  },
  "PATH_ATTRIBUTION": {
    "dimensions": {
      "ad": "Ad",
      "adId": "Ad ID",
      "campaign": "Campaign",
      "campaignId": "Campaign ID",
      "creative": "Creative",
      "creativeId": "Creative ID",
      "pathChannelGroupingName": "Channel Grouping",
      "placement": "Placement",
      "placementId": "Placement ID",
      "site": "Site (CM360)",
      "siteId": "Site ID (CM360)"
    },
    "metrics": {
      "activityRevenue": "Total Revenue",
      "convertingPaths": "Converting Paths",
      "lastTouchClickThroughConversions": "Click-through Conversions",
      "lastTouchTotalConversions": "Total Conversions",
      "lastTouchViewThroughConversions": "View-through Conversions",
      "pathConversionRate": "Path Conversion Rate",
      "totalExposures": "Total Exposures",
      "totalPaths": "Total Paths"
    }
  }
}


================================================
FILE: src/google_cm360/__init__.py
================================================
from .client import GoogleCM360Client, GoogleDV360ClientException  # noqa F401



================================================
FILE: src/google_cm360/client.py
================================================
# import http
import io

from google_auth_oauthlib.flow import Flow
from googleapiclient import discovery
from googleapiclient.errors import HttpError
from googleapiclient.http import MediaIoBaseDownload
from keboola.component.exceptions import UserException

from datetime import datetime

import logging


class GoogleDV360ClientException(UserException):
    pass


class GoogleCM360Client:
    def __init__(self, client_id: str, app_secret: str, token_data: dict, scopes: list):
        self.service = None
        token_response = token_data
        token_response['expires_at'] = 22222
        client_secrets = {
            "web": {
                "client_id": client_id,
                "client_secret": app_secret,
                "redirect_uris": ["https://www.example.com/oauth2callback"],
                "auth_uri": "https://oauth2.googleapis.com/auth",
                "token_uri": "https://oauth2.googleapis.com/token"
            }
        }

        credentials = Flow.from_client_config(client_secrets, scopes=scopes, token=token_response).credentials
        discovery_url = 'https://dfareporting.googleapis.com/$discovery/rest?version=v4'
        # Build the API service.
        self.service = discovery.build(
            'dfareporting', 'v4',
            discoveryServiceUrl=discovery_url,
            credentials=credentials)
        logging.info(f'{datetime.now().strftime("%H:%M:%S.%f")[:-3]} Google DV360 client initialized')

    def list_profiles(self) -> dict:
        """Call API to retrieve available profiles

        Returns: mapping of profileId -> userName

        """
        request = self.service.userProfiles().list()
        response = request.execute()
        id_2_name = dict([(p['profileId'], p['userName']) for p in response['items']])
        return id_2_name

    def list_metadata(self, profile_id: str = None, endpoint_name: str = None):
        """Call API to retrieve available profiles

        Returns: mapping of profileId -> userName

        """
        try:
            next_page = None
            while True:

                request_args = {'profileId': profile_id}
                if next_page is not None:
                    request_args['pageToken'] = next_page

                response = getattr(self.service, endpoint_name)().list(**request_args).execute()

                if endpoint_name in response:
                    for item in response[endpoint_name]:
                        yield item

                next_page = response.get('nextPageToken')
                if not next_page:
                    break

        except HttpError as ex:
            if ex.resp.status == 403:
                raise UserException(f'{ex.reason} Reauthorize the component to enable new scopes for listing metadata')

        except Exception as ex:
            logging.warning(f'Listing metadata for {endpoint_name}: {ex}')

    def list_reports(self, profile_id: str = None):
        if not profile_id:
            profile_id = self.service.userProfiles().list().execute()['items'][0]['profileId']

        request = self.service.reports().list(profileId=profile_id)
        response = request.execute()
        return response['items']

    def get_report(self, report_id: str, profile_id: str = None, ignore_error: bool = False):
        if not profile_id:
            profile_id = self.service.userProfiles().list().execute()['items'][0]['profileId']
        request = self.service.reports().get(profileId=profile_id, reportId=report_id)
        try:
            response = request.execute()
        except HttpError as ex:
            if ignore_error:
                return None
            else:
                raise UserException(f'Get report {report_id} for {profile_id}: {ex.reason}')
        return response

    def delete_report(self, report_id: str, profile_id: str, ignore_error: bool = False):
        request = self.service.reports().delete(profileId=profile_id, reportId=report_id)
        try:
            response = request.execute()
        except HttpError as ex:
            if ignore_error:
                return None
            else:
                raise UserException(f'Error deleting report {report_id} for {profile_id}: {ex.reason}')
        return response

    def patch_report(self, report: dict, report_id: str, profile_id: str):
        response = self.service.reports().delete(profileId=profile_id, reportId=report_id, body=report).execute()
        return response

    def update_report(self, report: dict, report_id: str, profile_id: str):
        response = self.service.reports().update(profileId=profile_id, reportId=report_id, body=report).execute()
        return response

    def list_compatible_fields(self, report_type: str = "STANDARD", compat_fields: str = "reportCompatibleFields",
                               attribute: str = "dimensions", profile_id: str = None):
        if not profile_id:
            profile_id = self.service.userProfiles().list().execute()['items'][0]['profileId']

        request = self.service.reports().compatibleFields().query(profileId=profile_id, body={"type": report_type})
        response = request.execute()

        return [item['name'] for item in response[compat_fields][attribute]]

    def create_report(self, report: dict, profile_id: str = None):
        inserted_report = self.service.reports().insert(profileId=profile_id, body=report).execute()
        return inserted_report

    def run_report(self, report_id: str, profile_id: str):
        report_file = self.service.reports().run(profileId=profile_id, reportId=report_id).execute()
        return report_file

    def report_status(self, report_id: str, file_id: str):
        report_file = self.service.files().get(reportId=report_id, fileId=file_id).execute()
        return report_file

    def get_report_file(self, report_id: str, file_id: str, local_file_name: str):
        out_file = io.FileIO(local_file_name, mode='wb')
        request = self.service.files().get_media(reportId=report_id, fileId=file_id)
        CHUNK_SIZE = 8192
        downloader = MediaIoBaseDownload(
            out_file, request, chunksize=CHUNK_SIZE)
        download_finished = False
        while download_finished is False:
            _, download_finished = downloader.next_chunk()



================================================
FILE: src/google_cm360/report_specification.py
================================================
REPORT_KEBOOLA_BASE_STRUCTURE = {"name": "kebola-ex-generated",
                                 "fileName": "kebola-ex-file",
                                 "kind": "dfareporting#report",
                                 "format": "CSV"
                                 }

MAP_REPORT_TYPE_2_COMPATIBLE_SECTION = {
    'STANDARD': 'reportCompatibleFields',
    'REACH': 'reachReportCompatibleFields',
    'FLOODLIGHT': 'floodlightReportCompatibleFields',
    'PATH': 'pathReportCompatibleFields',
    'PATH_ATTRIBUTION': 'pathAttributionReportCompatibleFields'
}

MAP_REPORT_TYPE_2_CRITERIA = {
    'STANDARD': 'criteria',
    'REACH': 'reachCriteria',
    'FLOODLIGHT': 'floodlightCriteria',
    'PATH': 'pathCriteria',
    'PATH_ATTRIBUTION': 'pathAttributionCriteria'
}


class CsvReportSpecification:

    def __init__(self, report_dict: dict):
        self.report_representation = report_dict

    @classmethod
    def custom_from_specification(cls, report_name: str, report_type: str, date_range: dict, dimensions, metrics):
        report = REPORT_KEBOOLA_BASE_STRUCTURE.copy()
        report['name'] = report_name
        report['type'] = report_type
        criteria = {
            'dateRange': date_range,
            'dimensions': dimensions or [],
            'metricNames': metrics or []
        }
        report[MAP_REPORT_TYPE_2_CRITERIA[report_type]] = criteria

        return cls(report)

    def modify_date_range(self, date_range: dict):
        self.report_criteria['dateRange'] = date_range

    def update_template_commons(self, report_id: str, profile_id: str, account_id: str):
        self.report_id = report_id
        self.profile_id = profile_id
        self.account_id = account_id

    def prepare_update_body(self, report_definition):
        updated_report_body: dict = report_definition.report_representation.copy()
        updated_report_body['id'] = self.report_id
        updated_report_body['ownerProfileId'] = self.profile_id
        """
        IMPORTANT: When we want to update existing report, the lastModifiedTime field
        must exactly match existing report's value. API uses this as a precaution
        to avoid concurrent update of the same object from different clients.
        Notice:
        1) Client reads in a report specification
        2) Client modifies certain value
        3) Client asks for update of a report specification
        When 2 clients try to update the same report object at the same time
        only the first one succeeds. The second user would fail and that's intentional
        else he would be updating already updated object - in a state different
        from what he saw when reading original report specification.
        """
        updated_report_body['lastModifiedTime'] = self.report_representation['lastModifiedTime']
        updated_report_body['accountId'] = self.report_representation['accountId']
        return updated_report_body

    def prepare_insert_body(self):
        new_report_body = self.report_representation.copy()
        for key in ['id', 'ownerProfileId', 'lastModifiedTime', 'etag', 'accountId']:
            new_report_body.pop(key, None)
        return new_report_body

    @property
    def report_type(self) -> str:
        return self.report_representation['type']

    def get_dimensions_names(self):
        dimensions = [item['name'] for item in self.report_criteria['dimensions']]
        return dimensions

    def get_metrics_names(self):
        metrics = self.report_criteria['metricNames'].copy()
        return metrics

    @property
    def report_id(self) -> str:
        return self.report_representation['id']

    @report_id.setter
    def report_id(self, report_id: str):
        self.report_representation['id'] = report_id

    @property
    def profile_id(self) -> str:
        return self.report_representation['ownerProfileId']

    @profile_id.setter
    def profile_id(self, profile_id: str):
        self.report_representation['ownerProfileId'] = profile_id

    @property
    def account_id(self) -> str:
        return self.report_representation['accountId']

    @account_id.setter
    def account_id(self, account_id: str):
        self.report_representation['accountId'] = account_id

    @property
    def report_criteria(self) -> dict:
        criteria_key = MAP_REPORT_TYPE_2_CRITERIA[self.report_representation["type"]]
        return self.report_representation[criteria_key]

    @report_criteria.setter
    def report_criteria(self, criteria: dict):
        criteria_key = MAP_REPORT_TYPE_2_CRITERIA[self.report_representation["type"]]
        self.report_representation[criteria_key] = criteria



================================================
FILE: tests/__init__.py
================================================
import sys
import os
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../src")


================================================
FILE: tests/test_component.py
================================================
'''
Created on 12. 11. 2018

@author: esner
'''
import unittest
import mock
import os
from freezegun import freeze_time

from component import Component


class TestComponent(unittest.TestCase):

    # set global time to 2010-10-10 - affects functions like datetime.now()
    @freeze_time("2010-10-10")
    # set KBC_DATADIR env to non-existing dir
    @mock.patch.dict(os.environ, {'KBC_DATADIR': './non-existing-dir'})
    def test_run_no_cfg_fails(self):
        with self.assertRaises(ValueError):
            comp = Component()
            comp.run()


if __name__ == "__main__":
    # import sys;sys.argv = ['', 'Test.testName']
    unittest.main()


