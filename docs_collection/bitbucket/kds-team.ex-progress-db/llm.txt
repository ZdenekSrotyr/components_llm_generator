Directory structure:
└── kds_consulting_team-kds-team.ex-progress-db/
    ├── README.md
    ├── bitbucket-pipelines.yml
    ├── composer.json
    ├── composer.lock
    ├── deploy.sh
    ├── docker-compose.yml
    ├── Dockerfile
    ├── Dockerfile-xdebug
    ├── LICENSE
    ├── phpcs.xml
    ├── phpstan.neon
    ├── phpunit.xml.dist
    ├── test.php
    ├── .dockerignore
    ├── .env.dist
    ├── component_config/
    │   ├── component_long_description.md
    │   ├── component_short_description.md
    │   ├── configRowSchema.json
    │   ├── configSchema.json
    │   ├── configuration_description.md
    │   ├── stack_parameters.json
    │   └── sample-config/
    │       ├── config.json
    │       └── in/
    │           ├── state.json
    │           ├── files/
    │           │   └── order1.xml
    │           └── tables/
    │               ├── test.csv
    │               └── test.csv.manifest
    ├── docker/
    │   ├── composer-install.sh
    │   ├── php-prod.ini
    │   └── xdebug/
    │       └── xdebug.ini.dist
    ├── odbc/
    │   ├── install.ini
    │   ├── odbc..ini
    │   ├── odbcinst.ini
    │   └── progress/
    │       ├── Readme.txt
    │       ├── _ovrly
    │       ├── dbtools
    │       ├── esqlclnt
    │       ├── inst_hlp
    │       ├── install.tab
    │       ├── installd.ini
    │       ├── intlsets.txt
    │       ├── itermcap
    │       ├── jre
    │       ├── juniper
    │       ├── namesvr
    │       ├── perl
    │       ├── pmame
    │       ├── progress.cfg
    │       ├── proinst
    │       ├── proupdt
    │       ├── secclnt
    │       ├── seccmn
    │       ├── sqlcom
    │       ├── sqljdbc
    │       └── wscmn
    ├── scripts/
    │   ├── build_n_run.ps1
    │   ├── build_n_test.sh
    │   ├── run.bat
    │   ├── run_kbc_tests.ps1
    │   └── update_dev_portal_properties.sh
    ├── src/
    │   ├── OdbcApplication.php
    │   ├── OdbcDsnFactory.php
    │   ├── run.php
    │   ├── Configuration/
    │   │   ├── OdbcDatabaseConfig.php
    │   │   └── OdbcDbNode.php
    │   ├── Extractor/
    │   │   ├── OdbcConnection.php
    │   │   ├── OdbcExtractor.php
    │   │   ├── OdbcQueryFactory.php
    │   │   ├── QuoteIdentifierTrait.php
    │   │   └── QuoteTrait.php
    │   └── Metadata/
    │       ├── OdbcDataType.php
    │       ├── OdbcManifestSerializer.php
    │       └── OdbcMetadataProviderFactory.php
    └── tests/
        ├── functional/
        │   ├── DatabaseSetupManager.php
        │   ├── DatadirTest.php
        │   ├── DatadirTestsProvider.php
        │   ├── full-load-error-column-not-found/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-error-no-port/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── full-load-error-table-not-found/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── full-load-error-table-not-found-escaping/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── full-load-ok/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-columns/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-custom-query/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-empty/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-escaping/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-manifest/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── full-load-ok-ssh/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-error-column-not-found/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-date/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-datetime/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-decimal/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-empty/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-int/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-limit/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-state/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-state-limit/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-state-no-change/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── incremental-load-ok-text/
        │   │   ├── expected-stderr
        │   │   ├── expected-stdout
        │   │   └── setUp.php
        │   ├── test-connection-invalid-host/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── test-connection-invalid-server-name/
        │   │   ├── expected-code
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── test-connection-ok/
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   ├── test-connection-ok-protocol/
        │   │   ├── expected-stderr
        │   │   └── expected-stdout
        │   └── test-connection-ok-ssh/
        │       ├── expected-stderr
        │       └── expected-stdout
        └── phpunit/
            ├── BaseTest.php
            ├── bootstrap.php
            ├── OdbcDriverTest.php
            ├── OdbcTestConnectionFactory.php
            ├── Metadata/
            │   └── OdbcMetadataProviderTest.php
            ├── SyncActions/
            │   └── GetTablesTest.php
            └── Traits/
                ├── CloseSshTunnelsTrait.php
                ├── CreateTableTrait.php
                ├── DefaultSchemaTrait.php
                ├── GetSshKeysTrait.php
                ├── InsertRowsTrait.php
                ├── RemoveAllTablesTrait.php
                └── Tables/
                    ├── ComplexTableTrait.php
                    ├── EscapingTableTrait.php
                    ├── IncrementalTableTrait.php
                    ├── PkAndFkTablesTrait.php
                    └── SimpleTableTrait.php

================================================
FILE: README.md
================================================
# Informix ODBC Extractor

[![Build Status](https://travis-ci.com/keboola/db-extractor-informix.svg?branch=master)](https://travis-ci.com/keboola/db-extractor-informix)

[KBC](https://www.keboola.com/product/) Docker app for extracting data from [IBM Informix](https://www.ibm.com/products/informix) database.

See [Extractors for SQL Databases](https://help.keboola.com/components/extractors/database/sqldb/) for more documentation.

# Usage

## Configuration

The configuration `config.json` contains following properties in `parameters` key: 

*Note:* `query` or `table` must be specified.

*Note:* Parameters `db.serverName`, `db.protocol`, `db.dbLocale` are in addition to other extractors.

- `db` - object (required): Connection settings
    - `host` - string (required): IP address or hostname of Apache Hive DB server
    - **`serverName`** - string (required): Informix database server name, [read more](https://www.querytool.com/help/981.htm).
    - **`protocol`** - enum (optional): protocol `onsoctcp` or `onsocssl`, default `onsoctcp`, [read more](https://www.ibm.com/support/knowledgecenter/en/SSGU8G_11.50.0/com.ibm.admin.doc/ids_admin_0161.htm).
    - **`dbLocale`** - string (optional): Informix `DB_LOCALE`, default `en_US.utf8`.
    - `port` - integer (required): Server port (default port is `10000`)
    - `user` - string (required): User with correct access rights
    - `#password` - string (required): Password for given `user`
    - `database` - string (required): Database to connect to
    - `ssh` - object (optional): Settings for SSH tunnel
        - `enabled` - bool (required):  Enables SSH tunnel
        - `sshHost` - string (required): IP address or hostname of SSH server
        - `sshPort` - integer (optional): SSH server port (default port is `22`)
        - `localPort` - integer (required): SSH tunnel local port in Docker container (default `33006`)
        - `user` - string (optional): SSH user (default same as `db.user`)
        - `compression`  - bool (optional): Enables SSH tunnel compression (default `false`)
        - `keys` - object (optional): SSH keys
            - `public` - string (optional): Public SSH key
            - `#private` - string (optional): Private SSH key
- `query` - string (optional): SQL query whose output will be extracted
- `table` - object (optional): Table whose will be extracted
    - `tableName` - string (required)
    - `schema` - string (required)
- `columns` - array (optional): List of columns to export (default all columns)
- `outputTable` - string (required): Name of the output table 
- `incremental` - bool (optional):  Enables [Incremental Loading](https://help.keboola.com/storage/tables/#incremental-loading)
- `incrementalFetchingColumn` - string (optional): Name of column for [Incremental Fetching](https://help.keboola.com/components/extractors/database/#incremental-fetching)
- `incrementalFetchingLimit` - integer (optional): Max number of rows fetched per one run
- `primaryKey` - string (optional): Sets primary key to specified column in output table
- `retries` - integer (optional): Number of retries if an error occurred

### Examples

Full export:
```json
{
  "parameters": {
    "db": {
      "host": "my-informix.com",
      "serverName": "informix",
      "port": "9088",
      "database": "test",
      "user": "informix",
      "#password": "*****"
    },
    "outputTable": "output",
    "table": {
      "tableName": "simple",
      "schema": "informix"
    }
  }
}
```

Custom query:
```json
{
  "parameters": {
    "db": "...",
    "outputTable": "output",
    "query": "SELECT name, date, id FROM simple",
    "primaryKey": ["id"]
  }
}
```

Incremental fetching + load only defined columns:
```json
{
  "parameters": {
    "db": "...",
    "outputTable": "output",
    "table": {
      "tableName": "incremental",
      "schema": "${DEFAULT_SCHEMA}"
    },
    "columns": ["id", "name", "datetime"],
    "incremental": true,
    "incrementalFetchingColumn": "datetime"
  }
}
```

## Development
 
Create `.env` file with AWS credentials. They are needed to download the driver from the `keboola-drivers` bucket.
```
AWS_ACCESS_KEY_ID=...
AWS_SECRET_ACCESS_KEY=...
```
 
Clone this repository and init the workspace with following command:

```
git clone https://github.com/keboola/db-extractor-informix
cd db-extractor-informix
docker-compose build
docker-compose run --rm dev composer install --no-scripts
```

Run the test suite using this command:

```
docker-compose run --rm dev composer tests
```
 
# How to replace the ODBC driver

This repository can be used as a template for any ODBC driver. 
All operations are well covered by unit and functional tests.  
Database-specific code is delimited and defined in one place -
eg. escaping, SQL generation, DB connection, ...

## Steps to replace the ODBC driver

1. **Install a new ODBC driver in the `Dockerfile`**
    - It can be downloaded from the public sources.
    - Or from [a private S3](https://github.com/keboola/db-extractor-informix/blob/f43de64ec06268a3072c1118b18c3583a41e45ea/Dockerfile#L1-L6) if a driver is not publicly available.
    - If you need to use a [CDATA](https://www.cdata.com/) driver, you can be inspired by [db-extractor-netsuite Dockerfile](https://github.com/keboola/db-extractor-netsuite/blob/c80be49f2045ac055c5a7bc2a63dd154f62fa036/Dockerfile#L49-L58)
    - By default, CDATA drivers are licensed for only one computer. 
        - Container always looks like a different computer for the driver.
        - So for CDATA is needed [RTK](https://github.com/keboola/db-extractor-netsuite/blob/c80be49f2045ac055c5a7bc2a63dd154f62fa036/Dockerfile#L3-L5) - runtime license key.
    - Run `docker-compose build` to build modified `Dockerfile`.
2. **Set up a test database in `docker-compose.yml`**
    - Configure  `db` service and modify the environment, eg. `DB_USER`,  `DB_HOST` ...
    - If it is not possible to run the database in a container, then remove the `db` service.
        - And set the environment variables to a test database connection.
        - In this case, `docker-compose.yml` contains only the names of environment variables.
        - The values are defined in the local environment and in the CI.
3. **Modify `OdbcDsnFactory` class to create the correct DSN connection string**
    - You may need to modify the configuration definition `OdbcDbNode` and `OdbcDatabaseConfig` classes.
    - In these classes: 
        - Remove configuration nodes that are not needed.
        - Add the new nodes needed to configure the ODBC driver.
        - Don't forget to write these changes into `README.md`.
4. **Prepare test environment**
    - Modify `getDbConfigArray` method in `OdbcTestConnectionFactory` to match `OdbcDbNode` and `docker-compose.yml`.
    - Modify SQL in `RemoveAllTablesTrait::removeAllTables`.
5. **Test connection**
    - Everything should be ready for the driver to connect to the database.
    - Run `docker-compose run --rm dev ./vendor/bin/phpunit ./tests/phpunit/OdbcDriverTest.php`
6. **Modify the database-specific code in the extractor**
    - Go through these classes and modify them if needed:
        - `QuoteIdentifierTrait` and `QuoteTrait`
        - `OdbcConnection::testConnection` and `OdbcQueryFactory`
        - `MetadataQueryFactory` and `OdbcMetadataProcessor`
        - `OdbcManifestSerializer` and `OdbcDataType`
7. **Modify the database-specific code in the tests**
    - Go through these classes and modify them if needed:
        - `CreateTableTrait`, `DefaultSchemaTrait`, `InsertRowsTrait`
        - `ComplexTableTrait`, `EscapingTableTrait`, `IncrementalTableTrait`, `PkAndFkTablesTrait`, `SimpleTableTrait`
8. **Run all tests**
    - Run `docker-compose run --rm dev composer ci` a and fix errors found.
9. **Setup continuous integration**
 
# Integration

For information about deployment and integration with KBC, please refer to the [deployment section of developers documentation](https://developers.keboola.com/extend/component/deployment/) 



================================================
FILE: bitbucket-pipelines.yml
================================================
options:
  docker: true

image: python:3.7.2
pipelines:
  default:
    - step:
        caches:
          - docker
        script:
          - export APP_IMAGE=keboola-component
          - docker build . --tag=$APP_IMAGE
          - docker images
          - docker -v
#          - pip install docker-compose
#          - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
#          - docker-compose run --rm wait
#          - docker run --rm $APP_IMAGE composer ci
          # push test image to ecr - uncomment for testing before deployment
          - echo 'Pushing test image to repo. [tag=test]'
          - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
          - docker tag $APP_IMAGE:latest $REPOSITORY:test
          - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
          - docker push $REPOSITORY:test

  branches:
    master:
      - step:
          caches:
            - docker
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker -v
            #- pip install docker-compose
            # - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
            # - docker-compose run --rm wait
            # disable tests for now
            # - docker run --rm $APP_IMAGE composer ci
            # push test image to ecr - uncomment for testing before deployment
            - echo 'Pushing test image to repo. [tag=test]'
            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            - docker tag $APP_IMAGE:latest $REPOSITORY:test
            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            - docker push $REPOSITORY:test
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - ./scripts/update_dev_portal_properties.sh
  tags:
    '*':
      - step:
          deployment: production
          script:
            - export APP_IMAGE=keboola-component
            - docker build . --tag=$APP_IMAGE
            - docker images
            # - pip install docker-compose
            # - docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t $APP_IMAGE .
            # - docker-compose run --rm wait
            # - docker-compose run --rm app composer ci
            # disable tests for now
            # - docker run --rm $APP_IMAGE composer ci
            - chmod +x ./scripts/update_dev_portal_properties.sh
            - chmod +x ./deploy.sh
            - ./scripts/update_dev_portal_properties.sh
            - ./deploy.sh


================================================
FILE: composer.json
================================================
{
    "name": "keboola/db-extractor-informix",
    "description": "Docker application for exporting data from Informix database.",
    "authors": [
        {
            "name": "Keboola",
            "email": "devel@keboola.com"
        }
    ],
    "license": "MIT",
    "require": {
        "php": "^7.4",
        "ext-odbc": "*",
        "keboola/php-component": "^9.3",
        "keboola/db-extractor-common": "^16.1",
        "keboola/db-extractor-adapter": "^1.10",
        "keboola/db-extractor-config": "^1.12",
        "keboola/db-extractor-table-format": "^3.1.6"
    },
    "require-dev": {
        "ext-json": "*",
        "keboola/coding-standard": ">=7.0.2",
        "keboola/datadir-tests": "^4.0",
        "keboola/php-temp": "^2.0",
        "php-parallel-lint/php-parallel-lint": "^1.2",
        "phpstan/phpstan": "^0.12.14",
        "phpunit/phpunit": "^9.0",
        "symfony/finder": "^5.1",
        "symfony/process": "^5.0"
    },
    "autoload": {
        "psr-4": {
            "Keboola\\DbExtractor\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Keboola\\DbExtractor\\Tests\\": "tests/phpunit/",
            "Keboola\\DbExtractor\\FunctionalTests\\": "tests/functional/"
        }
    },
    "scripts": {
        "tests-phpunit": "phpunit",
        "tests-datadir": "phpunit tests/functional",
        "tests": [
            "@tests-phpunit",
            "@tests-datadir"
        ],

        "phpstan": "phpstan analyse ./src ./tests --level=max --no-progress -c phpstan.neon",
        "phpcs": "phpcs -n --ignore=vendor --extensions=php .",
        "phpcbf": "phpcbf -n --ignore=vendor --extensions=php .",
        "phplint": "parallel-lint -j 10 --exclude vendor .",
        "build": [
            "@phplint",
            "@phpcs",
            "@phpstan",
            "@tests"
        ],
        "ci": [
            "@composer validate --no-check-publish --no-check-all",
            "@build"
        ]
    },
    "config": {
        "sort-packages": true,
        "optimize-autoloader": true
    }
}



================================================
FILE: composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "8762a47b571c5d7db74431ecaf9c6cf2",
    "packages": [
        {
            "name": "doctrine/instantiator",
            "version": "1.5.0",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/instantiator.git",
                "reference": "0a0fa9780f5d4e507415a065172d26a98d02047b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/0a0fa9780f5d4e507415a065172d26a98d02047b",
                "reference": "0a0fa9780f5d4e507415a065172d26a98d02047b",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "require-dev": {
                "doctrine/coding-standard": "^9 || ^11",
                "ext-pdo": "*",
                "ext-phar": "*",
                "phpbench/phpbench": "^0.16 || ^1",
                "phpstan/phpstan": "^1.4",
                "phpstan/phpstan-phpunit": "^1",
                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
                "vimeo/psalm": "^4.30 || ^5.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com",
                    "homepage": "https://ocramius.github.io/"
                }
            ],
            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
            "homepage": "https://www.doctrine-project.org/projects/instantiator.html",
            "keywords": [
                "constructor",
                "instantiate"
            ],
            "support": {
                "issues": "https://github.com/doctrine/instantiator/issues",
                "source": "https://github.com/doctrine/instantiator/tree/1.5.0"
            },
            "funding": [
                {
                    "url": "https://www.doctrine-project.org/sponsorship.html",
                    "type": "custom"
                },
                {
                    "url": "https://www.patreon.com/phpdoctrine",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator",
                    "type": "tidelift"
                }
            ],
            "time": "2022-12-30T00:15:36+00:00"
        },
        {
            "name": "keboola/common-exceptions",
            "version": "1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/common-exceptions.git",
                "reference": "35ac327808f0e4157c9de6cbe0bf8536145cb5ac"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/common-exceptions/zipball/35ac327808f0e4157c9de6cbe0bf8536145cb5ac",
                "reference": "35ac327808f0e4157c9de6cbe0bf8536145cb5ac",
                "shasum": ""
            },
            "require": {
                "php": "^7.1|^8.0"
            },
            "require-dev": {
                "keboola/coding-standard": "^13.0",
                "keboola/php-temp": "^1.0",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpstan": "^0.12.93",
                "phpunit/phpunit": "^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\CommonExceptions\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Common exceptions shared between different applications",
            "support": {
                "source": "https://github.com/keboola/common-exceptions/tree/1.2.1"
            },
            "time": "2022-10-02T21:12:00+00:00"
        },
        {
            "name": "keboola/csv",
            "version": "3.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csv.git",
                "reference": "ea1e00e255de657ad51b5ad3cef79e3ef9f2df9d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csv/zipball/ea1e00e255de657ad51b5ad3cef79e3ef9f2df9d",
                "reference": "ea1e00e255de657ad51b5ad3cef79e3ef9f2df9d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.4"
            },
            "require-dev": {
                "ext-json": "*",
                "keboola/coding-standard": "^13.0",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpdoc-parser": "1.5.*",
                "phpstan/phpstan": "^1.4",
                "phpunit/phpunit": ">=7.5"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Csv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola CSV reader and writer",
            "homepage": "http://keboola.com",
            "keywords": [
                "csv",
                "rfc4180"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-csv/issues",
                "source": "https://github.com/keboola/php-csv/tree/3.2.0"
            },
            "time": "2022-11-02T15:02:35+00:00"
        },
        {
            "name": "keboola/db-extractor-adapter",
            "version": "1.10.11",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/db-extractor-adapter.git",
                "reference": "dfa4bfed9f64a527a10a35f0de7fb0a37adfd5e8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/db-extractor-adapter/zipball/dfa4bfed9f64a527a10a35f0de7fb0a37adfd5e8",
                "reference": "dfa4bfed9f64a527a10a35f0de7fb0a37adfd5e8",
                "shasum": ""
            },
            "require": {
                "ext-iconv": "*",
                "keboola/common-exceptions": "^1.0",
                "keboola/csv": "^3.2",
                "keboola/db-extractor-config": "^1.8",
                "keboola/db-extractor-table-format": "^3.0",
                "keboola/retry": "^0.5",
                "php": ">=7.4",
                "psr/log": "^1.1"
            },
            "require-dev": {
                "ext-json": "*",
                "ihsw/toxiproxy-php-client": "^2.0",
                "keboola/coding-standard": ">=9.0",
                "keboola/php-temp": "^2.0",
                "phpstan/phpstan": "^0.12.2",
                "phpunit/phpunit": "^9.1"
            },
            "suggest": {
                "ext-odbc": "Needed to support ODBC connection",
                "ext-pdo": "Needed to support PDO connection"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DbExtractor\\Adapter\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Set of connection adapters for DB extractors.",
            "support": {
                "source": "https://github.com/keboola/db-extractor-adapter/tree/1.10.11"
            },
            "time": "2023-04-05T08:27:55+00:00"
        },
        {
            "name": "keboola/db-extractor-common",
            "version": "16.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/db-extractor-common.git",
                "reference": "53b3ac5934d2d50d2af55a31f598fa7f24cc0b6c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/db-extractor-common/zipball/53b3ac5934d2d50d2af55a31f598fa7f24cc0b6c",
                "reference": "53b3ac5934d2d50d2af55a31f598fa7f24cc0b6c",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-pdo": "*",
                "keboola/common-exceptions": "^1.1",
                "keboola/csv": "^3.2",
                "keboola/db-extractor-adapter": "^1.9",
                "keboola/db-extractor-config": "^1.8",
                "keboola/db-extractor-ssh-tunnel": "^1.1.5",
                "keboola/db-extractor-table-format": "^3.2",
                "keboola/php-component": "^9.0",
                "keboola/php-datatypes": "^6.0",
                "keboola/php-utils": "^2.3||^3.0||^4.0",
                "keboola/retry": "^0.5",
                "monolog/monolog": "^2.0",
                "nette/utils": "^3.0",
                "php": ">=7.4",
                "phpunit/phpunit": "^9.1",
                "pimple/pimple": "^3.3",
                "psr/log": "^1.1"
            },
            "require-dev": {
                "ihsw/toxiproxy-php-client": "^2.0",
                "keboola/coding-standard": ">=13.0",
                "keboola/php-temp": "^2.0",
                "php-parallel-lint/php-parallel-lint": "^1.2",
                "phpstan/phpstan": "^0.12.14",
                "symfony/debug": "^4.3"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DbExtractor\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Common library from Keboola Database Extractors",
            "support": {
                "source": "https://github.com/keboola/db-extractor-common/tree/16.1.0"
            },
            "time": "2023-01-19T08:49:28+00:00"
        },
        {
            "name": "keboola/db-extractor-config",
            "version": "1.12.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/db-extractor-config.git",
                "reference": "7901e8091ea6770da6804e3bf6c4222ef2b39d86"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/db-extractor-config/zipball/7901e8091ea6770da6804e3bf6c4222ef2b39d86",
                "reference": "7901e8091ea6770da6804e3bf6c4222ef2b39d86",
                "shasum": ""
            },
            "require": {
                "keboola/php-component": "^9.1",
                "php": ">=7.4",
                "symfony/config": "^5.0"
            },
            "require-dev": {
                "ext-json": "*",
                "keboola/coding-standard": ">=13.0",
                "php-parallel-lint/php-parallel-lint": "^1.2",
                "phpstan/phpstan": "^0.12.14",
                "phpunit/phpunit": "^9.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DbExtractorConfig\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Config definition for database extractor",
            "support": {
                "source": "https://github.com/keboola/db-extractor-config/tree/1.12.1"
            },
            "time": "2023-04-05T12:14:38+00:00"
        },
        {
            "name": "keboola/db-extractor-ssh-tunnel",
            "version": "1.1.5",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/db-extractor-ssh-tunnel.git",
                "reference": "6662696f5f8273d4a3743786b117fd1d0ea594c8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/db-extractor-ssh-tunnel/zipball/6662696f5f8273d4a3743786b117fd1d0ea594c8",
                "reference": "6662696f5f8273d4a3743786b117fd1d0ea594c8",
                "shasum": ""
            },
            "require": {
                "keboola/retry": "^0.5",
                "keboola/ssh-tunnel": "^2.0.3",
                "psr/log": "^1.1"
            },
            "require-dev": {
                "keboola/coding-standard": ">=9.0.0",
                "monolog/monolog": "^2.0",
                "phpstan/phpstan": "^0.12.14",
                "phpunit/phpunit": "^9.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DbExtractorSSHTunnel\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create SSH tunnel for DB Extractors",
            "support": {
                "issues": "https://github.com/keboola/db-extractor-ssh-tunnel/issues",
                "source": "https://github.com/keboola/db-extractor-ssh-tunnel/tree/1.1.5"
            },
            "time": "2022-01-18T09:20:24+00:00"
        },
        {
            "name": "keboola/db-extractor-table-format",
            "version": "3.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/db-extractor-table-format.git",
                "reference": "aa9052eb0f8d914100baa710b4a9571418d9140b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/db-extractor-table-format/zipball/aa9052eb0f8d914100baa710b4a9571418d9140b",
                "reference": "aa9052eb0f8d914100baa710b4a9571418d9140b",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-mbstring": "*",
                "keboola/common-exceptions": "^1.0",
                "keboola/php-datatypes": "^6.0",
                "keboola/php-utils": "^4.1",
                "php": ">=7.4"
            },
            "require-dev": {
                "keboola/coding-standard": ">=13.0",
                "phpstan/phpstan": "^0.12.2",
                "phpunit/phpunit": "^9.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DbExtractor\\TableResultFormat\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "PHP class for formating table result",
            "support": {
                "source": "https://github.com/keboola/db-extractor-table-format/tree/3.5.1"
            },
            "time": "2022-08-17T10:54:15+00:00"
        },
        {
            "name": "keboola/php-component",
            "version": "9.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-component.git",
                "reference": "6a4a473b264ba549a24342f1ab79dca4f4adf2ab"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-component/zipball/6a4a473b264ba549a24342f1ab79dca4f4adf2ab",
                "reference": "6a4a473b264ba549a24342f1ab79dca4f4adf2ab",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "keboola/common-exceptions": "^1.2",
                "monolog/monolog": "^2.3",
                "php": "^7.4|^8.0",
                "symfony/config": "^5.4|^6.0",
                "symfony/filesystem": "^5.4|^6.0",
                "symfony/finder": "^5.4|^6.0",
                "symfony/serializer": "^5.4|^6.0"
            },
            "require-dev": {
                "devedge/sami-github": "^1.0",
                "keboola/coding-standard": "^14.0",
                "keboola/php-temp": "^2.0",
                "phpstan/phpstan": "^1.4",
                "phpunit/phpunit": "^9.5"
            },
            "type": "project",
            "autoload": {
                "psr-4": {
                    "Keboola\\Component\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Helper classes for developing Keboola PHP components",
            "keywords": [
                "component",
                "docker",
                "keboola"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-component/issues",
                "source": "https://github.com/keboola/php-component/tree/9.3.0"
            },
            "time": "2022-11-11T11:13:53+00:00"
        },
        {
            "name": "keboola/php-datatypes",
            "version": "6.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-datatypes.git",
                "reference": "418820042083b2ed4b0820b6862f62f7bfe03547"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-datatypes/zipball/418820042083b2ed4b0820b6862f62f7bfe03547",
                "reference": "418820042083b2ed4b0820b6862f62f7bfe03547",
                "shasum": ""
            },
            "require": {
                "php": "^7.4|^8"
            },
            "require-dev": {
                "keboola/coding-standard": "^14",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpdoc-parser": "^1.6",
                "phpstan/phpstan": "^1.4",
                "phpunit/phpunit": "^9",
                "squizlabs/php_codesniffer": "^3"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Datatype\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "PHP datatypes for databases",
            "support": {
                "issues": "https://github.com/keboola/php-datatypes/issues",
                "source": "https://github.com/keboola/php-datatypes/tree/6.4.0"
            },
            "time": "2023-03-03T15:00:55+00:00"
        },
        {
            "name": "keboola/php-utils",
            "version": "4.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-utils.git",
                "reference": "f5be83a50b5c4858f5698747e8a795048a89c382"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-utils/zipball/f5be83a50b5c4858f5698747e8a795048a89c382",
                "reference": "f5be83a50b5c4858f5698747e8a795048a89c382",
                "shasum": ""
            },
            "require": {
                "keboola/sanitizer": "^0.1",
                "php": ">=5.6.0",
                "seld/jsonlint": "^1.4"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "~0.2",
                "phpunit/phpunit": "~5.0",
                "squizlabs/php_codesniffer": "~2.4"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/Keboola/Utils/jsonDecode.php",
                    "src/Keboola/Utils/sanitizeUtf8.php",
                    "src/Keboola/Utils/objectToArray.php",
                    "src/Keboola/Utils/formatDateTime.php",
                    "src/Keboola/Utils/replaceDates.php",
                    "src/Keboola/Utils/replaceDatesInArray.php",
                    "src/Keboola/Utils/buildUrl.php",
                    "src/Keboola/Utils/httpBuildUrl.php",
                    "src/Keboola/Utils/returnBytes.php",
                    "src/Keboola/Utils/camelize.php",
                    "src/Keboola/Utils/getDataFromPath.php",
                    "src/Keboola/Utils/isValidDateTimeString.php",
                    "src/Keboola/Utils/flattenArray.php",
                    "src/Keboola/Utils/arrayToObject.php",
                    "src/Keboola/Utils/isEmptyObject.php",
                    "src/Keboola/Utils/stripInvalidUtf16.php",
                    "src/Keboola/Utils/toAscii.php",
                    "src/Keboola/Utils/sanitizeColumnName.php",
                    "src/Keboola/Utils/formatBytes.php"
                ],
                "psr-0": {
                    "Keboola\\Utils": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Misc utility functions",
            "keywords": [
                "utility"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-utils/issues",
                "source": "https://github.com/keboola/php-utils/tree/master"
            },
            "time": "2019-10-04T20:55:45+00:00"
        },
        {
            "name": "keboola/retry",
            "version": "0.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/retry.git",
                "reference": "e2ce6f343db1167350df2850a4532ad6845a635d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/retry/zipball/e2ce6f343db1167350df2850a4532ad6845a635d",
                "reference": "e2ce6f343db1167350df2850a4532ad6845a635d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "psr/log": "^1.1|^2|^3"
            },
            "replace": {
                "vkartaviy/retry": "*"
            },
            "require-dev": {
                "keboola/coding-standard": "^7.0",
                "phpstan/phpstan-shim": "^0.10",
                "phpunit/phpunit": "7.*"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Retry\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola Dev",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Library for repeatable and retryable operations",
            "keywords": [
                "backoff",
                "proxy",
                "repeat",
                "retry"
            ],
            "support": {
                "issues": "https://github.com/keboola/retry/issues",
                "source": "https://github.com/keboola/retry/tree/0.5.1"
            },
            "time": "2022-09-13T10:26:25+00:00"
        },
        {
            "name": "keboola/sanitizer",
            "version": "0.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/sanitizer.git",
                "reference": "e3b65cf64fc891406b2849c096cd3b0edef19900"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/sanitizer/zipball/e3b65cf64fc891406b2849c096cd3b0edef19900",
                "reference": "e3b65cf64fc891406b2849c096cd3b0edef19900",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "^1.0",
                "phpunit/phpunit": "^5.7",
                "squizlabs/php_codesniffer": "^3.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Utils\\Sanitizer\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Column name sanitizer",
            "support": {
                "issues": "https://github.com/keboola/sanitizer/issues",
                "source": "https://github.com/keboola/sanitizer/tree/0.1.1"
            },
            "time": "2022-06-02T18:15:37+00:00"
        },
        {
            "name": "keboola/ssh-tunnel",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/ssh-tunnel.git",
                "reference": "0738a9c806092f7d5bc81d5edda796e9caf7a507"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/ssh-tunnel/zipball/0738a9c806092f7d5bc81d5edda796e9caf7a507",
                "reference": "0738a9c806092f7d5bc81d5edda796e9caf7a507",
                "shasum": ""
            },
            "require": {
                "symfony/process": "^4.2|^5.0"
            },
            "require-dev": {
                "keboola/coding-standard": ">=9.0.0",
                "phpstan/phpstan": "^0.12.14",
                "phpunit/phpunit": "^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\": "src/Keboola/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Simple library for SSH tunneling",
            "support": {
                "issues": "https://github.com/keboola/ssh-tunnel/issues",
                "source": "https://github.com/keboola/ssh-tunnel/tree/2.0.4"
            },
            "time": "2021-10-21T06:07:45+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "2.9.1",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "f259e2b15fb95494c83f52d3caad003bbf5ffaa1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/f259e2b15fb95494c83f52d3caad003bbf5ffaa1",
                "reference": "f259e2b15fb95494c83f52d3caad003bbf5ffaa1",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2",
                "psr/log": "^1.0.1 || ^2.0 || ^3.0"
            },
            "provide": {
                "psr/log-implementation": "1.0.0 || 2.0.0 || 3.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "elasticsearch/elasticsearch": "^7 || ^8",
                "ext-json": "*",
                "graylog2/gelf-php": "^1.4.2 || ^2@dev",
                "guzzlehttp/guzzle": "^7.4",
                "guzzlehttp/psr7": "^2.2",
                "mongodb/mongodb": "^1.8",
                "php-amqplib/php-amqplib": "~2.4 || ^3",
                "phpspec/prophecy": "^1.15",
                "phpstan/phpstan": "^0.12.91",
                "phpunit/phpunit": "^8.5.14",
                "predis/predis": "^1.1 || ^2.0",
                "rollbar/rollbar": "^1.3 || ^2 || ^3",
                "ruflin/elastica": "^7",
                "swiftmailer/swiftmailer": "^5.3|^6.0",
                "symfony/mailer": "^5.4 || ^6",
                "symfony/mime": "^5.4 || ^6"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "elasticsearch/elasticsearch": "Allow sending log messages to an Elasticsearch server via official client",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-curl": "Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler",
                "ext-mbstring": "Allow to work properly with unicode symbols",
                "ext-mongodb": "Allow sending log messages to a MongoDB server (via driver)",
                "ext-openssl": "Required to send log messages using SSL",
                "ext-sockets": "Allow sending log messages to a Syslog server (via UDP driver)",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server (via library)",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "https://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "https://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/monolog/issues",
                "source": "https://github.com/Seldaek/monolog/tree/2.9.1"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/monolog/monolog",
                    "type": "tidelift"
                }
            ],
            "time": "2023-02-06T13:44:46+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.11.1",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "7284c22080590fb39f2ffa3e9057f10a4ddd0e0c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/7284c22080590fb39f2ffa3e9057f10a4ddd0e0c",
                "reference": "7284c22080590fb39f2ffa3e9057f10a4ddd0e0c",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "conflict": {
                "doctrine/collections": "<1.6.8",
                "doctrine/common": "<2.13.3 || >=3,<3.2.2"
            },
            "require-dev": {
                "doctrine/collections": "^1.6.8",
                "doctrine/common": "^2.13.3 || ^3.2.2",
                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ],
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "support": {
                "issues": "https://github.com/myclabs/DeepCopy/issues",
                "source": "https://github.com/myclabs/DeepCopy/tree/1.11.1"
            },
            "funding": [
                {
                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
                    "type": "tidelift"
                }
            ],
            "time": "2023-03-08T13:26:56+00:00"
        },
        {
            "name": "nette/utils",
            "version": "v3.2.9",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/utils.git",
                "reference": "c91bac3470c34b2ecd5400f6e6fdf0b64a836a5c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/utils/zipball/c91bac3470c34b2ecd5400f6e6fdf0b64a836a5c",
                "reference": "c91bac3470c34b2ecd5400f6e6fdf0b64a836a5c",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2 <8.3"
            },
            "conflict": {
                "nette/di": "<3.0.6"
            },
            "require-dev": {
                "jetbrains/phpstorm-attributes": "dev-master",
                "nette/tester": "~2.0",
                "phpstan/phpstan": "^1.0",
                "tracy/tracy": "^2.3"
            },
            "suggest": {
                "ext-gd": "to use Image",
                "ext-iconv": "to use Strings::webalize(), toAscii(), chr() and reverse()",
                "ext-intl": "to use Strings::webalize(), toAscii(), normalize() and compare()",
                "ext-json": "to use Nette\\Utils\\Json",
                "ext-mbstring": "to use Strings::lower() etc...",
                "ext-tokenizer": "to use Nette\\Utils\\Reflection::getUseStatements()",
                "ext-xml": "to use Strings::length() etc. when mbstring is not available"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0-only",
                "GPL-3.0-only"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🛠  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.",
            "homepage": "https://nette.org",
            "keywords": [
                "array",
                "core",
                "datetime",
                "images",
                "json",
                "nette",
                "paginator",
                "password",
                "slugify",
                "string",
                "unicode",
                "utf-8",
                "utility",
                "validation"
            ],
            "support": {
                "issues": "https://github.com/nette/utils/issues",
                "source": "https://github.com/nette/utils/tree/v3.2.9"
            },
            "time": "2023-01-18T03:26:20+00:00"
        },
        {
            "name": "nikic/php-parser",
            "version": "v4.15.4",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/PHP-Parser.git",
                "reference": "6bb5176bc4af8bcb7d926f88718db9b96a2d4290"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/6bb5176bc4af8bcb7d926f88718db9b96a2d4290",
                "reference": "6bb5176bc4af8bcb7d926f88718db9b96a2d4290",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "php": ">=7.0"
            },
            "require-dev": {
                "ircmaxell/php-yacc": "^0.0.7",
                "phpunit/phpunit": "^6.5 || ^7.0 || ^8.0 || ^9.0"
            },
            "bin": [
                "bin/php-parse"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpParser\\": "lib/PhpParser"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov"
                }
            ],
            "description": "A PHP parser written in PHP",
            "keywords": [
                "parser",
                "php"
            ],
            "support": {
                "issues": "https://github.com/nikic/PHP-Parser/issues",
                "source": "https://github.com/nikic/PHP-Parser/tree/v4.15.4"
            },
            "time": "2023-03-05T19:49:14+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "97803eca37d319dfa7826cc2437fc020857acb53"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/97803eca37d319dfa7826cc2437fc020857acb53",
                "reference": "97803eca37d319dfa7826cc2437fc020857acb53",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-phar": "*",
                "ext-xmlwriter": "*",
                "phar-io/version": "^3.0.1",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "support": {
                "issues": "https://github.com/phar-io/manifest/issues",
                "source": "https://github.com/phar-io/manifest/tree/2.0.3"
            },
            "time": "2021-07-20T11:28:43+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "support": {
                "issues": "https://github.com/phar-io/version/issues",
                "source": "https://github.com/phar-io/version/tree/3.2.1"
            },
            "time": "2022-02-21T01:04:05+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "9.2.26",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "443bc6912c9bd5b409254a40f4b0f4ced7c80ea1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/443bc6912c9bd5b409254a40f4b0f4ced7c80ea1",
                "reference": "443bc6912c9bd5b409254a40f4b0f4ced7c80ea1",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-xmlwriter": "*",
                "nikic/php-parser": "^4.15",
                "php": ">=7.3",
                "phpunit/php-file-iterator": "^3.0.3",
                "phpunit/php-text-template": "^2.0.2",
                "sebastian/code-unit-reverse-lookup": "^2.0.2",
                "sebastian/complexity": "^2.0",
                "sebastian/environment": "^5.1.2",
                "sebastian/lines-of-code": "^1.0.3",
                "sebastian/version": "^3.0.1",
                "theseer/tokenizer": "^1.2.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-pcov": "PHP extension that provides line coverage",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "9.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.26"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-03-06T12:58:08+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "3.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2021-12-02T12:48:52+00:00"
        },
        {
            "name": "phpunit/php-invoker",
            "version": "3.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-invoker.git",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "ext-pcntl": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-pcntl": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Invoke callables with a timeout",
            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
            "keywords": [
                "process"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
                "source": "https://github.com/sebastianbergmann/php-invoker/tree/3.1.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:58:55+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
                "source": "https://github.com/sebastianbergmann/php-text-template/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T05:33:50+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "5.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
                "source": "https://github.com/sebastianbergmann/php-timer/tree/5.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:16:10+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "9.6.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "b65d59a059d3004a040c16a82e07bbdf6cfdd115"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/b65d59a059d3004a040c16a82e07bbdf6cfdd115",
                "reference": "b65d59a059d3004a040c16a82e07bbdf6cfdd115",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.3.1 || ^2",
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "ext-xmlwriter": "*",
                "myclabs/deep-copy": "^1.10.1",
                "phar-io/manifest": "^2.0.3",
                "phar-io/version": "^3.0.2",
                "php": ">=7.3",
                "phpunit/php-code-coverage": "^9.2.13",
                "phpunit/php-file-iterator": "^3.0.5",
                "phpunit/php-invoker": "^3.1.1",
                "phpunit/php-text-template": "^2.0.3",
                "phpunit/php-timer": "^5.0.2",
                "sebastian/cli-parser": "^1.0.1",
                "sebastian/code-unit": "^1.0.6",
                "sebastian/comparator": "^4.0.8",
                "sebastian/diff": "^4.0.3",
                "sebastian/environment": "^5.1.3",
                "sebastian/exporter": "^4.0.5",
                "sebastian/global-state": "^5.0.1",
                "sebastian/object-enumerator": "^4.0.3",
                "sebastian/resource-operations": "^3.0.3",
                "sebastian/type": "^3.2",
                "sebastian/version": "^3.0.2"
            },
            "suggest": {
                "ext-soap": "To be able to generate mocks based on WSDL files",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "9.6-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Framework/Assert/Functions.php"
                ],
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
                "security": "https://github.com/sebastianbergmann/phpunit/security/policy",
                "source": "https://github.com/sebastianbergmann/phpunit/tree/9.6.6"
            },
            "funding": [
                {
                    "url": "https://phpunit.de/sponsors.html",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpunit/phpunit",
                    "type": "tidelift"
                }
            ],
            "time": "2023-03-27T11:43:46+00:00"
        },
        {
            "name": "pimple/pimple",
            "version": "v3.5.0",
            "source": {
                "type": "git",
                "url": "https://github.com/silexphp/Pimple.git",
                "reference": "a94b3a4db7fb774b3d78dad2315ddc07629e1bed"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/silexphp/Pimple/zipball/a94b3a4db7fb774b3d78dad2315ddc07629e1bed",
                "reference": "a94b3a4db7fb774b3d78dad2315ddc07629e1bed",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "psr/container": "^1.1 || ^2.0"
            },
            "require-dev": {
                "symfony/phpunit-bridge": "^5.4@dev"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.4.x-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Pimple": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Pimple, a simple Dependency Injection Container",
            "homepage": "https://pimple.symfony.com",
            "keywords": [
                "container",
                "dependency injection"
            ],
            "support": {
                "source": "https://github.com/silexphp/Pimple/tree/v3.5.0"
            },
            "time": "2021-10-28T11:13:42+00:00"
        },
        {
            "name": "psr/container",
            "version": "2.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/container.git",
                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/container/zipball/c71ecc56dfe541dbd90c5360474fbc405f8d5963",
                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963",
                "shasum": ""
            },
            "require": {
                "php": ">=7.4.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Container\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common Container Interface (PHP FIG PSR-11)",
            "homepage": "https://github.com/php-fig/container",
            "keywords": [
                "PSR-11",
                "container",
                "container-interface",
                "container-interop",
                "psr"
            ],
            "support": {
                "issues": "https://github.com/php-fig/container/issues",
                "source": "https://github.com/php-fig/container/tree/2.0.2"
            },
            "time": "2021-11-05T16:47:00+00:00"
        },
        {
            "name": "psr/log",
            "version": "1.1.4",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "d49695b909c3b7628b6289db5479a1c204601f11"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/d49695b909c3b7628b6289db5479a1c204601f11",
                "reference": "d49695b909c3b7628b6289db5479a1c204601f11",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.1.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "Psr/Log/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "support": {
                "source": "https://github.com/php-fig/log/tree/1.1.4"
            },
            "time": "2021-05-03T11:20:27+00:00"
        },
        {
            "name": "sebastian/cli-parser",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/cli-parser.git",
                "reference": "442e7c7e687e42adc03470c7b668bc4b2402c0b2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/442e7c7e687e42adc03470c7b668bc4b2402c0b2",
                "reference": "442e7c7e687e42adc03470c7b668bc4b2402c0b2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for parsing CLI options",
            "homepage": "https://github.com/sebastianbergmann/cli-parser",
            "support": {
                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
                "source": "https://github.com/sebastianbergmann/cli-parser/tree/1.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T06:08:49+00:00"
        },
        {
            "name": "sebastian/code-unit",
            "version": "1.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit.git",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the PHP code units",
            "homepage": "https://github.com/sebastianbergmann/code-unit",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
                "source": "https://github.com/sebastianbergmann/code-unit/tree/1.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:08:54+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:30:19+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "4.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/diff": "^4.0",
                "sebastian/exporter": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/comparator/issues",
                "source": "https://github.com/sebastianbergmann/comparator/tree/4.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2022-09-14T12:41:17+00:00"
        },
        {
            "name": "sebastian/complexity",
            "version": "2.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/complexity.git",
                "reference": "739b35e53379900cc9ac327b2147867b8b6efd88"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/739b35e53379900cc9ac327b2147867b8b6efd88",
                "reference": "739b35e53379900cc9ac327b2147867b8b6efd88",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.7",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for calculating the complexity of PHP code units",
            "homepage": "https://github.com/sebastianbergmann/complexity",
            "support": {
                "issues": "https://github.com/sebastianbergmann/complexity/issues",
                "source": "https://github.com/sebastianbergmann/complexity/tree/2.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T15:52:27+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "4.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "3461e3fccc7cfdfc2720be910d3bd73c69be590d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/3461e3fccc7cfdfc2720be910d3bd73c69be590d",
                "reference": "3461e3fccc7cfdfc2720be910d3bd73c69be590d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3",
                "symfony/process": "^4.2 || ^5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff",
                "udiff",
                "unidiff",
                "unified diff"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/diff/issues",
                "source": "https://github.com/sebastianbergmann/diff/tree/4.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:10:38+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "5.1.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-posix": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "http://www.github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/environment/issues",
                "source": "https://github.com/sebastianbergmann/environment/tree/5.1.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:03:51+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "4.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "ac230ed27f0f98f597c8a2b6eb7ac563af5e5b9d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/ac230ed27f0f98f597c8a2b6eb7ac563af5e5b9d",
                "reference": "ac230ed27f0f98f597c8a2b6eb7ac563af5e5b9d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-mbstring": "*",
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "https://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/exporter/issues",
                "source": "https://github.com/sebastianbergmann/exporter/tree/4.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2022-09-14T06:03:37+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "5.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "0ca8db5a5fc9c8646244e629625ac486fa286bf2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/0ca8db5a5fc9c8646244e629625ac486fa286bf2",
                "reference": "0ca8db5a5fc9c8646244e629625ac486fa286bf2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-dom": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-uopz": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "http://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/global-state/issues",
                "source": "https://github.com/sebastianbergmann/global-state/tree/5.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2022-02-14T08:28:10+00:00"
        },
        {
            "name": "sebastian/lines-of-code",
            "version": "1.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
                "reference": "c1c2e997aa3146983ed888ad08b15470a2e22ecc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/c1c2e997aa3146983ed888ad08b15470a2e22ecc",
                "reference": "c1c2e997aa3146983ed888ad08b15470a2e22ecc",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.6",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for counting the lines of code in PHP source code",
            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
            "support": {
                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/1.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-11-28T06:42:11+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "4.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:12:34+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
                "source": "https://github.com/sebastianbergmann/object-reflector/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:14:26+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "4.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "https://github.com/sebastianbergmann/recursion-context",
            "support": {
                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
                "source": "https://github.com/sebastianbergmann/recursion-context/tree/4.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:07:39+00:00"
        },
        {
            "name": "sebastian/resource-operations",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/resource-operations.git",
                "reference": "0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8",
                "reference": "0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides a list of PHP built-in functions that operate on resources",
            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
            "support": {
                "issues": "https://github.com/sebastianbergmann/resource-operations/issues",
                "source": "https://github.com/sebastianbergmann/resource-operations/tree/3.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T06:45:17+00:00"
        },
        {
            "name": "sebastian/type",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/type.git",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the types of the PHP type system",
            "homepage": "https://github.com/sebastianbergmann/type",
            "support": {
                "issues": "https://github.com/sebastianbergmann/type/issues",
                "source": "https://github.com/sebastianbergmann/type/tree/3.2.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:13:03+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "c6c1022351a901512170118436c764e473f6de8c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c",
                "reference": "c6c1022351a901512170118436c764e473f6de8c",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "support": {
                "issues": "https://github.com/sebastianbergmann/version/issues",
                "source": "https://github.com/sebastianbergmann/version/tree/3.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T06:39:44+00:00"
        },
        {
            "name": "seld/jsonlint",
            "version": "1.9.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/jsonlint.git",
                "reference": "4211420d25eba80712bff236a98960ef68b866b7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/jsonlint/zipball/4211420d25eba80712bff236a98960ef68b866b7",
                "reference": "4211420d25eba80712bff236a98960ef68b866b7",
                "shasum": ""
            },
            "require": {
                "php": "^5.3 || ^7.0 || ^8.0"
            },
            "require-dev": {
                "phpstan/phpstan": "^1.5",
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0 || ^8.5.13"
            },
            "bin": [
                "bin/jsonlint"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Seld\\JsonLint\\": "src/Seld/JsonLint/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "JSON Linter",
            "keywords": [
                "json",
                "linter",
                "parser",
                "validator"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/jsonlint/issues",
                "source": "https://github.com/Seldaek/jsonlint/tree/1.9.0"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/seld/jsonlint",
                    "type": "tidelift"
                }
            ],
            "time": "2022-04-01T13:37:23+00:00"
        },
        {
            "name": "symfony/config",
            "version": "v5.4.21",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/config.git",
                "reference": "2a6b1111d038adfa15d52c0871e540f3b352d1e4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/config/zipball/2a6b1111d038adfa15d52c0871e540f3b352d1e4",
                "reference": "2a6b1111d038adfa15d52c0871e540f3b352d1e4",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/deprecation-contracts": "^2.1|^3",
                "symfony/filesystem": "^4.4|^5.0|^6.0",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-php80": "^1.16",
                "symfony/polyfill-php81": "^1.22"
            },
            "conflict": {
                "symfony/finder": "<4.4"
            },
            "require-dev": {
                "symfony/event-dispatcher": "^4.4|^5.0|^6.0",
                "symfony/finder": "^4.4|^5.0|^6.0",
                "symfony/messenger": "^4.4|^5.0|^6.0",
                "symfony/service-contracts": "^1.1|^2|^3",
                "symfony/yaml": "^4.4|^5.0|^6.0"
            },
            "suggest": {
                "symfony/yaml": "To use the yaml reference dumper"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Config\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Helps you find, load, combine, autofill and validate configuration values of any kind",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/config/tree/v5.4.21"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2023-02-14T08:03:56+00:00"
        },
        {
            "name": "symfony/deprecation-contracts",
            "version": "v2.5.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/deprecation-contracts.git",
                "reference": "e8b495ea28c1d97b5e0c121748d6f9b53d075c66"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/e8b495ea28c1d97b5e0c121748d6f9b53d075c66",
                "reference": "e8b495ea28c1d97b5e0c121748d6f9b53d075c66",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.5-dev"
                },
                "thanks": {
                    "name": "symfony/contracts",
                    "url": "https://github.com/symfony/contracts"
                }
            },
            "autoload": {
                "files": [
                    "function.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "A generic function and convention to trigger deprecation notices",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/deprecation-contracts/tree/v2.5.2"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2022-01-02T09:53:40+00:00"
        },
        {
            "name": "symfony/filesystem",
            "version": "v5.4.21",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/filesystem.git",
                "reference": "e75960b1bbfd2b8c9e483e0d74811d555ca3de9f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/filesystem/zipball/e75960b1bbfd2b8c9e483e0d74811d555ca3de9f",
                "reference": "e75960b1bbfd2b8c9e483e0d74811d555ca3de9f",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-mbstring": "~1.8",
                "symfony/polyfill-php80": "^1.16"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Filesystem\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides basic utilities for the filesystem",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/filesystem/tree/v5.4.21"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2023-02-14T08:03:56+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v5.4.21",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "078e9a5e1871fcfe6a5ce421b539344c21afef19"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/078e9a5e1871fcfe6a5ce421b539344c21afef19",
                "reference": "078e9a5e1871fcfe6a5ce421b539344c21afef19",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/deprecation-contracts": "^2.1|^3",
                "symfony/polyfill-php80": "^1.16"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Finds files and directories via an intuitive fluent interface",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/finder/tree/v5.4.21"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2023-02-16T09:33:00+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.27.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "5bbc823adecdae860bb64756d639ecfec17b050a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/5bbc823adecdae860bb64756d639ecfec17b050a",
                "reference": "5bbc823adecdae860bb64756d639ecfec17b050a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "provide": {
                "ext-ctype": "*"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.27-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.27.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2022-11-03T14:55:06+00:00"
        },
        {
            "name": "symfony/polyfill-mbstring",
            "version": "v1.27.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-mbstring.git",
                "reference": "8ad114f6b39e2c98a8b0e3bd907732c207c2b534"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/8ad114f6b39e2c98a8b0e3bd907732c207c2b534",
                "reference": "8ad114f6b39e2c98a8b0e3bd907732c207c2b534",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "provide": {
                "ext-mbstring": "*"
            },
            "suggest": {
                "ext-mbstring": "For best performance"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.27-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Mbstring\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for the Mbstring extension",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "mbstring",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.27.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2022-11-03T14:55:06+00:00"
        },
        {
            "name": "symfony/polyfill-php80",
            "version": "v1.27.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php80.git",
                "reference": "7a6ff3f1959bb01aefccb463a0f2cd3d3d2fd936"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/7a6ff3f1959bb01aefccb463a0f2cd3d3d2fd936",
                "reference": "7a6ff3f1959bb01aefccb463a0f2cd3d3d2fd936",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.27-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php80\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ion Bazan",
                    "email": "ion.bazan@gmail.com"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php80/tree/v1.27.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2022-11-03T14:55:06+00:00"
        },
        {
            "name": "symfony/polyfill-php81",
            "version": "v1.27.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php81.git",
                "reference": "707403074c8ea6e2edaf8794b0157a0bfa52157a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php81/zipball/707403074c8ea6e2edaf8794b0157a0bfa52157a",
                "reference": "707403074c8ea6e2edaf8794b0157a0bfa52157a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.27-dev"
                },
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php81\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php81/tree/v1.27.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2022-11-03T14:55:06+00:00"
        },
        {
            "name": "symfony/process",
            "version": "v5.4.22",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/process.git",
                "reference": "4b850da0cc3a2a9181c1ed407adbca4733dc839b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/process/zipball/4b850da0cc3a2a9181c1ed407adbca4733dc839b",
                "reference": "4b850da0cc3a2a9181c1ed407adbca4733dc839b",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/polyfill-php80": "^1.16"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Process\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Executes commands in sub-processes",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/process/tree/v5.4.22"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2023-03-06T21:29:33+00:00"
        },
        {
            "name": "symfony/serializer",
            "version": "v5.4.22",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/serializer.git",
                "reference": "5b1e0234bb801e6e565771c0cec64551137ea3ef"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/serializer/zipball/5b1e0234bb801e6e565771c0cec64551137ea3ef",
                "reference": "5b1e0234bb801e6e565771c0cec64551137ea3ef",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.5",
                "symfony/deprecation-contracts": "^2.1|^3",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-php80": "^1.16"
            },
            "conflict": {
                "doctrine/annotations": "<1.12",
                "phpdocumentor/reflection-docblock": "<3.2.2",
                "phpdocumentor/type-resolver": "<1.4.0",
                "symfony/dependency-injection": "<4.4",
                "symfony/property-access": "<5.4",
                "symfony/property-info": "<5.3.13",
                "symfony/uid": "<5.3",
                "symfony/yaml": "<4.4"
            },
            "require-dev": {
                "doctrine/annotations": "^1.12|^2",
                "phpdocumentor/reflection-docblock": "^3.2|^4.0|^5.0",
                "symfony/cache": "^4.4|^5.0|^6.0",
                "symfony/config": "^4.4|^5.0|^6.0",
                "symfony/dependency-injection": "^4.4|^5.0|^6.0",
                "symfony/error-handler": "^4.4|^5.0|^6.0",
                "symfony/filesystem": "^4.4|^5.0|^6.0",
                "symfony/form": "^4.4|^5.0|^6.0",
                "symfony/http-foundation": "^4.4|^5.0|^6.0",
                "symfony/http-kernel": "^4.4|^5.0|^6.0",
                "symfony/mime": "^4.4|^5.0|^6.0",
                "symfony/property-access": "^5.4|^6.0",
                "symfony/property-info": "^5.3.13|^6.0",
                "symfony/uid": "^5.3|^6.0",
                "symfony/validator": "^4.4|^5.0|^6.0",
                "symfony/var-dumper": "^4.4|^5.0|^6.0",
                "symfony/var-exporter": "^4.4|^5.0|^6.0",
                "symfony/yaml": "^4.4|^5.0|^6.0"
            },
            "suggest": {
                "psr/cache-implementation": "For using the metadata cache.",
                "symfony/config": "For using the XML mapping loader.",
                "symfony/mime": "For using a MIME type guesser within the DataUriNormalizer.",
                "symfony/property-access": "For using the ObjectNormalizer.",
                "symfony/property-info": "To deserialize relations.",
                "symfony/var-exporter": "For using the metadata compiler.",
                "symfony/yaml": "For using the default YAML mapping loader."
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Serializer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Handles serializing and deserializing data structures, including object graphs, into array structures or other formats like XML and JSON.",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/serializer/tree/v5.4.22"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2023-03-31T09:21:17+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "34a41e998c2183e22995f158c581e7b5e755ab9e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/34a41e998c2183e22995f158c581e7b5e755ab9e",
                "reference": "34a41e998c2183e22995f158c581e7b5e755ab9e",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "support": {
                "issues": "https://github.com/theseer/tokenizer/issues",
                "source": "https://github.com/theseer/tokenizer/tree/1.2.1"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2021-07-28T10:34:58+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "keboola/coding-standard",
            "version": "11.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/phpcs-standard.git",
                "reference": "d7000bd2373b3cb4616ec96169e56739ea65d328"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/phpcs-standard/zipball/d7000bd2373b3cb4616ec96169e56739ea65d328",
                "reference": "d7000bd2373b3cb4616ec96169e56739ea65d328",
                "shasum": ""
            },
            "require": {
                "slevomat/coding-standard": "^4.8.6",
                "squizlabs/php_codesniffer": "^3.2"
            },
            "type": "phpcodesniffer-standard",
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keboola coding standard",
            "time": "2021-04-09T11:29:16+00:00"
        },
        {
            "name": "keboola/datadir-tests",
            "version": "4.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/datadir-tests.git",
                "reference": "b01856c771760331b50a082f8b6cb2557632c5bc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/datadir-tests/zipball/b01856c771760331b50a082f8b6cb2557632c5bc",
                "reference": "b01856c771760331b50a082f8b6cb2557632c5bc",
                "shasum": ""
            },
            "require": {
                "keboola/php-temp": "^2.0",
                "php": "^7.3",
                "phpunit/phpunit": "^9.0",
                "symfony/filesystem": "^5.0",
                "symfony/finder": "^5.0",
                "symfony/process": "^5.0"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^9.0",
                "phpstan/phpstan": "^0.12.14"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DatadirTests\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Tool for functional testing of Keboola Connection components",
            "time": "2020-03-19T12:08:12+00:00"
        },
        {
            "name": "keboola/php-temp",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-temp.git",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-temp/zipball/cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "symfony/filesystem": ">2.8"
            },
            "require-dev": {
                "infection/infection": "^0.12",
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^8.0",
                "phpstan/phpstan-shim": "^0.11",
                "phpunit/phpunit": "^7.0|^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Temp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Temp library handles application temporary files",
            "keywords": [
                "filesystem",
                "temp"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-temp/issues",
                "source": "https://github.com/keboola/php-temp/tree/2.0.1"
            },
            "time": "2019-04-26T07:18:24+00:00"
        },
        {
            "name": "php-parallel-lint/php-parallel-lint",
            "version": "v1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-parallel-lint/PHP-Parallel-Lint.git",
                "reference": "772a954e5f119f6f5871d015b23eabed8cbdadfb"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-parallel-lint/PHP-Parallel-Lint/zipball/772a954e5f119f6f5871d015b23eabed8cbdadfb",
                "reference": "772a954e5f119f6f5871d015b23eabed8cbdadfb",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "php": ">=5.3.0"
            },
            "replace": {
                "grogy/php-parallel-lint": "*",
                "jakub-onderka/php-parallel-lint": "*"
            },
            "require-dev": {
                "nette/tester": "^1.3 || ^2.0",
                "php-parallel-lint/php-console-highlighter": "~0.3",
                "squizlabs/php_codesniffer": "^3.5"
            },
            "suggest": {
                "php-parallel-lint/php-console-highlighter": "Highlight syntax in code snippet"
            },
            "bin": [
                "parallel-lint"
            ],
            "type": "library",
            "autoload": {
                "classmap": [
                    "./"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-2-Clause"
            ],
            "authors": [
                {
                    "name": "Jakub Onderka",
                    "email": "ahoj@jakubonderka.cz"
                }
            ],
            "description": "This tool check syntax of PHP files about 20x faster than serial check.",
            "homepage": "https://github.com/php-parallel-lint/PHP-Parallel-Lint",
            "time": "2021-04-07T14:42:48+00:00"
        },
        {
            "name": "phpstan/phpstan",
            "version": "0.12.90",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpstan.git",
                "reference": "f0e4b56630fc3d4eb5be86606d07212ac212ede4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpstan/zipball/f0e4b56630fc3d4eb5be86606d07212ac212ede4",
                "reference": "f0e4b56630fc3d4eb5be86606d07212ac212ede4",
                "shasum": ""
            },
            "require": {
                "php": "^7.1|^8.0"
            },
            "conflict": {
                "phpstan/phpstan-shim": "*"
            },
            "bin": [
                "phpstan",
                "phpstan.phar"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "0.12-dev"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPStan - PHP Static Analysis Tool",
            "time": "2021-06-18T07:15:38+00:00"
        },
        {
            "name": "slevomat/coding-standard",
            "version": "4.8.7",
            "source": {
                "type": "git",
                "url": "https://github.com/slevomat/coding-standard.git",
                "reference": "bff96313d8c7c2ba57a4edb13c1c141df8988c58"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/slevomat/coding-standard/zipball/bff96313d8c7c2ba57a4edb13c1c141df8988c58",
                "reference": "bff96313d8c7c2ba57a4edb13c1c141df8988c58",
                "shasum": ""
            },
            "require": {
                "php": "^7.1",
                "squizlabs/php_codesniffer": "^3.4.0"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "1.0.0",
                "phing/phing": "2.16.1",
                "phpstan/phpstan": "0.9.2",
                "phpstan/phpstan-phpunit": "0.9.4",
                "phpstan/phpstan-strict-rules": "0.9",
                "phpunit/phpunit": "7.5.1"
            },
            "type": "phpcodesniffer-standard",
            "autoload": {
                "psr-4": {
                    "SlevomatCodingStandard\\": "SlevomatCodingStandard"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Slevomat Coding Standard for PHP_CodeSniffer complements Consistence Coding Standard by providing sniffs with additional checks.",
            "time": "2019-01-03T13:15:50+00:00"
        },
        {
            "name": "squizlabs/php_codesniffer",
            "version": "3.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                "reference": "ffced0d2c8fa8e6cdc4d695a743271fab6c38625"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/ffced0d2c8fa8e6cdc4d695a743271fab6c38625",
                "reference": "ffced0d2c8fa8e6cdc4d695a743271fab6c38625",
                "shasum": ""
            },
            "require": {
                "ext-simplexml": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": ">=5.4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0"
            },
            "bin": [
                "bin/phpcs",
                "bin/phpcbf"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Greg Sherwood",
                    "role": "lead"
                }
            ],
            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
            "homepage": "https://github.com/squizlabs/PHP_CodeSniffer",
            "keywords": [
                "phpcs",
                "standards"
            ],
            "time": "2021-04-09T00:54:41+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": {
        "php": "^7.4",
        "ext-odbc": "*"
    },
    "platform-dev": {
        "ext-json": "*"
    },
    "plugin-api-version": "2.3.0"
}



================================================
FILE: deploy.sh
================================================
#!/bin/sh
set -e

env

# compatibility with travis and bitbucket
if [ ! -z ${BITBUCKET_TAG} ]
then
	echo "asigning bitbucket tag"
	export TAG="$BITBUCKET_TAG"
elif [ ! -z ${TRAVIS_TAG} ]
then
	echo "asigning travis tag"
	export TAG="$TRAVIS_TAG"
else
	echo No Tag is set!
	exit 1
fi

echo "Tag is '${TAG}'"

#check if deployment is triggered only in master
if [ ${BITBUCKET_BRANCH} != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi

# Obtain the component repository and log in
echo "Obtain the component repository and log in"
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`

echo "Set credentials"
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})

# Push to the repository
echo "Push to the repository"
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
docker push ${REPOSITORY}:${TAG}
docker push ${REPOSITORY}:latest

# Update the tag in Keboola Developer Portal -> Deploy to KBC
if echo ${TAG} | grep -c '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$'
then
    docker run --rm \
        -e KBC_DEVELOPERPORTAL_USERNAME \
        -e KBC_DEVELOPERPORTAL_PASSWORD \
        quay.io/keboola/developer-portal-cli-v2:latest \
        update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${TAG} ecr ${REPOSITORY}
else
    echo "Skipping deployment to KBC, tag ${TAG} is not allowed."
fi



================================================
FILE: docker-compose.yml
================================================
version: '3'
services:
  app: &base
    image: keboola-ex-db-informix
    build:
      context: .
      args:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
    environment:
      DB_USER: informix
      DB_PASSWORD: in4mix
      DB_HOST: db
      DB_PROTOCOL: onsoctcp
      DB_LOCALE_VALUE: en_us.8859-1 # cannot be "DB_LOCALE" -> it interferes with ODBC
      DB_PORT: 9088
      DB_DATABASE: test # see create.sql
      DB_SERVER_NAME: informix
    volumes:
      - ssh-keys:/root/.ssh:ro
    depends_on:
      - db
      - sshproxy

  dev:
    <<: *base
    volumes:
      - ssh-keys:/root/.ssh:ro
      - .:/code

  wait:
    image: waisbrot/wait
    depends_on:
      - db
    environment:
      - TARGETS=db:9088
      - TIMEOUT=60

  sshproxy:
    image: keboola/db-component-ssh-proxy:latest
    volumes:
      - ssh-keys:/root/.ssh
    links:
      - db

  db:
    image: ibmcom/informix-developer-database
    environment:
      STORAGE: local
      LICENSE: accept
      INIT_FILE: init.sql
    volumes:
      - ./docker/informix/init.sql:/opt/ibm/config/init.sql

volumes:
  ssh-keys:



================================================
FILE: Dockerfile
================================================
FROM php:7.4-cli

ARG COMPOSER_FLAGS="--prefer-dist --no-interaction"
ARG DEBIAN_FRONTEND=noninteractive
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_PROCESS_TIMEOUT 3600



COPY docker/php-prod.ini /usr/local/etc/php/php.ini
COPY docker/composer-install.sh /tmp/composer-install.sh


RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        locales \
        unzip \
        ssh \
        libncurses5 \
        libicu-dev \
        unixodbc \
        mc \
        unixodbc-dev \
	&& rm -r /var/lib/apt/lists/* \
	&& sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
	&& locale-gen \
	&& chmod +x /tmp/composer-install.sh \
	&& /tmp/composer-install.sh

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# INTL
RUN docker-php-ext-configure intl \
    && docker-php-ext-install intl

# PHP ODBC
# https://github.com/docker-library/php/issues/103#issuecomment-353674490
RUN set -ex; \
    docker-php-source extract; \
    { \
        echo '# https://github.com/docker-library/php/issues/103#issuecomment-353674490'; \
        echo 'AC_DEFUN([PHP_ALWAYS_SHARED],[])dnl'; \
        echo; \
        cat /usr/src/php/ext/odbc/config.m4; \
    } > temp.m4; \
    mv temp.m4 /usr/src/php/ext/odbc/config.m4; \
    docker-php-ext-configure odbc --with-unixODBC=shared,/usr; \
    docker-php-ext-install odbc; \
    docker-php-ext-install intl; \
    docker-php-source delete
	
	
# ODBC driver
#######################################
COPY odbc/ /odbc/
COPY odbc/progress/ /odbc/
COPY odbc/install.ini /odbc/install.ini
COPY odbc/odbcinst.ini /etc/odbcinst.ini
#COPY odbc/odbc.ini /etc/odbc.ini
RUN chmod +x /odbc/proinst
RUN chmod +x /odbc/_ovrly

RUN odbc/proinst -b /odbc/install.ini

RUN cp /usr/dlc/odbc/lib/libpgicu27.so /usr/lib

# SET ENV
ENV ODBCINI=/etc/odbc.ini
ENV ODBCINST=/etc/odbcinst.ini
ENV LD_LIBRARY_PATH=/usr/dlc/odbc:/usr/dlc/odbc/lib
#######################################




WORKDIR /code/
# Fix SSL configuration to be compatible with older servers
RUN \
    # https://wiki.debian.org/ContinuousIntegration/TriagingTips/openssl-1.1.1
    sed -i 's/CipherString\s*=.*/CipherString = DEFAULT@SECLEVEL=1/g' /etc/ssl/openssl.cnf \
    # https://stackoverflow.com/questions/53058362/openssl-v1-1-1-ssl-choose-client-version-unsupported-protocol
    && sed -i 's/MinProtocol\s*=.*/MinProtocol = TLSv1/g' /etc/ssl/openssl.cnf

## Composer - deps always cached unless changed
# First copy only composer files
COPY composer.* /code/

# Download dependencies, but don't run scripts or init autoloaders as the app is missing
RUN composer install $COMPOSER_FLAGS --no-scripts --no-autoloader

# Copy rest of the app
COPY . /code/

# Run normal composer - all deps are cached already
RUN composer install $COMPOSER_FLAGS

CMD ["php", "/code/src/run.php"]




================================================
FILE: Dockerfile-xdebug
================================================
FROM php:7.4-cli

ARG COMPOSER_FLAGS="--prefer-dist --no-interaction"
ARG DEBIAN_FRONTEND=noninteractive
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_PROCESS_TIMEOUT 3600



COPY docker/php-prod.ini /usr/local/etc/php/php.ini
COPY docker/composer-install.sh /tmp/composer-install.sh

# Xdebug
RUN pecl install xdebug \
  && docker-php-ext-enable xdebug
COPY docker/xdebug/xdebug.ini.dist /usr/local/etc/php/conf.d/xdebug.ini

RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        locales \
        unzip \
        ssh \
        libncurses5 \
        libicu-dev \
        unixodbc \
        mc \
        unixodbc-dev \
	&& rm -r /var/lib/apt/lists/* \
	&& sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
	&& locale-gen \
	&& chmod +x /tmp/composer-install.sh \
	&& /tmp/composer-install.sh

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# INTL
RUN docker-php-ext-configure intl \
    && docker-php-ext-install intl

# PHP ODBC
# https://github.com/docker-library/php/issues/103#issuecomment-353674490
RUN set -ex; \
    docker-php-source extract; \
    { \
        echo '# https://github.com/docker-library/php/issues/103#issuecomment-353674490'; \
        echo 'AC_DEFUN([PHP_ALWAYS_SHARED],[])dnl'; \
        echo; \
        cat /usr/src/php/ext/odbc/config.m4; \
    } > temp.m4; \
    mv temp.m4 /usr/src/php/ext/odbc/config.m4; \
    docker-php-ext-configure odbc --with-unixODBC=shared,/usr; \
    docker-php-ext-install odbc; \
    docker-php-ext-install intl; \
    docker-php-source delete
	
	
# ODBC driver
#######################################
COPY odbc/ /odbc/
COPY odbc/progress/ /odbc/
COPY odbc/install.ini /odbc/install.ini
COPY odbc/odbcinst.ini /etc/odbcinst.ini
#COPY odbc/odbc.ini /etc/odbc.ini

RUN odbc/proinst -b /odbc/install.ini -l odbc/intall.log

RUN cp /usr/dlc/odbc/lib/libpgicu27.so /usr/lib

# SET ENV
ENV ODBCINI=/etc/odbc.ini
ENV ODBCINST=/etc/odbcinst.ini
ENV LD_LIBRARY_PATH=/usr/dlc/odbc:/usr/dlc/odbc/lib
#######################################




WORKDIR /code/
# Fix SSL configuration to be compatible with older servers
RUN \
    # https://wiki.debian.org/ContinuousIntegration/TriagingTips/openssl-1.1.1
    sed -i 's/CipherString\s*=.*/CipherString = DEFAULT@SECLEVEL=1/g' /etc/ssl/openssl.cnf \
    # https://stackoverflow.com/questions/53058362/openssl-v1-1-1-ssl-choose-client-version-unsupported-protocol
    && sed -i 's/MinProtocol\s*=.*/MinProtocol = TLSv1/g' /etc/ssl/openssl.cnf

## Composer - deps always cached unless changed
# First copy only composer files
COPY composer.* /code/

# Download dependencies, but don't run scripts or init autoloaders as the app is missing
RUN composer install $COMPOSER_FLAGS --no-scripts --no-autoloader

# Copy rest of the app
COPY . /code/

# Run normal composer - all deps are cached already
RUN composer install $COMPOSER_FLAGS

CMD ["php", "/code/src/run.php"]




================================================
FILE: LICENSE
================================================
MIT License

Copyright (c) 2020 Keboola

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
FILE: phpcs.xml
================================================
<?xml version="1.0"?>
<ruleset name="Project">
    <rule ref="vendor/keboola/coding-standard/src/ruleset.xml"/>
</ruleset>



================================================
FILE: phpstan.neon
================================================
parameters:
    checkMissingIterableValueType: false
    ignoreErrors: []



================================================
FILE: phpunit.xml.dist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<phpunit backupGlobals="false"
         backupStaticAttributes="false"
         colors="true"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         processIsolation="false"
         stopOnFailure="false"
         bootstrap="tests/phpunit/bootstrap.php">
    <testsuite name="Main Test Suite">
        <directory>tests/phpunit</directory>
    </testsuite>
</phpunit>



================================================
FILE: test.php
================================================
<?php

declare(strict_types=1);

$dsn = 'Progress';
putenv('ODBCINI=/etc/odbc.ini');
putenv('ODBCINST=/etc/odbcinst.ini');
print 'Test ODBC Progress <br>';
$sql = 'SELECT * FROM PUB.Customer';
$conn_id = odbc_connect('Progress', 'sysprogress', 'sysprogress', SQL_CUR_USE_ODBC);
if ($conn_id) {
    echo "connected to DSN: $dsn <br>";
    $result = odbc_do($conn_id, $sql);
    if ($result) {
        echo "executing '$sql'";
        echo ' Results: ';
        odbc_result_all($result, "BGCOLOR='#AAFFAA' border=3 width=30% bordercolordark='#FF0000'");
        echo 'freeing result';
        odbc_free_result($result);
    } else {
        echo "cannot execute '$sql' ";
    }
    echo " closing connection $conn_id";
    odbc_close($conn_id);
} else {
    echo " cannot connect to DSN: $dsn ";
}
/* phpinfo(); */



================================================
FILE: .dockerignore
================================================
vendor/



================================================
FILE: .env.dist
================================================
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=



================================================
FILE: component_config/component_long_description.md
================================================
Testing functional sample extractor for purposes of the python component template. 
Implements partial Hubspot extractor using the public sandbox token.


================================================
FILE: component_config/component_short_description.md
================================================
Testing functional sample extractor for purposes of the python component template. 


================================================
FILE: component_config/configRowSchema.json
================================================
{
    "type": "object",
    "title": "Table configuration",
    "required": [
        "outputTable",
        "table",
        "primaryKey",
        "incremental",
        "columns"
    ],
    "properties": {
        "table": {
            "type": "object",
            "title": "Table",
            "properties": {
                "schema": {
                    "type": "string",
                    "title": "schema",
                    "propertyOrder": 200
                },
                "tableName": {
                    "type": "string",
                    "title": "Source table name",
                    "propertyOrder": 100
                }
            },
            "propertyOrder": 200
        },
        "columns": {
            "type": "array",
            "items": {
                "type": "string",
                "title": "Column"
            },
            "title": "Columns",
            "propertyOrder": 500
        },
        "primaryKey": {
            "type": "array",
            "items": {
                "type": "string",
                "title": "Column"
            },
            "title": "Primary Key",
            "propertyOrder": 400
        },
        "incremental": {
            "type": "boolean",
            "title": "Incremental",
            "propertyOrder": 300
        },
        "outputTable": {
            "type": "string",
            "title": "Output table name",
            "propertyOrder": 100
        },
        "incremental_fetching": {
            "type": "boolean",
            "title": "Incremental Fetching",
            "format": "checkbox",
            "description": "If enabled, only newly created or updated records since the last run will be fetched.",
            "propertyOrder": 300
        },
        "incrementalFetchingColumn": {
            "type": "string",
            "title": "Incremental fetching Column",
            "options": {
                "dependencies": {
                    "incremental_fetching": true
                }
            },
            "description": "Only numeric or date/time columns supported. Using an update timestamp column means that only new and updated records will be fetched, not deletes.",
            "propertyOrder": 350
        }
    }
}


================================================
FILE: component_config/configSchema.json
================================================
{
  "type": "object",
  "title": "Authorization",
  "required": [
    "db"
  ],
  "properties": {
    "db": {
      "type": "object",
      "title": "Authorization",
      "required": [
        "#password",
        "host",
        "port",
        "database",
        "user"
      ],
      "properties": {
        "host": {
          "type": "string",
          "title": "Host",
          "propertyOrder": 100
        },
        "port": {
          "type": "number",
          "title": "Port",
          "default": 1708,
          "propertyOrder": 200
        },
        "database": {
          "type": "string",
          "title": "Database",
          "propertyOrder": 300
        },
        "user": {
          "type": "string",
          "title": "User",
          "propertyOrder": 450
        },
        "#password": {
          "type": "string",
          "title": "Password",
          "format": "password",
          "propertyOrder": 500
        }
      },
      "propertyOrder": 1
    },
    "test_connection": {
      "type": "button",
      "format": "test-connection",
      "propertyOrder": 500
    }
  }
}


================================================
FILE: component_config/configuration_description.md
================================================
Testing configuration description.


================================================
FILE: component_config/stack_parameters.json
================================================
{}


================================================
FILE: component_config/sample-config/config.json
================================================
{
  "storage": {
    "input": {
      "files": [],
      "tables": [
        {
          "source": "in.c-test.test",
          "destination": "test.csv",
          "limit": 50,
          "columns": [],
          "where_values": [],
          "where_operator": "eq"
        }
      ]
    },
    "output": {
      "files": [],
      "tables": []
    }
  },
  "parameters": {
    "#api_token": "demo",
    "period_from": "yesterday",
    "endpoints": [
      "deals",
      "companies"
    ],
    "company_properties": "",
    "deal_properties": "",
    "debug": true
  },
  "image_parameters": {
    "syrup_url": "https://syrup.keboola.com/"
  },
  "authorization": {
    "oauth_api": {
      "id": "OAUTH_API_ID",
      "credentials": {
        "id": "main",
        "authorizedFor": "Myself",
        "creator": {
          "id": "1234",
          "description": "me@keboola.com"
        },
        "created": "2016-01-31 00:13:30",
        "#data": "{\"refresh_token\":\"MCWBkfdK9m5YK*Oqahwm6XN6elMAEwcH5kYcK8Ku!bpiOgSDZN9MQIzunpMsh6LyKH0i!7OcwwwajuxPfvm2PrrWYSs*HerDr2ZSJ39pqHJcvwUNIvHdtcgFFr3Em*yhn3GKBwM2p9UrjtgdAriSDny5YgUYGuI3gYJY1ypD*wBaAOzzeeXZx6CdgjruJ7gboTAngbWk3CzO9rORIwXAAlGUH6ZgBQJL3AwkYVMRFV4BvIvDAMF*0DcGDyrcyYDw9X3vYn*Wy!OqgrenKCGowdJk0C0136SUv4PJI383y76UMim6Q7KGDj7Lf!K2N2FDbxsz2iZKZTBr2vHx8pEC1oBc$\"}",
        "oauthVersion": "2.0",
        "appKey": "000000004C184A49",
        "#appSecret": "vBAYak49pVK1zghHAgDH4tCSCNlT-CiN"
      }
    }
  }
}



================================================
FILE: component_config/sample-config/in/state.json
================================================
{"data_delta": "10222018"}


================================================
FILE: component_config/sample-config/in/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>


================================================
FILE: component_config/sample-config/in/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"



================================================
FILE: component_config/sample-config/in/tables/test.csv.manifest
================================================
{
    "id": "in.c-test.test",
    "uri": "https:\/\/connection.keboola.com\/v2\/storage\/tables\/in.c-test.test",
    "name": "test",
    "primary_key": [],
    "indexed_columns": [],
    "created": "2018-03-02T15:36:50+0100",
    "last_change_date": "2018-03-02T15:36:54+0100",
    "last_import_date": "2018-03-02T15:36:54+0100",
    "rows_count": 0,
    "data_size_bytes": 0,
    "is_alias": false,
    "attributes": [],
    "columns": [
        "Type",
        "Campaign_Name",
        "Status",
        "Start_Date",
        "End_Date",
        "Location",
        "Eventbrite_link"
    ],
    "metadata": [
        {
            "id": "18271581",
            "key": "KBC.createdBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271582",
            "key": "KBC.createdBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271583",
            "key": "KBC.createdBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271584",
            "key": "KBC.lastUpdatedBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271585",
            "key": "KBC.lastUpdatedBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271586",
            "key": "KBC.lastUpdatedBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        }
    ],
    "column_metadata": {
        "Type": [],
        "Campaign_Name": [],
        "Status": [],
        "Start_Date": [],
        "End_Date": [],
        "Location": [],
        "Eventbrite_link": []
    }
}


================================================
FILE: docker/composer-install.sh
================================================
#!/bin/sh

EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")

if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
then
    >&2 echo 'ERROR: Invalid installer signature'
    rm composer-setup.php
    exit 1
fi

php composer-setup.php --quiet --install-dir=/usr/local/bin/ --filename=composer
RESULT=$?
rm composer-setup.php
exit $RESULT



================================================
FILE: docker/php-prod.ini
================================================
; Recommended production values
display_errors = Off
display_startup_errors = Off
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
html_errors = On
log_errors = On
max_input_time = 60
output_buffering = 4096
register_argc_argv = Off
request_order = "GP"
session.gc_divisor = 1000
session.sid_bits_per_character = 5
short_open_tag = Off
track_errors = Off
variables_order = "GPCS"

; Custom
date.timezone = UTC
memory_limit = -1



================================================
FILE: docker/xdebug/xdebug.ini.dist
================================================
xdebug.start_with_request = yes
xdebug.client_host = host.docker.internal
xdebug.mode = debug
xdebug.discover_client_host = 1
; uncomment in case of problems - will create xdebug log inside your project
;xdebug.log=/var/www/html/docker/xdebug/xdebug.log


================================================
FILE: odbc/install.ini
================================================
;
; DESCRIPTION of Configuration Count
;
;  ProductCount - the number of products being installed.
;

[Configuration Count]
NumberofConfigurations=1

[Product Configuration 1]
name=MHW
serial=006122200
version=11.7
control=X8DRS 2PR2C NMCYM
prodname=OE SQL Client Access

;
; DESCRIPTION of Type and Destination
;
;  path - identifies the directory in which you install your OpenEdge product software.
;  workpath - identifies the directory in which your applications, databases, and log files will reside.
;  oem_path - identifies the directory in which you install your Management product software.
;  oem_workpath - identifies the directory in which your Management applications, databases, and log files will reside.
;

[Type and Destination]
type=COMPLETE
path=/usr/dlc
workpath=/usr/wrk
oem_path=/usr/oemgmt
oem_workpath=/usr/wrk_oemgmt

[Installed Products]
ProductCount=1
Product 129=OE SQL Client Access (1 USERS)

[Product 129]
_Component_OpenEdge SQL ODBC Clients=1
_Component_OpenEdge SQL JDBC Clients=1
_Component_OpenEdge ESQL/C Clients=1
__SubComponent_Client-Side Security (r)=1


================================================
FILE: odbc/odbc..ini
================================================
[Progress]
Driver=/usr/dlc/odbc/lib/pgoe27.so
DatabaseName=demo
PortNumber=6000
HostName=host.docker.internal
LogonID=admin
Password=58608790
;APILevel=1
;ConnectFunctions=YYN
;CPTimeout=60
;DriverODBCVer=03.60
;FileUsage=0
;SQLLevel=0
;UsageCount=1
;ArraySize=50
;DefaultLongDataBuffLen=2048
;DefaultIsolationLevel=REPEATABLE READ
;StaticCursorLongColBuffLen=4096
;TRACE=1
;TRACEFILE=/tmp/odbctrace.out

[ODBC]
InstallDir=/usr/dlc/odbc
Trace=1
TraceFile=/tmp/odbctrace.out
TraceDll=/usr/dlc/odbc/lib/pgtrc27.so
UseCursorLib=0
IANAAppCodePage=106


================================================
FILE: odbc/odbcinst.ini
================================================
[Progress]
Description = Progress Driver
Driver      = /usr/dlc/odbc/lib/pgoe27.so
FileUsage   = 1


================================================
FILE: odbc/progress/Readme.txt
================================================
Error reading file with 'UTF-8': 'utf-8' codec can't decode byte 0xe1 in position 71113: invalid continuation byte


================================================
FILE: odbc/progress/_ovrly
================================================
[Binary file]


================================================
FILE: odbc/progress/dbtools
================================================
[Binary file]


================================================
FILE: odbc/progress/esqlclnt
================================================
[Binary file]


================================================
FILE: odbc/progress/inst_hlp
================================================
Error reading file with 'UTF-8': 'utf-8' codec can't decode byte 0xa0 in position 8282: invalid start byte


================================================
FILE: odbc/progress/install.tab
================================================
[Binary file]


================================================
FILE: odbc/progress/installd.ini
================================================
[State Info]
nPlatformId=[[platform-id]]
targetDir=[[install-dir]]
workDir=[[work-dir]]
oemtargetDir=[[oem-install-dir]]
oemworkDir=[[oem-work-dir]]
archiveDir=[[archive-dir]]
docRootDir=[[docRoot-dir]]
scriptsDir=[[scripts-dir]]
javaHome=[[java-home]]
jfcHome=[[jfc-home]]
cpinternal=[[nls-cpinternal]]
cpcoll=[[nls-cpcoll]]
cpcase=[[nls-cpcase]]
dateFormat=[[nls-date]]
numberFormat=[[nls-number]]
numsep=[[nls-numsep]]
numdec=[[nls-numdec]]
folderName=[[folder-name]]
defaultLanguage=[[default-language]]
defaultCountry=[[default-country]]




================================================
FILE: odbc/progress/intlsets.txt
================================================
[NLSDATA]
#Language Country date number -cpinternal -cpcoll -cpcase prolang
#
American Canada dmy 44 46 ISO8859-1 Basic Basic ame
American Canada dmy 44 46 ISO8859-15 Basic Basic ame
American Canada dmy 44 46 1252 Basic Basic ame
American United_States mdy 44 46 ISO8859-1 Basic Basic ame
American United_States mdy 44 46 ISO8859-15 Basic Basic ame
American United_States mdy 44 46 1252 Basic Basic ame
American United_States mdy 44 46 UTF-8 Basic Basic utf
Arabic Middle_East dmy 44 46 1256 Basic Basic arb
Arabic Middle_East dmy 44 46 1256 Arabic9 Basic arb
Croatian Croatia dmy 46 44 1250 Croatian Basic hrv
Czech Czech_Republic dmy 46 44 1250 Czech Basic cze
Danish Denmark dmy 44 46 ISO8859-1 Danish Basic dan
Danish Denmark dmy 44 46 ISO8859-15 Danish Basic dan
Danish Denmark dmy 44 46 1252 Danish Basic dan
Dutch Belgium dmy 46 44 ISO8859-1 Basic Basic dut
Dutch Belgium dmy 46 44 ISO8859-15 Basic Basic dut
Dutch Belgium dmy 46 44 1252 Basic Basic dut
Dutch Netherlands dmy 46 44 ISO8859-1 Basic Basic dut
Dutch Netherlands dmy 46 44 ISO8859-15 Basic Basic dut
Dutch Netherlands dmy 46 44 1252 Basic Basic dut
English-Intl Australia dmy 44 46 ISO8859-1 Basic Basic eng
English-Intl Australia dmy 44 46 ISO8859-15 Basic Basic eng
English-Intl Australia dmy 44 46 1252 Basic Basic eng
English-Intl Canada dmy 44 46 ISO8859-1 Basic Basic eng
English-Intl Canada dmy 44 46 ISO8859-15 Basic Basic eng
English-Intl Canada dmy 44 46 1252 Basic Basic eng
English-Intl United_Kingdom dmy 44 46 ISO8859-1 Basic Basic eng
English-Intl United_Kingdom dmy 44 46 ISO8859-15 Basic Basic eng
English-Intl United_Kingdom dmy 44 46 1252 Basic Basic eng
English-Intl United_States mdy 44 46 ISO8859-1 Basic Basic eng
English-Intl United_States mdy 44 46 ISO8859-15 Basic Basic eng
English-Intl United_States mdy 44 46 1252 Basic Basic eng
Finnish Finland dmy 44 46 ISO8859-1 Finnish Basic fin
Finnish Finland dmy 44 46 ISO8859-15 Finnish Basic fin
Finnish Finland dmy 44 46 1252 Finnish Basic fin
French Belgium dmy 46 44 ISO8859-1 Basic French fre
French Belgium dmy 46 44 ISO8859-15 Basic French fre
French Belgium dmy 46 44 1252 Basic French fre
French Canada dmy 46 44 ISO8859-1 Basic Basic fre
French Canada dmy 46 44 ISO8859-15 Basic Basic fre
French Canada dmy 46 44 1252 Basic Basic fre
French France  dmy 46 44 ISO8859-1 Basic French fre
French France  dmy 46 44 ISO8859-15 Basic French fre
French France  dmy 46 44 1252 Basic French fre
French Switzerland dmy 46 44 ISO8859-1 Basic Basic fre
French Switzerland dmy 46 44 ISO8859-15 Basic Basic fre
French Switzerland dmy 46 44 1252 Basic Basic fre
German Austria dmy 46 44 ISO8859-1 German-Library Basic ger
German Austria dmy 46 44 ISO8859-1 German9 Basic ger
German Austria dmy 46 44 ISO8859-15 German9 Basic ger
German Austria dmy 46 44 1252 German-Library Basic ger
German Austria dmy 46 44 1252 German9 Basic ger
German Germany dmy 46 44 ISO8859-1 German-Library Basic ger
German Germany dmy 46 44 ISO8859-1 German9 Basic ger
German Germany dmy 46 44 ISO8859-15 German9 Basic ger
German Germany dmy 46 44 1252 German9 Basic ger
German Germany dmy 46 44 1252 German-Library Basic ger
German Switzerland dmy 46 44 ISO8859-1 German-Library Basic ger
German Switzerland dmy 46 44 ISO8859-1 German9 Basic ger
German Switzerland dmy 46 44 ISO8859-15 German9 Basic ger
German Switzerland dmy 46 44 1252 German-Library Basic ger
German Switzerland dmy 46 44 1252 German9 Basic ger
Greek Greece dmy 44 46 1253 Greek Basic gre
Hebrew Israel dmy 44 46 ISO8859-8 Hebrew Basic hbr
Hungarian Hungary ymd 46 44 1250 Hungarian Basic hun
Icelandic Iceland ymd 44 46 ISO8859-1 Icelandic Basic isl
Icelandic Iceland ymd 44 46 ISO8859-15 Icelandic Basic isl
Icelandic Iceland ymd 44 46 1252 Icelandic Basic isl
Italian Italy dmy 46 44 ISO8859-1 Basic Basic ita
Italian Italy dmy 46 44 ISO8859-15 Basic Basic ita
Italian Italy dmy 46 44 1252 Basic Basic ita
Italian Switzerland dmy 46 44 ISO8859-1 Basic Basic ita
Italian Switzerland dmy 46 44 ISO8859-15 Basic Basic ita
Italian Switzerland dmy 46 44 1252 Basic Basic ita
Japanese Japan ymd 44 46 SHIFT-JIS Basic Basic jpn
Korean Korea ymd 44 46 CP949 Basic Basic kor
Lithuanian Lithuania ymd 46 44 1257 Lithuanian Basic lit
Norwegian Norway dmy 44 46 ISO8859-1 Norwegian Basic nor
Norwegian Norway dmy 44 46 ISO8859-15 Norwegian Basic nor
Norwegian Norway dmy 44 46 1252 Norwegian Basic nor
Persian Iran dmy 44 46 1256 Basic Basic per
Polish Poland ymd 46 44 1250 Polish Basic pol
Portuguese Brazil dmy 44 46 ISO8859-1 Basic Basic brz
Portuguese Brazil dmy 44 46 ISO8859-15 Basic Basic brz
Portuguese Brazil dmy 44 46 1252 Basic Basic brz
Portuguese Portugal dmy 46 44 ISO8859-1 Basic Basic por
Portuguese Portugal dmy 46 44 ISO8859-15 Basic Basic por
Portuguese Portugal dmy 46 44 1252 Basic Basic por
Romanian Romania dmy 46 44 1250 Romanian Basic rom
Russian Russia dmy 44 46 1251 Russian Basic rus
Serbian Serbia dmy 46 44 1250 Czech Basic srb
Simplified-Chinese PRC dmy 44 46 CP936 Basic Basic sch
Spanish Latin_America dmy 44 46 ISO8859-1 Spanish9 Basic spl
Spanish Latin_America dmy 44 46 ISO8859-1 Basic Basic spl
Spanish Latin_America dmy 44 46 ISO8859-15 Basic Basic spl
Spanish Latin_America dmy 44 46 ISO8859-15 Spanish9 Basic spl
Spanish Latin_America dmy 44 46 1252 Spanish9 Basic spl
Spanish Latin_America dmy 44 46 1252 Basic Basic spl
Spanish Spain dmy 46 44 ISO8859-1 Spanish9 Basic spa
Spanish Spain dmy 46 44 ISO8859-1 Basic Basic spa
Spanish Spain dmy 46 44 ISO8859-15 Basic Basic spa
Spanish Spain dmy 46 44 ISO8859-15 Spanish9 Basic spa
Spanish Spain dmy 46 44 1252 Basic Basic spa
Spanish Spain dmy 46 44 1252 Spanish9 Basic spa
Slovak Slovakia dmy 46 44 1250 Czech Basic svk
Slovenian Slovenia dmy 46 44 1250 Slovenian Basic svn
Swedish Sweden ymd 44 46 ISO8859-1 Swedish Basic swe
Swedish Sweden ymd 44 46 ISO8859-15 Swedish Basic swe
Swedish Sweden ymd 44 46 1252 Swedish Basic swe
Thai Thailand dmy 44 46 620-2533 Basic Basic tai
Traditional-Chinese Taiwan dmy 44 46 CP950 Basic Basic tch
Traditional-Chinese Hong-Kong dmy 44 46 CP950-HKSCS Basic Basic tch
Turkish Turkey dmy 44 46 1254 Turkish Basic tur
#
[NUMBERFORMATS]
# Field delimiter = '|'
# Field1 = Display Format
# Field2 = Description
# Field3 = Value used for -numsep
# Field4 = Value used for -numdec
#
1'234,56|(apostrophe, comma)|39|44|
1'234.56|(apostrophe, period)|39|46|
1,234$56|(comma, dollar)|44|36|
1,234.56|(comma, period)|44|46|
1.234,56|(period, comma)|46|44|
1.234$56|(period, dollar)|46|36|
1 234,56|(space, comma)|32|44|
1 234.56|(space, period)|32|46|
1 234,56|(non-breaking space, comma)|160|44|
1 234.56|(non-breaking space, period)|160|46|



================================================
FILE: odbc/progress/itermcap
================================================
# The Protermcap File
#
# This file contains definition entries for Progress supported terminals
# as well as terminal entries that are not supported by Progress. These
# unsupported terminals are provided as a courtesy to our customers because
# it is usually much better to have an unsupported terminal entry than
# no entry at all. If you find you need to use one of these unsupported
# terminal entries, please completely test your application on the terminal
# itself before putting it into production use.
#
# The character interface was completely rewritten between version 6 and
# version 7. Versions 7 and up use a modified version of the Vermont Views
# character library to control output to the terminal. Consequently, many
# of the capability mnemonics and values have changed. 
#
#  NOTE:  The Vermont Views key-function capabilities and key label
#  capabilities are those that are used by HyperHelp. They are not an
#  exhaustive set of all of the Vermont Views capabilities. 
#  Please see the Progress documentation for how these capabilities are
#  used.
#
# Note that if you assign a PROGRESS key-function more than once, the FIRST
# label is taken and all of the key-sequences are taken as
# alternates.
#
# A label is assigned to a key-function by enclosing it in parentheses after
# the key-function name and before the equal sign.  Since the labels are used
# in messages and help facilities, they should be a succinct description
# of the key on the keyboard, e.g., "CURSOR UP".
#
# PLEASE NOTE THAT SOME OF THE ENTRIES SHOW WHAT VALUES SHOULD BE
# ASSIGNED IN THE TERMINAL "SETUP", e.g.,
#
#	HELP(F2)=^AA\r
#
# MEANS THAT THE FUNCTION KEY F2 SHOULD BE SET UP TO OUTPUT THE
# STRING  "^AA\r".
#
# NOTE: At the bottom of each major terminal type is a tc= to the 
# version 7 key function bindings(v7kf). If you want to use the 
# version 6 key function bindings(v6kf) then change the 7 to a 6.
#
# Color 0, version 6 color name - NORMAL, is set in the 'is' string.
# Color 1, version 6 color name - INPUT, is set and cleared by the ue and us
# terminal capabilities. Color 2, version 6 color name - MESSAGE, 
# is set and cleared by the so and se terminal capabilities. Color 3,
# generally known as high intensity, is set and cleared by HS and HR.
# Color 4, generally known as blink, is set and cleared by BB and BR.
# The largest color number is 127. The glitch field is no longer needed.
#
# System Administrators: Making a site specific version of the PROTERMCAP
# file that only includes the terminals at your site and resetting the 
# $PROTERMCAP environment variable to point to that file may significantly
# reduce the start-up time of Progress.
#
# WARNING: Capabilities and colors are stored in NULL terminated strings.
# If you put a \000 in the middle of a sting (e.g. :cm=\EG%i%+\000%+ H:)
# then the string will be truncated before you intended it to be. In the
# above example it would be truncated before the third % . The sting in
# this example should instead be :cm=\EG%i%.%+ H: . If you need to put a 
# NULL into a string because you want it to be output to the terminal
# (e.g. :GS=^o\000G:) then you should instead us a \200 
# (e.g. :GS=^o\200G:). A \200 is converted to a NULL just before it is
# output to the terminal. Consequently, a \200 would not work in the
# above example with a :cm=...: string where the use of \200
# would have added 128 to the row position instead of 0.
#
# Not all key sequences are available on all terminals. For instance,
# on terminals that use control keys for the arrow keys we cannot use
# the key sequence ESC-UP-ARROW for the key-function PAGE-UP without it
# conflicting with another key-function. 
# In general, we try to do the following for version 7 key function bindings:
#
#	:EDITOR-BACKTAB(CTRL-B)=^b:\
#	:STOP(CTRL-C)=^c:\
#	:DELETE-LINE(CTRL-D)=^d:\
#	:END-ERROR(F4)=:\
#	:END-ERROR(CTRL-E)=^e:\
#	:FIND(CTRL-F)=^f:\
#	:EDITOR-TAB(CTRL-G)=^g:\
#	:BACKSPACE(CTRL-H)=^h:\
#	:TAB(CTRL-I)=^i:\
#	:CURSOR-DOWN(CTRL-J)=^j:\
#	:CURSOR-UP(CTRL-K)=^k:\
#	:CURSOR-RIGHT(CTRL-L)=^l:\
#	:RETURN(CTRL-M)=^m:\
#	:NEW-LINE(CTRL-N)=^n:\
#	:CURSOR-LEFT(CTRL-O)=^o:\
#	:PREV-WORD(CTRL-P)=^p:\
#	:RESUME-DISPLAY(CTRL-Q)=^q:\
#	:RECALL(F7)=:\
#	:RECALL(CTRL-R)=^r:\
#	:STOP-DISPLAY(CTRL-S)=^s:\
#	:INSERT-MODE(INS)=:\
#	:INSERT-MODE(F9)=:\
#	:INSERT-MODE(CTRL-T)=^t:\
#	:INSERT-MODE(CTRL-@)=^@:\
#	:BACK-TAB(CTRL-U)=^u:\
#	:BLOCK(CTRL-V)=^v:\
#	:NEXT-WORD(CTRL-W)=^w:\
#	:GO(F1)=:\
#	:GO(CTRL-X)=^x:\
#	:CLEAR(F8)=:\
#	:CLEAR(CTRL-Z)=^z:\
#	:UNIX-END(CTRL-\)=:\
#	:DELETE(DELETE)=\177:\
#	:SAVE-AS(ESC-A)=\Ea:\
#	:BREAK-LINE(ESC-B)=\Eb:\
#	:COPY(F11)=:\
#	:COPY(ESC-C)=\Ec:\
#	:DELETE-WORD(ESC-D)=\Ed:\
#	:NEXT-ERROR(ESC-E)=\Ee:\
#	:FIND-NEXT(ESC-F)=\Ef:\
#	:GOTO(ESC-G)=\Eg:\
#	:FIND-PREVIOUS(ESC-I)=\Ei:\
#	:DELETE-END-LINE(ESC-K)=\Ek:\
#	:OPEN-LINE-ABOVE(ESC-L)=\El:\
#	:ENTER-MENUBAR(F3)=:\
#	:ENTER-MENUBAR(ESC-M)=\Em:\
#	:NEW(ESC-N)=\En:\
#	:GET(F5)=:\
#	:GET(ESC-O)=\Eo:\
#	:COMPILE(ESC-P)=\Ep:\
#	:EXIT(ESC-Q)=\Eq:\
#	:REPLACE(ESC-R)=\Er:\
#	:PUT(F6)=:\
#	:PUT(ESC-S)=\Es:\
#	:SCROLL-MODE(ESC-T)=\Et:\
#	:DEFAULT-POP-UP(ESC-U)=\Eu:\
#	:PASTE(F12)=:\
#	:PASTE(ESC-V)=\Ev:\
#	:PAGE-LEFT(ESC-W)=\Ew:\
#	:CUT(F10)=:\
#	:CUT(ESC-X)=\Ex:\
#	:PAGE-RIGHT(ESC-Y)=\Ey:\
#	:CLOSE(ESC-Z)=\Ez:\
#	:HELP(F2)=:\
#	:HELP(ESC-?)=\E?:\
#	:HOME(HOME)=:\
#	:HOME(ESC-<)=\E<:\
#	:HOME(ESC-,)=\E,:\
#	:END(END)=:\
#	:END(ESC->)=\E>:\
#	:END(ESC-.)=\E.:\
#	:REPORTS(ESC-CTRL-A)=\E^a:\
#	:BOTTOM-COLUMN(ESC-CTRL-B)=\E^b:\
#	:DELETE-FIELD(ESC-CTRL-D)=\E^d:\
#	:INSERT-FIELD-LABEL(ESC-CTRL-E)=\E^e:\
#	:INSERT-FIELD-DATA(ESC-CTRL-F)=\E^f:\
#	:INSERT-FIELD(ESC-CTRL-G)=\E^g:\
#	:CHOICES(ESC-CTRL-H)=\E^h:\
#	:NEXT-FRAME(ESC-CTRL-I)=\E^i:\
#	:PAGE-RIGHT-TEXT(ESC-CTRL-J)=\E^j:\
#	:SCROLL-LEFT(ESC-CTRL-L)=\E^l:\
#	:MAIN-MENU(ESC-CTRL-M)=\E^m:\
#	:INSERT-COLUMN(ESC-CTRL-N)=\E^n:\
#	:OPTIONS(ESC-CTRL-O)=\E^o:\
#	:PICK(ESC-CTRL-P)=\E^p:\
#	:PICK-BOTH(ESC-CTRL-Q)=\E^q:\
#	:SCROLL-RIGHT(ESC-CTRL-R)=\E^r:\
#	:SETTINGS(ESC-CTRL-@)=\E^@:\
#	:TOP-COLUMN(ESC-CTRL-T)=\E^t:\
#	:PREV-FRAME(ESC-CTRL-U)=\E^u:\
#	:MOVE(ESC-CTRL-V)=\E^v:\
#	:PICK-AREA(ESC-CTRL-W)=\E^w:\
#	:CANCEL-PICK(ESC-CTRL-X)=\E^x:\
#	:DELETE-COLUMN(ESC-CTRL-Z)=\E^z:\
#	:PAGE-UP(PAGE-UP)=:\
#	:PAGE-UP(ESC-UP-ARROW)=:\
#	:PAGE-DOWN(PAGE-DOWN)=:\
#	:PAGE-DOWN(ESC-DOWN-ARROW)=:\
#	:RIGHT-END(ESC-RIGHT-ARROW)=:\
#	:LEFT-END(ESC-LEFT-ARROW)=:\
#
#
v7kf|version 7 key functions:\
	:NEXT-WORD(CTRL-W)=^w:\
	:HELP(ESC-?)=\E?:\
	:COPY(ESC-C)=\Ec:\
	:CHOICES(ESC-CTRL-H)=\E^h:\
	:OPTIONS(ESC-CTRL-O)=\E^o:\
	:GET(ESC-O)=\Eo:\
	:MAIN-MENU(ESC-CTRL-M)=\E^m:\
	:ENTER-MENUBAR(ESC-M)=\Em:\
	:EDITOR-TAB(CTRL-G)=^g:\
	:PREV-WORD(CTRL-P)=^p:\
	:PUT(ESC-S)=\Es:\
	:EDITOR-BACKTAB(CTRL-B)=^b:\
	:DELETE-LINE(CTRL-D)=^d:\
	:END-ERROR(CTRL-E)=^e:\
	:FIND(CTRL-F)=^f:\
	:BACKSPACE(CTRL-H)=^h:\
	:TAB(CTRL-I)=^i:\
	:CURSOR-DOWN(CTRL-J)=^j:\
	:CURSOR-UP(CTRL-K)=^k:\
	:CURSOR-RIGHT(CTRL-L)=^l:\
	:RETURN(CTRL-M)=^m:\
	:NEW-LINE(CTRL-N)=^n:\
	:CURSOR-LEFT(CTRL-O)=^o:\
	:RESUME-DISPLAY(CTRL-Q)=^q:\
	:RECALL(CTRL-R)=^r:\
	:STOP-DISPLAY(CTRL-S)=^s:\
	:INSERT-MODE(CTRL-T)=^t:\
	:BACK-TAB(CTRL-U)=^u:\
	:BLOCK(CTRL-V)=^v:\
	:GO(CTRL-X)=^x:\
	:CLEAR(CTRL-Z)=^z:\
	:SAVE-AS(ESC-A)=\Ea:\
	:BREAK-LINE(ESC-B)=\Eb:\
	:DELETE-WORD(ESC-D)=\Ed:\
	:NEXT-ERROR(ESC-E)=\Ee:\
	:FIND-NEXT(ESC-F)=\Ef:\
	:GOTO(ESC-G)=\Eg:\
	:FIND-PREVIOUS(ESC-I)=\Ei:\
	:DELETE-END-LINE(ESC-K)=\Ek:\
	:OPEN-LINE-ABOVE(ESC-L)=\El:\
	:NEW(ESC-N)=\En:\
	:COMPILE(ESC-P)=\Ep:\
	:EXIT(ESC-Q)=\Eq:\
	:REPLACE(ESC-R)=\Er:\
	:SCROLL-MODE(ESC-T)=\Et:\
	:DEFAULT-POP-UP(ESC-U)=\Eu:\
	:PASTE(ESC-V)=\Ev:\
	:PAGE-LEFT(ESC-W)=\Ew:\
	:CUT(ESC-X)=\Ex:\
	:PAGE-RIGHT(ESC-Y)=\Ey:\
	:CLOSE(ESC-Z)=\Ez:\
	:HOME(HOME)=:\
	:HOME(ESC-<)=\E<:\
	:HOME(ESC-,)=\E,:\
	:END(END)=:\
	:END(ESC->)=\E>:\
	:END(ESC-.)=\E.:\
	:REPORTS(ESC-CTRL-A)=\E^a:\
	:BOTTOM-COLUMN(ESC-CTRL-B)=\E^b:\
	:DELETE-FIELD(ESC-CTRL-D)=\E^d:\
	:INSERT-FIELD-LABEL(ESC-CTRL-E)=\E^e:\
	:INSERT-FIELD-DATA(ESC-CTRL-F)=\E^f:\
	:INSERT-FIELD(ESC-CTRL-G)=\E^g:\
	:NEXT-FRAME(ESC-CTRL-I)=\E^i:\
	:SCROLL-LEFT(ESC-CTRL-L)=\E^l:\
	:INSERT-COLUMN(ESC-CTRL-N)=\E^n:\
	:PICK(ESC-CTRL-P)=\E^p:\
	:PICK-BOTH(ESC-CTRL-Q)=\E^q:\
	:SCROLL-RIGHT(ESC-CTRL-R)=\E^r:\
	:SETTINGS(ESC-CTRL-@)=\E^@:\
	:TOP-COLUMN(ESC-CTRL-T)=\E^t:\
	:PREV-FRAME(ESC-CTRL-U)=\E^u:\
	:MOVE(ESC-CTRL-V)=\E^v:\
	:PICK-AREA(ESC-CTRL-W)=\E^w:\
	:CANCEL-PICK(ESC-CTRL-X)=\E^x:\
	:LEFT-END(ESC-LEFT-ARROW)=\E^o:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E^l:\
	:PAGE-UP(ESC-UP-ARROW)=\E^k:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E^j:\
	:APPEND-LINE(CTRL-A)=^a:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E^z:
#
#Version 6 key functions
v6kf|version 6 key functions:\
	:HELP(CTRL-W)=^w:\
	:NEXT-WORD(ESC-?)=\E?:\
	:CHOICES(ESC-C)=\Ec:\
	:COPY(ESC-CTRL-H)=\E^h:\
	:OPTIONS(ESC-O)=\Eo:\
	:ENTER-MENUBAR(ESC-CTRL-M)=\E^m:\
	:MAIN-MENU(ESC-M)=\Em:\
	:EDITOR-TAB(ESC-CTRL-O)=\E^o:\
	:GET(CTRL-G)=^g:\
	:PUT(CTRL-P)=^p:\
	:PREV-WORD(ESC-S)=\Es:\
	:EDITOR-BACKTAB(CTRL-B)=^b:\
	:DELETE-LINE(CTRL-D)=^d:\
	:END-ERROR(CTRL-E)=^e:\
	:FIND(CTRL-F)=^f:\
	:BACKSPACE(CTRL-H)=^h:\
	:TAB(CTRL-I)=^i:\
	:CURSOR-DOWN(CTRL-J)=^j:\
	:CURSOR-UP(CTRL-K)=^k:\
	:CURSOR-RIGHT(CTRL-L)=^l:\
	:RETURN(CTRL-M)=^m:\
	:NEW-LINE(CTRL-N)=^n:\
	:CURSOR-LEFT(CTRL-O)=^o:\
	:RESUME-DISPLAY(CTRL-Q)=^q:\
	:RECALL(CTRL-R)=^r:\
	:STOP-DISPLAY(CTRL-S)=^s:\
	:INSERT-MODE(CTRL-T)=^t:\
	:BACK-TAB(CTRL-U)=^u:\
	:BLOCK(CTRL-V)=^v:\
	:GO(CTRL-X)=^x:\
	:CLEAR(CTRL-Z)=^z:\
	:SAVE-AS(ESC-A)=\Ea:\
	:BREAK-LINE(ESC-B)=\Eb:\
	:DELETE-WORD(ESC-D)=\Ed:\
	:NEXT-ERROR(ESC-E)=\Ee:\
	:FIND-NEXT(ESC-F)=\Ef:\
	:GOTO(ESC-G)=\Eg:\
	:FIND-PREVIOUS(ESC-I)=\Ei:\
	:DELETE-END-LINE(ESC-K)=\Ek:\
	:OPEN-LINE-ABOVE(ESC-L)=\El:\
	:NEW(ESC-N)=\En:\
	:COMPILE(ESC-P)=\Ep:\
	:EXIT(ESC-Q)=\Eq:\
	:REPLACE(ESC-R)=\Er:\
	:SCROLL-MODE(ESC-T)=\Et:\
	:DEFAULT-POP-UP(ESC-U)=\Eu:\
	:PASTE(ESC-V)=\Ev:\
	:PAGE-LEFT(ESC-W)=\Ew:\
	:CUT(ESC-X)=\Ex:\
	:PAGE-RIGHT(ESC-Y)=\Ey:\
	:CLOSE(ESC-Z)=\Ez:\
	:HOME(HOME)=:\
	:HOME(ESC-<)=\E<:\
	:HOME(ESC-,)=\E,:\
	:END(END)=:\
	:END(ESC->)=\E>:\
	:END(ESC-.)=\E.:\
	:REPORTS(ESC-CTRL-A)=\E^a:\
	:BOTTOM-COLUMN(ESC-CTRL-B)=\E^b:\
	:DELETE-FIELD(ESC-CTRL-D)=\E^d:\
	:INSERT-FIELD-LABEL(ESC-CTRL-E)=\E^e:\
	:INSERT-FIELD-DATA(ESC-CTRL-F)=\E^f:\
	:INSERT-FIELD(ESC-CTRL-G)=\E^g:\
	:NEXT-FRAME(ESC-CTRL-I)=\E^i:\
	:SCROLL-LEFT(ESC-CTRL-L)=\E^l:\
	:INSERT-COLUMN(ESC-CTRL-N)=\E^n:\
	:PICK(ESC-CTRL-P)=\E^p:\
	:PICK-BOTH(ESC-CTRL-Q)=\E^q:\
	:SCROLL-RIGHT(ESC-CTRL-R)=\E^r:\
	:SETTINGS(ESC-CTRL-@)=\E^@:\
	:TOP-COLUMN(ESC-CTRL-T)=\E^t:\
	:PREV-FRAME(ESC-CTRL-U)=\E^u:\
	:MOVE(ESC-CTRL-V)=\E^v:\
	:PICK-AREA(ESC-CTRL-W)=\E^w:\
	:CANCEL-PICK(ESC-CTRL-X)=\E^x:\
	:LEFT-END(ESC-LEFT-ARROW)=\E^o:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E^l:\
	:PAGE-UP(ESC-UP-ARROW)=\E^k:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E^j:\
	:APPEND-LINE(CTRL-A)=^a:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E^z:
#
# note that we are assuming auto-wrap mode.
# If you are experiencing problems with cursor flashing,
# you should try copying the CO, CN and CF strings from
# the vt220 entry to this entry.  These strings are
# used to turn the cursor on and off, but not all
# terminals that reference this entry (e.g., xterm)
# support this capability, so they are not included
# here by default.  Note that PROGRESS assumes that
# your terminal is capable of turning the cursor on
# and off if these strings are present, so if your
# terminal does not support this then you will see
# erratic cursor behavior (e.g., cursor left in the
# middle of the screen when it should be placed in
# the lower right corner).
# This terminal is Supported by PROGRESS.
V1|vt100|VT100|vt100-80|vt100_series|DEC VT-100:\
        :START-RESIZE(ESC-1)=\E1:\
        :GO(F1)=\E[11:\
	:GO(CTRL-X)=^x:\
        :HELP(F2)=\E[12:\
        :ENTER-MENUBAR(F3)=\E[13:\
        :END-ERROR(F4)=\E[14:\
	:GET(F5)=\E[15:\
	:PUT(F6)=\E[17:\
        :RECALL(F7)=\E[18:\
        :CLEAR(F8)=\E[19:\
	:CLEAR(CTRL-Z)=^z:\
	:INSERT-MODE(CTRL-T)=^t:\
        :CUT(F10)=\E[21:\
        :COPY(F11)=\E[23:\
        :PASTE(F12)=\E[24:\
        :BACKSPACE(DEL-CHAR)=\EW:\
	:BLOCK(CTRL-V)=^v:\
	:HOME(ESC-<)=\E<:\
	:END(ESC->)=\E>:\
	:is=\E>\E[?3l\E[?4l\E[m\E[?7h\E[?8h\E(B\E)0:\
	:nd=2\E[C:\
	:do=\E[B:\
	:cl=50\E[;H\E[2J:\
	:cm=5\E[%i%d;%dH:\
	:so=2\E[7m:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E[4:\
        :END(END)=\E[5:\
	:se=2\E[m:\
	:us=2\E[4m:\
	:ue=2\E[m:\
	:GS=^N:\
	:GE=^O:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:GC=n:\
	:GD=w:\
	:GH=q:\
	:GL=u:\
	:GR=t:\
	:GU=v:\
	:GV=x:\
	:HS=2\E[1m:\
	:HR=2\E[m:\
	:BB=2\E[5m:\
	:BR=2\E[m:\
	:ks=\E[?1h\E=:\
	:ke=\E[?1l\E>:\
	:cd=10\E[J:\
	:ce=10\E[K:\
	:co#80:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:ku=\E[A:\
	:li#24:\
	:up=\E[A:\
	:xi:\
	:cs=\E[%i%d;%dr:\
	:sr=\EM:\
	:sf=\n:\
	:GO(PF1)=\EOP:\
	:HELP(PF2)=\EOQ:\
	:ENTER-MENUBAR(PF3)=\EOR:\
	:END-ERROR(PF4)=\EOS:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:bc=\177:       :.L_bc:\
	:kh=\Eh:	:L_kh=<ESC> h:\
	:EN=\Ee:	:L_EN=<ESC> e:\
	:PU=^U: 	:L_PU=<CTRL-U>:\
	:PD=^K: 	:L_PD=<CTRL-D>:\
	:ki=\Ei:	:L_ki=<ESC> i:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\Eb:	:L_bt=<ESC> b:\
	:fk4=\EOP:	:L_fk4=<PF1>:\
	:fk1=\EOQ:	:L_fk1=<PF2>:\
	:fk2=\EOR:	:L_fk2=<PF3>:\
	:fk3=\EOS:	:L_fk3=<PF4>:\
	:fk5=\E6:	:L_fk5=<ESC> 6:\
	:fk6=\E7:	:L_fk6=<ESC> 7:\
	:fk7=\E8:	:L_fk7=<ESC> 8:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
# Sun 3 console
#
# This Terminal Is Supported By Progress
Mu|sun|Sun Microsystems 3/50 Workstation console:\
	:cl=^L:\
	:so=\E[7m:\
	:se=\E[m:\
	:us=\E[7m:\
	:ue=\E[m:\
	:GV=|:\
	:GH=-:\
	:G1=+:\
	:G2=+:\
	:G3=+:\
	:G4=+:\
	:ws:\
	:li#34:\
	:co#80:\
	:cl=^L:\
	:cm=\E[%i%d;%dH:\
	:nd=\E[C:\
	:up=\E[A:\
	:am:bs:km:mi:ms:pt:\
	:ce=\E[K:\
	:cd=\E[J:\
	:so=\E[7m:\
	:se=\E[m:\
	:us=\E[4m:\
	:ue=\E[m:\
	:kd=\E[B:\
	:kl=\E[D:\
	:ku=\E[A:\
	:kr=\E[C:\
	:kh=\E[H:\
	:al=\E[L:\
	:dl=\E[M:\
	:ic=\E[@:\
	:dc=\E[P:\
	:HOME(HOME)=\E[214z:\
 	:END(END)=\E[220z:\
	:INSERT-MODE(INS)=\000:\
	:PAGE-UP(PAGE-UP)=\E[216z:\
	:PAGE-DOWN(PAGE-DOWN)=\E[222z:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:GO(F1)=\E[202z:\
	:HELP(F2)=\E[225z:\
	:ENTER-MENUBAR(F3)=\E[226z:\
	:END-ERROR(F4)=\E[227z:\
	:GET(F5)=\E[228z:\
	:PUT(F6)=\E[229z:\
	:RECALL(F7)=\E[230z:\
	:CLEAR(F8)=\E[231z:\
	:INSERT-MODE(F9)=\E[232z:\
	:CUT(F10)=\E[233z:\
	:COPY(F11)=\E[234z:\
	:PASTE(F12)=\E[235z:\
	:HOME(F27)=\E[214z:\
	:PAGE-UP(F29)=\E[216z:\
	:END(F33)=\E[220z:\
	:PAGE-DOWN(F35)=\E[222z:\
	:HOME(PF7)=\E[214z:\
	:PAGE-UP(PF9)=\E[216z:\
	:END(PF13)=\E[220z:\
	:PAGE-DOWN(PF15)=\E[222z:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:bt=^u:	:L_bt=<CTRL-U>:\
	:kh=\E[214z:	:L_kh=<Home>:\
	:EN=\E[220z:	:L_EN=<End>:\
	:PU=\E[216z:	:L_PU=<PgUp>:\
	:PD=\E[222z:	:L_PD=<PgDn>:\
	:ki=\E[247z:	:L_ki=<Ins>:\
	:DL=\E[249z:	:L_DL=<Del>:\
	:ESC=\E\E:	:L_ESC=<ESC><ESC>:\
	:fk1=\E[225z:	:L_fk1=<F2>:\
	:fk2=\E[226z:	  :L_fk2=<F3>:\
	:fk3=\E[227z:	  :L_fk3=<F4>:\
	:fk4=\E[228z:	  :L_fk4=<F5>:\
	:fk5=\E[229z:	  :L_fk5=<F6>:\
	:fk6=\E[230z:	  :L_fk6=<F7>:\
	:fk7=\E[231z:	  :L_fk7=<F8>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:k39=:	:L_k39=Ctrl-D:\
	:k38=:	:L_k38=Ctrl-P:\
	:k37=:	:L_k37=Ctrl-D:\
	:k36=:	:L_k36=Ctrl-V:\
	:k35=\Ec:	:L_k35=ESC-C:\
	:k34=\Eq:	:L_k34=ESC-Q:\
	:tc=v7kf:
#
# note that we are assuming auto-wrap mode.
# The :COLOR statement has been modified from version 6. A color number
# is now required. You do not have to specify a color name. The color
# name is included for version 6 compatibility. The first five colors, 
# color 0 through color 4, are not set using the :COLOR statement.
# Color 0, version 6 color name - NORMAL, is set in the is string.
# Color 1, version 6 color name - INPUT, is set and cleared by the ue, us,
# and ug terminal capabilities. Color 2, version 6 color name - MESSAGE, 
# is set and cleared by the so, se, and sg terminal capabilities. Color 3,
# generally known a high intensity, is set and cleared by HS and HR.
# Color 4, generally known as blink, is set and cleared by BB and BR.
# The largest color number is currently 128. The glitch field is 
# no longer needed.
# This Terminal Is Supported By Progress
wy370|wyse370|wyse_370|wyse 370 running in native mode:\
	:is=\E[?3l\E[90;1"p\E(B\E)0\E[63;0w:\
	:do=\E[B:\
	:cl=\E[2J\E[H:\
	:GC=n:\
	:GD=w:\
	:GL=u:\
	:GR=t:\
	:GU=v:\
	:BB=\E[5m:\
	:BR=\E[m:\
	:ct:\
	:xi:\
	:CO=\E[?25h:\
	:CN=\E[?25h:\
	:CF=\E[?25l:\
	:so=\E[7m:\
	:se=\E[m:\
	:HS=\E[1m:\
	:HR=\E[m:\
	:cd=\E[J:\
	:ce=\E[K:\
	:cm=\E[%i%d;%dH:\
	:co#80:\
	:cs=\E[%i%d;%dr:\
	:ei=\E[4l:\
	:im=\E[4h:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:ku=\E[A:\
	:li#24:\
	:nd=\E[C:\
	:se=\E[m:\
	:so=\E[7m:\
	:sr=\EM:\
	:sf=\n:\
	:Si=\E)0:\
	:Se=:\
	:ue=\E[m:\
	:up=\E[A:\
	:us=\E[4m:\
	:GS=^N:\
	:GE=^O:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:GH=q:\
	:GV=x:\
	:GO(F1)=\E[?5i:\
	:HELP(F2)=\E[?3i:\
	:ENTER-MENUBAR(F3)=\E[2i:\
	:END-ERROR(F4)=\E[@:\
	:GET(F5)=\E[M:\
	:PUT(F6)=\E[17~:\
	:RECALL(F7)=\E[18~:\
	:CLEAR(F8)=\E[19~:\
	:INSERT-MODE(F9)=\E[20~:\
	:CUT(F10)=\E[21~:\
	:COPY(F11)=\E[23~:\
	:PASTE(F12)=\E[24~:\
	:FIND(F13)=\E[25~:\
	:BLOCK(F14)=\E[26~:\
	:PAGE-UP(F15)=\E[28~:\
	:PAGE-DOWN(F16)=\E[29~:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:COLOR 5 RED/BLACK=\E[31;40m:\E[m:\
	:COLOR 6 GREEN/BLACK=\E[32;40m:\E[m:\
	:COLOR 7 YELLOW/BLACK=\E[33;40m:\E[m:\
	:COLOR 8 BLUE/BLACK=\E[34;40m:\E[m:\
	:COLOR 9 MAGENTA/BLACK=\E[35;40m:\E[m:\
	:COLOR 10 CYAN/BLACK=\E[36;40m:\E[m:\
	:COLOR 11 WHITE/BLACK=\E[37;40m:\E[m:\
	:COLOR 12 RED/BLUE=\E[31;44m:\E[m:\
	:COLOR 13 RED/GREEN=\E[31;42m:\E[m:\
	:COLOR 14 RED/YELLOW=\E[31;43m:\E[m:\
	:COLOR 15 RED/MAGENTA=\E[31;45m:\E[m:\
	:COLOR 16 RED/CYAN=\E[31;46m:\E[m:\
	:COLOR 17 RED/WHITE=\E[31;47m:\E[m:\
	:COLOR 18 GREEN/BLUE=\E[32;44m:\E[m:\
	:COLOR 19 GREEN/RED=\E[32;41m:\E[m:\
	:COLOR 20 GREEN/YELLOW=\E[32;43m:\E[m:\
	:COLOR 21 GREEN/MAGENTA=\E[32;45m:\E[m:\
	:COLOR 22 GREEN/CYAN=\E[32;46m:\E[m:\
	:COLOR 23 GREEN/WHITE=\E[32;47m:\E[m:\
	:COLOR 24 YELLOW/BLUE=\E[33;44m:\E[m:\
	:COLOR 25 YELLOW/RED=\E[33;41m:\E[m:\
	:COLOR 26 YELLOW/GREEN=\E[33;42m:\E[m:\
	:COLOR 27 YELLOW/MAGENTA=\E[33;45m:\E[m:\
	:COLOR 28 YELLOW/CYAN=\E[33;46m:\E[m:\
	:COLOR 29 YELLOW/WHITE=\E[33;47m:\E[m:\
	:COLOR 30 BLUE/YELLOW=\E[34;43m:\E[m:\
	:COLOR 31 BLUE/RED=\E[34;41m:\E[m:\
	:COLOR 32 BLUE/GREEN=\E[34;42m:\E[m:\
	:COLOR 33 BLUE/MAGENTA=\E[34;45m:\E[m:\
	:COLOR 34 BLUE/CYAN=\E[34;46m:\E[m:\
	:COLOR 35 BLUE/WHITE=\E[34;47m:\E[m:\
	:COLOR 36 MAGENTA/YELLOW=\E[35;43m:\E[m:\
	:COLOR 37 MAGENTA/RED=\E[35;41m:\E[m:\
	:COLOR 38 MAGENTA/GREEN=\E[35;42m:\E[m:\
	:COLOR 39 MAGENTA/BLUE=\E[35;44m:\E[m:\
	:COLOR 40 MAGENTA/CYAN=\E[35;46m:\E[m:\
	:COLOR 41 MAGENTA/WHITE=\E[35;47m:\E[m:\
	:COLOR 42 CYAN/YELLOW=\E[36;43m:\E[m:\
	:COLOR 43 CYAN/RED=\E[36;41m:\E[m:\
	:COLOR 44 CYAN/GREEN=\E[36;42m:\E[m:\
	:COLOR 45 CYAN/BLUE=\E[36;44m:\E[m:\
	:COLOR 46 CYAN/MAGENTA=\E[36;45m:\E[m:\
	:COLOR 47 CYAN/WHITE=\E[36;47m:\E[m:\
	:COLOR 48 WHITE/YELLOW=\E[37;43m:\E[m:\
	:COLOR 49 WHITE/RED=\E[37;41m:\E[m:\
	:COLOR 50 WHITE/GREEN=\E[37;42m:\E[m:\
	:COLOR 51 WHITE/BLUE=\E[37;44m:\E[m:\
	:COLOR 52 WHITE/MAGENTA=\E[37;45m:\E[m:\
	:COLOR 53 WHITE/CYAN=\E[37;46m:\E[m:\
	:COLOR 54 BLACK/YELLOW=\E[30;43m:\E[m:\
	:COLOR 55 BLACK/RED=\E[30;41m:\E[m:\
	:COLOR 56 BLACK/GREEN=\E[30;42m:\E[m:\
	:COLOR 57 BLACK/BLUE=\E[30;44m:\E[m:\
	:COLOR 58 BLACK/MAGENTA=\E[30;45m:\E[m:\
	:COLOR 59 BLACK/CYAN=\E[30;46m:\E[m:\
	:COLOR 60 BLACK/WHITE=\E[30;47m:\E[m:\
	:COLOR 61 GREEN/DKBL=\E[14;3x:\E[63;0w:\
	:COLOR 62 BROWN/WHITE=\E[37;64x:\E[63;0w:\
	:COLOR 63 BROWN/CYAN=\E[37;16x:\E[63;0w:\
	:COLOR 64=\E[16;8x:\E[63;0w:\
	:COLOR 65=\E[54;8x:\E[63;0w:\
	:COLOR 66 DKRD/BLACK=\E[33;1x:\E[63;0w:\
	:COLOR 67=\E[64;8x:\E[63;0w:\
	:COLOR 68 CYAN/PURPLE=\E[16;18x:\E[63;0w:\
	:COLOR 69 BLACK/PURPLE=\E[1;18x:\E[63;0w:\
	:COLOR 70 WHITE/PURPLE=\E[64;18x:\E[63;0w:\
	:COLOR 71 ORANGE/PURPLE=\E[54;18x:\E[63;0w:\
	:COLOR 72 GREEN/PURPLE=\E[13;18x:\E[63;0w:\
	:COLOR 73 BLINKRED=\E[54;1;2x:\E[63;0w:\
	:COLOR 74 ORANGE/BLACK=\E[54;1x:\E[63;0w:\
	:COLOR 75 CYAN/FOREST=\E[16;5x:\E[63;0w:\
	:COLOR 76 ORANGE/FOREST=\E[54;5x:\E[63;0w:\
	:COLOR 77 WHITE/FOREST=\E[64;5x:\E[63;0w:\
	:COLOR 78 GREEN/FOREST=\E[14;5x:\E[63;0w:\
	:COLOR 79 BLACK/FOREST=\E[1;5x:\E[63;0w:\
	:COLOR 80 LTGR/FOREST=\E[9;5x:\E[63;0w:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:bt=\E[Z:	:L_bt=<SHIFT-Tab>:\
	:kh=\E[H:	:L_kh=<Home>:\
	:EN=\Ee:	:L_EN=<ESC> e:\
	:PU=\E[V:	:L_PU=<PgUp>:\
	:PD=\E[U:	:L_PD=<PgDn>:\
	:ki=\Ei:	:L_ki=<ESC> i:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:fk0=\EOP:	:L_fk0=<F1>:\
	:fk1=\EOQ:	:L_fk1=<F2>:\
	:fk2=\EOR:	:L_fk2=<F3>:\
	:fk3=\EOS:	:L_fk3=<F4>:\
	:fk4=\E[M:	:L_fk4=<F5>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
# It may take a second for the terminal to competely setup. If you notice
# that the first ten or so lines are messed up when you do a term= and 
# then output, you should try putting in a "PAUSE 1." statement.
# This Terminal Is Supported By Progress
wy370-132:Wyse 370 in 132 column mode:\
	:is=\E[?3h\E[90;1"p\E(B\E)0\E[63;0w:\
	:co#132:	:tc=wy370:
#
# ^A is used as a lead in sequence and ^J is used for down arrow
#
#  Make sure that your function keys are set up as follows:
#    F1 = ^A@\r  F7 = ^AF\r
#    F2 = ^AA\r  F8 = ^AG\r
#    F3 = ^AB\r  F9 = ^AH\r
#    F4 = ^AC\r  F10 = ^AI\r
#    F5 = ^AD\r  F11 = ^AJ\r
#    F6 = ^AE\r  F12 = ^AK\r (NOTE: Ctrl-M same as \r.)
#
#    Also have the following settings:
#
#    BLK END = US / CR
#    AUTO NL = ON
#    CR      = CR
#    AUTO SCRL = ON
#    SCRL = JUMP
#
# This Terminal Is Not Supported By Progress
w5|wy50|wyse50|Wyse 50+ terminal:\
	:is=\EA21\E`6:\
	:HR=\EG0:\
	:HG#1:\
	:HS=\EG4:\
	:CO=\E`1:\
	:GG#0:\
	:so=\E):\
	:se=\E(:\
	:sg#0:\
	:us=\E):\
	:ue=\E(:\
	:ug#0:\
	:al=5\EE:\
	:am:\
	:bw:\
	:ce=\Et:\
	:cd=5\Ey:\
	:cl=50\E*:\
	:co#80:\
	:cm=%i\Ea%2R%2C:\
	:dl=\ER:\
	:ei=\Er:\
	:im=\Eq:\
	:kd=^j:\
	:kl=^h:\
	:kr=^l:\
	:ku=^k:\
	:li#24:\
	:up=5\Ej:\
	:GS=\EH^B:\
	:GE=\EH^C:\
	:GH=\072:\
	:GV=6:\
	:G1=3:\
	:G2=2:\
	:G3=1:\
	:G4=5:\
	:CN=\E`1:\
	:CF=\E`0:\
	:GO(F1)=^A@\r:\
	:HELP(F2)=^AA\r:\
	:ENTER-MENUBAR(F3)=^AB\r:\
	:END-ERROR(F4)=^AC\r:\
	:GET(F5)=^AD\r:\
	:PUT(F6)=^AE\r:\
	:RECALL(F7)=^AF\r:\
	:CLEAR(F8)=^AG\r:\
	:INSERT-MODE(F9)=^AH\r:\
	:CUT(F10)=^AI\r:\
	:COPY(F11)=^AJ\r:\
	:PASTE(F12)=^AK\r:\
	:FIND(F13)=^AL\r:\
	:BLOCK(F14)=^AM\r:\
	:HOME(HOME)=^^:\
	:HOME(ESC-H)=\Eh:\
	:PAGE-UP(PREV-PAGE)=\EJ:\
	:PAGE-DOWN(NEXT-PAGE)=\EK:\
	:BACKSPACE(DEL-CHAR)=\EW:\
	:ku=^K: 	:L_ku=<Up>:\
	:kd=^J: 	:L_kd=<Down>:\
	:kr=^L: 	:L_kr=<Right>:\
	:kl=^H: 	:L_kl=<Left>:\
	:bc=\Er:	:L_bc=<Repl>:\
	:kh=\036:	:L_kh=<Home>:\
	:EN=\E{:	:L_EN=<SHIFT-Home>:\
	:PU=\EJ:	:L_PU=<Page Prev>:\
	:PD=\EK:	:L_PD=<Page Next>:\
	:ki=\Eq:	:L_ki=<Insert>:\
	:DL=\EW:	:L_DL=<Delete>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\EI:	:L_bt=<SHIFT-Tab>:\
	:fk0=^A@\r:	:L_fk0=<F1>:\
	:fk1=^AA\r:	:L_fk1=<F2>:\
	:fk2=^AB\r:	:L_fk2=<F3>:\
	:fk3=^AC\r:	:L_fk3=<F4>:\
	:fk4=^AD\r:	:L_fk4=<F5>:\
	:fk5=^AE\r:	:L_fk5=<F6>:\
	:fk6=^AF\r:	:L_fk6=<F7>:\
	:fk7=^AG\r:	:L_fk7=<F8>:\
	:fk8=^AH\r:	:L_fk8=<F9>:\
	:fk9=^AI\r:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
# Wyse 50 terminal, 25 rows by 80 cols.  If you want to return to 24
# lines when exiting PROGRESS, remove the :te=: line and remove
# the period from the :.te=...: line.
# This Terminal Is Not Supported By Progress
wy50f|wyse50full:\
	:ti=\Ee):\
	:te=:\
	:.te=\Ee(:\
	:li#25:\
	:tc=wy50:
#
# ^A is used as a lead in sequence and ^J is used for down arrow
#
#  Make sure that your function keys are set up as follows:
#    F1 = ^A@\r  F7 = ^AF\r
#    F2 = ^AA\r  F8 = ^AG\r
#    F3 = ^AB\r  F9 = ^AH\r
#    F4 = ^AC\r  F10 = ^AI\r
#    F5 = ^AD\r  F11 = ^AJ\r
#    F6 = ^AE\r  F12 = ^AK\r (NOTE: Ctrl-M same as \r.)
#
#    Also have the following settings:
#
#    BLK END = US / CR
#    AUTO NL = ON
#    CR      = CR
#    AUTO SCRL = ON
#    SCRL = JUMP
#
# Wyse 60 terminal, normal size 24 rows by 80 cols
# This Terminal Is Supported By Progress
w6|wy60|wyse60:\
	:so=\EG0\EG4:\
	:se=\EG0:\
	:CO=\E`1:\
	:CN=\E`1:\
	:CF=\E`0:\
	:GG#0:\
        :am:cd=\Ey:cl=\E*:cm=%i\Ea%dR%dC:\
        :co#80:cr=^M:.dc=\EW:dl=\ER:ei=\Er:im=\Eq:\
        :kr=^L:kl=^o:ku=^K:kd=^J:li#24:us=\EG0\EG8:\
        :nd=^L:nl=^J:ue=\EG0:up=^K:\
        :Si=\EZ0-^o\177:Se=\EZ0-^H\177:\
	:is=\E`\072\Ee(:\
	:HS=\EG4:\
	:HR=\EG0:\
	:HG#0:\
	:al=5\EE:\
	:bw:\
	:ce=\Et:\
	:GS=\EH^B:\
	:GE=\EH^C:\
	:GH=\072:\
	:GV=6:\
	:G1=3:\
	:G2=2:\
	:G3=1:\
	:G4=5:\
	:GO(F1)=^A@\r:\
	:HELP(F2)=^AA\r:\
	:ENTER-MENUBAR(F3)=^AB\r:\
	:END-ERROR(F4)=^AC\r:\
	:GET(F5)=^AD\r:\
	:PUT(F6)=^AE\r:\
	:RECALL(F7)=^AF\r:\
	:CLEAR(F8)=^AG\r:\
	:INSERT-MODE(F9)=^AH\r:\
	:CUT(F10)=^AI\r:\
	:COPY(F11)=^AJ\r:\
	:PASTE(F12)=^AK\r:\
	:FIND(F13)=^AL\r:\
	:BLOCK(F14)=^AM\r:\
	:BACKSPACE(BACKSPACE)=^H:\
	:BACK-TAB(SHIFT-TAB)=\EI:\
	:LEFT-END(ESC-LEFT-ARROW)=\E^y:\
	:HOME(HOME)=^^:\
	:HOME(ESC-H)=\Eh:\
	:PAGE-UP(PREV-PAGE)=\EJ:\
	:PAGE-DOWN(NEXT-PAGE)=\EK:\
	:BACKSPACE(DEL-CHAR)=\EW:\
	:ku=^K: 	:L_ku=<Up>:\
	:kd=^J: 	:L_kd=<Down>:\
	:kr=^L: 	:L_kr=<Right>:\
	:kl=^o: 	:L_kl=<Left>:\
	:bc=\Er:	:L_bc=<Repl>:\
	:kh=\036:	:L_kh=<Home>:\
	:EN=\E{:	:L_EN=<SHIFT-Home>:\
	:PU=\EJ:	:L_PU=<Page Prev>:\
	:PD=\EK:	:L_PD=<Page Next>:\
	:ki=\Eq:	:L_ki=<Insert>:\
	:DL=\EW:	:L_DL=<Delete>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\EI:	:L_bt=<SHIFT-Tab>:\
	:fk0=^A@\r:	:L_fk0=<F1>:\
	:fk1=^AA\r:	:L_fk1=<F2>:\
	:fk2=^AB\r:	:L_fk2=<F3>:\
	:fk3=^AC\r:	:L_fk3=<F4>:\
	:fk4=^AD\r:	:L_fk4=<F5>:\
	:fk5=^AE\r:	:L_fk5=<F6>:\
	:fk6=^AF\r:	:L_fk6=<F7>:\
	:fk7=^AG\r:	:L_fk7=<F8>:\
	:fk8=^AH\r:	:L_fk8=<F9>:\
	:fk9=^AI\r:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
# Wyse 60 terminal, 25 rows by 80 cols.  If you want to return to 24
# lines when exiting PROGRESS, remove the :te=: line and remove
# the period from the :.te=...: line.
# This Terminal Is Supported By Progress
wy60f|wyse60full:\
	:ti=\Ee):\
	:te=:\
	:.te=\Ee(:\
	:li#25:\
	:tc=wy60:
# Wyse 60 terminal, 43 rows by 80 cols.  If you want to return to 
# normal size when exiting PROGRESS, remove the :te=: line and remove
# the period from the :.te=...: line.
# This Terminal Is Supported By Progress
wy60t|wyse60tall:\
	:ti=\Ee+:\
	:te=:\
	:.te=\Ee(:\
	:li#43:\
	:tc=wy60:
# Wyse 60 terminal, 24 rows by 132 cols.  If you want to return to 
# normal size when exiting PROGRESS, remove the :te=: line and remove
# the period from the :.te=...: line.
# This Terminal Is Supported By Progress
wy60w|wyse60wide:\
	:ti=\E`\073:\
	:te=:\
	:.te=\E`\072:\
	:co#132:\
	:tc=wy60:
# Wyse 60 terminal, 43 rows by 132 cols.  If you want to return to 
# normal size when exiting PROGRESS, remove the :te=: line and remove
# the period from the :.te=...: line.
# This Terminal Is Supported By Progress
wy60tw|wyse60tall+wide:\
	:ti=\Ee+\E`\073:\
	:te=:\
	:.te=\E`\072\Ee(:\
	:co#132:\
	:li#43:\
	:tc=wy60:
#
# SCO and XENIX AT console ANSI entry. 
# 6-20-96: READ THIS - If you are installing the PROTERMCAP as a patch or 
# a new version of PROGRESS then there is a bug in the SCO OS 3 ansi emulation 
# software that PROGRESS seems to stumble over. The ansi terminal under
# SCO OS 3 is unable to set the function keys to a shorter key-sequence
# length and trying to do so causes additional characters (often i or 2i) to
# be appended to the key-sequence. If you are using SCO OS 3 then REBOOT your 
# machine after installing this new ansi PROTERMCAP entry. This new ansi
# entry will leave the function keys as your other applications expect them.
# If you are using SCO OS 5 then you should not need to reboot your machine.
# After running PROGRESS at least once you could comment out the Si and Se 
# capabilities by putting a dot between the colon and S (e.g. :.Si=...). 
# This entry implements a graphics mode by using the extended ASCII 
# character set supported by the IBM PC. After receipt of start graphic 
# rendition (SGR) escape sequence - this corresponds to GS in termcap 
# lingo - the driver will turn on the high bit of any character sent 
# to the screen, thereby mapping normal ASCII characters into the 
# 128-256 graphics character range. This presents a problem for 
# our box painting, which uses backspaces and line feeds while 
# in graphics mode. Consequently, I've nulled out the GS and GE 
# entries, and put in the actual octal values for horizontal
# and vertical bar, and the corner characters. The actual values for GS
# and GE are as follows :GS=\E[12m:GE=\E[10m:
# This Terminal Is Supported By Progress
li|ansi|Ansi standard crt:\
	:BB=\E[5m:\
	:BR=\E[m:\
	:CA:\
	:HS=\E[1m:\
	:HR=\E[m:\
	:al=\E[L:\
	:am:\
	:bs:\
	:cd=\E[J:\
	:ce=\E[K:\
	:cl=\E[2J\E[H:\
	:cm=\E[%i%d;%dH:\
	:co#80:\
	:dc=\E[P:\
	:dl=\E[M:\
	:dn=\E[B:\
	:ei=:\
	:ho=\E[H:\
	:ic=\E[@:\
	:li#25:\
	:nd=\E[C:\
	:ms:\
	:pt:\
	:so=\E[7m:\
	:se=\E[m:\
	:us=\E[7m:\
	:ue=\E[m:\
	:up=\E[A:\
	:kb=^h:\
	:ku=\E[A:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:eo:\
	:GR=\064:\
	:RT=^J:\
	:GH=\304:\
	:G1=\277:\
	:G2=\332:\
	:G3=\300:\
	:G4=\331:\
	:GS=\000:\
	:GE=\000:\
	:GV=\263:\
	:GD=\302:\
	:GC=\305:\
	:GL=\264:\
        :Si=\EQ0"\E[M"\EQ1"\E[N"\EQ2"\E[O"\EQ3"\E[P"\EQ4"\E[Q"\EQ5"\E[R"\EQ6"\E[S"\EQ7"\E[T"\EQ8"\E[U"\EQ9"\E[V":\
	:Se=\EQ0"^[[M"\EQ1"^[[N"\EQ2"^[[O"\EQ3"^[[P"\EQ4"^[[Q"\EQ6"^[[R"\EQ7"^[[S"\EQ7"^[[T"\EQ8"^[[U"\EQ9"^[[V":\
	:GO(F1)=\E[M:\
	:HELP(F2)=\E[N:\
	:ENTER-MENUBAR(F3)=\E[O:\
	:END-ERROR(F4)=\E[P:\
	:GET(F5)=\E[Q:\
	:PUT(F6)=\E[R:\
	:RECALL(F7)=\E[S:\
	:CLEAR(F8)=\E[T:\
	:INSERT-MODE(F9)=\E[U:\
	:CUT(F10)=\E[V:\
	:COPY(F11)=\E[W:\
	:PASTE(F12)=\E[X:\
        :HOME(HOME)=\E[H:\
        :END(END)=\E[F:\
        :INSERT-MODE(INSERT)=\E[L:\
	:PAGE-UP(PAGE-UP)=\E[I:\
	:PAGE-DOWN(PAGE-DOWN)=\E[G:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:kh=\E[H:	:L_kh=<Home>:\
	:EN=\E[F:	:L_EN=<End>:\
	:PU=\E[I:	:L_PU=<PgUp>:\
	:PD=\E[G:	:L_PD=<PgDn>:\
	:ki=\E[L:	:L_ki=<Insert>:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\E[Z:	:L_bt=<SHIFT-Tab>:\
	:fk0=\E[?5i:	:L_fk0=<F1>:\
	:fk1=\E[?3i:	:L_fk1=<F2>:\
	:fk2=\E[?2i:	:L_fk2=<F3>:\
	:fk3=\E[@:	:L_fk3=<F4>:\
	:fk4=\E[M:	:L_fk4=<F5>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
# 6-20-96: READ THIS - If you are installing the PROTERMCAP as a patch or 
# a new version of PROGRESS then there is a bug in the SCO OS 3 ansi emulation 
# software that PROGRESS seems to stumble over. REBOOT your machine and set
# your TERM equal to ansi. You should not have a problem with the F5 and F4
# keys any more.
# Use this terminal entry if you do an F5 in the Progress editor and get a
# 2i in the filename field. 
# This Terminal Is Supported By Progress
ansid|ansi terminal for DEC running SCO OS 3|\
	:END-ERROR(F4)=\E[@2i:\
	:GET(F5)=\E[M2i:\
        :tc=ansi:
#
# XENIX AT COLOR console ANSI driver entry. 
# 6-20-96: READ THIS - If you are installing the PROTERMCAP as a patch or 
# a new version of PROGRESS then there is a bug in the SCO OS 3 ansi emulation 
# software that PROGRESS seems to stumble over. The ansi terminal under
# SCO OS 3 is unable to set the function keys to a shorter key-sequence
# length and trying to do so causes additional characters (often i or 2i) to
# be appended to the key-sequence. If you are using SCO OS 3 then REBOOT your 
# machine after installing this new ansi PROTERMCAP entry. This new ansi
# entry will leave the function keys as your other applications expect them.
# If you are using SCO OS 5 then you should not need to reboot your machine.
# After running PROGRESS at least once you could comment out the Si and Se 
# capabilities by putting a dot between the colon and S (e.g. :.Si=...). 
# This driver implements a graphics mode by using the extended
# ASCII character set supported by the IBM
# PC. After receipt of start graphic rendition (SGR) escape sequence
# - this corresponds to GS in termcap lingo - the driver will turn on
# the high bit of any character sent to the screen, thereby mapping
# normal ASCII characters into the 128-256 graphics character range. This
# presents a problem for our box painting, which uses backspaces and
# line feeds while in graphics mode. Consequently, I've nulled out the
# GS and GE entries, and put in the actual octal values for horizontal
# and vertical bar, and the corner characters. The actual values for GS
# and GE are as follows :GS=\E[12m:GE=\E[10m:
# NOTE: With CGA card on the XENIX console, the \E[4m sequence fails
# to modify the screen in any way, so we use \E[7m instead.
# Color 0, version 6 color name - NORMAL, is set in the 'is' string.
# Color 1, version 6 color name - INPUT, is set and cleared by the ue and us
# terminal capabilities. Color 2, version 6 color name - MESSAGE, 
# is set and cleared by the so and se terminal capabilities. Color 3,
# generally known as high intensity, is set and cleared by HS and HR.
# Color 4, generally known as blink, is set and cleared by BB and BR.
# The largest color number is 127. The glitch field is no longer needed.
# This Terminal Is Supported By Progress
lc|ansic|cansi|Ansi standard crt with CGA color names:\
        :cd=\E[J:\
        :up=\E[A:\
	:CA:\
	:BR=\E[m:\
	:BB=\E[5m:\
	:HS=\E[1m:\
	:HR=\E[m:\
        :co#80:\
        :li#25:\
        :ce=\E[K:\
        :cl=\E[2J\E[H:\
        :cm=\E[%i%d;%dH:\
	:ct:\
        :so=\E[7m:\
        :se=\E[m:\
        :us=\E[7m:\
        :ue=\E[m:\
        :G1=\277:\
        :G2=\332:\
        :G3=\300:\
        :G4=\331:\
	:GS=\000:\
        :GE=\000:\
        :GV=\263:\
        :GH=\304:\
        :Si=\EQ0"\E[M"\EQ1"\E[N"\EQ2"\E[O"\EQ3"\E[P"\EQ4"\E[Q"\EQ5"\E[R"\EQ6"\E[S"\EQ7"\E[T"\EQ8"\E[U"\EQ9"\E[V":\
	:Se=\EQ0"^[[M"\EQ1"^[[N"\EQ2"^[[O"\EQ3"^[[P"\EQ4"^[[Q"\EQ6"^[[R"\EQ7"^[[S"\EQ7"^[[T"\EQ8"^[[U"\EQ9"^[[V":\
	:GO(F1)=\E[M:\
	:HELP(F2)=\E[N:\
	:ENTER-MENUBAR(F3)=\E[O:\
	:END-ERROR(F4)=\E[P:\
	:GET(F5)=\E[Q:\
	:PUT(F6)=\E[R:\
	:RECALL(F7)=\E[S:\
	:CLEAR(F8)=\E[T:\
	:INSERT-MODE(F9)=\E[U:\
	:CUT(F10)=\E[V:\
	:COPY(F11)=\E[W:\
	:PASTE(F12)=\E[X:\
	:HOME(HOME)=\E[H:\
	:INSERT-MODE(INSERT)=\E[L:\
	:END(END)=\E[F:\
	:BACK-TAB(SHIFT-TAB)=\E[Z\E[Z:\
	:PAGE-UP(PAGE-UP)=\E[I:\
	:PAGE-DOWN(PAGE-DOWN)=\E[G:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
        :ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:bc=^h:         :L_bc=<Back Space>:\
	:kh=\E[H:	:L_kh=<Home>:\
	:EN=\E[F:	:L_EN=<End>:\
	:PU=\E[I:	:L_PU=<Page Up>:\
	:PD=\E[G: 	:L_PD=<Page Down>:\
	:ki=\E[L:	:L_ki=<Insert>:\
	:DL=\177: 	:L_DL=<Del>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\E[Z\E[Z:	:L_bt=<Shift-Tab>:\
	:fk0=\E[?5i:	:L_fk0=<F1>:\
	:fk1=\E[?3i:	:L_fk1=<F2>:\
	:fk2=\E[?2i:	:L_fk2=<F3>:\
	:fk3=\E[@2i:	:L_fk3=<F4>:\
	:fk4=\E[M2i:	:L_fk4=<F5>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:COLOR 5 BLACK=\E[37m\E[40m:\E[37m\E[40m:\
        :COLOR 6 RED=\E[37m\E[41m:\E[37m\E[40m:\
        :COLOR 7 GREEN=\E[37m\E[42m:\E[37m\E[40m:\
        :COLOR 8 BROWN=\E[37m\E[43m:\E[37m\E[40m:\
        :COLOR 9 BLUE=\E[37m\E[44m:\E[37m\E[40m:\
        :COLOR 10 MAGENTA=\E[37m\E[45m:\E[37m\E[40m:\
        :COLOR 11 CYAN=\E[37m\E[46m:\E[37m\E[40m:\
        :COLOR 12 BLK/RED=\E[30m\E[41m:\E[37m\E[40m:\
        :COLOR 13 BLK/GRE=\E[30m\E[42m:\E[37m\E[40m:\
        :COLOR 14 BLK/BRN=\E[30m\E[43m:\E[37m\E[40m:\
        :COLOR 15 BLK/BLU=\E[30m\E[44m:\E[37m\E[40m:\
        :COLOR 16 BLK/MGT=\E[30m\E[45m:\E[37m\E[40m:\
        :COLOR 17 BLK/CYN=\E[30m\E[46m:\E[37m\E[40m:\
        :COLOR 18 BLK/WHT=\E[30m\E[47m:\E[37m\E[40m:\
        :COLOR 19 RED/BLK=\E[31m\E[40m:\E[37m\E[40m:\
        :COLOR 20 RED/GRE=\E[31m\E[42m:\E[37m\E[40m:\
        :COLOR 21 RED/BRN=\E[31m\E[43m:\E[37m\E[40m:\
        :COLOR 22 RED/BLU=\E[31m\E[44m:\E[37m\E[40m:\
        :COLOR 23 RED/MGT=\E[31m\E[45m:\E[37m\E[40m:\
        :COLOR 24 RED/CYN=\E[31m\E[46m:\E[37m\E[40m:\
        :COLOR 25 RED/WHT=\E[31m\E[47m:\E[37m\E[40m:\
        :COLOR 26 GRE/BLK=\E[32m\E[40m:\E[37m\E[40m:\
        :COLOR 27 GRE/RED=\E[32m\E[41m:\E[37m\E[40m:\
        :COLOR 28 GRE/BRN=\E[32m\E[43m:\E[37m\E[40m:\
        :COLOR 29 GRE/BLU=\E[32m\E[44m:\E[37m\E[40m:\
        :COLOR 30 GRE/MGT=\E[32m\E[45m:\E[37m\E[40m:\
        :COLOR 31 GRE/CYN=\E[32m\E[46m:\E[37m\E[40m:\
        :COLOR 32 GRE/WHT=\E[32m\E[47m:\E[37m\E[40m:\
        :COLOR 33 BRN/BLK=\E[33m\E[40m:\E[37m\E[40m:\
        :COLOR 34 BRN/RED=\E[33m\E[41m:\E[37m\E[40m:\
        :COLOR 35 BRN/GRE=\E[33m\E[42m:\E[37m\E[40m:\
        :COLOR 36 BRN/BLU=\E[33m\E[44m:\E[37m\E[40m:\
        :COLOR 37 BRN/MGT=\E[33m\E[45m:\E[37m\E[40m:\
        :COLOR 38 BRN/CYN=\E[33m\E[46m:\E[37m\E[40m:\
        :COLOR 39 BRN/WHT=\E[33m\E[47m:\E[37m\E[40m:\
        :COLOR 40 BLU/BLK=\E[34m\E[40m:\E[37m\E[40m:\
        :COLOR 41 BLU/RED=\E[34m\E[41m:\E[37m\E[40m:\
        :COLOR 42 BLU/GRE=\E[34m\E[42m:\E[37m\E[40m:\
        :COLOR 43 BLU/BRN=\E[34m\E[43m:\E[37m\E[40m:\
        :COLOR 44 BLU/MGT=\E[34m\E[45m:\E[37m\E[40m:\
        :COLOR 45 BLU/CYN=\E[34m\E[46m:\E[37m\E[40m:\
        :COLOR 46 BLU/WHT=\E[34m\E[47m:\E[37m\E[40m:\
        :COLOR 47 MGT/BLK=\E[35m\E[40m:\E[37m\E[40m:\
        :COLOR 48 MGT/RED=\E[35m\E[41m:\E[37m\E[40m:\
        :COLOR 49 MGT/GRE=\E[35m\E[42m:\E[37m\E[40m:\
        :COLOR 50 MGT/BRN=\E[35m\E[43m:\E[37m\E[40m:\
        :COLOR 51 MGT/BLU=\E[35m\E[44m:\E[37m\E[40m:\
        :COLOR 52 MGT/CYN=\E[35m\E[46m:\E[37m\E[40m:\
        :COLOR 53 MGT/WHT=\E[35m\E[47m:\E[37m\E[40m:\
        :COLOR 54 CYN/BLK=\E[36m\E[40m:\E[37m\E[40m:\
        :COLOR 55 CYN/RED=\E[36m\E[41m:\E[37m\E[40m:\
        :COLOR 56 CYN/GRE=\E[36m\E[42m:\E[37m\E[40m:\
        :COLOR 57 CYN/BRN=\E[36m\E[43m:\E[37m\E[40m:\
        :COLOR 58 CYN/BLU=\E[36m\E[44m:\E[37m\E[40m:\
        :COLOR 59 CYN/MGT=\E[36m\E[45m:\E[37m\E[40m:\
        :COLOR 60 CYN/WHT=\E[36m\E[47m:\E[37m\E[40m:\
        :COLOR 61 NORMAL=\E[37m\E[40m:\E[37m\E[40m:\
	:tc=v7kf:
#
# vanilla xterm client under the X Window System (no -sf)
#
# GE is provided here to circumvent an problem with the v6 termcap processing.
#
# This Terminal Is Supported By Progress
xterm|a vanilla X Window System xterm client:\
        :ws:\
        :cd=\E[J:\
        :ce=\E[K:\
        :cl=\E[H\E[J:\
        :cm=\E[%i%d;%dH:\
	:GE=^O:\
        :GO(F1)=\E[11~:\
        :BACKSPACE:\
        :HELP(F2)=\E[12~:\
        :ENTER-MENUBAR(F3)=\E[13~:\
        :END-ERROR(F4)=\E[14~:\
        :GET(F5)=\E[15~:\
        :PUT(F6)=\E[17~:\
        :RECALL(F7)=\E[18~:\
        :CLEAR(F8)=\E[19~:\
        :INSERT-MODE(F9)=\E[20~:\
	:CUT(F10)=\E[21~:\
	:COPY(F11)=\E[23~:\
	:PASTE(F12)=\E[24~:\
	:INSERT-MODE(INS)=\E[2~:\
	:fk0=\E[11~:	:L_fk0=<F1>:\
	:fk1=\E[12~:	:L_fk1=<F2>:\
	:fk2=\E[13~:	:L_fk2=<F3>:\
	:fk3=\E[14~:	:L_fk3=<F4>:\
	:fk4=\E[15~:	:L_fk4=<F5>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :tc=vt100:
#
dtterm|CDE dtterm type (xterm equiv):\
        :tc=xterm:
#
#
#  Entry for DEC vt100 series in 132 column mode.
#
# This Terminal Is Supported By Progress
vt100-132|VT100-132|vt100w|vt100w_series|DEC VT-100w:\
        :ti=\E[?3h:\
        :te=\E[?3l:\
        :co#132:\
        :tc=vt100:
#  Entry for DEC vt200 series, vt220, vt240, vt241 in 80 column mode.
#
#  Use the vt220v7kf and vt220v6kf with the tc= function for the 
#  Version 7 or Version 6 set of Progress key functions respectively.
#
#  This Terminal Is Supported By Progress
V2|vt200|VT200|vt200-80|vt220|vt220-80|vt240|vt241|vt200_series|DEC VT-220 :\
	:is=\E>\E[?3l\E[?4l\E[m\E[?7h\E[?8h\E(B\E)0:\
	:xi:\
	:cs=\E[%i%d;%dr:\
	:sr=\EM:\
	:sf=\n:\
	:nd=\E[C:	:do=\E[B:	:cl=\E[2J:	:cm=\E[%i%d;%dH:\
	:so=\E[7m:	:se=\E[m:	:us=\E[4m:	:ue=\E[m:\
	:GS=^N: 	:GE=^O:\
	:G1=k:		:G2=l:		:G3=m:		:G4=j:\
	:GC=n:		:GD=w:		:GH=q:		:GL=u:\
	:GR=t:		:GU=v:		:GV=x:\
	:HS=\E[1m:	:HR=\E[m:	:BB=\E[5m:	:BR=\E[m:\
	:CO=\E[?25h:\
	:CN=\E[?25h:\
	:CF=\E[?25l:\
	:cd=10\E[J:\
	:ce=10\E[K:\
	:co#80:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:ku=\E[A:\
	:li#24:\
	:up=\E[A:\
	:ks=\E=:	:ke=\E>:\
	:k0=\EOp:	:k1=\EOq:\
	:k2=\EOr:	:k3=\EOs:\
	:k4=\EOt:	:k5=\EOu:\
	:k6=\EOv:	:k7=\EOw:\
	:k8=\EOx:	:k9=\EOy:\
	:k.=\EOn:	:k,=\EOl:\
	:k-=\EOm:\
	:ws:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:bc=\177:\
	:kl=\E[D:	:L_kl=<Left>:\
	:kh=\E[23~h:	:L_kh=<F11> h:\
	:EN=\E[23~e:	:L_EN=<F11> e:\
	:PU=\E[5~:	:L_PU=<Prev Screen>:\
	:PD=\E[6~:	:L_PD=<Next Screen>:\
	:PR=^R: 	:L_PR=<CTRL-R>:\
	:PL=^L: 	:L_PL=<CTRL-L>:\
	:ki=\E[23~i:	:L_ki=<F11> i:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:bc=\177:\
	:ESC=\E[23~\E[23~:	:L_ESC=<F11> <F11>:\
	:bt=\E[23~b:	:L_bt=<F11> b:\
	:ZM=^Z: 	:L_ZM=<CTRL-Z>:\
	:SPD=\E[23~d:	:L_SPD=<F11> d:\
	:SPU=\E[23~u:	:L_SPU=<F11> u:\
	:SXD=\E[23~xd:	:L_SXD=<F11> xd:\
	:SXU=\E[23~xu:	:L_SXU=<F11> xu:\
	:fk4=\EOP:	:L_fk4=<PF1>:\
	:fk1=\EOQ:	:L_fk1=<PF2>:\
	:fk2=\EOR:	:L_fk2=<PF3>:\
	:fk3=\EOS:	:L_fk3=<PF4>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\E[23~m:      :L_Aku=<F11>M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=vt220v7kf
#
#  Entry for DEC vt200 series, vt220, vt240, vt241 in 132 column mode.
#
# This Terminal Is Supported By Progress
vt220-132|VT200-132|V2w|vt200w|vt220w|vt200-132|vt200w_series|DEC VT-220w:\
        :ti=\E[?3h:\
        :te=\E[?3l:\
        :co#132:\
        :tc=vt220:
#
# F11 has been hijacked as the Escape-Key, since there is no
# natural escape key and it is awkward to type Ctrl-[ in its place.
# There is also a tradition in earlier vt terminals of using F11
# as the Escape-Key. It is assumed that the function keys F1 
# through F5 are not available for use by Progress. In their 
# place PF1 through PF4 have been substituted.
#
vt220v7kf| Version 7 keyfunctions for VT220
	:GO(PF1)=\EOP:\
	:HELP(PF2)=\EOQ:\
	:ENTER-MENUBAR(PF3)=\EOR:\
	:END-ERROR(PF4)=\EOS:\
	:NEXT-WORD(CTRL-W)=^w:\
	:HELP(ESC-?)=\E[23~?:\
	:COPY(ESC-C)=\E[23~c:\
	:CHOICES(ESC-CTRL-H)=\E[23~^h:\
	:OPTIONS(ESC-CTRL-O)=\E[23~^o:\
	:GET(ESC-O)=\E[23~o:\
	:MAIN-MENU(ESC-CTRL-M)=\E[23~^m:\
	:ENTER-MENUBAR(ESC-M)=\E[23~m:\
	:EDITOR-TAB(CTRL-G)=^g:\
	:PREV-WORD(CTRL-P)=^p:\
	:PUT(ESC-S)=\E[23~s:\
	:INSERT-MODE(F9)=\E[20~:\
	:(F17)=\E[31~:\
	:(F18)=\E[32~:\
	:(F19)=\E[33~:\
	:(F20)=\E[34~:\
	:GO(DO)=\E[29~:\
	:HELP(HELP-KEY)=\E[28~:\
	:HOME(ESC-H)=\EH:\
	:HOME(ESC-h)=\Eh:\
	:END-ERROR(PF4)=\EOS:\
	:DELETE-LINE(REMOVE)=\E[3~:\
	:CUT(F10)=\E[21~:\
	:PASTE(F12)=\E[24~:\
	:PUT(F6)=\E[17~:\
	:RECALL(F7)=\E[18~:\
	:CLEAR(F8)=\E[19~:\
	:NEW-LINE(INSERT-HERE)=\E[2~:\
	:FIND(FIND)=\E[1~:\
	:FIND(F13)=\E[25~:\
	:BLOCK(SELECT)=\E[4~:\
	:BLOCK(F14)=\E[26~:\
	:PAGE-UP(PREV-SCRN)=^[[5~:\
	:PAGE-DOWN(NEXT-SCRN)=^[[6~:\
        :LEFT-END(ESC-LEFT-ARROW)=\E[23~\E[D:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E[23~\E[C:\
        :PAGE-DOWN(ESC-DOWN-ARROW)=\E[23~\E[B:\
        :PAGE-UP(ESC-UP-ARROW)=\E[23~\E[A:\
	:EDITOR-BACKTAB(CTRL-B)=^b:\
	:DELETE-LINE(CTRL-D)=^d:\
	:END-ERROR(CTRL-E)=^e:\
	:FIND(CTRL-F)=^f:\
	:EDITOR-TAB(CTRL-G)=^g:\
	:BACKSPACE(CTRL-H)=^h:\
	:TAB(CTRL-I)=^i:\
	:CURSOR-DOWN(CTRL-J)=^j:\
	:CURSOR-UP(CTRL-K)=^k:\
	:CURSOR-RIGHT(CTRL-L)=^l:\
	:RETURN(CTRL-M)=^m:\
	:NEW-LINE(CTRL-N)=^n:\
	:CURSOR-LEFT(CTRL-O)=^o:\
	:PREV-WORD(CTRL-P)=^p:\
	:RESUME-DISPLAY(CTRL-Q)=^q:\
	:RECALL(CTRL-R)=^r:\
	:STOP-DISPLAY(CTRL-S)=^s:\
	:INSERT-MODE(CTRL-T)=^t:\
	:INSERT-MODE(CTRL-@)=^@:\
	:BACK-TAB(CTRL-U)=^u:\
	:BLOCK(CTRL-V)=^v:\
	:GO(CTRL-X)=^x:\
	:CLEAR(CTRL-Z)=^z:\
	:SAVE-AS(ESC-A)=\E[23~a:\
	:BREAK-LINE(ESC-B)=\E[23~b:\
	:DELETE-WORD(ESC-D)=\E[23~d:\
	:NEXT-ERROR(ESC-E)=\E[23~e:\
	:FIND-NEXT(ESC-F)=\E[23~f:\
	:GOTO(ESC-G)=\E[23~g:\
	:FIND-PREVIOUS(ESC-I)=\E[23~i:\
	:DELETE-END-LINE(ESC-K)=\E[23~k:\
	:OPEN-LINE-ABOVE(ESC-L)=\E[23~l:\
	:NEW(ESC-N)=\E[23~n:\
	:COMPILE(ESC-P)=\E[23~p:\
	:EXIT(ESC-Q)=\E[23~q:\
	:REPLACE(ESC-R)=\E[23~r:\
	:SCROLL-MODE(ESC-T)=\Et:\
	:DEFAULT-POP-UP(ESC-U)=\E[23~u:\
	:PASTE(ESC-V)=\E[23~v:\
	:PAGE-LEFT(ESC-W)=\E[23~w:\
	:CUT(ESC-X)=\E[23~x:\
	:PAGE-RIGHT(ESC-Y)=\Ey:\
	:CLOSE(ESC-Z)=\E[23~z:\
	:HOME(ESC-<)=\E[23~<:\
	:HOME(ESC-,)=\E[23~,:\
	:END(ESC->)=\E[23~>:\
	:END(ESC-.)=\E[23~.:\
	:REPORTS(ESC-CTRL-A)=\E[23~^a:\
	:BOTTOM-COLUMN(ESC-CTRL-B)=\E[23~^b:\
	:DELETE-FIELD(ESC-CTRL-D)=\E[23~^d:\
	:INSERT-FIELD-LABEL(ESC-CTRL-E)=\E[23~^e:\
	:INSERT-FIELD-DATA(ESC-CTRL-F)=\E[23~^f:\
	:INSERT-FIELD(ESC-CTRL-G)=\E[23~^g:\
	:NEXT-FRAME(ESC-CTRL-I)=\E[23~^i:\
	:PAGE-RIGHT-TEXT(ESC-CTRL-J)=\E[23~^j:\
	:SCROLL-LEFT(ESC-CTRL-L)=\E[23~^l:\
	:INSERT-COLUMN(ESC-CTRL-N)=\E[23~^n:\
	:PICK(ESC-CTRL-P)=\E[23~^p:\
	:PICK-BOTH(ESC-CTRL-Q)=\E[23~^q:\
	:SCROLL-RIGHT(ESC-CTRL-R)=\E[23~^r:\
	:SETTINGS(ESC-CTRL-@)=\E[23~^@:\
	:TOP-COLUMN(ESC-CTRL-T)=\E[23~^t:\
	:PREV-FRAME(ESC-CTRL-U)=\E[23~^u:\
	:MOVE(ESC-CTRL-V)=\E[23~^v:\
	:PICK-AREA(ESC-CTRL-W)=\E[23~^w:\
	:CANCEL-PICK(ESC-CTRL-X)=\E[23~^x:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E[23~^z:\
	:tc=v7kf
#
vt220v6kf| Version 6 keyfunctions for VT220
	:HELP(CTRL-W)=^w:\
	:NEXT-WORD(ESC-?)=\E[23~?:\
	:CHOICES(ESC-C)=\E[23~c:\
	:COPY(ESC-CTRL-H)=\E[23~^h:\
	:OPTIONS(ESC-O)=\E[23~o:\
	:ENTER-MENUBAR(ESC-CTRL-M)=\E[23~^m:\
	:MAIN-MENU(ESC-M)=\E[23~m:\
	:EDITOR-TAB(ESC-CTRL-O)=\E[23~^o:\
	:GET(CTRL-G)=^g:\
	:PUT(CTRL-P)=^p:\
	:PREV-WORD(ESC-S)=\E[23~s:\
	:INSERT-MODE(PF3)=\EOR:\
	:ENTER-MENUBAR(F9)=\E[20~:\
	:(F17)=\E[31~:\
	:(F18)=\E[32~:\
	:(F19)=\E[33~:\
	:(F20)=\E[34~:\
	:GO(DO)=\E[29~:\
	:GO(PF1)=\EOP:\
	:HELP(HELP-KEY)=\E[28~:\
	:HELP(PF2)=\EOQ:\
	:HOME(ESC-H)=\EH:\
	:HOME(ESC-h)=\Eh:\
	:END-ERROR(PF4)=\EOS:\
	:DELETE-LINE(REMOVE)=\E[3~:\
	:CUT(F10)=\E[21~:\
	:PASTE(F12)=\E[24~:\
	:PUT(F6)=\E[17~:\
	:RECALL(F7)=\E[18~:\
	:CLEAR(F8)=\E[19~:\
	:NEW-LINE(INSERT-HERE)=\E[2~:\
	:FIND(FIND)=\E[1~:\
	:FIND(F13)=\E[25~:\
	:BLOCK(SELECT)=\E[4~:\
	:BLOCK(F14)=\E[26~:\
	:PAGE-UP(PREV-SCRN)=^[[5~:\
	:PAGE-DOWN(NEXT-SCRN)=^[[6~:\
        :LEFT-END(ESC-LEFT-ARROW)=\E[23~\E[D:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E[23~\E[C:\
        :PAGE-DOWN(ESC-DOWN-ARROW)=\E[23~\E[B:\
        :PAGE-UP(ESC-UP-ARROW)=\E[23~\E[A:\
	:EDITOR-BACKTAB(CTRL-B)=^b:\
	:DELETE-LINE(CTRL-D)=^d:\
	:END-ERROR(CTRL-E)=^e:\
	:FIND(CTRL-F)=^f:\
	:EDITOR-TAB(CTRL-G)=^g:\
	:BACKSPACE(CTRL-H)=^h:\
	:TAB(CTRL-I)=^i:\
	:CURSOR-DOWN(CTRL-J)=^j:\
	:CURSOR-UP(CTRL-K)=^k:\
	:CURSOR-RIGHT(CTRL-L)=^l:\
	:RETURN(CTRL-M)=^m:\
	:NEW-LINE(CTRL-N)=^n:\
	:CURSOR-LEFT(CTRL-O)=^o:\
	:PREV-WORD(CTRL-P)=^p:\
	:RESUME-DISPLAY(CTRL-Q)=^q:\
	:RECALL(CTRL-R)=^r:\
	:STOP-DISPLAY(CTRL-S)=^s:\
	:INSERT-MODE(CTRL-T)=^t:\
	:INSERT-MODE(CTRL-@)=^@:\
	:BACK-TAB(CTRL-U)=^u:\
	:BLOCK(CTRL-V)=^v:\
	:GO(CTRL-X)=^x:\
	:CLEAR(CTRL-Z)=^z:\
	:SAVE-AS(ESC-A)=\E[23~a:\
	:BREAK-LINE(ESC-B)=\E[23~b:\
	:DELETE-WORD(ESC-D)=\E[23~d:\
	:NEXT-ERROR(ESC-E)=\E[23~e:\
	:FIND-NEXT(ESC-F)=\E[23~f:\
	:GOTO(ESC-G)=\E[23~g:\
	:FIND-PREVIOUS(ESC-I)=\E[23~i:\
	:DELETE-END-LINE(ESC-K)=\E[23~k:\
	:OPEN-LINE-ABOVE(ESC-L)=\E[23~l:\
	:NEW(ESC-N)=\E[23~n:\
	:COMPILE(ESC-P)=\E[23~p:\
	:EXIT(ESC-Q)=\E[23~q:\
	:REPLACE(ESC-R)=\E[23~r:\
	:SCROLL-MODE(ESC-T)=\Et:\
	:DEFAULT-POP-UP(ESC-U)=\E[23~u:\
	:PASTE(ESC-V)=\E[23~v:\
	:PAGE-LEFT(ESC-W)=\E[23~w:\
	:CUT(ESC-X)=\E[23~x:\
	:PAGE-RIGHT(ESC-Y)=\Ey:\
	:CLOSE(ESC-Z)=\E[23~z:\
	:HOME(ESC-<)=\E[23~<:\
	:HOME(ESC-,)=\E[23~,:\
	:END(ESC->)=\E[23~>:\
	:END(ESC-.)=\E[23~.:\
	:REPORTS(ESC-CTRL-A)=\E[23~^a:\
	:BOTTOM-COLUMN(ESC-CTRL-B)=\E[23~^b:\
	:DELETE-FIELD(ESC-CTRL-D)=\E[23~^d:\
	:INSERT-FIELD-LABEL(ESC-CTRL-E)=\E[23~^e:\
	:INSERT-FIELD-DATA(ESC-CTRL-F)=\E[23~^f:\
	:INSERT-FIELD(ESC-CTRL-G)=\E[23~^g:\
	:NEXT-FRAME(ESC-CTRL-I)=\E[23~^i:\
	:PAGE-RIGHT-TEXT(ESC-CTRL-J)=\E[23~^j:\
	:SCROLL-LEFT(ESC-CTRL-L)=\E[23~^l:\
	:INSERT-COLUMN(ESC-CTRL-N)=\E[23~^n:\
	:PICK(ESC-CTRL-P)=\E[23~^p:\
	:PICK-BOTH(ESC-CTRL-Q)=\E[23~^q:\
	:SCROLL-RIGHT(ESC-CTRL-R)=\E[23~^r:\
	:SETTINGS(ESC-CTRL-@)=\E[23~^@:\
	:TOP-COLUMN(ESC-CTRL-T)=\E[23~^t:\
	:PREV-FRAME(ESC-CTRL-U)=\E[23~^u:\
	:MOVE(ESC-CTRL-V)=\E[23~^v:\
	:PICK-AREA(ESC-CTRL-W)=\E[23~^w:\
	:CANCEL-PICK(ESC-CTRL-X)=\E[23~^x:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E[23~^z:\
	:tc=v6kf
#
#
#  Entry for DEC vt300 series, vt320, vt330, vt340 in 80 column mode.
#
#  It is assumed that the <X] key above the Return key is set
#  to Delete (also known as CTRL-? or \177) in the terminal 
#  setup (use F3 to get to setup). 
#
#  Assumes vt300 mode with 7 bit controls.
#
#  The :COLOR statements are included for terminal emulators that emulate
#  VT300 Series terminals AND ANSI color.  The first five colors, color 0 
#  through color 4, are not set using the :COLOR statement.
#  Color 0 (version 6 color name NORMAL) is set in the is string.
#  Color 1 (version 6 color name INPUT) is set and cleared by the ue, us,
#	and ug terminal capabilities. 
#  Color 2 (version 6 color name MESSAGE) is set and cleared by the so, se, 
#	and sg terminal capabilities. 
#  Color 3 (bold or high intensity) is set and cleared by HS and HR.
#  Color 4 (blink) is set and cleared by BB and BR.
#
#  The largest color number is currently 128.
#
# This Terminal Is Supported By Progress
v3|vt300|VT300|vt320|vt330|vt340|vt-300|vt300-80vms|pt300|pt-100|vt300_series|DEC VT300:\
        :COLOR 5 RED/BLACK=\E[31;40m:\E[m:\
        :COLOR 6 GREEN/BLACK=\E[32;40m:\E[m:\
        :COLOR 7 YELLOW/BLACK=\E[33;40m:\E[m:\
        :COLOR 8 BLUE/BLACK=\E[34;40m:\E[m:\
        :COLOR 9 MAGENTA/BLACK=\E[35;40m:\E[m:\
        :COLOR 10 CYAN/BLACK=\E[36;40m:\E[m:\
        :COLOR 11 WHITE/BLACK=\E[37;40m:\E[m:\
        :COLOR 12 RED/BLUE=\E[31;44m:\E[m:\
        :COLOR 13 RED/GREEN=\E[31;42m:\E[m:\
        :COLOR 14 RED/YELLOW=\E[31;43m:\E[m:\
        :COLOR 15 RED/MAGENTA=\E[31;45m:\E[m:\
        :COLOR 16 RED/CYAN=\E[31;46m:\E[m:\
        :COLOR 17 RED/WHITE=\E[31;47m:\E[m:\
        :COLOR 18 GREEN/BLUE=\E[32;44m:\E[m:\
        :COLOR 19 GREEN/RED=\E[32;41m:\E[m:\
        :COLOR 20 GREEN/YELLOW=\E[32;43m:\E[m:\
        :COLOR 21 GREEN/MAGENTA=\E[32;45m:\E[m:\
        :COLOR 22 GREEN/CYAN=\E[32;46m:\E[m:\
        :COLOR 23 GREEN/WHITE=\E[32;47m:\E[m:\
        :COLOR 24 YELLOW/BLUE=\E[33;44m:\E[m:\
        :COLOR 25 YELLOW/RED=\E[33;41m:\E[m:\
        :COLOR 26 YELLOW/GREEN=\E[33;42m:\E[m:\
        :COLOR 27 YELLOW/MAGENTA=\E[33;45m:\E[m:\
        :COLOR 28 YELLOW/CYAN=\E[33;46m:\E[m:\
        :COLOR 29 YELLOW/WHITE=\E[33;47m:\E[m:\
        :COLOR 30 BLUE/YELLOW=\E[34;43m:\E[m:\
        :COLOR 31 BLUE/RED=\E[34;41m:\E[m:\
        :COLOR 32 BLUE/GREEN=\E[34;42m:\E[m:\
        :COLOR 33 BLUE/MAGENTA=\E[34;45m:\E[m:\
        :COLOR 34 BLUE/CYAN=\E[34;46m:\E[m:\
        :COLOR 35 BLUE/WHITE=\E[34;47m:\E[m:\
        :COLOR 36 MAGENTA/YELLOW=\E[35;43m:\E[m:\
        :COLOR 37 MAGENTA/RED=\E[35;41m:\E[m:\
        :COLOR 38 MAGENTA/GREEN=\E[35;42m:\E[m:\
        :COLOR 39 MAGENTA/BLUE=\E[35;44m:\E[m:\
        :COLOR 40 MAGENTA/CYAN=\E[35;46m:\E[m:\
        :COLOR 41 MAGENTA/WHITE=\E[35;47m:\E[m:\
        :COLOR 42 CYAN/YELLOW=\E[36;43m:\E[m:\
        :COLOR 43 CYAN/RED=\E[36;41m:\E[m:\
        :COLOR 44 CYAN/GREEN=\E[36;42m:\E[m:\
        :COLOR 45 CYAN/BLUE=\E[36;44m:\E[m:\
        :COLOR 46 CYAN/MAGENTA=\E[36;45m:\E[m:\
        :COLOR 47 CYAN/WHITE=\E[36;47m:\E[m:\
        :COLOR 48 WHITE/YELLOW=\E[37;43m:\E[m:\
        :COLOR 49 WHITE/RED=\E[37;41m:\E[m:\
        :COLOR 50 WHITE/GREEN=\E[37;42m:\E[m:\
        :COLOR 51 WHITE/BLUE=\E[37;44m:\E[m:\
        :COLOR 52 WHITE/MAGENTA=\E[37;45m:\E[m:\
        :COLOR 53 WHITE/CYAN=\E[37;46m:\E[m:\
        :COLOR 54 BLACK/YELLOW=\E[30;43m:\E[m:\
        :COLOR 55 BLACK/RED=\E[30;41m:\E[m:\
        :COLOR 56 BLACK/GREEN=\E[30;42m:\E[m:\
        :COLOR 57 BLACK/BLUE=\E[30;44m:\E[m:\
        :COLOR 58 BLACK/MAGENTA=\E[30;45m:\E[m:\
        :COLOR 59 BLACK/CYAN=\E[30;46m:\E[m:\
        :COLOR 60 BLACK/WHITE=\E[30;47m:\E[m:\
        :COLOR 61 RED=\E[31m:\E[m:\
        :COLOR 62 GREEN=\E[32m:\E[m:\
        :COLOR 63 YELLOW=\E[33m:\E[m:\
        :COLOR 64 BLUE=\E[34m:\E[m:\
        :COLOR 65 MAGENTA=\E[35m:\E[m:\
        :COLOR 66 CYAN=\E[36m:\E[m:\
        :COLOR 67 WHITE=\E[37m:\E[m:\
        :COLOR 68 BLACK=\E[30m:\E[m:\
	:tc=vt200:
#
#  Entry for DEC vt300 series, vt320, vt330, vt340 in 132 column mode.
#  Assumes vt300 mode with 7 bit controls.
#  This Terminal Is Supported By Progress
vt300-132|VT300-132|vt300-132vms:\
        :ti=\E[?3h:\
        :te=\E[?3l:\
        :co#132:tc=vt300:
#
#  Entry for DEC vt400 series, vt420 in 80 column mode
#  Assumes vt420 mode with 7 bit controls.
#  This Terminal Is Supported By Progress
v4|vt400|VT400|vt-400|vt420|vt400-80|vt400-80vms|vt400_series|DEC VT-420:\
        :tc=vt300:
#
#  Entry for DEC vt400 series, vt420 in 132 column mode
#  Assumes vt420 mode with 7 bit controls.
#  This Terminal Is Supported By Progress
vt400-132|VT400-132|vt420-132|vt400-132vms:\
        :ti=\E[?3h:\
        :te=\E[?3l:\
        :co#132:tc=vt400:
#
#  Entry for DEC vt500 series, vt510, vt520, vt525 in 80 column mode.
#  Assumes vt500 mode with 7 bit controls.
#  This Terminal Is Supported By Progress
v5|vt500|VT500|vt510|vt520|vt525|vt500-80|vt500-80vms|vt500_series|DEC VT-500:\
        :tc=vt300:
#
#  Entry for DEC vt500 series, vt510, vt520, vt525 in 132 column mode.
#  Assumes vt500 mode with 7 bit controls.
#  This Terminal Is Supported By Progress
vt500-132|VT500-132|vt500-132vms:\
        :ti=\E[?3h:\
        :te=\E[?3l:\
        :co#132:tc=vt500:

#
#
# WARNING: To use this termcap entry, the DG terminal must have autowrap mode
# set to disable (enable is the default).  When set to DISABLE, this allows
# full UNIX cursor addressing. Use CMD-N/C to get to terminal setup.
# REMEMBER to do "stty tabs" to TURN OFF the tab3 setting
# NOTE: These terminals do not support a high intensity mode but
# they do support a dim mode. HS and HR have been set to use this dim
# mode instead of high intensity. If this is not what you want you can
# comment them out by inserting a period before them or you could 
# substitute one of the other attributes such a MESSAGE(reverse) by
# copying the so string to HS and the se string to HR.
# NOTE: The NEW-LINE key on the 107 key keyboard transmits a ^j. Since
# the NEW-LINE key is in the RETURN key position we assigned the RETURN
# key-function the additional key-sequence of ^j. CURSOR-DOWN has been
# reassigned the spare key-sequence of ^y.
# 'is' - set to unix mode, protected mode disable, protect mode off,
# erase screen, normal spacing, horizontal scroll disabled, blinking
# enabled.
# For 'so' and 'se' we use the longer commands because the shorter 
# reverse video commands do not always work.
# Akm is a Vermont Views key-function capability used by the Data General
# terminals to specify what key-sequence to use for the Return Key in 
# ttyhelp and the install program. L_Akm is the key-label for Akm.
# This Terminal Is Supported By Progress
dg|d413|d463|dg413|d413-unix|Data General D413 in Unix mode:\
        :cd=\036FF:\
        :up=\036PA:\
        :is=\036P@1\036FW\036FM\036FE\036FJ\036F]\003:\
        :co#80:\
        :li#24:\
        :bc=^h:\
        :ce=\036PE:\
        :cl=\036FE:\
        :cm=^P%r%+\200%+\200:\
        :so=\036D:\
        :se=\036E:\
        :al=\036FH:\
        :dl=\036FI:\
        :us=^T:\
        :ue=^U:\
        :xi:\
        :BB=\036PI:\
        :BR=\036PJ:\
        :CA:\
        :G1=":\
        :G2=!:\
        :G3=#:\
        :G4=$:\
        :GH=+:\
        :GV=*:\
        :GS=\036FS11:\
        :GE=\036FS00:\
        :HS=\034:\
        :HR=\035:\
        :HOME(HOME)=^^\\:\
        :HOME(HOME)=^^PF:\
        :END(END)=^^\^:\
	:INSERT-MODE(INS)=^^PH:\
	:DELETE-END-LINE(ESC-K)=^^PE:\
        :GO(F1)=^^q:\
        :HELP(F2)=^^r:\
        :ENTER-MENUBAR(F3)=^^s:\
        :END-ERROR(F4)=^^t:\
        :GET(F5)=^^u:\
        :PUT(F6)=^^v:\
        :RECALL(F7)=^^w:\
        :CLEAR(F8)=^^x:\
        :INSERT-MODE(F9)=^^y:\
        :INSERT-MODE(INS)=\036PH:\
        :CUT(F10)=^^z:\
        :COPY(F11)=^^{:\
        :PASTE(F12)=^^|:\
        :FIND(F13)=^^}:\
        :BLOCK(F14)=^^~:\
        :BREAK-LINE(F15)=^^p:\
        :PAGE-UP(PAGE-UP)=^^]:\
        :PAGE-DOWN(PAGE-DOWN)=^^_:\
        :RETURN(RETURN)=^j:\
	:CURSOR-DOWN(CTRL-Y)=^y:\
	:PAGE-UP(ESC-UP-ARROW)=\E\036PA:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\036PB:\
        :LEFT-END(ESC-LEFT-ARROW)=\E\036PD:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E\036PC:\
        :ku=\036PA:     :L_ku=<Up>:\
        :kd=\036PB:     :L_kd=<Down>:\
        :kl=\036PD:     :L_kl=<Left>:\
        :kr=\036PC:     :L_kr=<Right>:\
        :kh=\036\\:     :L_kh=<Home>\
        :ki=\036PH:     :L_ki=<INS>\
        :DL=\177:     :L_DL=<DEL>\
        :bt=^u:     :L_bt=<CTRL-U>\
        :EN=\036\^:     :L_EN=<END>\
        :ESC=\E\E:     :L_ESC=<ESC-ESC>\
        :PU=\036]:    :L_PU=<PGUP>:\
        :PD=\036_:    :L_PD=<PGDN>:\
        :fk1=\036r:    :L_fk1=<F2>:\
        :fk2=\036s:    :L_fk2=<F3>:\
        :fk3=\036t:    :L_fk3=<F4>:\
        :fk4=\036u:    :L_fk4=<F5>:\
        :fk5=\036v:    :L_fk5=<F6>:\
        :fk6=\036w:    :L_fk6=<F7>:\
        :fk7=\036x:    :L_fk7=<F8>:\
        :Akm=^j:      :L_Akm=Enter:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
        :tc=v7kf:
# Data General D413 in 135 column mode. This terminal is only supported
# in Progress Version 7.3C or later. Prior versions do not know how to 
# interpret %x in the cursor motion string. %x is equilivent to %0.2x for
# printf(), it gives a zero padded two nibble hex value as two chars. The 
# cm string uses the longer Write Screen Address terminal command instead
# of Write Window Address used in the d413 entry (7 bytes instead of 3 bytes)
# but it is necessary in order to move the cursor beyond column 127. A work 
# around for prior versions of Progress is to comment out cm and co with a '.'
# and uncomment the .co#127 line. This will give you a screen with 127 columns.
# This Terminal Is Supported By Progress
d413w|Data General D413 with 135 columns in Unix mode:\
        :is=\036P@1\036FW\036FM\036FE\036FK\036F]\003\036FX0086:\
        :cm=\036FP%r%x%x:\
        :Se=\036FJ\036FX0050:\
        :co#135:\
        :.co#127:\
        :tc=d413:
#
# This Terminal Is Supported By Progress
d413f|Data General D413 with 25 rows in Unix mode:\
        :is=\036P@1\036FW\036FM\036FE\036FJ\036F]\003\036Fz2:\
        :Se=\036Fz0:\
        :li#25:\
        :tc=d413:
#
# Data General Color Terminal D430C in Unix mode. Set this terminal
# up just like the D413. The only major differences between this terminal
# and the D413 are the color support and the labeling of the BACKSPACE
# and DELETE keys. Use Ctrl-Scroll Lock to get to setup on some keyboards.
# The DAC on this terminal can only support about 15 color pairs at a time.
# This means that the color.p test will not work. Keep this in mind if 
# you are using many colors and some of them do not look correct. In the
# COLOR statements this entry uses foreground/background pairs instead 
# of ACM direct mapping. The following table gives the values for both
# the foreground and background colors as used in this entry.
#   0 Black
#   1 Red
#   2 Green
#   3 Yellow
#   4 Blue
#   5 Magenta
#   6 Cyan
#   7 White
# This Terminal Is Supported By Progress
d430|d430c|dg430|Data General Color D430c in Unix mode:\
	:BACKSPACE(BACKSPACE)=^?:\
	:DELETE(DELETE)=^^PE:\
        :COLOR 5 RED/BLACK=\036A4\036B0:\036A2\036B0:\
	:COLOR 6 GREEN/BLACK=\036A2\036B0:\036A2\036B0:\
	:COLOR 7 YELLOW/BLACK=\036A6\036B0:\036A2\036B0:\
	:COLOR 8 BLUE/BLACK=\036A1\036B0:\036A2\036B0:\
	:COLOR 9 MAGENTA/BLACK=\036A5\036B0:\036A2\036B0:\
	:COLOR 10 CYAN/BLACK=\036A3\036B0:\036A2\036B0:\
	:COLOR 11 WHITE/BLACK=\036A7\036B0:\036A2\036B0:\
	:COLOR 12 RED/BLUE=\036A4\036B1:\036A2\036B0:\
	:COLOR 13 RED/GREEN=\036A4\036B2:\036A2\036B0:\
	:COLOR 14 RED/YELLOW=\036A4\036B6:\036A2\036B0:\
	:COLOR 15 RED/MAGENTA=\036A4\036B5:\036A2\036B0:\
	:COLOR 16 RED/CYAN=\036A4\036B3:\036A2\036B0:\
	:COLOR 17 RED/WHITE=\036A4\036B7:\036A2\036B0:\
	:COLOR 18 GREEN/BLUE=\036A2\036B1:\036A2\036B0:\
	:COLOR 19 GREEN/RED=\036A2\036B4:\036A2\036B0:\
	:COLOR 20 GREEN/YELLOW=\036A2\036B6:\036A2\036B0:\
	:COLOR 21 GREEN/MAGENTA=\036A2\036B5:\036A2\036B0:\
	:COLOR 22 GREEN/CYAN=\036A2\036B3:\036A2\036B0:\
	:COLOR 23 GREEN/WHITE=\036A2\036B7:\036A2\036B0:\
	:COLOR 24 YELLOW/BLUE=\036A6\036B1:\036A2\036B0:\
	:COLOR 25 YELLOW/RED=\036A6\036B4:\036A2\036B0:\
	:COLOR 26 YELLOW/GREEN=\036A6\036B2:\036A2\036B0:\
	:COLOR 27 YELLOW/MAGENTA=\036A6\036B5:\036A2\036B0:\
	:COLOR 28 YELLOW/CYAN=\036A6\036B3:\036A2\036B0:\
	:COLOR 29 YELLOW/WHITE=\036A6\036B7:\036A2\036B0:\
	:COLOR 30 BLUE/YELLOW=\036A1\036B6:\036A2\036B0:\
	:COLOR 31 BLUE/RED=\036A1\036B4:\036A2\036B0:\
	:COLOR 32 BLUE/GREEN=\036A1\036B2:\036A2\036B0:\
	:COLOR 33 BLUE/MAGENTA=\036A1\036B5:\036A2\036B0:\
	:COLOR 34 BLUE/CYAN=\036A1\036B3:\036A2\036B0:\
	:COLOR 35 BLUE/WHITE=\036A1\036B7:\036A2\036B0:\
	:COLOR 36 MAGENTA/YELLOW=\036A5\036B6:\036A2\036B0:\
	:COLOR 37 MAGENTA/RED=\036A5\036B4:\036A2\036B0:\
	:COLOR 38 MAGENTA/GREEN=\036A5\036B2:\036A2\036B0:\
	:COLOR 39 MAGENTA/BLUE=\036A5\036B1:\036A2\036B0:\
	:COLOR 40 MAGENTA/CYAN=\036A5\036B3:\036A2\036B0:\
	:COLOR 41 MAGENTA/WHITE=\036A5\036B7:\036A2\036B0:\
	:COLOR 42 CYAN/YELLOW=\036A3\036B6:\036A2\036B0:\
	:COLOR 43 CYAN/RED=\036A3\036B4:\036A2\036B0:\
	:COLOR 44 CYAN/GREEN=\036A3\036B2:\036A2\036B0:\
	:COLOR 45 CYAN/BLUE=\036A3\036B1:\036A2\036B0:\
	:COLOR 46 CYAN/MAGENTA=\036A3\036B5:\036A2\036B0:\
	:COLOR 47 CYAN/WHITE=\036A3\036B7:\036A2\036B0:\
	:COLOR 48 WHITE/YELLOW=\036A7\036B6:\036A2\036B0:\
	:COLOR 49 WHITE/RED=\036A7\036B4:\036A2\036B0:\
	:COLOR 50 WHITE/GREEN=\036A7\036B2:\036A2\036B0:\
	:COLOR 51 WHITE/BLUE=\036A7\036B1:\036A2\036B0:\
	:COLOR 52 WHITE/MAGENTA=\036A7\036B5:\036A2\036B0:\
	:COLOR 53 WHITE/CYAN=\036A7\036B3:\036A2\036B0:\
	:COLOR 54 BLACK/YELLOW=\036A0\036B6:\036A2\036B0:\
	:COLOR 55 BLACK/RED=\036A0\036B4:\036A2\036B0:\
	:COLOR 56 BLACK/GREEN=\036A0\036B2:\036A2\036B0:\
	:COLOR 57 BLACK/BLUE=\036A0\036B1:\036A2\036B0:\
	:COLOR 58 BLACK/MAGENTA=\036A0\036B5:\036A2\036B0:\
	:COLOR 59 BLACK/CYAN=\036A0\036B3:\036A2\036B0:\
	:COLOR 60 BLACK/WHITE=\036A0\036B7:\036A2\036B0:\
        :tc=d413:
#
# This Terminal Is Supported By Progress
d430w|Data General D430c with 135 columns in Unix mode:\
        :is=\036P@1\036FW\036FM\036FE\036FK\036F]\003\036FX0086:\
        :cm=\036FP%r%x%x:\
        :Se=\036FJ\036FX0050:\
        :co#135:\
        :tc=d430:
#
# This Terminal Is Unsupported by Progress.
d217|Data General D217 in Unix mode:\
        :cl=\036PH:\
        :tc=d413:
#
#
# This entry is for the IBM model 3151 terminal.
# Note: Because the function keys use \Ea through \El these keys cannot
# be used for their default key-functions (e.g. SAVE-AS, BRAKE-LINE, etc.).
# The key-sequences \E0 through \E9 have been substituted in their place.
# This Terminal Is Supported By Progress
m3|ibm3151|3151:\
	:is=\E!L:\
	:co#80:	:li#24:\
	:nd=\EC:\
	:do=\EB:\
	:cl=\EK:\
	:so=\E4A:\
	:cm=20\EY%+\040%+\040:\
	:se=\E4@:\
	:us=\E4B:\
	:ue=\E4@:\
	:HS=\E4H:\
	:HR=\E4@:\
	:BB=\E4D:\
	:BR=\E4@:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GV=x:	:GH=q:\
	:G1=k:	:G2=l:	:G3=m:	:G4=j:\
	:co#80:\
	:li#24:\
	:al=\EX\067\040\EO\E\040Z\EN:\
	:am:\
	:cl=\EK:\
	:bs:\
	:cm=\EY%+ %+ :\
	:nd=\EC:\
	:up=\EA:\
	:do=\EB:\
	:ce=\EI:\
	:cd=\EJ:\
	:dl=\EO:\
	:ic=\EP:\
	:dc=\EQ:\
	:sf=\E\040M:\
	:sr=\E!M:\
	:so=\E4\101:\
	:se=\E4\100:\
	:us=\E4\102:\
	:ue=\E4\100:\
	:kl=\ED:\
	:kr=\EC:\
	:kd=\EB:\
	:ku=\EA:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GH=q:\
	:GV=x:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:BACK-TAB(BACK-TAB)=^[2:\
	:DELETE(DELETE)=^[Q:\
	:HELP(HELP-KEY)=^[H:\
	:CLEAR(CTRL-Z)=^[L^m:\
	:DELETE-END-LINE(ERASE)=^[I:\
	:INSERT-MODE(INSERT)=^[P ^h:\
	:GO(F1)=^[a^M:\
	:HELP(F2)=^[b^M:\
	:ENTER-MENUBAR(F3)=^[c^M:\
	:END-ERROR(F4)=^[d^M:\
	:GET(F5)=^[e^M:\
	:PUT(F6)=^[f^M:\
	:RECALL(F7)=^[g^M:\
	:CLEAR(F8)=^[h^M:\
	:INSERT-MODE(F9)=^[i^M:\
	:CUT(F10)=^[j^M:\
	:COPY(F11)=^[k^M:\
	:PASTE(F12)=^[l^M:\
	:PAGE-UP(ESC-UP-ARROW)=\E\EA:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\EB:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\ED:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\EC:\
	:SAVE-AS(ESC-1)=\E1:\
	:BREAK-LINE(ESC-0)=\E0:\
	:DELETE-WORD(ESC-3)=\E3:\
	:NEXT-ERROR(ESC-4)=\E4:\
	:FIND-NEXT(ESC-5)=\E5:\
	:GOTO(ESC-6)=\E6:\
	:FIND-PREVIOUS(ESC-7)=\E7:\
	:DELETE-END-LINE(ESC-8)=\E8:\
	:OPEN-LINE-ABOVE(ESC-9)=\E9:\
	:ku=\EA:\	:L_ku=<Up>:\
	:kd=\EB:\	:L_kd=<Down>:\
	:kr=\EC:\	:L_kr=<Right>:\
	:kl=\ED:\	:L_kl=<Left>:\
	:kh=\EH:\	:L_kh=<ESC> H:\
	:PU=^P:\	:L_PU=<CTRL-P>:\
	:PD=^D:\	:L_PD=<CTRL-D>:\
	:ki=\EP:\	:L_ki=<ESC> P:\
	:DL=^X:\	:L_DL=<CTRL-X>:\
	:ESC=\E\E:\	:L_ESC=<ESC> <ESC>:\
	:bt=\E2:\	:L_bt=<ESC> 2:\
	:fk0=\Eb1:	:L_fk0=<F1>:\
	:fk1=\Eb2:	:L_fk1=<F2>:\
	:fk2=\Eb3:	:L_fk2=<F3>:\
	:fk3=\Eb4:	:L_fk3=<F4>:\
	:fk4=\Eb5:	:L_fk4=<F5>:\
	:fk5=\Eb6:	:L_fk5=<F6>:\
	:fk6=\Eb7:	:L_fk6=<F7>:\
	:fk7=\Eb8:	:L_fk7=<F8>:\
	:fk8=\Eb9:	:L_fk8=<F9>:\
	:fk9=\Eb0:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
# IBM 3151 in 132 column mode. Returns to 80 column mode when done.
# This terminal is only supported in Progress Version 7.3C or later.
# Prior versions do not know how to interpret %M in the cursor motion 
# string. %Mx%Mx translates to p1 = row / x + x, p2 = row mod x + x,
# p3 = col / x + x, p4 = col mod x + 2x, where p1 - p4 are sent to the 
# terminal as chars. Lets hope this works on other IBM terminals. 
# This Terminal Is Supported By Progress
ibm3151-132:\
	:cm=20\Ey%M\040%M\040:\
        :co#132:\
        :ti=\E r!! 8$D:\
        :te=\E r!! 9"P:\
        :tc=ibm3151:
#
#
# This Terminal Is Unsupported By Progress.
m2|3163|ibm3163:\
	:is=\E!L:\
	:co#80:	:li#24:\
	:nd=\EC:\
	:do=\EB:\
	:cl=\EK:\
	:so=\E4A:\
	:cm=20\EY%+\040%+\040:\
	:se=\E4@:\
	:us=\E4B:\
	:ue=\E4@:\
	:HS=\E4H:\
	:HR=\E4@:\
	:BB=\E4D:\
	:BR=\E4@:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GV=x:	:GH=q:\
	:G1=k:	:G2=l:	:G3=m:	:G4=j:\
	:co#80:\
	:li#24:\
	:al=\EX\067\040\EO\E\040Z\EN:\
	:am:\
	:cl=\EK:\
	:bs:\
	:cm=\EY%+ %+ :\
	:nd=\EC:\
	:up=\EA:\
	:do=\EB:\
	:ce=\EI:\
	:cd=\EJ:\
	:dl=\EO:\
	:ic=\EP:\
	:dc=\EQ:\
	:sf=\E\040M:\
	:sr=\E!M:\
	:so=\E4\101:\
	:se=\E4\100:\
	:us=\E4\102:\
	:ue=\E4\100:\
	:kl=\ED:\
	:kr=\EC:\
	:kd=\EB:\
	:ku=\EA:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GH=q:\
	:GV=x:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:BACK-TAB(BACK-TAB)=\E2:\
	:GO(F1)=\Ea\r:\
	:HELP(F2)=\Eb\r:\
	:ENTER-MENUBAR(F3)=\Ec\r:\
	:END-ERROR(F4)=\Ed\r:\
	:GET(F5)=\Ee\r:\
	:PUT(F6)=\Ef\r:\
	:RECALL(F7)=\Eg\r:\
	:CLEAR(F8)=\Eh\r:\
	:INSERT-MODE(F9)=\Ei\r:\
	:CUT(F10)=\Ej\r:\
	:COPY(F11)=\Ek\r:\
	:PASTE(F12)=\El\r:\
	:FIND(F13)=\E!a\r:\
	:BLOCK(F14)=\E!b\r:\
	:PAGE-UP(F15)=\E!c\r:\
	:PAGE-DOWN(F16)=\E!d\r:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\EA:\	:L_ku=<Up>:\
	:kd=\EB:\	:L_kd=<Down>:\
	:kr=\EC:\	:L_kr=<Right>:\
	:kl=\ED:\	:L_kl=<Left>:\
	:kh=\EH:\	:L_kh=<ESC> H:\
	:PU=^P:\	:L_PU=<CTRL-P>:\
	:PD=^D:\	:L_PD=<CTRL-D>:\
	:ki=\EP:\	:L_ki=<ESC> P:\
	:DL=^X:\	:L_DL=<CTRL-X>:\
	:ESC=\E\E:\	:L_ESC=<ESC> <ESC>:\
	:bt=\E2:\	:L_bt=<ESC> 2:\
	:fk0=\Eb1:	:L_fk9=<F1>:\
	:fk1=\Eb2:	:L_fk9=<F2>:\
	:fk2=\Eb3:	:L_fk9=<F3>:\
	:fk3=\Eb4:	:L_fk9=<F4>:\
	:fk4=\Eb5:	:L_fk9=<F5>:\
	:fk5=\Eb6:	:L_fk9=<F6>:\
	:fk6=\Eb7:	:L_fk9=<F7>:\
	:fk7=\Eb8:	:L_fk9=<F8>:\
	:fk8=\Eb9:	:L_fk9=<F9>:\
	:fk9=\Eb0:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
#
#
# This Terminal Is Unsupported By Progress.
m4|3164|ibm3164:\
	:is=\E!L:\
	:co#80:	:li#24:\
	:nd=\EC:\
	:do=\EB:\
	:cl=\EK:\
	:so=\E4A:\
	:cm=20\EY%+\040%+\040:\
	:se=\E4@:\
	:us=\E4B:\
	:ue=\E4@:\
	:HS=\E4H:\
	:HR=\E4@:\
	:BB=\E4D:\
	:BR=\E4@:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GV=x:	:GH=q:\
	:G1=k:	:G2=l:	:G3=m:	:G4=j:\
	:co#80:\
	:li#24:\
	:al=\EX\067\040\EO\E\040Z\EN:\
	:am:\
	:cl=\EK:\
	:bs:\
	:cm=\EY%+ %+ :\
	:nd=\EC:\
	:up=\EA:\
	:do=\EB:\
	:ce=\EI:\
	:cd=\EJ:\
	:dl=\EO:\
	:ic=\EP:\
	:dc=\EQ:\
	:sf=\E\040M:\
	:sr=\E!M:\
	:so=\E4\101:\
	:se=\E4\100:\
	:us=\E4\102:\
	:ue=\E4\100:\
	:kl=\ED:\
	:kr=\EC:\
	:kd=\EB:\
	:ku=\EA:\
	:GS=\E<A:\
	:GE=\E<@:\
	:GH=q:\
	:GV=x:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:Si=\E!9\044\100:\
	:Se=\E!9\040\100:\
	:BACK-TAB(BACK-TAB)=\E2:\
	:GO(F1)=\Ea\r:\
	:HELP(F2)=\Eb\r:\
	:ENTER-MENUBAR(F3)=\Ec\r:\
	:END-ERROR(F4)=\Ed\r:\
	:GET(F5)=\Ee\r:\
	:PUT(F6)=\Ef\r:\
	:RECALL(F7)=\Eg\r:\
	:CLEAR(F8)=\Eh\r:\
	:INSERT-MODE(F9)=\Ei\r:\
	:CUT(F10)=\Ej\r:\
	:COPY(F11)=\Ek\r:\
	:PASTE(F12)=\El\r:\
	:FIND(F13)=\E!a\r:\
	:BLOCK(F14)=\E!b\r:\
	:PAGE-UP(F15)=\E!c\r:\
	:PAGE-DOWN(F16)=\E!d\r:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:COLOR 5 NORMAL=\E4\040\042\100:\E4\040\042\100:0:\
	:COLOR 6 RED/BLK=\E4\040\044\100:\E4\040\042\100:0:\
	:COLOR 7 BLU/BLK=\E4\040\041\100:\E4\040\042\100:0:\
	:COLOR 8 WHT/RED=\E4\040\047\104:\E4\040\042\100:0:\
	:COLOR 9 WHT/BLU=\E4\040\047\101:\E4\040\042\100:0:\
	:COLOR 10 YEL/BLK=\E4\040\046\100:\E4\040\042\100:0:\
	:COLOR 11 WHT/YEL=\E4\040\047\106:\E4\040\042\100:0:\
	:ku=\EA:\	:L_ku=<Up>:\
	:kd=\EB:\	:L_kd=<Down>:\
	:kr=\EC:\	:L_kr=<Right>:\
	:kl=\ED:\	:L_kl=<Left>:\
	:kh=\EH:\	:L_kh=<ESC> H:\
	:PU=^P:\	:L_PU=<CTRL-P>:\
	:PD=^D:\	:L_PD=<CTRL-D>:\
	:ki=\EP:\	:L_ki=<ESC> P:\
	:DL=^X:\	:L_DL=<CTRL-X>:\
	:ESC=\E\E:\	:L_ESC=<ESC> <ESC>:\
	:bt=\E2:\	:L_bt=<ESC> 2:\
	:ZM=^Z:\	:L_ZM=<CTRL-Z>:\
	:fk0=\Eb1:	:L_fk9=<F1>:\
	:fk1=\Eb2:	:L_fk9=<F2>:\
	:fk2=\Eb3:	:L_fk9=<F3>:\
	:fk3=\Eb4:	:L_fk9=<F4>:\
	:fk4=\Eb5:	:L_fk9=<F5>:\
	:fk5=\Eb6:	:L_fk9=<F6>:\
	:fk6=\Eb7:	:L_fk9=<F7>:\
	:fk7=\Eb8:	:L_fk9=<F8>:\
	:fk8=\Eb9:	:L_fk9=<F9>:\
	:fk9=\Eb0:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
#  Protermcap entries for foreign alphabet representation
#  on the Wyse 60 terminal
ger|german|wy60 in german mode:\
	:IN(\176)=\341:\
	:IN(\133)=\216:\
	:IN(\173)=\204:\
	:IN(\134)=\231:\
	:IN(\174)=\224:\
	:IN(\135)=\232:\
	:IN(\175)=\201:
dan|danish|wy60 in danish mode:\
	:IN(\135)=\217:\
	:IN(\175)=\206:\
	:IN(\133)=\222:\
	:IN(\173)=\221:\
	:IN(\134)=\235:\
	:IN(\174)=\233:
swe|swedish|wy60 in swedish mode:\
	:IN(\135)=\217:\
	:IN(\175)=\206:\
	:IN(\133)=\216:\
	:IN(\173)=\204:\
	:IN(\134)=\231:\
	:IN(\174)=\224:\
	:IN(\140)=\202:\
	:IN(\100)=\220:
interleaf|sun in interleaf or sunview or suntools or openwin mode:\
	:IN(\304)=\216:\
	:IN(\305)=\217:\
	:IN(\306)=\222:\
	:IN(\323)=\235:\
	:IN(\326)=\231:\
	:IN(\334)=\232:\
	:IN(\337)=\341:\
	:IN(\340)=\205:\
	:IN(\344)=\204:\
	:IN(\345)=\206:\
	:IN(\346)=\221:\
	:IN(\347)=\207:\
	:IN(\350)=\212:\
	:IN(\351)=\202:\
	:IN(\352)=\210:\
	:IN(\356)=\214:\
	:IN(\363)=\233:\
	:IN(\364)=\223:\
	:IN(\366)=\224:\
	:IN(\371)=\227:\
	:IN(\373)=\226:\
	:IN(\374)=\201:
#
# ibm hft       February 12th, 1994
# Underline did not work at our site so I changed us from \E[4m to 
# reverse video \E[7m. The old us is commented out. High intensity and
# blink also did not work. The second (commented out) set of graphics
# characters are double line.
# This Terminal Is Unsupported By Progress.
hft|ibm8503|HFT MONO Display Device:\
        :cd=\E[J:\
        :up=\E[A:\
        :is=\Eb\E[m^O\E[?7h:\
        :ce=\E[K:\
        :co#80:         :li#25:\
        :bc=^H:\
        :cl=\E[H\E[J:   :cm=\E[%i%d;%dH:\
        :so=\E[7m:      :se=\E[m:\
        :us=\E[7m:.us=\E[4m:      :ue=\E[m:\
        :GV=\263:       :GH=\304:\
        :G1=\277:       :G2=\332:       :G3=\300:       :G4=\331:\
        :.GV=\272:      :.GH=\315:\
        :.G1=\273:      :.G2=\311:      :.G3=\310:      :.G4=\274:\
        :HS=\E[1m:      :HR=\E[0m:      :BB=\E[5m:      :BR=\E[0m:\
	:GO(F1)=\E[001q:\
	:HELP(F2)=\E[002q:\
	:ENTER-MENUBAR(F3)=\E[003q:\
	:END-ERROR(F4)=\E[004q:\
	:GET(F5)=\E[005q:\
	:PUT(F6)=\E[006q:\
	:RECALL(F7)=\E[007q:\
	:CLEAR(F8)=\E[008q:\
	:INSERT-MODE(F9)=\E[009q:\
	:CUT(F10)=\E[010q:\
	:COPY(F11)=\E[011q:\
	:PASTE(F12)=\E[012q:\
        :HOME(HOME)=\E[H:\
        :END(END)=\E[146q:\
        :INSERT-MODE(INSERT)=\E[139q:\
        :DELETE(DELETE)=\E[P:\
	:BACK-TAB(SHIFT-TAB)=\E[Z:\
	:PAGE-UP(PAGE-UP)=\E[150q:\
	:PAGE-DOWN(PAGE-DOWN)=\E[154q:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
        :LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
        :ku=\E[A:       :L_ku=<Up>:\
        :kd=\E[B:       :L_kd=<Down>:\
        :kr=\E[C:       :L_kr=<Right>:\
        :kl=\E[D:       :L_kl=<Left>:\
        :kh=\E[H:       :L_kh=<Home>:\
        :EN=\E[146q:    :L_EN=<End>:\
        :PU=\E[155q:    :L_PU=<PgUp>:\
        :PD=\E[151q:    :L_PD=<PgDn>:\
        :ki=\E[139q:    :L_ki=<Insert>:\
        :ESC=\E\E:   :L_ESC=<ESC><ESC>:\
        :bt=\E[Z:       :L_bt=<SHIFT-Tab>:\
        :fk1=\E[002q:    :L_fk1=<F2>:\
        :fk2=\E[003q:    :L_fk2=<F3>:\
        :fk3=\E[004q:    :L_fk3=<F4>:\
        :fk4=\E[005q:    :L_fk4=<F5>:\
        :fk5=\E[006q:    :L_fk5=<F6>:\
        :fk6=\E[007q:    :L_fk6=<F7>:\
        :fk7=\E[008q:    :L_fk7=<F8>:\
        :fk8=\E[009q:    :L_fk8=<F9>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
        :tc=v7kf:
#
# 'is' - local edit off, enable full duplex mode, conversational mode,
# dark background, normal attr, display user message 1 on bottom line,
# replace mode, line edit mode, protect mode off, write protect off,
# graphics mode off, auto page mode off, monitor mode off, load 
# replacement character = space, X-On/X-Off ON -
# 'is' 2nd line - load editing key, load editing key, reprogram send
# delimiters for field separator, end of line, start of protected field, 
# 'is' 3rd line - reprogram send delimiters for end of protected field, 
# and end of message, clear all tabs, ESC enabled, set ^y as back space,
# turn off top line, select attribute type as character.
# This Terminal Is Unsupported By Progress.
tvi965|tvi950:\
        :cd=\EY:up=^K:\
	:is=\El\EDF\EC\Ed\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O\
\E016\E004\Ex0\200\200\Ex1\200\200\Ex2\200\200\
\Ex3\200\200\Ex4\r\200\E3\E[=12h\E0F^y\200\200\200\200\E.c\EF2:\
        :te=\E0F^h\200\200\200\200:\
	:so=\EG4:\
	:se=\EG0:\
	:CN=\E.1:\
        :CF=\E.0:\
        :cl=\E+:\
        :cm=\E=%+ %+ :\
        :li#24:\
        :co#80:\
        :xi:\
        :us=\EG8:\
        :ue=\EG0:\
	:HS=\EG4:\
	:HR=\EG0:\
	:BB=\EG2:\
	:BR=\EG0:\
	:ce=\Et:\
	:GS=\E$:\
	:GE=\E%:\
	:GH=K:\
	:GV=J:\
	:G1=G:\
	:G2=F:\
	:G3=E:\
	:G4=H:\
	:GO(F1)=^A@\r:\
	:HELP(F2)=^AA\r:\
	:ENTER-MENUBAR(F3)=^AB\r:\
	:END-ERROR(F4)=^AC\r:\
	:GET(F5)=^AD\r:\
	:PUT(F6)=^AE\r:\
	:RECALL(F7)=^AF\r:\
	:CLEAR(F8)=^AG\r:\
	:INSERT-MODE(F9)=^AH\r:\
	:CUT(F10)=^AI\r:\
	:COPY(F11)=^AJ\r:\
	:PASTE(F12)=^AK\r:\
	:FIND(F13)=^AL\r:\
	:BLOCK(F14)=^AM\r:\
	:BACKSPACE(BACKSPACE)=^y:\
	:BACK-TAB(SHIFT-TAB)=\EI:\
	:LEFT-END(ESC-LEFT-ARROW)=\E^y:\
	:HOME(HOME)=^^:\
	:HOME(ESC-H)=\Eh:\
	:PAGE-UP(PREV-PAGE)=\EJ:\
	:PAGE-DOWN(NEXT-PAGE)=\EK:\
	:BACKSPACE(DEL-CHAR)=\EW:\
	:ku=^K: 	:L_ku=<Up>:\
	:kd=^V: 	:L_kd=<Down>:\
	:kr=^L: 	:L_kr=<Right>:\
	:kl=^H: 	:L_kl=<Left>:\
	:kh=\036:	:L_kh=<Home>:\
	:EN=\E{:	:L_EN=<SHIFT-Home>:\
	:PU=\EJ:	:L_PU=<Page Prev>:\
	:PD=\EK:	:L_PD=<Page Next>:\
	:ki=\Eq:	:L_ki=<Insert>:\
	:DL=\EW:	:L_DL=<Delete>:\
	:bc=^y:	:L_bc=<Back Space>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\EI:	:L_bt=<SHIFT-Tab>:\
	:fk0=^A@\r:	:L_fk0=<F1>:\
	:fk1=^AA\r:	:L_fk1=<F2>:\
	:fk2=^AB\r:	:L_fk2=<F3>:\
	:fk3=^AC\r:	:L_fk3=<F4>:\
	:fk4=^AD\r:	:L_fk4=<F5>:\
	:fk5=^AE\r:	:L_fk5=<F6>:\
	:fk6=^AF\r:	:L_fk6=<F7>:\
	:fk7=^AG\r:	:L_fk7=<F8>:\
	:fk8=^AH\r:	:L_fk8=<F9>:\
	:fk9=^AI\r:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
# TeleVideo 965 in 132 column mode. It assumes that when Progress
# exits that it should return to 80 column mode. If you want to
# remain in 132 column mode when Progress exits then put a dot
# in front of the first 'te' and delete the dot before the second
# 'te'.
# This Terminal Is Unsupported By Progress.
tvi965-132|tvi950-132|TeleVideo 965 in 132 column mode:\
	:is=\El\EDF\EC\Ed\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O\
\E016\E004\Ex0\200\200\Ex1\200\200\Ex2\200\200\
\Ex3\200\200\Ex4\r\200\E3\E[=12h\E0F^y\200\200\200\200\E.c\EF2\
\E[=24l\E=3h\E.;:\
	:cm=\E[%i%d;%dH:\
        :te=\E0F^h\200\200\200\200\E[=24h:\
        :.te=\E0F^h\200\200\200\200:\
        :co#132:\
        :tc=tvi965:
#
# ATT7300 monitor termcap entry. UNIXPC (ATT 3B1)
# by Ron Cline
#
#
# Notes:  Load font 'ELD.ft' into slot #1 for Views single line borders.
#	  A full set of double borders doesn't appear to be available
#	  in the ELD.ft or other fonts under /usr/lib/wfont. 
#
#
#	Entry for /etc/profile:
#	cd /usr/lib/wfont
#	sfont ELD.ft 1
#	echo "LOADED ELD.ft into slot 1"
#	cd /
# Note that the graphics characters entries (Gx) entries below
# are commented out by using a period, e.g., :.G1=.
# To get graphics, you must:
#  a) more /etc/.fontload
#     If there is just one line (ending in a zero) then add the
#     following line:
#         sfont -s /usr/lib/wfont/ELD.ft 1
#     else
#         add :
#          sfont -s /usr/lib/wfont/ELD.ft <n>
#         where <n> is one bigger than the last entry.
#  b) Delete the periods before the 8 Gx entries below.
#  c) Adjust the second digit in the GS entry to match the
#     ending digit in the ELD.ft entry in /etc/.fontload        
#  d) Reboot, which causes the kernel to look at /etc/.fontload
#     and load in the requisite fonts.
#        -----The above instructions are courtesy of Mike Barton
#
# This Terminal Is Unsupported By Progress.
s4|PC7300|unixpc|pc7300|3b1|Safari 4:\
	:is=\E[m\E[2J\E[H:\
	:co#80: 	:li#25: 	:CA:\
	:nd=\E[C:	:do=\E[B:	:cl=\E[2J\E[H:	:cm=\E[%i%d;%dH:\
	:so=\E[7m:	:se=\E[m:	:us=\E[4m:	:ue=\E[m:\
	:HS=\E[1m:	:HR=\E[m:	:BB=\E[5m:	:BR=\:\
	:al=\E[1L:\
	:am:\
	:bs:\
	:cd=\E[0J:\
	:ce=\E[0K:\
	:cl=\E[2J\E[H:\
	:cm=\E[%i%2;%2H:\
	:co#80:\
	:dc=\E[1P:\
	:dl=\E[1M:\
	:do=\E[B:\
	:ei=:\
	:ho=\E[H:\
	:ic=\E[1@:\
	:kb=\010:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:ku=\E[A:\
	:li#24:\
	:nd=\E[C:\
	:se=\E[m:\
	:so=\E[1;7m:\
	:ue=\E[m:\
	:up=\E[A:\
	:us=\E[4m:\
	:GO(F1)=\EOc:\
	:HELP(F2)=\EOd:\
	:ENTER-MENUBAR(F3)=\EOe:\
	:END-ERROR(F4)=\EOf:\
	:GET(F5)=\EOg:\
	:PUT(F6)=\EOh:\
	:RECALL(F7)=\EOi:\
	:CLEAR(F8)=\EOj:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:EE=\E[m:BO=\E[0;7m:CV=\E[=C:CI=\E[=1C:KM=/usr/lib/ua/kmap.s4:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:kh=\E9:	:L_kh=<Home>:\
	:EN=\E0:	:L_EN=<End>:\
	:PU=\ENg:	:L_PU=<PgUp>:\
	:PD=\ENh:	:L_PD=<PgDn>:\
	:ki=\ENj:	:L_ki=<Insert>:\
	:DL=\ENf:	:L_DL=<CTRL-X>:\
	:ESC=\EOw:	:L_ESC=<ESC>:\
	:bt=\E[Z:	:L_bt=<SHIFT-Tab>:\
	:fk0=\EOc:	:L_fk0=<F1>:\
	:fk1=\EOd:	:L_fk1=<F2>:\
	:fk2=\EOe:	:L_fk2=<F3>:\
	:fk3=\EOf:	:L_fk3=<F4>:\
	:fk4=\EOg:	:L_fk4=<F5>:\
	:fk5=\EOh:	:L_fk5=<F6>:\
	:fk6=\EOi:	:L_fk6=<F7>:\
	:fk7=\EOj:	:L_fk7=<F8>:\
	:fk8=\EOi:	:L_fk8=<F9>:\
	:fk9=\EOk:	:L_fk9=<F10>: \
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:\
#
# sun-cmd is used under openwindows, and has 1 more line than "sun"
# This Terminal Is Unsupported By Progress.
sun-cmd:\
	:te=\E[>4h:ti=\E[>4l:tc=sun:
#
# Sun 3 xterm under the X Window System (run xterm -sf)
#
# GE is provided here to circumvent an problem with the v6 termcap processing.
#
# This Terminal Is Unsupported By Progress.
sun-xterm|Xsun:\
        :cd=\E[J:\
        :ce=\E[K:\
        :cl=\E[H\E[J:\
        :cm=\E[%i%d;%dH:\
	:GE=^O:\
        :BACKSPACE:\
        :GO(F1)=\E[224z:\
        :HELP(F2)=\E[225z:\
        :INSERT-MODE(F3)=\E[226z:\
        :END-ERROR(F4)=\E[227z:\
        :GET(F5)=\E[228z:\
        :PUT(F6)=\E[229z:\
        :RECALL(F7)=\E[230z:\
        :CLEAR(F8)=\E[231z:\
        :NEW-LINE(F9)=\E[232z:\
	:DELETE-LINE(F10)=\E[233z:\
	:BREAK-LINE(F11)=\E[192z:\
	:APPEND-LINE(F12)=\E[193z:\
        :HOME(PF7)=\E[214z:\
        :PAGE-UP(PF9)=\E[216z:\
        :HOME(PF13)=\E[220z:\
        :PAGE-DOWN(PF15)=\E[222z:\
	:fk1=\E[225z	:L_fk1=<F2>:\
	:fk2=\E[226z:	:L_fk2=<F3>:\
	:fk3=\E[227z:	:L_fk3=<F4>:\
	:fk4=\E[228z:	:L_fk4=<F5>:\
	:fk5=\E[229z:	:L_fk5=<F6>:\
	:fk6=\E[230z:	:L_fk6=<F7>:\
	:fk7=\E[231z:	:L_fk7=<F8>:\
        :tc=vt100:
#AT386 same as ansi but F11 and F12 did not work
# This Terminal Is Unsupported By Progress.
AT386|at386:\
        :BR=\E[m:\
        :CA:\
        :HS=\E[1m:\
        :HR=\E[m:\
        :al=\E[L:\
        :am:\
        :bs:\
        :cd=\E[J:\
        :ce=\E[K:\
        :cl=\E[2J\E[H:\
        :cm=\E[%i%d;%dH:\
        :co#80:\
        :dc=\E[P:\
        :dl=\E[M:\
        :dn=\E[B:\
        :ei=:\
        :ho=\E[H:\
        :ic=\E[@:\
        :li#25:\
        :nd=\E[C:\
        :ms:\
        :pt:\
        :so=\E[7m:\
        :se=\E[m:\
        :us=\E[4m:\
        :ue=\E[m:\
        :up=\E[A:\
        :kb=^h:\
        :ku=\E[A:\
        :kd=\E[B:\
        :kl=\E[D:\
        :kr=\E[C:\
        :eo:\
        :GR=\064:\
        :RT=^J:\
        :GH=\304:\
        :G1=\277:\
        :G2=\332:\
        :G3=\300:\
        :G4=\331:\
        :GS=\000:\
        :GE=\000:\
        :GV=\263:\
        :GD=\302:\
        :GC=\305:\
        :GL=\303:\
        :Si=\EQ0"\E[?5i"\EQ1"\E[?3i"\EQ2"\E[?2i"\EQ3"\E[@"\EQ4"\E[M"\EQ5"\E[17~"\EQ6"\E[18~"\EQ7"\E[19~"\EQ8"\E[20~"\EQ9"\E[21~":\
        :GO(F1)=\E[?5i:\
        :HELP(F2)=\E[?3i:\
        :ENTER-MENUBAR(F3)=\E[?2i:\
        :END-ERROR(F4)=\E[@:\
        :GET(F5)=\E[M:\
        :PUT(F6)=\E[17~:\
        :RECALL(F7)=\E[18~:\
        :CLEAR(F8)=\E[19~:\
        :INSERT-MODE(F9)=\E[20~:\
        :CUT(F10)=\E[21~:\
        :BREAK-LINE(F11)=^[OZ:\
        :APPEND-LINE(F12)=^[OA:\
        :HOME(HOME)=\E[H:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
        :LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
        :ku=\E[A:       :L_ku=<Up>:\
        :kd=\E[B:       :L_kd=<Down>:\
        :kr=\E[C:       :L_kr=<Right>:\
        :kl=\E[D:       :L_kl=<Left>:\
        :kh=\E[H:       :L_kh=<Home>:\
        :EN=\E[F:       :L_EN=<End>:\
        :PU=\E[I:       :L_PU=<PgUp>:\
        :PD=\E[G:       :L_PD=<PgDn>:\
        :ki=\E[L:       :L_ki=<Insert>:\
        :DL=^X:         :L_DL=<CTRL-X>:\
        :ESC=\E\E:      :L_ESC=<ESC> <ESC>:\
        :bt=\E[Z:       :L_bt=<SHIFT-Tab>:\
        :fk0=\E[M:      :L_fk0=<F1>:\
        :fk1=\E[N:      :L_fk1=<F2>:\
        :fk2=\E[O:      :L_fk2=<F3>:\
        :fk3=\E[P:      :L_fk3=<F4>:\
        :fk4=\E[Q:      :L_fk4=<F5>:\
        :fk5=\E[R:      :L_fk5=<F6>:\
        :fk6=\E[S:      :L_fk6=<F7>:\
        :fk7=\E[T:      :L_fk7=<F8>:\
        :fk8=\E[U:      :L_fk8=<F9>:\
        :fk9=\E[V:      :L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
        :tc=v7kf:
#
#
# This Terminal Is Unsupported By Progress.
s3|sco386|sco 386 ansi entry:\
        :sf=\E[S:\
        :sr=\E[T:\
        :do=\E[1e:\
        :bc=\E[1D:\
	:BR=\E[m:\
	:CA:\
	:so=\E[7m:\
	:se=\E[m:\
	:HS=\E[1m:\
	:HR=\E[m:\
	:al=\E[L:\
	:am:\
	:bs:\
	:cd=\E[J:\
	:ce=\E[K:\
	:cl=\E[2J\E[H:\
	:cm=\E[%i%d;%dH:\
	:co#80:\
	:dc=\E[P:\
	:dl=\E[M:\
	:dn=\E[B:\
	:ei=:\
	:ho=\E[H:\
	:ic=\E[@:\
	:li#25:\
	:nd=\E[C:\
	:ms:\
	:pt:\
	:so=\E[7m:\
	:se=\E[m:\
	:us=\E[4m:\
	:ue=\E[m:\
	:up=\E[A:\
	:kb=^h:\
	:ku=\E[A:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:eo:\
        :GS=\E[12m:\
        :GE=\E[10m:\
        :GV=\263:\
        :GH=D:\
        :bc=\E[1D:\
        :GC=E:\
        :GL=\264:\
        :GR=C:\
	:RT=^J:\
        :G1=?:\
        :G2=Z:\
        :G3=@:\
        :G4=Y:\
        :GU=A:\
        :GD=B:\
        :is=\EQ0"\E[?5i"\EQ1"\E[?3i"\EQ2"\E[?2i"\EQ3"\E[@"\EQ4"\E[M"\EQ5"\E[17~"\EQ6"\E[18~"\EQ7"\E[19~"\EQ8"\E[20~"\EQ9"\E[21~":\
	:GO(F1)=\E[?5i:\
	:HELP(F2)=\E[?3i:\
	:ENTER-MENUBAR(F3)=\E[?2i:\
	:END-ERROR(F4)=\E[@:\
	:GET(F5)=\E[M:\
	:PUT(F6)=\E[17~:\
	:RECALL(F7)=\E[18~:\
	:CLEAR(F8)=\E[19~:\
	:INSERT-MODE(F9)=\E[20~:\
	:CUT(F10)=\E[21~:\
	:HOME(HOME)=\E[H:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:kh=\E[H:	:L_kh=<Home>:\
	:EN=\E[F:	:L_EN=<End>:\
	:PU=\E[I:	:L_PU=<PgUp>:\
	:PD=\E[G:	:L_PD=<PgDn>:\
	:ki=\E[L:	:L_ki=<Insert>:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\E[Z:	:L_bt=<SHIFT-Tab>:\
	:fk0=\E[?5i:	:L_fk0=<F1>:\
	:fk1=\E[?3i:	:L_fk1=<F2>:\
	:fk2=\E[?2i:	:L_fk2=<F3>:\
	:fk3=\E[@:	:L_fk3=<F4>:\
	:fk4=\E[M:	:L_fk4=<F5>:\
	:fk5=\E[17~:	:L_fk5=<F6>:\
	:fk6=\E[18~:	:L_fk6=<F7>:\
	:fk7=\E[19~:	:L_fk7=<F8>:\
	:fk8=\E[20~:	:L_fk8=<F9>:\
	:fk9=\E[21~:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
# Sco386 entry for 2.2.3 and later version of Xenix
# This Terminal Is Unsupported By Progress.
s9|sco386b|sco 386 ansi entry:\
	:GV=\E[12m3:\
	:tc=sco386:
#
# HPterm terminal emulator (part of X windows) 
# Progress does not support this terminal entry and does not recommend
# using it in a production situation.
# PUT SCREENs may not work properly with this terminal.
# The 'End' key does not send any characters at all. 
# Note that there is a binary flag xhp that must be used with any Hewlett
# Packard terminal.
# Do not use 'xi' because the terminal will scroll on the last char cell.
# uses Term0 control codes. 
# is - HP compatible mode, Inhibit End-of-Line Wrap, Display Functions Off,
# Turn off menu, Transmit Functions to host, reset the function keys.
# This Terminal Is Unsupported By Progress.
hpterm|hpterm terminal emulator under motif:\
        :cd=\EY:up=^K:\
        :cm=\E&a%dy%dX:\
        :is=\E&k0\E&s1C\EZ\E&j@\E&s1A\E&f1k0d3L\E[p\E&f2k0d3L\E[q\E&f3k0d3L\E[r\E&f4k0d3L\E[s\E&f5k0d3L\E[t\E&f6k0d3L\E[u\E&f7k0d3L\E[v\E&f8k0d3L\E[w\E&f9k0d3L\E[x\E&f10k0d3L\E[y\E&f11k0d3L\E[z\E&f12k0d3L\E[1:\
        :.ws:\
        :xhp:\
        :co#80:\
        :li#24:\
        :CN=\E*dQ:\
        :CF=\E*dR:\
        :ce=\EK:\
        :cl=\Eh\EJ:\
        :so=\E&dB:\
        :se=\E&d@:\
        :us=\E&dD:\
        :ue=\E&d@:\
        :HS=\E&dH:\
        :HR=\E&d@:\
        :GS=:\
        :GE=:\
        :GH=-:\
        :GV=|:\
        :G1=+:\
        :G2=+:\
        :G3=+:\
        :G4=+:\
	:GO(F1)=\E[p:\
	:HELP(F2)=\E[q:\
	:ENTER-MENUBAR(F3)=\E[r:\
	:END-ERROR(F4)=\E[s:\
	:GET(F5)=\E[t:\
	:PUT(F6)=\E[u:\
	:RECALL(F7)=\E[v:\
	:CLEAR(F8)=\E[w:\
	:INSERT-MODE(F9)=\E[x:\
	:CUT(F10)=\E[y:\
	:COPY(F11)=\E[z:\
	:PASTE(F12)=\E[1:\
	:INSERT-MODE(INSERT)=\EQ:\
	:HOME(HOME)=\E[h:\
	:PAGE-UP(PAGE-UP)=\EV:\
	:PAGE-DOWN(PAGE-DOWN)=\EU:\
	:PAGE-UP(ESC-UP-ARROW)=\E\EA:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\EB:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\ED:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\EC:\
	:ku=\EA:\	:L_ku=<Up>:\
	:kd=\EB:\	:L_kd=<Down>:\
	:kr=\EC:\	:L_kr=<Right>:\
	:kl=\ED:\	:L_kl=<Left>:\
	:kh=\E[h:\	:L_kh=<HOME>:\
	:PU=^P:\	:L_PU=<CTRL-P>:\
	:PD=^D:\	:L_PD=<CTRL-D>:\
	:ki=\EP:\	:L_ki=<ESC> P:\
	:DL=^X:\	:L_DL=<CTRL-X>:\
	:ESC=\E\E:\	:L_ESC=<ESC> <ESC>:\
	:bt=\E2:\	:L_bt=<ESC> 2:\
	:fk0=:	:L_fk9=<F9>:\
	:fk1=\E[q:	:L_fk9=<F2>:\
	:fk2=\E[r:	:L_fk9=<F3>:\
	:fk3=\E[s:	:L_fk9=<F4>:\
	:fk4=\E[t:	:L_fk9=<F5>:\
	:fk5=\E[u:	:L_fk9=<F6>:\
	:fk6=\E[v:	:L_fk9=<F7>:\
	:fk7=\E[w:	:L_fk9=<F8>:\
	:fk8=\E[p:	:L_fk9=<F1>:\
	:fk9=:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
# HP 2392 and 700 series
#
# June 1, 1994.
#
# Note that there is a binary flag xhp that must be used with any Hewlett
# Packard terminal that is a block mode terminal.  Function keys are
# defined in the Initialization string (is).  Function key labels
# are defined in the Si and appear in the blocks at the base of the
# terminal screen.
#
# is:  the \EH\EJ is the command to clear the screen.
# is:  Has \E&jB - Enable function keys and function key label display
# is & Se: Has \E&j@ - Turn off PROGRESS fn key label on the way out.
#
# This Terminal Is Unsupported By Progress.
hp|2392|2392a|2392A|hp2392|hp2392A|hp 2392|2622 series:\
        :co#80:\
        :li#24:\
        :cl=\EH\EJ:\
        :up=\EA:\
        :is=\EH\EJ\E&j@\E&jB:\
        :Si=\E&f2a1k2d2LGO\Ep\
            \E&f2a2k4d2LHELP\Eq\
            \E&f2a3k4d2LMENU\Er\
            \E&f2a4k3d2LEND\Es\
            \E&f2a5k4d2LOPEN\Et\
            \E&f2a6k4d2LSAVE\Eu\
            \E&f2a7k6d2LRECALL\Ev\
            \E&f2a8k5d2LCLOSE\Ew\
            \Ek\E&jB\E&s1A\E&s1g1H:\
        :Se=\E&j@:\
        :CA:\
        :xs:\
        :xhp:\
        :ug#1:\
        :sg#1:\
        :cd=\EJ:ce=\EK:\
        :cv=\E&a%dY:\
        :ch=\E&a%dC:\
        :cm=\E&a%dy%dC:\
        :im=\EQ:ml=\El:mu=\Em:\
        :ue=\E&d@:us=\E&dD:\
        :al=\EL:am:bs:\
        :da:db:\
        :dc=\EP:\
        :dl=\EM:\
        :do=\EB:\
        :ei=\ER:\
        :ke=\E&s0A:ks=\E&s1A:\
        :kb=^H:\
        :kh=\Eh:\
        :kd=\EB:kl=\ED:\
        :kr=\EC:ku=\EA:\
        :mi:nd=\EC:pt:\
        :se=\E&d@:so=\E&dB:\
        :BACKSPACE(BACKSPACE)=\010:\
        :GO(F1)=\Ep\r:\
        :HELP(F2)=\Eq\r:\
        :ENTER-MENUBAR(F3)=\Er\r:\
        :END-ERROR(F4)=\Es\r:\
        :GET(F5)=\Et\r:\
        :PUT(F6)=\Eu\r:\
        :RECALL(F7)=\Ev\r:\
        :CLEAR(F8)=\Ew\r:\
        :PAGE-UP(PREV-SCRN)=\005:\
        :PAGE-DOWN(NEXT-SCRN)=\014:\
        :RETURN(RETURN)=\012:\
        :DELETE-CHARACTER(DELETE)=\177:\
        :DELETE-CHARACTER(DELETE-CHAR)=\EP:\
        :STOP(CANCEL)=\177:\
	:PAGE-UP(ESC-UP-ARROW)=\E\EA:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\EB:\
        :LEFT-END(ESC-LEFT-ARROW)=\E\ED:\
        :RIGHT-END(ESC-RIGHT-ARROW)=\E\EC:\
        :BE=^G:\
        :GS=^n:         :GE=^o:\
        :G1=W:          :G2=Q:\
        :G3=A:          :G4=S:\
        :GV=\072:       :GH=;:\
        :G5=W:          :G6=Q:\
        :G7=A:          :G8=S:\
        :GDH=9:         :GDV=):\
        :HS=\E&d@:      :HR=\E&d@:\
        :BB=\E&dA:      :BR=\E&d@:\
        :PU=^P:         :L_PU=<CTRL-P>:\
        :PD=^D:         :L_PD=<CTRL-D>:\
        :kh=\Eh:        :L_kh=<ESC-h>:\
        :EN=\Ee:        :L_EN=<ESC-e>:\
        :ki=\EQ:        :L_ki=<Insert>:\
        :DL=\EP:        :L_DEL=<ESC-P>:\
        :bc=^r:         :L_bc=<CTRL-r>:\
        :bt=\Eb:        :L_bt=<ESC-b>:\
	:fk1=\Eq\r:	:L_fk1=<F2>:\
	:fk2=\Er\r:	:L_fk2=<F3>:\
	:fk3=\Es\r:	:L_fk3=<F4>:\
	:fk4=\Et\r:	:L_fk4=<F5>:\
	:fk5=\Eu\r:	:L_fk5=<F6>:\
	:fk6=\Ev\r:	:L_fk6=<F7>:\
	:fk7=\Ew\r:	:L_fk7=<F8>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^y:      :L_Akp=Ctrl-Y:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
        :tc=v7kf:
#
# Unix 386 console
# This entry will work with the console on ISC UNIX and most PC type
# machines running unix or xenix for the 80386 chip.  Other ANSI devices
# will support some subset of the output strings.  Key strings will vary
# from device to device.
# This Terminal Is Unsupported By Progress.
u386|unix386:\
	:is=\E[5m\E[m:\
	:co#80: 	:li#25: 	:CA:\
	:nd=\E[C:	:do=\E[B:	:cl=\E[2J\E[H:	:cm=\E[%i%d;%dH:\
	:so=\E[7m:	:se=\E[m:	:us=\E[4m:	:ue=\E[m:\
	:GS=\E[12m:	:GE=\E[10m:\
	:G1=?:		:G2=Z:		:G3=@:		:G4=Y:\
	:GC=E:		:GD=B:		:GH=D:		:GL=\064:\
	:GR=C:		:GU=A:		:GV=\063:\
	:G5=;: 		:G6=I: 		:G7=H: 		:G8=<:\
	:Gc=N:		:Gd=K:		:Gh=M:		:Gl=9:\
	:Gr=L:		:Gu=J:		:Gv=\072:\
	:HS=\E[1m:	:HR=\E[m:	:BB=\E[5m:	:BR=\E[m:\
	:al=\E[L:\
	:am:\
	:bs:\
	:cd=\E[J:\
	:ce=\E[K:\
	:cl=\E[H\E[J:\
	:cm=\E[%i%d;%dH:\
	:co#80:\
	:dc=\E[P:\
	:dl=\E[M:\
	:dn=\E[B:\
	:ho=\E[H:\
	:ic=\E[@:\
	:li#25:\
	:nd=\E[C:\
	:ms:\
	:pt:\
	:so=\E[7m:\
	:se=\E[m:\
	:us=\E[7m:\
	:ue=\E[m:\
	:up=\E[A:\
	:kb=^h:\
	:ku=\E[A:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:GS=\E[12m:\
	:GE=\E[10m:\
	:GV=\263:\
	:GH=D:\
	:G1=?:\
	:G2=Z:\
	:G3=\@:\
	:G4=Y:\
	:COLOR 5=\E[30m\E[44m:\E[37m\E[40m:\
	:COLOR 6=\E[34m\E[47m:\E[37m\E[40m:\
	:COLOR 7=\E[32m\E[44m:\E[37m\E[40m:\
	:COLOR 8=\E[36m\E[44m:\E[37m\E[40m:\
	:COLOR 9=\E[31m\E[44m:\E[37m\E[40m:\
	:COLOR 10=\E[35m\E[44m:\E[37m\E[40m:\
	:COLOR 11=\E[33m\E[44m:\E[37m\E[40m:\
	:COLOR 12=\E[37m\E[44m:\E[37m\E[40m:\
	:COLOR 13=\E[37m\E[40m:\E[37m\E[40m:\
	:COLOR 14=\E[37m\E[44m:\E[37m\E[40m:\
	:COLOR 15=\E[34m\E[47m:\E[37m\E[40m:\
	:COLOR 16=\E[37m\E[44m\E[1m:\E[37m\E[40m\E[m:\
	:COLOR 17=\E[31m\E[40m\E[5m:\E[37m\E[40m\E[m:\
	:COLOR 18=\E[31m\E[40m:\E[37m\E[40m:\
	:COLOR 19=\E[36m\E[44m:\E[37m\E[40m:\
	:COLOR 20=\E[30m\E[46m:\E[37m\E[40m:\
	:GO(F1)=^[OP:\
	:HELP(F2)=^[OQ:\
	:BACKSPACE(BACKSPACE)=^H:\
	:ENTER-MENUBAR(F3)=^[OR:\
	:END-ERROR(F4)=^[OS:\
	:GET(F5)=^[OT:\
	:PUT(F6)=^[OU:\
	:RECALL(F7)=^[OV:\
	:CLEAR(F8)=^[OW:\
	:INSERT-MODE(F9)=^[OX:\
	:CUT(F10)=^[OY:\
	:COPY(F11)=^[OZ:\
	:PASTE(F12)=^[OA:\
	:FIND(F13)=^F:\
	:BLOCK(F14)=^V:\
	:HOME(HOME)=^[[H:\
	:PAGE-UP(PREV-SCRN)=^Y:\
	:INSERT-MODE(INSERT)=^T:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:kh=\E[H:	:L_kh=<Home>:\
	:EN=\E[Y:	:L_EN=<End>:\
	:PU=\E[V:	:L_PU=<PgUp>:\
	:PD=\E[U:	:L_PD=<PgDn>:\
	:ki=\E[@:	:L_ki=<Insert>:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\E[z:	:L_bt=<SHIFT-Tab>:\
	:fk0=\EOP:	:L_fk0=<F1>:\
	:fk1=\EOQ:	:L_fk1=<F2>:\
	:fk2=\EOR:	:L_fk2=<F3>:\
	:fk3=\EOS:	:L_fk3=<F4>:\
	:fk4=\EOT:	:L_fk4=<F5>:\
	:fk5=\EOU:	:L_fk5=<F6>:\
	:fk6=\EOV:	:L_fk6=<F7>:\
	:fk7=\EOW:	:L_fk7=<F8>:\
	:fk8=\EOX:	:L_fk8=<F9>:\
	:fk9=\EOY:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:
#
#
#
# Graphics characters are controlled by GV,GH (Vertical and Horizontal)
# HS and HR are the highlight ON and highlight OFF.
# BB and BR are the Blink ON and Blink OFF.
# Updated 11-28-1994	RPT
#
# This Terminal Is Unsupported By Progress.
aixterm|This is for the ibm6091 19inch bitmapped terminal:\
        :al=\E[L:cr=^M:do=^J:sf=^J:bl=^G:am:le=^H:cd=\E[J:\
        :ce=\E[K:cl=\E[H\E[2J:cm=\E[%i%d;%dH:co#80:li#24:\
        :dc=\E[P:dl=\E[M:ho=\E[H:kn=\r:\
        :ic=\E[@:im=\E6:ei=\E6:\
        :md=\E[1m:mr=\E[7m:mb=\E[5m:mk=\E[8m:me=\E[0m:\
        :ku=\E[A:kd=\E[B:kl=\E[D:kr=\E[C:kh=\E[H:kb=^H:\
        :nd=\E[C:ta=^I:up=\E[A:xo:\
        :ue=\E[m:us=\E[4m:se=\E[m:so=\E[7m:\
        :GV=\263:       :GH=\304:\
        :G1=\277:       :G2=\332:       :G3=\300:       :G4=\331:\
        :GDV=\272:      :GDH=\315:\
        :GD1=\273:      :GD2=\311:      :GD3=\310:      :GD4=\274:\
        :HS=\E[1m:      :HR=\E[0m:      :BB=\E[5m:      :BR=\E[0m:\
        :GO(F1)=\E[001q:\
        :HELP(F2)=\E[002q:\
        :ENTER-MENUBAR(F3)=\E[003q:\
        :END-ERROR(F4)=\E[004q:\
        :GET(F5)=\E[005q:\
        :PUT(F6)=\E[006q:\
        :RECALL(F7)=\E[007q:\
        :CLEAR(F8)=\E[008q:\
        :INSERT-MODE(F9)=\E[009q:\
	:CUT(F10)=\E[010q:\
	:COPY(F11)=\E[011q:\
	:PASTE(F12)=\E[012q:\
        :HOME(HOME)=\E[H:\
        :END(END)=\E[146q:\
        :DELETE(DELETE)=\E[P:\
        :INSERT-MODE(INSERT)=\E[139q:\
	:BACK-TAB(SHIFT-TAB)=\E[Z:\
	:PAGE-UP(PAGE-UP)=\E[150q:\
	:PAGE-DOWN(PAGE-DOWN)=\E[154q:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:fk0=\E[001q:	:L_fk0=<F1>:\
	:fk1=\E[002q:	:L_fk1=<F2>:\
	:fk2=\E[003q:	:L_fk2=<F3>:\
	:fk3=\E[004q:	:L_fk3=<F4>:\
	:fk4=\E[005q:	:L_fk4=<F5>:\
	:fk5=\E[006q:	:L_fk5=<F6>:\
	:fk6=\E[007q:	:L_fk6=<F7>:\
	:fk7=\E[008q:	:L_fk7=<F8>:\
	:fk8=\E[009q:	:L_fk8=<F9>:\
	:fk9=\E[010q:	:L_fk9=<F10>:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
        :tc=v7kf:
#
#
#
# Somehow the Ansi definition for graphics characters has changed
# between SCO v3.2 and SCO OpenServer5.  The following attempts to
# correct these differences, however, there are still some issues:
#	- the underscore character doesn't work but it never did
#	  for ansi terminals.
#	- the SCO terminal emulator doesn't seem to only allow anything
#	  but blinking when the graphics mode is on.  This is probably
#	  a SCO OpenServer5 ansi console terminal emulation bug.
#
# For OpenServer5 customers, the following can be done as an alternative
# to having to change "TERM=ansi" to "TERM="ansi-os5" every time they
# log in:
#	- rename "ansi" to "ansi-old"
#	- rename "ansi-os5" to "ansi"
#	- rename ":tc=ansi:", which appears under the original "ansi-os5"
#	  list, to ":tc=ansi-old:".
# These fixes will allow OpenServer5 customers to use TERM=ansi on the console.
#
ansi-os5|ansi entry for SCO OpenServer5:\
 	:BB=\E[5m:\
 	:G1=?:\
 	:G2=Z:\
 	:G3=@:\
 	:G4=Y:\
 	:GV=\E[12m3:\
 	:GH=D:\
 	:GS=\E[12m:\
 	:GE=\E[10m:\
	:tc=ansi:
#
#linux
linux|linux-lat|linux console:\
        :START-RESIZE(ESC-1)=\E1:\
        :GO(F1)=\E[[A:\
	:GO(CTRL-X)=^x:\
        :HELP(F2)=\E[[B:\
        :ENTER-MENUBAR(F3)=\E[[C:\
        :END-ERROR(F4)=\E[[D:\
	:GET(F5)=\E[[E:\
	:PUT(F6)=\E[17~:\
        :RECALL(F7)=\E[18~:\
        :CLEAR(F8)=\E[19~:\
	:CLEAR(CTRL-Z)=^z:\
	:INSERT-MODE(CTRL-T)=^t:\
        :CUT(F10)=\E[21:\
        :COPY(F11)=\E[23:\
        :PASTE(F12)=\E[24:\
	:BACKSPACE(BACKSPACE)=^?:\
	:HOME(HOME)=\E[1~:\
	:DELETE(DELETE)=\E[3~:\
	:END(END)=\E[4~:\
	:PAGE-UP(PAGE-UP)=\E[5~:\
	:PAGE-DOWN(PAGE-DOWN)=\E[6~:\
	:BLOCK(CTRL-V)=^v:\
	:HOME(ESC-<)=\E<:\
	:END(ESC->)=\E>:\
	:is=\E>\E[?3l\E[?4l\E[m\E[?7h\E[?8h\E(B\E)0:\
	:nd=2\E[C:\
	:do=\E[B:\
	:cl=50\E[;H\E[2J:\
	:cm=5\E[%i%d;%dH:\
	:so=2\E[7m:\
	:DELETE-COLUMN(ESC-CTRL-Z)=\E[4:\
	:se=2\E[m:\
	:us=2\E[7m:\
	:ue=2\E[m:\
	:GS=^N:\
	:GE=^O:\
	:G1=k:\
	:G2=l:\
	:G3=m:\
	:G4=j:\
	:GC=n:\
	:GD=w:\
	:GH=q:\
	:GL=u:\
	:GR=t:\
	:GU=v:\
	:GV=x:\
	:HS=2\E[1m:\
	:HR=2\E[m:\
	:BB=2\E[5m:\
	:BR=2\E[m:\
	:ks=\E[?1h\E=:\
	:ke=\E[?1l\E>:\
	:cd=10\E[J:\
	:ce=10\E[K:\
	:co#80:\
	:kd=\E[B:\
	:kl=\E[D:\
	:kr=\E[C:\
	:ku=\E[A:\
	:li#24:\
	:up=\E[A:\
	:xi:\
	:cs=\E[%i%d;%dr:\
	:sr=\EM:\
	:sf=\n:\
	:GO(PF1)=\EOP:\
	:HELP(PF2)=\EOQ:\
	:ENTER-MENUBAR(PF3)=\EOR:\
	:END-ERROR(PF4)=\EOS:\
	:PAGE-UP(ESC-UP-ARROW)=\E\E[A:\
	:PAGE-DOWN(ESC-DOWN-ARROW)=\E\E[B:\
	:LEFT-END(ESC-LEFT-ARROW)=\E\E[D:\
	:RIGHT-END(ESC-RIGHT-ARROW)=\E\E[C:\
	:ku=\E[A:	:L_ku=<Up>:\
	:kd=\E[B:	:L_kd=<Down>:\
	:kr=\E[C:	:L_kr=<Right>:\
	:kl=\E[D:	:L_kl=<Left>:\
	:bc=\177:       :.L_bc:\
	:kh=\Eh:	:L_kh=<ESC> h:\
	:EN=\Ee:	:L_EN=<ESC> e:\
	:PU=^U: 	:L_PU=<CTRL-U>:\
	:PD=^K: 	:L_PD=<CTRL-D>:\
	:ki=\Ei:	:L_ki=<ESC> i:\
	:DL=^X: 	:L_DL=<CTRL-X>:\
	:ESC=\E\E:	:L_ESC=<ESC> <ESC>:\
	:bt=\Eb:	:L_bt=<ESC> b:\
	:fk4=\EOP:	:L_fk4=<PF1>:\
	:fk1=\EOQ:	:L_fk1=<PF2>:\
	:fk2=\EOR:	:L_fk2=<PF3>:\
	:fk3=\EOS:	:L_fk3=<PF4>:\
	:fk5=\E6:	:L_fk5=<ESC> 6:\
	:fk6=\E7:	:L_fk6=<ESC> 7:\
	:fk7=\E8:	:L_fk7=<ESC> 8:\
        :Aka=^k:      :L_Aka=Ctrl-K:\
        :Akd=^z:      :L_Akd=Ctrl-Z:\
        :Akp=^r:      :L_Akp=Ctrl-R:\
        :Aks=^l:      :L_Aks=Ctrl-L:\
        :Aku=\Em:      :L_Aku=Esc-M:\
        :Akw=^g:      :L_Akw=Ctrl-G:\
        :Aki=^e:      :L_Aki=Ctrl-E:\
	:tc=v7kf:



================================================
FILE: odbc/progress/jre
================================================
This platform ships JRE



================================================
FILE: odbc/progress/juniper
================================================
[Binary file]


================================================
FILE: odbc/progress/namesvr
================================================
[Binary file]


================================================
FILE: odbc/progress/perl
================================================
[Binary file]


================================================
FILE: odbc/progress/pmame
================================================
[Binary file]


================================================
FILE: odbc/progress/progress.cfg
================================================
[Binary file]


================================================
FILE: odbc/progress/proinst
================================================
#!/bin/sh
# /*************************************************************/
# /* Copyright (c) 1993-2011 by Progress Software Corporation  */
# /*                                                           */
# /* All rights reserved.  No part of this program or document */
# /* may be  reproduced in  any form  or by  any means without */
# /* permission in writing from Progress Software Corporation. */
# /*************************************************************/
#
# proinst - file to initiate CDROM installation by copying all scripts
# from the CDROM filesystem to the users current directory.
#

# Assign args if they exist
option1=$1
option2=$2
option3=$3
option4=$4
option5=$5

# set home location
home=`pwd`;export home

mountdir=`dirname $0`;export mountdir

# Convert mountdir to an absolute path if it is a relative path
FULLPATH=`echo $mountdir | grep "^/"`
if [ "x$FULLPATH" = "x" ]
then
    prevdir=`pwd`
    cd $mountdir
    mountdir=`pwd`
    cd $prevdir
fi

cfg_file=`ls $mountdir/*.cfg|head -1`
cfg_file=`basename $cfg_file`
if [ "$mountdir" = "." ]
then
 echo "You may not run this installation from $home.  Change to another"
 echo "directory and type $home/proinst to start the installation."
 exit
elif [ -f *.cfg ]
then
 echo "A version of `ls *.cfg` has been detected in your current"
 echo "working directory. You may not run this installation from a"
 echo "directory containing a Progress installation. Change to another"
 echo "directory and type $mountdir/proinst to start the installation."
exit
else
 cp $mountdir/proinst .
 cp $mountdir/_ovrly .
 cp $mountdir/install.tab .
 cp $mountdir/*.cfg .
 cp $mountdir/itermcap .
 cp $mountdir/installd.ini . 
 cp $mountdir/intlsets.txt .
 cp $mountdir/proupdt .
 if test -r $mountdir/Readme.txt
    then
        cp $mountdir/Readme.txt ./README.TXT
    else
        cp $mountdir/README.TXT .
 fi
 cp $mountdir/inst_hlp .
fi

#list of temporary files to remove should we need to
tempfiles="proinst _ovrly installd.ini install.tab $cfg_file Readme.txt README.TXT itermcap intlsets.txt proupdt inst_hlp";export tempfiles

# set up a trap to remove all temporary installation files 
trap 'sig=$?
 if [ $sig -ne 0 ]
 then
  echo "Cleaning up temporary files..."
  cd $home
  rm -rf $tempfiles
 else
  cd $home
  rm -rf $tempfiles
 fi
 exit
' 0 1 2 3 10 13 15

# setup PROTERMCAP to point at local protermcap
PROTERMCAP=$home/itermcap;export PROTERMCAP

# setup HHPATH for Help
HHPATH=$home;export HHPATH
HOHPATH=$home;export HOHPATH

# run the installation executable
#
# NOTE: $mountdir command line argument to the installation
# executable is needed to find the archives on the CDROM disk.

# Unload all object files with load and use counts of zero on AIX systems
machid=`uname`
cmd=/usr/sbin/slibclean
[ "x$machid" = "xAIX" ] && [ -f $cmd ] && $cmd > /dev/null 2>&1

$mountdir/_ovrly $mountdir $option1 $option2 $option3 $option4 $option5




================================================
FILE: odbc/progress/proupdt
================================================
#!/bin/sh
# /*************************************************************/
# /* Copyright (c) 1993 by Progress Software Corporation       */
# /*                                                           */
# /* All rights reserved.  No part of this program or document */
# /* may be  reproduced in  any form  or by  any means without */
# /* permission in writing from Progress Software Corporation. */
# /*************************************************************/
#
# proupdt -  script to update installed configuration
#

# set home location
home=`pwd`;export home

# setup PROTERMCAP to point at local protermcap 
PROTERMCAP=$home/protermcap;export PROTERMCAP

# setup HHPATH for Help
HHPATH=$home;export HHPATH
HOHPATH=$home;export HOHPATH

# run installation executable
./_ovrly -u 



================================================
FILE: odbc/progress/secclnt
================================================
[Binary file]


================================================
FILE: odbc/progress/seccmn
================================================
[Binary file]


================================================
FILE: odbc/progress/sqlcom
================================================
[Binary file]


================================================
FILE: odbc/progress/sqljdbc
================================================
[Binary file]


================================================
FILE: odbc/progress/wscmn
================================================
[Binary file]


================================================
FILE: scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -rm -t $COMP_TAG ../

echo Running component...
Write-host "Would you like to use default data folder? (../data)" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes use: " (join-path (Split-Path -Path (Get-Location).Path) "data"); $DATA_PATH = (join-path (Split-Path -Path (Get-Location).Path) "data") } 
       N {Write-Host "No, I'll specify myself"; $DATA_PATH = Read-Host -Prompt 'Input data folder path:'} 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 

Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 





================================================
FILE: scripts/build_n_test.sh
================================================
#!/bin/sh
set -e

flake8 --config=flake8.cfg
python -m unittest discover


================================================
FILE: scripts/run.bat
================================================
@echo off

echo Running component...
docker run -v %cd%:/data -e KBC_DATADIR=/data comp-tag


================================================
FILE: scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test



================================================
FILE: scripts/update_dev_portal_properties.sh
================================================
#!/usr/bin/env bash

set -e
# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest


# Update properties in Keboola Developer Portal
echo "Updating long description"
value=`cat component_config/component_long_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} longDescription --value="$value"
else
    echo "longDescription is empty!"
    exit 1
fi

echo "Updating config schema"
value=`cat component_config/configSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationSchema --value="$value"
else
    echo "configurationSchema is empty!"
fi

echo "Updating row config schema"
value=`cat component_config/configRowSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationRowSchema --value="$value"
else
    echo "configurationRowSchema is empty!"
fi


echo "Updating config description"

value=`cat component_config/configuration_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationDescription --value="$value"
else
    echo "configurationDescription is empty!"
fi


echo "Updating short description"

value=`cat component_config/component_short_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} shortDescription --value="$value"
else
    echo "shortDescription is empty!"
    exit 1
fi


================================================
FILE: src/OdbcApplication.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor;

use Keboola\DbExtractor\Configuration\OdbcDbNode;
use Keboola\DbExtractor\Exception\UserException;
use Keboola\DbExtractorConfig\Config;
use Keboola\DbExtractorConfig\Configuration\ActionConfigRowDefinition;
use Keboola\DbExtractorConfig\Configuration\ConfigRowDefinition;
use Keboola\DbExtractorConfig\Configuration\GetTablesListFilterDefinition;

class OdbcApplication extends Application
{
    protected function loadConfig(): void
    {
        $config = $this->getRawConfig();
        $action = $config['action'] ?? 'run';

        $config['parameters']['extractor_class'] = 'OdbcExtractor';
        $config['parameters']['data_dir'] = $this->getDataDir();

        $dbNode = new OdbcDbNode();
        if ($this->isRowConfiguration($config)) {
            if ($action === 'run') {
                $this->config = new Config($config, new ConfigRowDefinition($dbNode));
            } elseif ($config['action'] === 'getTables') {
                // Tables and columns can be loaded separately
                $this->config = new Config($config, new GetTablesListFilterDefinition($dbNode));
            } else {
                $this->config = new Config($config, new ActionConfigRowDefinition($dbNode));
            }
        } else {
            throw new UserException('The old configuration format is not supported. Please use config rows.');
        }
    }
}



================================================
FILE: src/OdbcDsnFactory.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor;

use Keboola\DbExtractor\Configuration\OdbcDatabaseConfig;

class OdbcDsnFactory
{
    public const ODBC_DRIVER_NAME = 'Progress';

    public function create(OdbcDatabaseConfig $dbConfig): string
    {
        // ServerName is additional connection parameter required by Informix
        $dsn = sprintf(
            'Driver={%s};Host=%s;Port=%s;DB=%s',
            self::ODBC_DRIVER_NAME,
            $dbConfig->getHost(),
            $dbConfig->getPort(),
            $dbConfig->getDatabase()
        );

        return $dsn;
    }
}



================================================
FILE: src/run.php
================================================
<?php

declare(strict_types=1);

use Keboola\CommonExceptions\UserExceptionInterface;
use Keboola\Component\Logger;
use Keboola\DbExtractor\OdbcApplication;

require __DIR__ . '/../vendor/autoload.php';

$logger = new Logger();
try {
    $app = new OdbcApplication($logger);
    $app->execute();
    exit(0);
} catch (UserExceptionInterface $e) {
    $logger->error($e->getMessage());
    exit(1);
} catch (Throwable $e) {
    $logger->critical(
        get_class($e) . ':' . $e->getMessage(),
        [
            'errFile' => $e->getFile(),
            'errLine' => $e->getLine(),
            'errCode' => $e->getCode(),
            'errTrace' => $e->getTraceAsString(),
            'errPrevious' => is_object($e->getPrevious()) ? get_class($e->getPrevious()) : '',
        ]
    );
    exit(2);
}



================================================
FILE: src/Configuration/OdbcDatabaseConfig.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Configuration;

use Keboola\DbExtractorConfig\Configuration\ValueObject\DatabaseConfig;

/**
 * Value object that contains the configuration from the "db" node.
 */
class OdbcDatabaseConfig extends DatabaseConfig
{
    public static function fromArray(array $data): self
    {
        return new self(
            $data['host'],
            $data['port'] ? (string) $data['port'] : null,
            $data['user'],
            $data['#password'],
            $data['database'] ?? null,
            $data['schema'] ?? null,
        );
    }

    public function __construct(
        string $host,
        ?string $port,
        string $username,
        string $password,
        ?string $database,
        ?string $schema
    ) {
        parent::__construct($host, $port, $username, $password, $database, $schema, null, []);
    }
}



================================================
FILE: src/Configuration/OdbcDbNode.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Configuration;

use Keboola\DbExtractorConfig\Configuration\NodeDefinition\DbNode;
use Symfony\Component\Config\Definition\Builder\NodeBuilder;

/**
 * Definition of the "db" configuration node.
 */
class OdbcDbNode extends DbNode
{
    protected function init(NodeBuilder $builder): void
    {
        parent::init($builder);
    }

    protected function addHostNode(NodeBuilder $builder): void
    {
        $builder->scalarNode('host')->cannotBeEmpty()->isRequired();
    }

    protected function addDatabaseNode(NodeBuilder $builder): void
    {
        $builder->scalarNode('database')->cannotBeEmpty()->isRequired();
    }

    protected function addPortNode(NodeBuilder $builder): void
    {
        $builder->scalarNode('port')->cannotBeEmpty()->isRequired();
    }
}



================================================
FILE: src/Extractor/OdbcConnection.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Extractor;

class OdbcConnection extends \Keboola\DbExtractor\Adapter\ODBC\OdbcConnection
{
    use QuoteTrait;
    use QuoteIdentifierTrait;

    public function testConnection(): void
    {
        // SELECT 1 is not working in some Informix databases
        $this->query("SELECT * FROM PUB.\"_File\" where \"_Tbl-Type\" = 'S'", 1);
    }
}



================================================
FILE: src/Extractor/OdbcExtractor.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Extractor;

use InvalidArgumentException;
use Keboola\DbExtractor\Adapter\ExportAdapter;
use Keboola\DbExtractor\Adapter\Metadata\MetadataProvider;
use Keboola\DbExtractor\Adapter\ODBC\OdbcExportAdapter;
use Keboola\DbExtractor\Adapter\ResultWriter\DefaultResultWriter;
use Keboola\DbExtractor\Configuration\OdbcDatabaseConfig;
use Keboola\DbExtractor\Exception\UserException;
use Keboola\DbExtractor\Metadata\OdbcManifestSerializer;
use Keboola\DbExtractor\Metadata\OdbcMetadataProviderFactory;
use Keboola\DbExtractor\OdbcDsnFactory;
use Keboola\DbExtractor\TableResultFormat\Exception\ColumnNotFoundException;
use Keboola\DbExtractor\TableResultFormat\Metadata\Manifest\ManifestSerializer;
use Keboola\DbExtractorConfig\Configuration\ValueObject\DatabaseConfig;
use Keboola\DbExtractorConfig\Configuration\ValueObject\ExportConfig;

class OdbcExtractor extends BaseExtractor
{
    protected OdbcConnection $connection;

    public function testConnection(): void
    {
        $this->connection->testConnection();
    }

    protected function createConnection(DatabaseConfig $dbConfig): void
    {
        if (!$dbConfig instanceof OdbcDatabaseConfig) {
            throw new InvalidArgumentException('Expected OdbcDatabaseConfig.');
        }

        $dsnFactory = new OdbcDsnFactory();
        $dsn = $dsnFactory->create($dbConfig);

        $connectRetries = $this->isSyncAction() ? 1 : OdbcConnection::CONNECT_DEFAULT_MAX_RETRIES;
        $this->connection = new OdbcConnection(
            $this->logger,
            $dsn,
            $dbConfig->getUsername(),
            $dbConfig->getPassword(),
            null,
            $connectRetries
        );
    }

    protected function createExportAdapter(): ExportAdapter
    {
        $queryFactory = new OdbcQueryFactory($this->state);
        $resultWriter = new DefaultResultWriter($this->state);
        $resultWriter->setIgnoreInvalidUtf8();
        return new OdbcExportAdapter(
            $this->logger,
            $this->connection,
            $queryFactory,
            $resultWriter,
            $this->dataDir,
            $this->state
        );
    }

    public function getMetadataProvider(): MetadataProvider
    {
        $factory = new OdbcMetadataProviderFactory($this->connection, $this->getDatabaseConfig());
        return $factory->create();
    }

    protected function getManifestMetadataSerializer(): ManifestSerializer
    {
        return new OdbcManifestSerializer();
    }

    protected function validateIncrementalFetching(ExportConfig $exportConfig): void
    {
        // Check that incremental fetching column exists
        try {
            $this
                ->getMetadataProvider()
                ->getTable($exportConfig->getTable())
                ->getColumns()
                ->getByName($exportConfig->getIncrementalFetchingColumn());
        } catch (ColumnNotFoundException $e) {
            throw new UserException(
                sprintf(
                    'Column "%s" specified for incremental fetching was not found in the table.',
                    $exportConfig->getIncrementalFetchingColumn()
                )
            );
        }

        // Incremental loading should work with all available types.
        // If you need to restrict it, then validation should be added HERE.
    }

    protected function getMaxOfIncrementalFetchingColumn(ExportConfig $exportConfig): ?string
    {
        $sql = sprintf(
            'SELECT MAX(%s) as %s FROM %s.%s',
            $this->connection->quoteIdentifier($exportConfig->getIncrementalFetchingColumn()),
            $this->connection->quoteIdentifier($exportConfig->getIncrementalFetchingColumn()),
            $this->connection->quoteIdentifier($exportConfig->getTable()->getSchema()),
            $this->connection->quoteIdentifier($exportConfig->getTable()->getName())
        );
        $result = $this->connection->query($sql, $exportConfig->getMaxRetries())->fetchAll();
        return $result ? $result[0][$exportConfig->getIncrementalFetchingColumn()] : null;
    }


    protected function createDatabaseConfig(array $data): DatabaseConfig
    {
        return OdbcDatabaseConfig::fromArray($data);
    }

    protected function createMetadataProvider(): MetadataProvider
    {
        return $this->getMetadataProvider();
    }
}



================================================
FILE: src/Extractor/OdbcQueryFactory.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Extractor;

use Keboola\DbExtractor\Adapter\Query\DefaultQueryFactory;

/**
 * Generates SQL query when custom query is not used.
 */
class OdbcQueryFactory extends DefaultQueryFactory
{

}



================================================
FILE: src/Extractor/QuoteIdentifierTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Extractor;

trait QuoteIdentifierTrait
{
    /**
     * Database specific SQL quoting for identifiers
     */
    public function quoteIdentifier(string $str): string
    {
        return '"' . str_replace('"', '""', $str) . '"';
    }
}



================================================
FILE: src/Extractor/QuoteTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Extractor;

trait QuoteTrait
{
    /**
     * Database specific SQL quoting for values
     */
    public function quote(string $str): string
    {
        return "'" . str_replace("'", "''", $str) . "'";
    }
}



================================================
FILE: src/Metadata/OdbcDataType.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Metadata;

use Keboola\Datatype\Definition\GenericStorage;

/**
 * Converts the column's data type from the database
 * to the data type used in KBC, see: https://help.keboola.com/storage/tables/
 *
 * Often it is enough to use GenericStorage.
 * If necessary, the implementation goes to this class.
 */
class OdbcDataType extends GenericStorage
{

}



================================================
FILE: src/Metadata/OdbcManifestSerializer.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Metadata;

use Keboola\Datatype\Definition\Common;
use Keboola\DbExtractor\TableResultFormat\Metadata\Manifest\DefaultManifestSerializer;
use Keboola\DbExtractor\TableResultFormat\Metadata\ValueObject\Column;

/**
 * Generates a table's manifest file from the metadata objects.
 */
class OdbcManifestSerializer extends DefaultManifestSerializer
{
    protected function columnToDatatype(Column $column, array $options): Common
    {
        return new OdbcDataType($column->getType(), $options);
    }
}



================================================
FILE: src/Metadata/OdbcMetadataProviderFactory.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Metadata;

use Keboola\DbExtractor\Extractor\OdbcConnection;
use Keboola\DbExtractor\Adapter\Metadata\MetadataProvider;
use Keboola\DbExtractor\Adapter\ODBC\OdbcNativeMetadataProvider;
use Keboola\DbExtractorConfig\Configuration\ValueObject\DatabaseConfig;

class OdbcMetadataProviderFactory
{
    private OdbcConnection $connection;

    private DatabaseConfig $dbConfig;

    public function __construct(OdbcConnection $connection, DatabaseConfig $dbConfig)
    {
        $this->connection = $connection;
        $this->dbConfig = $dbConfig;
    }

    public function create(): MetadataProvider
    {
        return new OdbcNativeMetadataProvider($this->connection);
    }
}



================================================
FILE: tests/functional/DatabaseSetupManager.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\FunctionalTests;

use Keboola\DbExtractor\Tests\Traits\Tables\EscapingTableTrait;
use Keboola\DbExtractor\Tests\Traits\Tables\IncrementalTableTrait;
use Keboola\DbExtractor\Tests\Traits\Tables\SimpleTableTrait;

class DatabaseSetupManager
{
    use SimpleTableTrait;
    use EscapingTableTrait;
    use IncrementalTableTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    /**
     * @param resource $connection
     */
    public function __construct($connection)
    {
        $this->connection = $connection;
    }
}



================================================
FILE: tests/functional/DatadirTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\FunctionalTests;

use Keboola\Temp\Temp;
use PHPUnit\Framework\Assert;
use Symfony\Component\Filesystem\Filesystem;
use Throwable;
use RuntimeException;
use InvalidArgumentException;
use Keboola\DbExtractor\Tests\OdbcTestConnectionFactory;
use Keboola\DatadirTests\AbstractDatadirTestCase;
use Keboola\DatadirTests\DatadirTestSpecificationInterface;
use Keboola\DatadirTests\DatadirTestsProviderInterface;
use Keboola\DbExtractor\Tests\Traits\CloseSshTunnelsTrait;
use Keboola\DbExtractor\Tests\Traits\DefaultSchemaTrait;
use Keboola\DbExtractor\Tests\Traits\GetSshKeysTrait;
use Keboola\DbExtractor\Tests\Traits\RemoveAllTablesTrait;
use Symfony\Component\Finder\Finder;
use Symfony\Component\Process\Process;

class DatadirTest extends AbstractDatadirTestCase
{
    use GetSshKeysTrait;
    use CloseSshTunnelsTrait;
    use RemoveAllTablesTrait;
    use DefaultSchemaTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    protected string $testProjectDir;

    protected string $testTempDir;

    /**
     * @return resource ODBC connection resource
     */
    public function getConnection()
    {
        return $this->connection;
    }

    protected function setUp(): void
    {
        parent::setUp();

        // Test dir, eg. "/code/tests/functional/full-load-ok"
        $this->testProjectDir = $this->getTestFileDir() . '/' . $this->dataName();
        $this->testTempDir = $this->temp->getTmpFolder();

        // Create service connection
        $this->connection = OdbcTestConnectionFactory::createConnection();

        // Load setUp.php file - used to init database state
        $setUpPhpFile = $this->testProjectDir . '/setUp.php';
        if (file_exists($setUpPhpFile)) {
            // Get callback from file and check it
            $initCallback = require $setUpPhpFile;
            if (!is_callable($initCallback)) {
                throw new RuntimeException(sprintf('File "%s" must return callback!', $setUpPhpFile));
            }

            // Invoke callback
            $initCallback($this);
        }
    }

    protected function tearDown(): void
    {
        parent::tearDown();
        $this->closeSshTunnels();
        $this->removeAllTables();
    }

    /**
     * @return DatadirTestsProviderInterface[]
     */
    protected function getDataProviders(): array
    {
        return [
            new DatadirTestsProvider($this->getTestFileDir()),
        ];
    }

    /**
     * @dataProvider provideDatadirSpecifications
     */
    public function testDatadir(DatadirTestSpecificationInterface $specification): void
    {
        $tempDatadir = $this->getTempDatadir($specification);

        // Replace environment variables in config.json
        $configPath = $tempDatadir->getTmpFolder() . '/config.json';
        $this->replaceVariablesInFile($configPath);

        $process = $this->runScript($tempDatadir->getTmpFolder());
        $this->assertMatchesSpecification($specification, $process, $tempDatadir->getTmpFolder());
    }

    protected function assertMatchesSpecification(
        DatadirTestSpecificationInterface $specification,
        Process $runProcess,
        string $tempDatadir
    ): void {
        if ($specification->getExpectedReturnCode() !== null) {
            $this->assertProcessReturnCode($specification->getExpectedReturnCode(), $runProcess);
        } else {
            $this->assertNotSame(0, $runProcess->getExitCode(), 'Exit code should have been non-zero');
        }
        if ($specification->getExpectedStdout() !== null) {
            // Match format, not exact same
            $this->assertStringMatchesFormat(
                trim($specification->getExpectedStdout()),
                trim($runProcess->getOutput()),
                'Failed asserting stdout output'
            );
        }
        if ($specification->getExpectedStderr() !== null) {
            // Match format, not exact same
            $this->assertStringMatchesFormat(
                trim($specification->getExpectedStderr()),
                trim($runProcess->getErrorOutput()),
                'Failed asserting stderr output'
            );
        }
        if ($specification->getExpectedOutDirectory() !== null) {
            $this->assertDirectoryContentsSame(
                $specification->getExpectedOutDirectory(),
                $tempDatadir . '/out'
            );
        }
    }

    public function assertDirectoryContentsSame(string $expected, string $actual): void
    {
        // Copy expected dir to temp, so can be modified
        $fs = new Filesystem();
        $expectedTemp = new Temp();
        $fs->mirror($expected, $expectedTemp->getTmpFolder());

        try {
            // Manifest files generated in tests are:
            // 1. one-line JSON files
            //    -> so they are hard to read and compare in diff
            //    -> therefore they are prettified
            // 2. sometimes they contain a lot of metadata
            //    -> it is unclear
            //    -> therefore, we allow you to use wildcards instead of exact comparisons
            $this->prettifyAllManifests();
            $this->assertManifestsContentsSame($expectedTemp->getTmpFolder(), $actual);

            parent::assertDirectoryContentsSame($expectedTemp->getTmpFolder(), $actual);
        } finally {
            $expectedTemp->remove();
        }
    }

    protected function assertManifestsContentsSame(string $expectedDir, string $actualDir): void
    {
        foreach ($this->findManifests($actualDir) as $actualFile) {
            $expectedPath = str_replace($actualDir, $expectedDir, (string) $actualFile->getRealPath());
            $actualPath = (string) $actualFile->getRealPath();
            if (file_exists($expectedPath)) {
                $this->assertStringMatchesFormat(
                    trim((string) file_get_contents($expectedPath)),
                    (string) file_get_contents($actualPath),
                    $actualPath
                );

                // Files are compared and can be removed from temp dirs,
                // so they are no longer exactly matched
                unlink($expectedPath);
                unlink($actualPath);
            };
        }
    }

    protected function prettifyAllManifests(): void
    {
        foreach ($this->findManifests($this->testTempDir . '/out/tables') as $file) {
            $this->prettifyJsonFile((string) $file->getRealPath());
        }
    }

    protected function prettifyJsonFile(string $path): void
    {
        $json = (string) file_get_contents($path);
        try {
            file_put_contents($path, (string) json_encode(json_decode($json), JSON_PRETTY_PRINT));
        } catch (Throwable $e) {
            // If a problem occurs, preserve the original contents
            file_put_contents($path, $json);
        }
    }

    protected function findManifests(string $dir): Finder
    {
        $finder = new Finder();
        return $finder->files()->in($dir)->name(['~.*\.manifest~']);
    }

    protected function replaceVariablesInFile(string $path): void
    {
        if (file_exists($path)) {
            /** @var string $config */
            $config = file_get_contents($path);
            $config = preg_replace_callback(
            // Replace eg. "${DB_SERVER_NAME}" using replaceVariableInConfig function,
            // ... so config.json in data-dir test can be static, and is processed by this regexp.
                '~"\$\{([^{}]+)\}"~',
                fn($m) => $this->getVariable($m[1]),
                $config
            );
            file_put_contents($path, $config);
        }
    }

    protected function getVariable(string $variable): string
    {
        switch ($variable) {
            case 'SSH_PUBLIC_KEY':
                $value = $this->getPublicKey();
                break;

            case 'SSH_PRIVATE_KEY':
                $value = $this->getPrivateKey();
                break;

            case 'DEFAULT_SCHEMA':
                $value = $this->getDefaultSchema();
                break;

            default:
                $value = getenv($variable);
                if ($value === false) {
                    throw new InvalidArgumentException(sprintf('Env variable "%s" not found.', $variable));
                }
                break;
        }

        /** @var string $json */
        $json = json_encode($value);
        return $json;
    }
}



================================================
FILE: tests/functional/DatadirTestsProvider.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\FunctionalTests;

use Keboola\DatadirTests\DatadirTestsFromDirectoryProvider;
use Keboola\DatadirTests\DatadirTestSpecification;
use Keboola\DatadirTests\DatadirTestSpecificationInterface;
use Symfony\Component\Finder\SplFileInfo;

class DatadirTestsProvider extends DatadirTestsFromDirectoryProvider
{
    private string $testDirectory;

    /** @var DatadirTestSpecification[][] */
    protected array $datapoints;

    public function __construct(string $testDirectory = 'tests/functional')
    {
        parent::__construct($testDirectory);
        $this->testDirectory = $testDirectory;
    }

    /**
     * @return DatadirTestSpecificationInterface[][]
     */
    public function __invoke(): array
    {
        $this->datapoints = [];
        $this->processDirectory($this->testDirectory);
        return $this->datapoints;
    }

    protected function processOneTest(SplFileInfo $testSuite): void
    {
        $workingDirectory = $testSuite->getPathname();

        $name = $testSuite->getBasename();
        $sourceDatadirDirectory = $workingDirectory . '/source/data';
        $expectedStdoutFile = $workingDirectory . '/expected-stdout';
        $expectedStdout = null;
        $expectedStderrFile = $workingDirectory . '/expected-stderr';
        $expectedStderr = null;
        $expectedReturnCodeFile = $workingDirectory . '/expected-code';
        $expectedReturnCode = null;
        $expectedOutputDirectory = null;
        $outTemplateDir = $workingDirectory . '/expected/data/out';

        // Added, load stdout from file
        if (file_exists($expectedStdoutFile)) {
            $expectedStdout = (string) file_get_contents($expectedStdoutFile);
        }

        // Added, load stderr from file
        if (file_exists($expectedStderrFile)) {
            $expectedStderr = (string) file_get_contents($expectedStderrFile);
        }

        if (file_exists($expectedReturnCodeFile)) {
            $returnCode = trim((string) file_get_contents($expectedReturnCodeFile));
            if (preg_match('~^[012]$~', $returnCode)) {
                $expectedReturnCode = (int) $returnCode;
            } else {
                throw new \InvalidArgumentException(sprintf(
                    '%s: Expecting invalid return code (%s). Possible codes are: 0, 1, 2.',
                    $name,
                    $returnCode
                ));
            }
        }

        if (file_exists($outTemplateDir)) {
            if (is_null($expectedReturnCode)) {
                $expectedReturnCode = 0;
            }
            $expectedOutputDirectory = $outTemplateDir;
        }

        $this->datapoints[$name] = [
            new DatadirTestSpecification(
                $sourceDatadirDirectory,
                $expectedReturnCode,
                $expectedStdout,
                $expectedStderr,
                $expectedOutputDirectory
            ),
        ];
    }
}



================================================
FILE: tests/functional/full-load-error-column-not-found/expected-code
================================================
1



================================================
FILE: tests/functional/full-load-error-column-not-found/expected-stderr
================================================
%AColumn (invalid) not found%A




================================================
FILE: tests/functional/full-load-error-column-not-found/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Creating ODBC connection to %A
%AColumn (invalid) not found%A Retrying... [1x]%A
Creating ODBC connection to %A



================================================
FILE: tests/functional/full-load-error-column-not-found/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/full-load-error-no-port/expected-code
================================================
1



================================================
FILE: tests/functional/full-load-error-no-port/expected-stderr
================================================
%AThe child config "port" under "root.parameters.db" must be configured.%A



================================================
FILE: tests/functional/full-load-error-no-port/expected-stdout
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-error-table-not-found/expected-code
================================================
1



================================================
FILE: tests/functional/full-load-error-table-not-found/expected-stderr
================================================
[output]: DB query failed: %AThe specified table (%A.simple) is not in the database.%A Tried 2 times.



================================================
FILE: tests/functional/full-load-error-table-not-found/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Creating ODBC connection to %A
%AThe specified table (%A.simple) is not in the database.%A Retrying... [1x]%A
Creating ODBC connection to %A



================================================
FILE: tests/functional/full-load-error-table-not-found-escaping/expected-code
================================================
1



================================================
FILE: tests/functional/full-load-error-table-not-found-escaping/expected-stderr
================================================
[output]: DB query failed: %AThe specified table (%A."abc```") is not in the database.%A Tried 2 times.



================================================
FILE: tests/functional/full-load-error-table-not-found-escaping/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Creating ODBC connection to %A
%AThe specified table (%A."abc```") is not in the database.%A Retrying... [1x]%A
Creating ODBC connection to %A



================================================
FILE: tests/functional/full-load-ok/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/full-load-ok-columns/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok-columns/expected-stdout
================================================
Creating ODBC connection to %A
Exporting "config-row-1" to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-columns/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/full-load-ok-custom-query/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok-custom-query/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-custom-query/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/full-load-ok-empty/expected-stderr
================================================
Query returned empty result. Nothing was imported to "output".



================================================
FILE: tests/functional/full-load-ok-empty/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-empty/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    // empty, no rows
};



================================================
FILE: tests/functional/full-load-ok-escaping/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok-escaping/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-escaping/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createEscapingTable();
    $manager->generateEscapingTableRows();
};



================================================
FILE: tests/functional/full-load-ok-manifest/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok-manifest/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-manifest/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/full-load-ok-ssh/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/full-load-ok-ssh/expected-stdout
================================================
Creating SSH tunnel to 'sshproxy' on local port '33006'
Creating ODBC connection to %A127.0.0.1%A33006%A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/full-load-ok-ssh/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createSimpleTable();
    $manager->generateSimpleTableRows();
};



================================================
FILE: tests/functional/incremental-load-error-column-not-found/expected-code
================================================
1



================================================
FILE: tests/functional/incremental-load-error-column-not-found/expected-stderr
================================================
Column "invalid" specified for incremental fetching was not found in the table.



================================================
FILE: tests/functional/incremental-load-error-column-not-found/expected-stdout
================================================
Creating ODBC connection to %A



================================================
FILE: tests/functional/incremental-load-error-column-not-found/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-date/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-date/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-date/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-datetime/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-datetime/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-datetime/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-decimal/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-decimal/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-decimal/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-empty/expected-stderr
================================================
Query returned empty result. Nothing was imported to "output".



================================================
FILE: tests/functional/incremental-load-ok-empty/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-empty/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    // no rows
};



================================================
FILE: tests/functional/incremental-load-ok-int/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-int/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-int/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-limit/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-limit/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-limit/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-state/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-state/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-state/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-state-limit/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-state-limit/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-state-limit/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-state-no-change/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-state-no-change/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-state-no-change/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/incremental-load-ok-text/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/incremental-load-ok-text/expected-stdout
================================================
Creating ODBC connection to %A
Exporting to "output".
Extractor finished successfully.



================================================
FILE: tests/functional/incremental-load-ok-text/setUp.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\FunctionalTests\DatadirTest;
use Keboola\DbExtractor\FunctionalTests\DatabaseSetupManager;

return function (DatadirTest $test): void {
    $manager = new DatabaseSetupManager($test->getConnection());
    $manager->createIncrementalTable();
    $manager->generateIncrementalTableRows();
};



================================================
FILE: tests/functional/test-connection-invalid-host/expected-code
================================================
1



================================================
FILE: tests/functional/test-connection-invalid-host/expected-stderr
================================================
Connection failed: 'Error connecting to DB: %ACannot connect to database server%A'%A



================================================
FILE: tests/functional/test-connection-invalid-host/expected-stdout
================================================
[Empty file]


================================================
FILE: tests/functional/test-connection-invalid-server-name/expected-code
================================================
1



================================================
FILE: tests/functional/test-connection-invalid-server-name/expected-stderr
================================================
Connection failed: 'Error connecting to DB: %AINFORMIXSERVER does not match either DBSERVERNAME or DBSERVERALIASES.%A'%A



================================================
FILE: tests/functional/test-connection-invalid-server-name/expected-stdout
================================================
[Empty file]


================================================
FILE: tests/functional/test-connection-ok/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/test-connection-ok/expected-stdout
================================================
{"status":"success"}



================================================
FILE: tests/functional/test-connection-ok-protocol/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/test-connection-ok-protocol/expected-stdout
================================================
{"status":"success"}



================================================
FILE: tests/functional/test-connection-ok-ssh/expected-stderr
================================================
[Empty file]


================================================
FILE: tests/functional/test-connection-ok-ssh/expected-stdout
================================================
{"status":"success"}



================================================
FILE: tests/phpunit/BaseTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests;

use Keboola\DbExtractor\Tests\Traits\RemoveAllTablesTrait;
use Keboola\Temp\Temp;
use PHPUnit\Framework\TestCase;
use Symfony\Component\Process\Process;

abstract class BaseTest extends TestCase
{
    use RemoveAllTablesTrait;

    protected const ROOT_PATH = __DIR__ . '/../..';

    /** @var resource ODBC connection resource */
    protected $connection;

    protected Temp $temp;

    protected function setUp(): void
    {
        parent::setUp();
        $this->connection = OdbcTestConnectionFactory::createConnection();
        $this->temp = new Temp();
        $this->removeAllTables();
    }

    protected function tearDown(): void
    {
        parent::tearDown();
        $this->temp->remove();
        $this->removeAllTables();
    }

    protected function createAppProcess(array $config): Process
    {
        file_put_contents($this->temp->getTmpFolder() . '/config.json', json_encode($config));
        $process = Process::fromShellCommandline(
            'php ' . self::ROOT_PATH . '/src/run.php',
            null,
            ['KBC_DATADIR' => $this->temp->getTmpFolder()]
        );
        $process->setTimeout(300);
        return $process;
    }

    protected function getConfigDbNode(): array
    {
        return OdbcTestConnectionFactory::getDbConfigArray();
    }

    protected function getConfig(): array
    {
        return [
            'parameters' => [
                'db' => $this->getConfigDbNode(),
            ],
        ];
    }
}



================================================
FILE: tests/phpunit/bootstrap.php
================================================
<?php

declare(strict_types=1);

use Keboola\DbExtractor\Tests\OdbcTestConnectionFactory;

require __DIR__ . '/../../vendor/autoload.php';

OdbcTestConnectionFactory::waitForDatabase();



================================================
FILE: tests/phpunit/OdbcDriverTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests;

use PHPUnit\Framework\Assert;

class OdbcDriverTest extends BaseTest
{
    public function testOdbcDriverIsWorking(): void
    {
        $resource = odbc_exec($this->connection, 'SELECT 123 AS test');
        if (!$resource) {
            $this->fail();
        }

        Assert::assertSame(
            ['test' => '123'],
            odbc_fetch_array($resource)
        );
    }
}



================================================
FILE: tests/phpunit/OdbcTestConnectionFactory.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests;

use ErrorException;
use Keboola\DbExtractor\Configuration\OdbcDatabaseConfig;
use Keboola\DbExtractor\OdbcDsnFactory;
use RuntimeException;

class OdbcTestConnectionFactory
{
    public static function getDbConfigArray(): array
    {
        return [
            'user' => (string) getenv('DB_USER'),
            '#password' => (string) getenv('DB_PASSWORD'),
            'host' => (string) getenv('DB_HOST'),
            'serverName' => (string) getenv('DB_SERVER_NAME'),
            'protocol' => (string) getenv('DB_PROTOCOL'),
            'dbLocale' => (string) getenv('DB_LOCALE_VALUE'),
            'port' => (string) getenv('DB_PORT'),
            'database' => (string) getenv('DB_DATABASE'),
        ];
    }

    public static function createDbConfig(): OdbcDatabaseConfig
    {
        return OdbcDatabaseConfig::fromArray(self::getDbConfigArray());
    }

    public static function createDsn(): string
    {
        $dbConfig = self::createDbConfig();
        $dsnFactory = new OdbcDsnFactory();
        return $dsnFactory->create($dbConfig);
    }

    /** @return resource */
    public static function createConnection()
    {
        $dsn = self::createDsn();
        $dbConfig = self::createDbConfig();
        $resource = @odbc_connect($dsn, $dbConfig->getUsername(), $dbConfig->getPassword());
        if ($resource === false) {
            throw new ErrorException(odbc_errormsg() . ' ' . odbc_error());
        }

        return $resource;
    }

    public static function waitForDatabase(): void
    {
        // Wait for database (port can be open and database not ready)
        $maxRetries = 60;
        $i = 0;
        echo 'boostrap.php: Waiting for database ...';
        while (true) {
            $i++;

            try {
                self::createConnection();
                echo " OK\n";
                break;
            } catch (ErrorException $e) {
                if (strpos($e->getMessage(), 'Database not found') === false &&
                    strpos($e->getMessage(), 'No connections are allowed in quiescent mode.') === false
                ) {
                    throw $e;
                }

                if ($i > $maxRetries) {
                    throw new RuntimeException('boostrap.php: Cannot connect to database: ' . $e->getMessage(), 0, $e);
                }

                echo '.';
                sleep(1);
            }
        }
    }
}



================================================
FILE: tests/phpunit/Metadata/OdbcMetadataProviderTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Metadata;

use Keboola\DbExtractor\Adapter\Metadata\MetadataProvider;
use Keboola\DbExtractor\Extractor\OdbcConnection;
use Keboola\DbExtractor\Metadata\OdbcMetadataProviderFactory;
use Keboola\DbExtractor\TableResultFormat\Metadata\ValueObject\ColumnCollection;
use Keboola\DbExtractor\Tests\BaseTest;
use Keboola\DbExtractor\Tests\OdbcTestConnectionFactory;
use Keboola\DbExtractor\Tests\Traits\DefaultSchemaTrait;
use Keboola\DbExtractor\Tests\Traits\Tables\ComplexTableTrait;
use Keboola\DbExtractor\Tests\Traits\Tables\PkAndFkTablesTrait;
use Keboola\DbExtractorConfig\Configuration\ValueObject\DatabaseConfig;
use Keboola\DbExtractorConfig\Configuration\ValueObject\InputTable;
use PHPUnit\Framework\Assert;
use Psr\Log\NullLogger;
use function Keboola\Utils\sanitizeColumnName;

class OdbcMetadataProviderTest extends BaseTest
{
    use ComplexTableTrait;
    use PkAndFkTablesTrait;
    use DefaultSchemaTrait;

    private MetadataProvider $metadataProvider;

    protected function setUp(): void
    {
        parent::setUp();
        $logger = new NullLogger();
        $dsn = OdbcTestConnectionFactory::createDsn();
        $retries = 1;
        $connection = new OdbcConnection(
            $logger,
            $dsn,
            (string) getenv('DB_USER'),
            (string) getenv('DB_PASSWORD'),
            null,
            $retries
        );

        $metadataProviderFactory = new OdbcMetadataProviderFactory(
            $connection,
            DatabaseConfig::fromArray($this->getConfigDbNode())
        );
        $this->metadataProvider = $metadataProviderFactory->create();
    }

    public function testListAllTablesNoTable(): void
    {
        $collection = $this->metadataProvider->listTables();
        Assert::assertTrue($collection->isEmpty());
    }

    public function testListAllTables(): void
    {
        // Create table
        $this->createComplexTable('complex');
        $collection = $this->metadataProvider->listTables();
        Assert::assertFalse($collection->isEmpty());

        // Assert table
        $tables = $collection->getAll();
        $table = $tables[0];
        Assert::assertCount(1, $tables);
        Assert::assertSame('complex', $table->getName());
        Assert::assertSame('table', $table->getType());

        // Assert columns
        $columns = $table->getColumns();
        Assert::assertFalse($columns->isEmpty());
        $this->validateColumnsMetadata($columns);
    }

    public function testListAllTablesNoColumns(): void
    {
        // Create tables
        $this->createComplexTable('complex1');
        $this->createComplexTable('complex2');
        $collection = $this->metadataProvider->listTables([], false);
        Assert::assertFalse($collection->isEmpty());

        // Assert no columns
        $tables = $collection->getAll();
        Assert::assertCount(2, $tables);
        Assert::assertFalse($tables[0]->hasColumns());
        Assert::assertFalse($tables[1]->hasColumns());
    }

    public function testListTablesWhitelist(): void
    {
        // Create tables
        $this->createComplexTable('complex1');
        $this->createComplexTable('complex2');
        $this->createComplexTable('complex3');
        $collection = $this->metadataProvider->listTables(
            [new InputTable('complex2', $this->getDefaultSchema())],
            true
        );
        Assert::assertFalse($collection->isEmpty());

        // Assert table
        $tables = $collection->getAll();
        $table = $tables[0];
        Assert::assertCount(1, $tables);
        Assert::assertSame('complex2', $table->getName());
        Assert::assertSame('table', $table->getType());

        // Assert columns
        $columns = $table->getColumns();
        Assert::assertFalse($columns->isEmpty());
        $this->validateColumnsMetadata($columns);
    }

    public function testListTablesWhitelistNoColumn(): void
    {
        // Create tables
        $this->createComplexTable('complex1');
        $this->createComplexTable('complex2');
        $this->createComplexTable('complex3');
        $collection = $this->metadataProvider->listTables(
            [new InputTable('complex2', $this->getDefaultSchema())],
            false
        );
        Assert::assertFalse($collection->isEmpty());

        // Assert table
        $tables = $collection->getAll();
        $table = $tables[0];
        Assert::assertCount(1, $tables);
        Assert::assertSame('complex2', $table->getName());
        Assert::assertSame('table', $table->getType());

        // Assert columns
        Assert::assertFalse($table->hasColumns());
    }

    public function testConstraints(): void
    {
        // Create tables
        $this->createPkAndFkTables(
            'table1',
            'id1',
            'fk1',
            'table2',
            'id2',
            'fk1_target'
        );

        $collection = $this->metadataProvider->listTables();
        Assert::assertFalse($collection->isEmpty());

        // Assert table
        $tables = $collection->getAll();
        Assert::assertCount(2, $tables);
        Assert::assertSame('table1', $tables[0]->getName());
        Assert::assertSame('table', $tables[0]->getType());
        Assert::assertSame('table2', $tables[1]->getName());
        Assert::assertSame('table', $tables[1]->getType());

        $id1Col = $tables[0]->getColumns()->getByName('id1');
        $fk1Col = $tables[0]->getColumns()->getByName('fk1');
        $id2Col = $tables[1]->getColumns()->getByName('id2');
        $fk1TargetCol = $tables[1]->getColumns()->getByName('fk1_target');

        Assert::assertTrue($id1Col->isPrimaryKey());
        Assert::assertTrue($id2Col->isPrimaryKey());
        Assert::assertFalse($fk1Col->isPrimaryKey());
        Assert::assertFalse($fk1TargetCol->isPrimaryKey());

        Assert::assertFalse($id1Col->hasForeignKey());
        Assert::assertFalse($id2Col->hasForeignKey());
        Assert::assertTrue($fk1Col->hasForeignKey());
        Assert::assertFalse($fk1TargetCol->hasForeignKey());

        $fk1Fk = $fk1Col->getForeignKey();
        Assert::assertSame('fk1_target', $fk1Fk->getRefColumn());
        Assert::assertSame($this->getDefaultSchema(), $fk1Fk->getRefSchema());
        Assert::assertSame('table2', $fk1Fk->getRefTable());
    }


    protected function validateColumnsMetadata(ColumnCollection $columns): void
    {
        $i = 0;
        foreach ($this->getColumnsDefinitions() as $sqlStmt => $expected) {
            // Column names are case-insensitive, so strtolower is needed.
            $expectedColName = strtolower(sanitizeColumnName('col_' . $i . '_' . $sqlStmt));

            // Get column (if not exists, exception is thrown)
            $column = $columns->getByName($expectedColName);
            Assert::assertSame($expectedColName, $column->getName());
            Assert::assertSame($expected['type'], $column->getType());
            Assert::assertSame(
                $expected['nullable'],
                $column->isNullable(),
                sprintf('Unexpected nullable for column "%s".', $expectedColName)
            );

            if ($column->hasLength()) {
                Assert::assertSame(
                    $expected['length'] ?? null,
                    $column->getLength(),
                    sprintf('Unexpected length for column "%s".', $expectedColName)
                );
            } elseif (isset($expected['length'])) {
                Assert::fail(
                    sprintf('No length set for column "%s", expected "%s".', $expectedColName, $expected['length'])
                );
            }

            $i++;
        }
    }
}



================================================
FILE: tests/phpunit/SyncActions/GetTablesTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\SyncActions;

use Keboola\DbExtractor\Tests\Traits\DefaultSchemaTrait;
use Keboola\DbExtractor\Tests\Traits\Tables\ComplexTableTrait;
use PHPUnit\Framework\Assert;
use Keboola\DbExtractor\Tests\BaseTest;
use Keboola\Component\JsonHelper;
use function Keboola\Utils\sanitizeColumnName;

class GetTablesTest extends BaseTest
{
    use ComplexTableTrait;
    use DefaultSchemaTrait;

    public function testGetTablesAllNoTable(): void
    {
        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $tables = JsonHelper::decode($process->getOutput());
        Assert::assertSame(['tables' => [], 'status' => 'success'], $tables);
    }

    public function testGetTablesAllWithoutColumnsNotTable(): void
    {
        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';
        $config['parameters']['tableListFilter']['listColumns'] = false;

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $tables = JsonHelper::decode($process->getOutput());
        Assert::assertSame(['tables' => [], 'status' => 'success'], $tables);
    }

    public function testGetTablesAll(): void
    {
        // Create table
        $this->createComplexTable('complex');

        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $output = JsonHelper::decode($process->getOutput());
        $tables = $output['tables'];

        // Assert columns separately
        $columns = $tables[0]['columns'];
        unset($tables[0]['columns']);

        Assert::assertSame('success', $output['status']);
        Assert::assertSame([['name' => 'complex', 'schema' => $this->getDefaultSchema()]], $tables);
        $this->validateColumnsMetadata($columns);
    }

    public function testGetTablesAllWithoutColumns(): void
    {
        // Create table
        $this->createComplexTable('complex');

        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';
        $config['parameters']['tableListFilter']['listColumns'] = false;

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $output = JsonHelper::decode($process->getOutput());
        $tables = $output['tables'];

        // Assert no columns
        Assert::assertSame('success', $output['status']);
        Assert::assertSame([['name' => 'complex', 'schema' => $this->getDefaultSchema()]], $tables);
    }

    public function testGetTablesWhiteList(): void
    {
        // Create table
        $this->createComplexTable('complex1');
        $this->createComplexTable('complex2');
        $this->createComplexTable('complex3');

        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';
        $config['parameters']['tableListFilter']['tablesToList'] = [
          [
              'tableName' => 'complex2',
              'schema' => $this->getDefaultSchema(),
          ],
        ];

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $output = JsonHelper::decode($process->getOutput());
        $tables = $output['tables'];

        // Assert columns separately
        $columns = $tables[0]['columns'];
        unset($tables[0]['columns']);

        Assert::assertSame('success', $output['status']);
        Assert::assertSame([['name' => 'complex2', 'schema' => $this->getDefaultSchema()]], $tables);
        $this->validateColumnsMetadata($columns);
    }

    public function testGetTablesWhiteListNoColumns(): void
    {
        // Create table
        $this->createComplexTable('complex1');
        $this->createComplexTable('complex2');
        $this->createComplexTable('complex3');

        // Create config
        $config = $this->getConfig();
        $config['action'] = 'getTables';
        $config['parameters']['tableListFilter']['listColumns'] = false;
        $config['parameters']['tableListFilter']['tablesToList'] = [
            [
                'tableName' => 'complex2',
                'schema' => $this->getDefaultSchema(),
            ],
        ];

        // Run extractor
        $process = $this->createAppProcess($config);
        $process->run();

        // Assert process state
        Assert::assertTrue($process->isSuccessful(), $process->getOutput() . $process->getErrorOutput());
        Assert::assertSame('', $process->getErrorOutput());

        // Parse output
        $output = JsonHelper::decode($process->getOutput());
        $tables = $output['tables'];

        // Assert no columns
        Assert::assertSame('success', $output['status']);
        Assert::assertSame([['name' => 'complex2', 'schema' => $this->getDefaultSchema()]], $tables);
    }

    protected function validateColumnsMetadata(array $columns): void
    {
        $i = 0;
        foreach ($this->getColumnsDefinitions() as $sqlStmt => $expected) {
            // Column names are case-insensitive, so strtolower is needed.
            $expectedColName = strtolower(sanitizeColumnName('col_' . $i . '_' . $sqlStmt));

            // Assert index
            $column = $columns[$i] ?? null;
            Assert::assertNotNull(
                $column,
                sprintf('Column "%s" not found at index "%s".', $expectedColName, $i)
            );

            // Assert name
            Assert::assertSame($expectedColName, $column['name']);

            // Assert type
            Assert::assertSame(
                $expected['type'],
                $column['type'],
                sprintf('Unexpected type for column "%s".', $expectedColName)
            );

            $i++;
        }
    }
}



================================================
FILE: tests/phpunit/Traits/CloseSshTunnelsTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

use Symfony\Component\Process\Process;

trait CloseSshTunnelsTrait
{
    protected function closeSshTunnels(): void
    {
        # Close SSH tunnel if created
        $process = new Process(['sh', '-c', 'pgrep ssh | xargs -r kill']);
        $process->mustRun();
    }
}



================================================
FILE: tests/phpunit/Traits/CreateTableTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

use Keboola\DbExtractor\Extractor\QuoteIdentifierTrait;
use Keboola\DbExtractor\Extractor\QuoteTrait;

trait CreateTableTrait
{
    use QuoteTrait;
    use QuoteIdentifierTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function createTable(string $tableName, array $columns): void
    {
        // Generate columns statement
        $columnsSql = [];
        foreach ($columns as $name => $sqlDef) {
            $columnsSql[] = $this->quoteIdentifier($name) . ' ' . $sqlDef;
        }

        // Create table
        odbc_exec($this->connection, sprintf(
            'CREATE TABLE %s (%s)',
            $this->quoteIdentifier($tableName),
            implode(', ', $columnsSql)
        ));
    }
}



================================================
FILE: tests/phpunit/Traits/DefaultSchemaTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

trait DefaultSchemaTrait
{
    protected function getDefaultSchema(): string
    {
        // In informix schema = owner
        return (string) getenv('DB_USER');
    }
}



================================================
FILE: tests/phpunit/Traits/GetSshKeysTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

trait GetSshKeysTrait
{
    protected function getPrivateKey(): string
    {
        return (string) file_get_contents('/root/.ssh/id_rsa');
    }

    protected function getPublicKey(): string
    {
        return (string) file_get_contents('/root/.ssh/id_rsa.pub');
    }
}



================================================
FILE: tests/phpunit/Traits/InsertRowsTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

use Throwable;
use Keboola\DbExtractor\Adapter\Exception\OdbcException;
use Keboola\DbExtractor\Extractor\QuoteIdentifierTrait;
use Keboola\DbExtractor\Extractor\QuoteTrait;

trait InsertRowsTrait
{
    use QuoteTrait;
    use QuoteIdentifierTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function insertRows(string $tableName, array $columns, array $rows): void
    {
        // Generate columns statement
        $columnsSql = [];
        foreach ($columns as $name => $sqlDef) {
            $columnsSql[] = $this->quoteIdentifier($name);
        }

        // Generate values statement
        $valuesSql = [];
        foreach ($rows as $row) {
            $valuesSql[] =
                '(' .
                implode(
                    ', ',
                    array_map(fn($value) => $value === null ? 'NULL' : $this->quote((string) $value), $row)
                ) .
                ')';
        }

        // In informix cannot be multiple values in one INSERT statement
        foreach ($valuesSql as $values) {
            try {
                /** @var resource|false $stmt */
                $stmt = odbc_exec($this->connection, sprintf(
                    'INSERT INTO %s (%s) VALUES %s',
                    $this->quoteIdentifier($tableName),
                    implode(', ', $columnsSql),
                    $values
                ));
            } catch (Throwable $e) {
                throw new OdbcException($e->getMessage(), $e->getCode(), $e);
            }

            // "odbc_exec" can generate warning, if "set_error_handler" is not set, so we are checking it manually
            if ($stmt === false) {
                throw new OdbcException(odbc_errormsg($this->connection) . ' ' . odbc_error($this->connection));
            }
        }
    }
}



================================================
FILE: tests/phpunit/Traits/RemoveAllTablesTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits;

use RuntimeException;

trait RemoveAllTablesTrait
{
    /** @var resource ODBC connection resource */
    protected $connection;

    protected function removeAllTables(): void
    {
        // Delete all tables, except sys tables
        $sql = "SELECT tabname FROM SYSTABLES WHERE tabtype IN ('T', 'E', 'V') AND tabname NOT LIKE 'sys%'";
        $stmt = odbc_exec($this->connection, $sql);
        if (!$stmt) {
            throw new RuntimeException(sprintf('Error while running SQL: "%s"', $sql));
        }
        while (true) {
            $row = odbc_fetch_array($stmt);
            if (!$row) {
                break;
            }
            odbc_exec($this->connection, sprintf('DROP TABLE %s', $row['tabname']));
        }
    }
}



================================================
FILE: tests/phpunit/Traits/Tables/ComplexTableTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits\Tables;

use Keboola\DbExtractor\Tests\Traits\CreateTableTrait;
use function Keboola\Utils\sanitizeColumnName;

trait ComplexTableTrait
{
    use CreateTableTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    protected function createComplexTable(string $tableName): void
    {
        $i = 0;
        $columns = [];
        foreach (array_keys($this->getColumnsDefinitions()) as $sqlStmt) {
            $colName = strtolower(sanitizeColumnName('col_' . $i . '_' . $sqlStmt));
            $columns[$colName] = $sqlStmt;
            $i++;
        }

        $this->createTable($tableName, $columns);
    }

    /**
     * Must be modified for other databases.
     * Returns:
     * - all valid data types in database - KEY
     * - the corresponding type in the KBC metadata - VALUE
     */
    public function getColumnsDefinitions(): array
    {
        // https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqlr.doc/ids_sqr_094.htm
        return [
            // SQL definition => expected properties
            'BIGINT' => ['type' => 'BIGINT', 'nullable' => true],
            'BIGSERIAL NOT NULL' => ['type' => 'BIGSERIAL', 'nullable' => false],
            'BSON' => ['type' => 'LVARCHAR', 'length' => '4096', 'nullable' => true],
            'JSON' => ['type' => 'LVARCHAR', 'length' => '4096', 'nullable' => true],
            'BYTE' => ['type' => 'BYTE', 'nullable' => true],
            'CHAR(255)' => ['type' => 'CHAR', 'length' => '255', 'nullable' => true],
            'CHAR(255) NOT NULL' => ['type' => 'CHAR', 'length' => '255', 'nullable' => false],
            'CHARACTER(255)' => ['type' => 'CHAR', 'length' => '255', 'nullable' => true],
            'CHARACTER VARYING(255)' => ['type' => 'VARCHAR', 'length' => '255', 'nullable' => true],
            'DATE' => ['type' => 'DATE', 'nullable' => true],
            'DATETIME YEAR TO FRACTION(3)' => ['type' => 'DATETIME', 'nullable' => true],
            'DEC' => ['type' => 'DECIMAL', 'length' => '16,255', 'nullable' => true],
            'DECIMAL' => ['type' => 'DECIMAL', 'length' => '16,255', 'nullable' => true],
            'DECIMAL(20,10)' => ['type' => 'DECIMAL', 'length' => '20,10', 'nullable' => true],
            'FLOAT' => ['type' => 'FLOAT', 'nullable' => true],
            'INT8' => ['type' => 'INT8', 'nullable' => true],
            'INTEGER' => ['type' => 'INTEGER', 'nullable' => true],
            'INTERVAL DAY(3) TO HOUR' => ['type' => 'INTERVAL', 'nullable' => true],
            'MONEY' => ['type' => 'MONEY', 'length' => '16,2', 'nullable' => true],
            'NCHAR(255)' => ['type' => 'NCHAR', 'length' => '255', 'nullable' => true],
            'NUMERIC(20,10)' => ['type' => 'DECIMAL', 'length' => '20,10', 'nullable' => true],
            'NVARCHAR(255)' => ['type' => 'NVARCHAR', 'length' => '255', 'nullable' => true],
            'REAL' => ['type' => 'SMALLFLOAT', 'nullable' => true],
            'SERIAL(10) NOT NULL' => ['type' => 'SERIAL', 'nullable' => false],
            'SMALLFLOAT' => ['type' => 'SMALLFLOAT', 'nullable' => true],
            'SMALLINT' => ['type' => 'SMALLINT', 'nullable' => true],
            'TEXT' => ['type' => 'TEXT', 'nullable' => true],
            'VARCHAR(255)' => ['type' => 'VARCHAR', 'length' => '255', 'nullable' => true],
        ];
    }
}



================================================
FILE: tests/phpunit/Traits/Tables/EscapingTableTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits\Tables;

use Keboola\DbExtractor\Tests\Traits\CreateTableTrait;
use Keboola\DbExtractor\Tests\Traits\InsertRowsTrait;

trait EscapingTableTrait
{
    use CreateTableTrait;
    use InsertRowsTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function createEscapingTable(string $tableName = 'escaping'): void
    {
        $this->createTable($tableName, $this->getEscapingTableColumns());
    }

    public function generateEscapingTableRows(string $tableName = 'escaping'): void
    {
        $this->insertRows($tableName, $this->getEscapingTableColumns(), $this->getEscapingTableRows());
    }

    protected function getEscapingTableRows(): array
    {
        return [
            [1, '"""'],
            [2, '\'\'\''],
            [3, '```'],
            [4, '1234áúívw'],
            [5, "\ta\nb\r\nc\td"],
        ];
    }


    protected function getEscapingTableColumns(): array
    {
        return [
            'id' => 'INTEGER PRIMARY KEY', // primary key
            'value' => 'NVARCHAR(255) DEFAULT NULL', // nullable
        ];
    }
}



================================================
FILE: tests/phpunit/Traits/Tables/IncrementalTableTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits\Tables;

use Keboola\DbExtractor\Tests\Traits\CreateTableTrait;
use Keboola\DbExtractor\Tests\Traits\InsertRowsTrait;

trait IncrementalTableTrait
{
    use CreateTableTrait;
    use InsertRowsTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function createIncrementalTable(string $tableName = 'incremental'): void
    {
        $this->createTable($tableName, $this->getIncrementalTableColumns());
    }

    public function generateIncrementalTableRows(string $tableName = 'incremental'): void
    {
        $this->insertRows($tableName, $this->getIncrementalTableColumns(), $this->getIncrementalTableRows());
    }

    protected function getIncrementalTableRows(): array
    {
        return [
            [1, 80, 10.1, 'bBC', '10/03/2020', '2020-10-01 10:00:00'],
            [2, 70, 50.2, '3BC', '10/02/2020', '2020-10-03 10:00:00'],
            [3, 60, 20.3, 'aBC', '10/01/2020', '2020-10-02 10:00:00'],
            [4, 50, 80.4, '1BC', '10/05/2020', '2020-10-08 10:00:00'],
            [5, 40, 60.5, 'cBC', '10/06/2020', '2020-10-04 10:00:00'],
            [6, 30, 30.6, '2BC', '10/04/2020', '2020-10-07 10:00:00'],
            [7, 20, 40.7, 'dBC', '10/08/2020', '2020-10-06 10:00:00'],
            [8, 10, 70.8, 'eBC', '10/07/2020', '2020-10-05 10:00:00'],
        ];
    }


    protected function getIncrementalTableColumns(): array
    {
        return [
            'id' => 'INTEGER PRIMARY KEY', // primary key
            // all nullables:
            'int' => 'INTEGER DEFAULT NULL',
            'decimal' => 'DECIMAL DEFAULT NULL',
            'text' => 'NVARCHAR(255) DEFAULT NULL',
            'date' => 'DATE DEFAULT NULL',
            'datetime' => 'DATETIME YEAR TO FRACTION DEFAULT NULL',
        ];
    }
}



================================================
FILE: tests/phpunit/Traits/Tables/PkAndFkTablesTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits\Tables;

use Keboola\DbExtractor\Extractor\QuoteIdentifierTrait;

trait PkAndFkTablesTrait
{
    use QuoteIdentifierTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function createPkAndFkTables(
        string $table1,
        string $table1PkCol,
        string $table1FkCol,
        string $table2,
        string $table2PkCol,
        string $table2Target
    ): void {
        // Create Table 2
        $sql1 = [];
        $sql1[] = sprintf('CREATE TABLE %s (', $this->quoteIdentifier($table2));
        $sql1[] = sprintf('%s INTEGER PRIMARY KEY,', $this->quoteIdentifier($table2PkCol));
        $sql1[] = sprintf('%s INTEGER UNIQUE,', $this->quoteIdentifier($table2Target));
        $sql1[] = 'name VARCHAR(255)';
        $sql1[] = ')';
        odbc_exec($this->connection, implode(' ', $sql1));

        // Create Table 1
        $sql2 = [];
        $sql2[] = sprintf('CREATE TABLE %s (', $this->quoteIdentifier($table1));
        $sql2[] = sprintf('%s INTEGER PRIMARY KEY,', $this->quoteIdentifier($table1PkCol));
        $sql2[] = sprintf(
            '%s INTEGER REFERENCES %s (%s) CONSTRAINT table1_fk,',
            $this->quoteIdentifier($table1FkCol),
            $this->quoteIdentifier($table2),
            $this->quoteIdentifier($table2Target)
        );
        $sql2[] = 'name VARCHAR(255)';
        $sql2[] = ')';
        odbc_exec($this->connection, implode(' ', $sql2));
    }
}



================================================
FILE: tests/phpunit/Traits/Tables/SimpleTableTrait.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\DbExtractor\Tests\Traits\Tables;

use Keboola\DbExtractor\Tests\Traits\CreateTableTrait;
use Keboola\DbExtractor\Tests\Traits\InsertRowsTrait;

trait SimpleTableTrait
{
    use CreateTableTrait;
    use InsertRowsTrait;

    /** @var resource ODBC connection resource */
    protected $connection;

    public function createSimpleTable(string $tableName = 'simple'): void
    {
        $this->createTable($tableName, $this->getSimpleTableColumns());
    }

    public function generateSimpleTableRows(string $tableName = 'simple'): void
    {
        $this->insertRows($tableName, $this->getSimpleTableColumns(), $this->getSimpleTableRows());
    }

    protected function getSimpleTableRows(): array
    {
        return [
            [1, 'Jack Dawson', '2020-10-03 01:02:34'],
            [2, 'Xander Thomas', null],
            [3, 'Jay Macdonald', '2020-10-01 10:20:30'],
        ];
    }


    protected function getSimpleTableColumns(): array
    {
        return [
            'id' => 'INTEGER PRIMARY KEY', // primary key
            'name' => 'NVARCHAR(255) NOT NULL', // not null
            'date' => 'DATETIME YEAR TO FRACTION DEFAULT NULL', // nullable
        ];
    }
}


