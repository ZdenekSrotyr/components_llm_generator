Directory structure:
└── kds_consulting_team-kds-team.processor-json2csv/
    ├── composer.lock
    ├── tests/
    │   ├── phpunit/
    │   │   └── bootstrap.php
    │   └── functional/
    │       ├── basic-sample-2-tables/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root_el.csv.manifest
    │       │   │           │   ├── root_el.csv
    │       │   │           │   ├── root_el_root_el_orders_order_order-item.csv.manifest
    │       │   │           │   └── root_el_root_el_orders_order_order-item.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   └── tables/
    │       │           │       ├── sample2.xml.json
    │       │           │       ├── .gitkeep
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       ├── sample-1-table-root-el-mapping/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root_el.csv.manifest
    │       │   │           │   ├── root_el.csv
    │       │   │           │   ├── order-items.csv.manifest
    │       │   │           │   └── order-items.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   └── tables/
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       ├── sample-2-tables-add-file-name/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root_el.csv.manifest
    │       │   │           │   ├── root_el.csv
    │       │   │           │   ├── root_el_root_el_orders_order_order-item.csv.manifest
    │       │   │           │   └── root_el_root_el_orders_order_order-item.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   ├── tables/
    │       │           │   │   ├── sample2.xml.json
    │       │           │   │   ├── .gitkeep
    │       │           │   │   └── sample1.xml.json
    │       │           │   └── files/
    │       │           │       ├── sample2.xml.json
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       ├── basic-sample-2-files/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root_el.csv.manifest
    │       │   │           │   ├── root_el.csv
    │       │   │           │   ├── root_el_root_el_orders_order_order-item.csv.manifest
    │       │   │           │   └── root_el_root_el_orders_order_order-item.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   ├── tables/
    │       │           │   │   └── .gitkeep
    │       │           │   └── files/
    │       │           │       ├── sample2.xml.json
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       ├── sample-2-tables-root-el-mapping/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root_el.csv.manifest
    │       │   │           │   ├── root_el.csv
    │       │   │           │   ├── order-items.csv.manifest
    │       │   │           │   └── order-items.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   └── tables/
    │       │           │       ├── sample2.xml.json
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       ├── DatadirTest.php
    │       ├── sample-2-tables-root-el-mapping-add-filename/
    │       │   ├── expected-code
    │       │   ├── expected/
    │       │   │   └── data/
    │       │   │       └── out/
    │       │   │           ├── tables/
    │       │   │           │   ├── root.csv.manifest
    │       │   │           │   ├── order-items.csv.manifest
    │       │   │           │   ├── root.csv
    │       │   │           │   └── order-items.csv
    │       │   │           └── files/
    │       │   │               └── .gitkeep
    │       │   └── source/
    │       │       └── data/
    │       │           ├── in/
    │       │           │   ├── tables/
    │       │           │   │   ├── sample2.xml.json
    │       │           │   │   ├── .gitkeep
    │       │           │   │   └── sample1.xml.json
    │       │           │   └── files/
    │       │           │       ├── sample2.xml.json
    │       │           │       └── sample1.xml.json
    │       │           └── config.json
    │       └── basic-sample-2-tables-root-el/
    │           ├── expected-code
    │           ├── expected/
    │           │   └── data/
    │           │       └── out/
    │           │           ├── tables/
    │           │           │   ├── orders_orders_order_order-item.csv
    │           │           │   ├── orders.csv
    │           │           │   ├── orders.csv.manifest
    │           │           │   └── orders_orders_order_order-item.csv.manifest
    │           │           └── files/
    │           │               └── .gitkeep
    │           └── source/
    │               └── data/
    │                   ├── in/
    │                   │   └── tables/
    │                   │       ├── sample2.xml.json
    │                   │       └── sample1.xml.json
    │                   └── config.json
    ├── LICENSE
    ├── composer.json
    ├── Dockerfile
    ├── src/
    │   ├── JsonToCSvParser.php
    │   ├── test.php
    │   ├── run.php
    │   ├── Config.php
    │   ├── Processor.php
    │   ├── ConfigDefinition.php
    │   └── Component.php
    ├── bitbucket-pipelines.yml
    ├── .dockerignore
    ├── deploy.sh
    ├── docker-compose.yml
    ├── docker/
    │   ├── php-prod.ini
    │   └── composer-install.sh
    ├── phpunit.xml.dist
    ├── README.md
    └── util-scripts/
        ├── build_n_run.ps1
        ├── run.bat
        └── run_kbc_tests.ps1

================================================
File: /composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
        "This file is @generated automatically"
    ],
    "content-hash": "a0a2871a116d423cbcd6d96c1ad071a4",
    "packages": [
        {
            "name": "keboola/csv",
            "version": "1.1.4",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csv.git",
                "reference": "d7e257096c42eab09b54b7b46a905ca953a8eb6f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csv/zipball/d7e257096c42eab09b54b7b46a905ca953a8eb6f",
                "reference": "d7e257096c42eab09b54b7b46a905ca953a8eb6f",
                "shasum": ""
            },
            "require-dev": {
                "phpunit/phpunit": "~3.7"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\Csv": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keboola CSV reader and writer",
            "homepage": "http://keboola.com",
            "time": "2016-04-21T20:46:22+00:00"
        },
        {
            "name": "keboola/csvmap",
            "version": "0.5.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csvmap.git",
                "reference": "950929ee4fe9f45d9157ffcb1f0b5e3016504c94"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csvmap/zipball/950929ee4fe9f45d9157ffcb1f0b5e3016504c94",
                "reference": "950929ee4fe9f45d9157ffcb1f0b5e3016504c94",
                "shasum": ""
            },
            "require": {
                "keboola/csv": "~1.1.4",
                "keboola/php-csvtable": "~0.1.6",
                "keboola/php-utils": "^2.1",
                "php": ">=5.6.0"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "dev-master",
                "phpunit/phpunit": "^5.2",
                "squizlabs/php_codesniffer": "~2.7"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\CsvMap": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ondrej Vana",
                    "email": "kachna@keboola.cz"
                }
            ],
            "description": "Flatten an object into a CSV file(s)",
            "keywords": [
                "csv",
                "flatten",
                "object"
            ],
            "time": "2017-12-20T16:07:11+00:00"
        },
        {
            "name": "keboola/json-parser",
            "version": "2.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-jsonparser.git",
                "reference": "41c1ac42b369eeceb1c8d2674348282be253bbfc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-jsonparser/zipball/41c1ac42b369eeceb1c8d2674348282be253bbfc",
                "reference": "41c1ac42b369eeceb1c8d2674348282be253bbfc",
                "shasum": ""
            },
            "require": {
                "keboola/php-csvtable": "^0.1",
                "keboola/php-temp": "^1.0",
                "keboola/php-utils": "^2.2",
                "monolog/monolog": "^1.23",
                "php": ">=7.1"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "^0.4",
                "phpunit/phpunit": "^6.3",
                "squizlabs/php_codesniffer": "^3.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Json\\": "src",
                    "Keboola\\Json\\Tests\\": "tests"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola JSON to CSV parser",
            "keywords": [
                "converter",
                "csv",
                "json",
                "json2csv",
                "parser"
            ],
            "time": "2017-12-21T08:59:11+00:00"
        },
        {
            "name": "keboola/php-component",
            "version": "4.4.2",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-component.git",
                "reference": "548f157d27c6a23c5b94335a7bc8ff8002c3da18"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-component/zipball/548f157d27c6a23c5b94335a7bc8ff8002c3da18",
                "reference": "548f157d27c6a23c5b94335a7bc8ff8002c3da18",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "monolog/monolog": "^1.23",
                "php": "^7.1",
                "symfony/config": "^4.0",
                "symfony/filesystem": "^4.0",
                "symfony/finder": "^4.0",
                "symfony/serializer": "^4.0"
            },
            "require-dev": {
                "devedge/sami-github": "^1.0",
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^4.0",
                "keboola/php-temp": "^1.0",
                "phpstan/phpstan-shim": "^0.9.1",
                "phpunit/phpunit": "^7.1"
            },
            "type": "project",
            "autoload": {
                "psr-4": {
                    "Keboola\\Component\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Helper classes for developing Keboola PHP components",
            "keywords": [
                "component",
                "docker",
                "keboola"
            ],
            "time": "2018-10-19T07:51:16+00:00"
        },
        {
            "name": "keboola/php-csvtable",
            "version": "0.1.7",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csvtable.git",
                "reference": "099d234ed14da2948a92117df10edbd35cfa336c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csvtable/zipball/099d234ed14da2948a92117df10edbd35cfa336c",
                "reference": "099d234ed14da2948a92117df10edbd35cfa336c",
                "shasum": ""
            },
            "require": {
                "keboola/csv": "~1.1.0",
                "keboola/php-temp": ">=0.1.0"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "dev-master",
                "phpunit/phpunit": "^5.2"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\CsvTable": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ondrej Vana",
                    "email": "kachna@keboola.cz"
                }
            ],
            "description": "CSV file class with Keboola StorageApi extensions",
            "keywords": [
                "csv",
                "storageapi",
                "table"
            ],
            "time": "2016-03-31T21:16:36+00:00"
        },
        {
            "name": "keboola/php-temp",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-temp.git",
                "reference": "2e3c2fc4cce8536a84cbad2a1586eb2eaebe5d3b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-temp/zipball/2e3c2fc4cce8536a84cbad2a1586eb2eaebe5d3b",
                "reference": "2e3c2fc4cce8536a84cbad2a1586eb2eaebe5d3b",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3",
                "symfony/filesystem": ">2.1.0"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "dev-master",
                "phpunit/phpunit": "^5.2"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\Temp": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Miro Cillik",
                    "email": "miro@keboola.cz"
                },
                {
                    "name": "Ondrej Vana",
                    "email": "kachna@keboola.cz"
                }
            ],
            "description": "Temp service - handles application's temporary files",
            "keywords": [
                "filesystem",
                "temp"
            ],
            "time": "2017-11-13T13:02:19+00:00"
        },
        {
            "name": "keboola/php-utils",
            "version": "2.3.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-utils.git",
                "reference": "ec4d582994f2961bd16a6f6be40d3e8608ef5ec3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-utils/zipball/ec4d582994f2961bd16a6f6be40d3e8608ef5ec3",
                "reference": "ec4d582994f2961bd16a6f6be40d3e8608ef5ec3",
                "shasum": ""
            },
            "require": {
                "keboola/php-temp": "^1.0",
                "php": ">=5.6.0",
                "seld/jsonlint": "^1.4"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "~0.2",
                "phpunit/phpunit": "~5.0",
                "squizlabs/php_codesniffer": "~2.4"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/Keboola/Utils/jsonDecode.php",
                    "src/Keboola/Utils/sanitizeUtf8.php",
                    "src/Keboola/Utils/objectToArray.php",
                    "src/Keboola/Utils/formatDateTime.php",
                    "src/Keboola/Utils/replaceDates.php",
                    "src/Keboola/Utils/replaceDatesInArray.php",
                    "src/Keboola/Utils/buildUrl.php",
                    "src/Keboola/Utils/httpBuildUrl.php",
                    "src/Keboola/Utils/returnBytes.php",
                    "src/Keboola/Utils/camelize.php",
                    "src/Keboola/Utils/getDataFromPath.php",
                    "src/Keboola/Utils/isValidDateTimeString.php",
                    "src/Keboola/Utils/flattenArray.php",
                    "src/Keboola/Utils/arrayToObject.php",
                    "src/Keboola/Utils/isEmptyObject.php",
                    "src/Keboola/Utils/stripInvalidUtf16.php",
                    "src/Keboola/Utils/toAscii.php",
                    "src/Keboola/Utils/sanitizeColumnName.php"
                ],
                "psr-0": {
                    "Keboola\\Utils": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Misc utility functions",
            "keywords": [
                "utility"
            ],
            "time": "2018-04-11T14:40:53+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "1.24.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "bfc9ebb28f97e7a24c45bdc3f0ff482e47bb0266"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/bfc9ebb28f97e7a24c45bdc3f0ff482e47bb0266",
                "reference": "bfc9ebb28f97e7a24c45bdc3f0ff482e47bb0266",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0",
                "psr/log": "~1.0"
            },
            "provide": {
                "psr/log-implementation": "1.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "graylog2/gelf-php": "~1.0",
                "jakub-onderka/php-parallel-lint": "0.9",
                "php-amqplib/php-amqplib": "~2.4",
                "php-console/php-console": "^3.1.3",
                "phpunit/phpunit": "~4.5",
                "phpunit/phpunit-mock-objects": "2.3.0",
                "ruflin/elastica": ">=0.90 <3.0",
                "sentry/sentry": "^0.13",
                "swiftmailer/swiftmailer": "^5.3|^6.0"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-mongo": "Allow sending log messages to a MongoDB server",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server via PHP Driver",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "php-console/php-console": "Allow sending log messages to Google Chrome",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server",
                "sentry/sentry": "Allow sending log messages to a Sentry server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "http://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "time": "2018-11-05T09:00:11+00:00"
        },
        {
            "name": "psr/log",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd",
                "reference": "6c001f1daafa3a3ac1d8ff69ee4db8e799a654dd",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "Psr/Log/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "time": "2018-11-20T15:27:04+00:00"
        },
        {
            "name": "seld/jsonlint",
            "version": "1.7.1",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/jsonlint.git",
                "reference": "d15f59a67ff805a44c50ea0516d2341740f81a38"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/jsonlint/zipball/d15f59a67ff805a44c50ea0516d2341740f81a38",
                "reference": "d15f59a67ff805a44c50ea0516d2341740f81a38",
                "shasum": ""
            },
            "require": {
                "php": "^5.3 || ^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0"
            },
            "bin": [
                "bin/jsonlint"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Seld\\JsonLint\\": "src/Seld/JsonLint/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "JSON Linter",
            "keywords": [
                "json",
                "linter",
                "parser",
                "validator"
            ],
            "time": "2018-01-24T12:46:19+00:00"
        },
        {
            "name": "symfony/config",
            "version": "v4.2.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/config.git",
                "reference": "a7a7d0a0244cfc82f040729ccf769e6cf55a78fb"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/config/zipball/a7a7d0a0244cfc82f040729ccf769e6cf55a78fb",
                "reference": "a7a7d0a0244cfc82f040729ccf769e6cf55a78fb",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/filesystem": "~3.4|~4.0",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "symfony/finder": "<3.4"
            },
            "require-dev": {
                "symfony/dependency-injection": "~3.4|~4.0",
                "symfony/event-dispatcher": "~3.4|~4.0",
                "symfony/finder": "~3.4|~4.0",
                "symfony/yaml": "~3.4|~4.0"
            },
            "suggest": {
                "symfony/yaml": "To use the yaml reference dumper"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Config\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Config Component",
            "homepage": "https://symfony.com",
            "time": "2019-01-03T09:07:35+00:00"
        },
        {
            "name": "symfony/filesystem",
            "version": "v4.2.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/filesystem.git",
                "reference": "c2ffd9a93f2d6c5be2f68a0aa7953cc229f871f8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/filesystem/zipball/c2ffd9a93f2d6c5be2f68a0aa7953cc229f871f8",
                "reference": "c2ffd9a93f2d6c5be2f68a0aa7953cc229f871f8",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/polyfill-ctype": "~1.8"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Filesystem\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Filesystem Component",
            "homepage": "https://symfony.com",
            "time": "2019-01-03T09:07:35+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v4.2.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "9094d69e8c6ee3fe186a0ec5a4f1401e506071ce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/9094d69e8c6ee3fe186a0ec5a4f1401e506071ce",
                "reference": "9094d69e8c6ee3fe186a0ec5a4f1401e506071ce",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Finder Component",
            "homepage": "https://symfony.com",
            "time": "2019-01-03T09:07:35+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.10.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "e3d826245268269cd66f8326bd8bc066687b4a19"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/e3d826245268269cd66f8326bd8bc066687b4a19",
                "reference": "e3d826245268269cd66f8326bd8bc066687b4a19",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                },
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                },
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "time": "2018-08-06T14:22:27+00:00"
        },
        {
            "name": "symfony/serializer",
            "version": "v4.2.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/serializer.git",
                "reference": "0e696a2a8ce2648a8b1074fc9aedd9fdd328ba77"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/serializer/zipball/0e696a2a8ce2648a8b1074fc9aedd9fdd328ba77",
                "reference": "0e696a2a8ce2648a8b1074fc9aedd9fdd328ba77",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "phpdocumentor/type-resolver": "<0.2.1",
                "symfony/dependency-injection": "<3.4",
                "symfony/property-access": "<3.4",
                "symfony/property-info": "<3.4",
                "symfony/yaml": "<3.4"
            },
            "require-dev": {
                "doctrine/annotations": "~1.0",
                "doctrine/cache": "~1.0",
                "phpdocumentor/reflection-docblock": "^3.0|^4.0",
                "symfony/cache": "~3.4|~4.0",
                "symfony/config": "~3.4|~4.0",
                "symfony/dependency-injection": "~3.4|~4.0",
                "symfony/http-foundation": "~3.4|~4.0",
                "symfony/property-access": "~3.4|~4.0",
                "symfony/property-info": "~3.4|~4.0",
                "symfony/validator": "~3.4|~4.0",
                "symfony/yaml": "~3.4|~4.0"
            },
            "suggest": {
                "doctrine/annotations": "For using the annotation mapping. You will also need doctrine/cache.",
                "doctrine/cache": "For using the default cached annotation reader and metadata cache.",
                "psr/cache-implementation": "For using the metadata cache.",
                "symfony/config": "For using the XML mapping loader.",
                "symfony/http-foundation": "To use the DataUriNormalizer.",
                "symfony/property-access": "For using the ObjectNormalizer.",
                "symfony/property-info": "To deserialize relations.",
                "symfony/yaml": "For using the default YAML mapping loader."
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Serializer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Serializer Component",
            "homepage": "https://symfony.com",
            "time": "2019-01-03T09:07:35+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "doctrine/instantiator",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/instantiator.git",
                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "athletic/athletic": "~0.1.8",
                "ext-pdo": "*",
                "ext-phar": "*",
                "phpunit/phpunit": "^6.2.3",
                "squizlabs/php_codesniffer": "^3.0.2"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com",
                    "homepage": "http://ocramius.github.com/"
                }
            ],
            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
            "homepage": "https://github.com/doctrine/instantiator",
            "keywords": [
                "constructor",
                "instantiate"
            ],
            "time": "2017-07-22T11:58:36+00:00"
        },
        {
            "name": "jakub-onderka/php-parallel-lint",
            "version": "v1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/JakubOnderka/PHP-Parallel-Lint.git",
                "reference": "04fbd3f5fb1c83f08724aa58a23db90bd9086ee8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/JakubOnderka/PHP-Parallel-Lint/zipball/04fbd3f5fb1c83f08724aa58a23db90bd9086ee8",
                "reference": "04fbd3f5fb1c83f08724aa58a23db90bd9086ee8",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "jakub-onderka/php-console-highlighter": "~0.3",
                "nette/tester": "~1.3",
                "squizlabs/php_codesniffer": "~2.7"
            },
            "suggest": {
                "jakub-onderka/php-console-highlighter": "Highlight syntax in code snippet"
            },
            "bin": [
                "parallel-lint"
            ],
            "type": "library",
            "autoload": {
                "classmap": [
                    "./"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-2-Clause"
            ],
            "authors": [
                {
                    "name": "Jakub Onderka",
                    "email": "ahoj@jakubonderka.cz"
                }
            ],
            "description": "This tool check syntax of PHP files about 20x faster than serial check.",
            "homepage": "https://github.com/JakubOnderka/PHP-Parallel-Lint",
            "time": "2018-02-24T15:31:20+00:00"
        },
        {
            "name": "keboola/coding-standard",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/phpcs-standard.git",
                "reference": "5cb926bca290c29109aa8aab966b36c2325bcfd7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/phpcs-standard/zipball/5cb926bca290c29109aa8aab966b36c2325bcfd7",
                "reference": "5cb926bca290c29109aa8aab966b36c2325bcfd7",
                "shasum": ""
            },
            "require": {
                "slevomat/coding-standard": "4.4.6",
                "squizlabs/php_codesniffer": "^3.2"
            },
            "type": "phpcodesniffer-standard",
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keboola coding standard",
            "time": "2018-03-26T08:50:33+00:00"
        },
        {
            "name": "keboola/datadir-tests",
            "version": "2.3.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/datadir-tests.git",
                "reference": "5653b5f769bfe9252d6f3304e815e6014033ef81"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/datadir-tests/zipball/5653b5f769bfe9252d6f3304e815e6014033ef81",
                "reference": "5653b5f769bfe9252d6f3304e815e6014033ef81",
                "shasum": ""
            },
            "require": {
                "keboola/php-temp": "^1.0",
                "php": "^7.1",
                "phpunit/phpunit": "^7.0",
                "symfony/filesystem": "^4.0",
                "symfony/finder": "^4.0",
                "symfony/process": "^4.0"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^2.0",
                "phpstan/phpstan-shim": "^0.9.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DatadirTests\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Tool for functional testing of Keboola Connection components",
            "time": "2018-11-05T12:33:25+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.8.1",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8",
                "reference": "3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "replace": {
                "myclabs/deep-copy": "self.version"
            },
            "require-dev": {
                "doctrine/collections": "^1.0",
                "doctrine/common": "^2.6",
                "phpunit/phpunit": "^7.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                },
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "time": "2018-06-11T23:09:50+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "1.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "7761fcacf03b4d4f16e7ccb606d4879ca431fcf4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/7761fcacf03b4d4f16e7ccb606d4879ca431fcf4",
                "reference": "7761fcacf03b4d4f16e7ccb606d4879ca431fcf4",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-phar": "*",
                "phar-io/version": "^2.0",
                "php": "^5.6 || ^7.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "time": "2018-07-08T19:23:20+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "45a2ec53a73c70ce41d55cedef9063630abaf1b6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/45a2ec53a73c70ce41d55cedef9063630abaf1b6",
                "reference": "45a2ec53a73c70ce41d55cedef9063630abaf1b6",
                "shasum": ""
            },
            "require": {
                "php": "^5.6 || ^7.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "time": "2018-07-08T19:19:57+00:00"
        },
        {
            "name": "phpdocumentor/reflection-common",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/ReflectionCommon.git",
                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
                "shasum": ""
            },
            "require": {
                "php": ">=5.5"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.6"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jaap van Otterdijk",
                    "email": "opensource@ijaap.nl"
                }
            ],
            "description": "Common reflection classes used by phpdocumentor to reflect the code structure",
            "homepage": "http://www.phpdoc.org",
            "keywords": [
                "FQSEN",
                "phpDocumentor",
                "phpdoc",
                "reflection",
                "static analysis"
            ],
            "time": "2017-09-11T18:02:19+00:00"
        },
        {
            "name": "phpdocumentor/reflection-docblock",
            "version": "4.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/ReflectionDocBlock.git",
                "reference": "94fd0001232e47129dd3504189fa1c7225010d08"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/94fd0001232e47129dd3504189fa1c7225010d08",
                "reference": "94fd0001232e47129dd3504189fa1c7225010d08",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "phpdocumentor/reflection-common": "^1.0.0",
                "phpdocumentor/type-resolver": "^0.4.0",
                "webmozart/assert": "^1.0"
            },
            "require-dev": {
                "doctrine/instantiator": "~1.0.5",
                "mockery/mockery": "^1.0",
                "phpunit/phpunit": "^6.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Mike van Riel",
                    "email": "me@mikevanriel.com"
                }
            ],
            "description": "With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.",
            "time": "2017-11-30T07:14:17+00:00"
        },
        {
            "name": "phpdocumentor/type-resolver",
            "version": "0.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/TypeResolver.git",
                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/9c977708995954784726e25d0cd1dddf4e65b0f7",
                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7",
                "shasum": ""
            },
            "require": {
                "php": "^5.5 || ^7.0",
                "phpdocumentor/reflection-common": "^1.0"
            },
            "require-dev": {
                "mockery/mockery": "^0.9.4",
                "phpunit/phpunit": "^5.2||^4.8.24"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Mike van Riel",
                    "email": "me@mikevanriel.com"
                }
            ],
            "time": "2017-07-14T14:27:02+00:00"
        },
        {
            "name": "phpspec/prophecy",
            "version": "1.8.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpspec/prophecy.git",
                "reference": "4ba436b55987b4bf311cb7c6ba82aa528aac0a06"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/4ba436b55987b4bf311cb7c6ba82aa528aac0a06",
                "reference": "4ba436b55987b4bf311cb7c6ba82aa528aac0a06",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.0.2",
                "php": "^5.3|^7.0",
                "phpdocumentor/reflection-docblock": "^2.0|^3.0.2|^4.0",
                "sebastian/comparator": "^1.1|^2.0|^3.0",
                "sebastian/recursion-context": "^1.0|^2.0|^3.0"
            },
            "require-dev": {
                "phpspec/phpspec": "^2.5|^3.2",
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.5 || ^7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.8.x-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Prophecy\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Konstantin Kudryashov",
                    "email": "ever.zet@gmail.com",
                    "homepage": "http://everzet.com"
                },
                {
                    "name": "Marcello Duarte",
                    "email": "marcello.duarte@gmail.com"
                }
            ],
            "description": "Highly opinionated mocking framework for PHP 5.3+",
            "homepage": "https://github.com/phpspec/prophecy",
            "keywords": [
                "Double",
                "Dummy",
                "fake",
                "mock",
                "spy",
                "stub"
            ],
            "time": "2018-08-05T17:53:17+00:00"
        },
        {
            "name": "phpstan/phpstan-shim",
            "version": "0.9.2",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpstan-shim.git",
                "reference": "e4720fb2916be05de02869780072253e7e0e8a75"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpstan-shim/zipball/e4720fb2916be05de02869780072253e7e0e8a75",
                "reference": "e4720fb2916be05de02869780072253e7e0e8a75",
                "shasum": ""
            },
            "require": {
                "php": "~7.0"
            },
            "replace": {
                "phpstan/phpstan": "self.version"
            },
            "bin": [
                "phpstan",
                "phpstan.phar"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "0.9-dev"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPStan Phar distribution",
            "time": "2018-01-28T14:29:27+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "6.1.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "807e6013b00af69b6c5d9ceb4282d0393dbb9d8d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/807e6013b00af69b6c5d9ceb4282d0393dbb9d8d",
                "reference": "807e6013b00af69b6c5d9ceb4282d0393dbb9d8d",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-xmlwriter": "*",
                "php": "^7.1",
                "phpunit/php-file-iterator": "^2.0",
                "phpunit/php-text-template": "^1.2.1",
                "phpunit/php-token-stream": "^3.0",
                "sebastian/code-unit-reverse-lookup": "^1.0.1",
                "sebastian/environment": "^3.1 || ^4.0",
                "sebastian/version": "^2.0.1",
                "theseer/tokenizer": "^1.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.0"
            },
            "suggest": {
                "ext-xdebug": "^2.6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "6.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "time": "2018-10-31T16:06:48+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "2.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "050bedf145a257b1ff02746c31894800e5122946"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/050bedf145a257b1ff02746c31894800e5122946",
                "reference": "050bedf145a257b1ff02746c31894800e5122946",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "time": "2018-09-13T20:33:42+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "time": "2015-06-21T13:50:34+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "2.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "8b8454ea6958c3dee38453d3bd571e023108c91f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/8b8454ea6958c3dee38453d3bd571e023108c91f",
                "reference": "8b8454ea6958c3dee38453d3bd571e023108c91f",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "time": "2018-02-01T13:07:23+00:00"
        },
        {
            "name": "phpunit/php-token-stream",
            "version": "3.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-token-stream.git",
                "reference": "c99e3be9d3e85f60646f152f9002d46ed7770d18"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/c99e3be9d3e85f60646f152f9002d46ed7770d18",
                "reference": "c99e3be9d3e85f60646f152f9002d46ed7770d18",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "php": "^7.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Wrapper around PHP's tokenizer extension.",
            "homepage": "https://github.com/sebastianbergmann/php-token-stream/",
            "keywords": [
                "tokenizer"
            ],
            "time": "2018-10-30T05:52:18+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "7.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "c23d78776ad415d5506e0679723cb461d71f488f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/c23d78776ad415d5506e0679723cb461d71f488f",
                "reference": "c23d78776ad415d5506e0679723cb461d71f488f",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.1",
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "myclabs/deep-copy": "^1.7",
                "phar-io/manifest": "^1.0.2",
                "phar-io/version": "^2.0",
                "php": "^7.1",
                "phpspec/prophecy": "^1.7",
                "phpunit/php-code-coverage": "^6.0.7",
                "phpunit/php-file-iterator": "^2.0.1",
                "phpunit/php-text-template": "^1.2.1",
                "phpunit/php-timer": "^2.0",
                "sebastian/comparator": "^3.0",
                "sebastian/diff": "^3.0",
                "sebastian/environment": "^4.0",
                "sebastian/exporter": "^3.1",
                "sebastian/global-state": "^2.0",
                "sebastian/object-enumerator": "^3.0.3",
                "sebastian/resource-operations": "^2.0",
                "sebastian/version": "^2.0.1"
            },
            "conflict": {
                "phpunit/phpunit-mock-objects": "*"
            },
            "require-dev": {
                "ext-pdo": "*"
            },
            "suggest": {
                "ext-soap": "*",
                "ext-xdebug": "*",
                "phpunit/php-invoker": "^2.0"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "7.5-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "time": "2018-12-12T07:20:32+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "4419fcdb5eabb9caa61a27c7a1db532a6b55dd18"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/4419fcdb5eabb9caa61a27c7a1db532a6b55dd18",
                "reference": "4419fcdb5eabb9caa61a27c7a1db532a6b55dd18",
                "shasum": ""
            },
            "require": {
                "php": "^5.6 || ^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^5.7 || ^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "time": "2017-03-04T06:30:41+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "5de4fc177adf9bce8df98d8d141a7559d7ccf6da"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/5de4fc177adf9bce8df98d8d141a7559d7ccf6da",
                "reference": "5de4fc177adf9bce8df98d8d141a7559d7ccf6da",
                "shasum": ""
            },
            "require": {
                "php": "^7.1",
                "sebastian/diff": "^3.0",
                "sebastian/exporter": "^3.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "time": "2018-07-12T15:12:46+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "3.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "366541b989927187c4ca70490a35615d3fef2dce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/366541b989927187c4ca70490a35615d3fef2dce",
                "reference": "366541b989927187c4ca70490a35615d3fef2dce",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.0",
                "symfony/process": "^2 || ^3.3 || ^4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff",
                "udiff",
                "unidiff",
                "unified diff"
            ],
            "time": "2018-06-10T07:54:39+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "4.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "febd209a219cea7b56ad799b30ebbea34b71eb8f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/febd209a219cea7b56ad799b30ebbea34b71eb8f",
                "reference": "febd209a219cea7b56ad799b30ebbea34b71eb8f",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^7.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "http://www.github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "time": "2018-11-25T09:31:21+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "3.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/234199f4528de6d12aaa58b612e98f7d36adb937",
                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "sebastian/recursion-context": "^3.0"
            },
            "require-dev": {
                "ext-mbstring": "*",
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "http://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "time": "2017-04-03T13:19:02+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "2.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "suggest": {
                "ext-uopz": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "http://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "time": "2017-04-27T15:39:26+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/7cfd9e65d11ffb5af41198476395774d4c8a84c5",
                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "sebastian/object-reflector": "^1.1.1",
                "sebastian/recursion-context": "^3.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "time": "2017-08-03T12:35:26+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "1.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "773f97c67f28de00d397be301821b06708fca0be"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/773f97c67f28de00d397be301821b06708fca0be",
                "reference": "773f97c67f28de00d397be301821b06708fca0be",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "time": "2017-03-29T09:07:27+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "3.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
            "time": "2017-03-03T06:23:57+00:00"
        },
        {
            "name": "sebastian/resource-operations",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/resource-operations.git",
                "reference": "4d7a795d35b889bf80a0cc04e08d77cedfa917a9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/4d7a795d35b889bf80a0cc04e08d77cedfa917a9",
                "reference": "4d7a795d35b889bf80a0cc04e08d77cedfa917a9",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides a list of PHP built-in functions that operate on resources",
            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
            "time": "2018-10-04T04:07:39+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "99732be0ddb3361e16ad77b68ba41efc8e979019"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/99732be0ddb3361e16ad77b68ba41efc8e979019",
                "reference": "99732be0ddb3361e16ad77b68ba41efc8e979019",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "time": "2016-10-03T07:35:21+00:00"
        },
        {
            "name": "slevomat/coding-standard",
            "version": "4.4.6",
            "source": {
                "type": "git",
                "url": "https://github.com/slevomat/coding-standard.git",
                "reference": "861e7b55d348c81a9dd0b3655dbbc83076d60c05"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/slevomat/coding-standard/zipball/861e7b55d348c81a9dd0b3655dbbc83076d60c05",
                "reference": "861e7b55d348c81a9dd0b3655dbbc83076d60c05",
                "shasum": ""
            },
            "require": {
                "php": "^7.1",
                "squizlabs/php_codesniffer": "^3.0.2"
            },
            "require-dev": {
                "jakub-onderka/php-parallel-lint": "0.9.2",
                "phing/phing": "2.16",
                "phpstan/phpstan": "0.9.2",
                "phpstan/phpstan-phpunit": "0.9.4",
                "phpstan/phpstan-strict-rules": "0.9",
                "phpunit/php-code-coverage": "6.0.1",
                "phpunit/phpunit": "7.0.0"
            },
            "type": "phpcodesniffer-standard",
            "autoload": {
                "psr-4": {
                    "SlevomatCodingStandard\\": "SlevomatCodingStandard"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Slevomat Coding Standard for PHP_CodeSniffer complements Consistence Coding Standard by providing sniffs with additional checks.",
            "time": "2018-02-15T17:13:28+00:00"
        },
        {
            "name": "squizlabs/php_codesniffer",
            "version": "3.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                "reference": "379deb987e26c7cd103a7b387aea178baec96e48"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/379deb987e26c7cd103a7b387aea178baec96e48",
                "reference": "379deb987e26c7cd103a7b387aea178baec96e48",
                "shasum": ""
            },
            "require": {
                "ext-simplexml": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": ">=5.4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0"
            },
            "bin": [
                "bin/phpcs",
                "bin/phpcbf"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Greg Sherwood",
                    "role": "lead"
                }
            ],
            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
            "homepage": "http://www.squizlabs.com/php-codesniffer",
            "keywords": [
                "phpcs",
                "standards"
            ],
            "time": "2018-12-19T23:57:18+00:00"
        },
        {
            "name": "symfony/process",
            "version": "v4.2.2",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/process.git",
                "reference": "ea043ab5d8ed13b467a9087d81cb876aee7f689a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/process/zipball/ea043ab5d8ed13b467a9087d81cb876aee7f689a",
                "reference": "ea043ab5d8ed13b467a9087d81cb876aee7f689a",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Process\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Process Component",
            "homepage": "https://symfony.com",
            "time": "2019-01-03T14:48:52+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/cb2f008f3f05af2893a87208fe6a6c4985483f8b",
                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "time": "2017-04-07T12:08:54+00:00"
        },
        {
            "name": "webmozart/assert",
            "version": "1.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/webmozart/assert.git",
                "reference": "83e253c8e0be5b0257b881e1827274667c5c17a9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/webmozart/assert/zipball/83e253c8e0be5b0257b881e1827274667c5c17a9",
                "reference": "83e253c8e0be5b0257b881e1827274667c5c17a9",
                "shasum": ""
            },
            "require": {
                "php": "^5.3.3 || ^7.0",
                "symfony/polyfill-ctype": "^1.8"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.6",
                "sebastian/version": "^1.0.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.3-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Webmozart\\Assert\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Assertions to validate method input/output with nice error messages.",
            "keywords": [
                "assert",
                "check",
                "validate"
            ],
            "time": "2018-12-25T11:19:39+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": {
        "php": "^7.1"
    },
    "platform-dev": []
}


================================================
File: /tests/phpunit/bootstrap.php
================================================
<?php

declare(strict_types=1);

require __DIR__ . '/../../vendor/autoload.php';


================================================
File: /tests/functional/basic-sample-2-tables/expected-code
================================================
0

================================================
File: /tests/functional/basic-sample-2-tables/expected/data/out/tables/root_el.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-tables/expected/data/out/tables/root_el.csv
================================================
"root_el_orders_order_id","root_el_orders_order_date","root_el_orders_order_cust_name","root_el_orders_order_order-item"
"1","2018-01-01","David","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"2","2018-07-02","Tom","root_el.root_el.orders.order_417d91644a84d2dd7e423f2bdfaa777f"


================================================
File: /tests/functional/basic-sample-2-tables/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-tables/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv
================================================
"price_xml_attr_currency_u0","price_txt_content_u0","item_u0","JSON_parentId"
"CZK","100","Umbrella","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"CZK","200","Rain Coat","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"GBP","100","Sun Screen","root_el.root_el.orders.order_417d91644a84d2dd7e423f2bdfaa777f"


================================================
File: /tests/functional/basic-sample-2-tables/source/data/in/tables/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": {
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-tables/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-tables/source/data/config.json
================================================
{
    "parameters": {
        "mapping": [],
        "incremental": false,
        "root_node": "",
        "in_type": "tables"
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/sample-1-table-root-el-mapping/expected-code
================================================
0

================================================
File: /tests/functional/sample-1-table-root-el-mapping/expected/data/out/tables/root_el.csv.manifest
================================================
{"incremental":false,"primary_key":["order_id"]}

================================================
File: /tests/functional/sample-1-table-root-el-mapping/expected/data/out/tables/root_el.csv
================================================
"order_id","order_date","customer_name"
"","",""


================================================
File: /tests/functional/sample-1-table-root-el-mapping/expected/data/out/tables/order-items.csv.manifest
================================================
{"incremental":false,"primary_key":["row_nr","order_id"]}

================================================
File: /tests/functional/sample-1-table-root-el-mapping/expected/data/out/tables/order-items.csv
================================================
"row_nr","currency","price_value","item_name","order_id"
"","","","",""


================================================
File: /tests/functional/sample-1-table-root-el-mapping/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-1-table-root-el-mapping/source/data/config.json
================================================
{
    "parameters": {
        "mapping" : {
			"id": {
				"type": "column",
				"mapping": {
					"destination": "order_id",
					"primaryKey": true
				}
			},
			"date": {
				"type": "column",
				"mapping": {
					"destination": "order_date"
				}
			},
			"cust_name": {
				"type": "column",
				"mapping": {
					"destination": "customer_name"
				}
			},
			"order-item": {
				"type": "table",
				"destination": "order-items",
				"parentKey": {
					"primaryKey": true,
					"destination": "order_id"
				},
				"tableMapping": {
					"row_nr": {
						"type": "column",
						"mapping": {
							"destination": "row_nr",

							"primaryKey": true
						}
					},
					"price.xml_attr_currency": {
						"type": "column",
						"mapping": {
							"destination": "currency"
						}
					},
					"price.txt_content_": {
						"type": "column",
						"mapping": {
							"destination": "price_value"
						}
					},
					"item": {
						"type": "column",
						"mapping": {
							"destination": "item_name"
						}
					}
				}
			}},
        "incremental": false,
        "root_node": "root_el",
        "in_type": "tables"
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/sample-2-tables-add-file-name/expected-code
================================================
0

================================================
File: /tests/functional/sample-2-tables-add-file-name/expected/data/out/tables/root_el.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/sample-2-tables-add-file-name/expected/data/out/tables/root_el.csv
================================================
"root_el_orders_order_id","root_el_orders_order_date","root_el_orders_order_cust_name","root_el_orders_order_order-item","root_el_keboola_file_name_col"
"1","2018-01-01","David","root_el.root_el.orders.order_e405d689958eba767c0815395083049d","sample1.xml.json"
"2","2018-07-02","Tom","root_el.root_el.orders.order_a0e835a5507c22d37062230f7895f7b0","sample2.xml.json"


================================================
File: /tests/functional/sample-2-tables-add-file-name/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/sample-2-tables-add-file-name/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv
================================================
"price_xml_attr_currency","price_txt_content","item","JSON_parentId"
"CZK","100","Umbrella","root_el.root_el.orders.order_e405d689958eba767c0815395083049d"
"CZK","200","Rain Coat","root_el.root_el.orders.order_e405d689958eba767c0815395083049d"
"GBP","100","Sun Screen","root_el.root_el.orders.order_a0e835a5507c22d37062230f7895f7b0"


================================================
File: /tests/functional/sample-2-tables-add-file-name/source/data/in/tables/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": {
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-add-file-name/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-add-file-name/source/data/in/files/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": [{
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-add-file-name/source/data/in/files/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-add-file-name/source/data/config.json
================================================
{
    "parameters": {
        "mapping": [],
        "incremental": false,
        "root_node": "",
        "in_type": "files",
        "add_file_name": true 
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/basic-sample-2-files/expected-code
================================================
0

================================================
File: /tests/functional/basic-sample-2-files/expected/data/out/tables/root_el.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-files/expected/data/out/tables/root_el.csv
================================================
"root_el_orders_order_id","root_el_orders_order_date","root_el_orders_order_cust_name","root_el_orders_order_order-item"
"1","2018-01-01","David","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"2","2018-07-02","Tom","root_el.root_el.orders.order_c16d82fffec2c01bd0659533600352ae"


================================================
File: /tests/functional/basic-sample-2-files/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-files/expected/data/out/tables/root_el_root_el_orders_order_order-item.csv
================================================
"price_xml_attr_currency","price_txt_content","item","JSON_parentId"
"CZK","100","Umbrella","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"CZK","200","Rain Coat","root_el.root_el.orders.order_0a522195d222a8a0dcdc268eadd79625"
"GBP","100","Sun Screen","root_el.root_el.orders.order_c16d82fffec2c01bd0659533600352ae"


================================================
File: /tests/functional/basic-sample-2-files/source/data/in/files/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": [{
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}]
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-files/source/data/in/files/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-files/source/data/config.json
================================================
{
    "parameters": {
        "mapping": [],
        "incremental": false,
        "root_node": "",
        "in_type": "files"
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/sample-2-tables-root-el-mapping/expected-code
================================================
0

================================================
File: /tests/functional/sample-2-tables-root-el-mapping/expected/data/out/tables/root_el.csv.manifest
================================================
{"incremental":false,"primary_key":["order_id"]}

================================================
File: /tests/functional/sample-2-tables-root-el-mapping/expected/data/out/tables/root_el.csv
================================================
"order_id","order_date","customer_name"
"","",""
"","",""


================================================
File: /tests/functional/sample-2-tables-root-el-mapping/expected/data/out/tables/order-items.csv.manifest
================================================
{"incremental":false,"primary_key":["row_nr","order_id"]}

================================================
File: /tests/functional/sample-2-tables-root-el-mapping/expected/data/out/tables/order-items.csv
================================================
"row_nr","currency","price_value","item_name","order_id"
"","","","",""
"","","","",""


================================================
File: /tests/functional/sample-2-tables-root-el-mapping/source/data/in/tables/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": {
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping/source/data/config.json
================================================
{
    "parameters": {
        "mapping" : {
			"id": {
				"type": "column",
				"mapping": {
					"destination": "order_id",
					"primaryKey": true
				}
			},
			"date": {
				"type": "column",
				"mapping": {
					"destination": "order_date"
				}
			},
			"cust_name": {
				"type": "column",
				"mapping": {
					"destination": "customer_name"
				}
			},
			"order-item": {
				"type": "table",
				"destination": "order-items",
				"parentKey": {
					"primaryKey": true,
					"destination": "order_id"
				},
				"tableMapping": {
					"row_nr": {
						"type": "column",
						"mapping": {
							"destination": "row_nr",

							"primaryKey": true
						}
					},
					"price.xml_attr_currency": {
						"type": "column",
						"mapping": {
							"destination": "currency"
						}
					},
					"price.txt_content_": {
						"type": "column",
						"mapping": {
							"destination": "price_value"
						}
					},
					"item": {
						"type": "column",
						"mapping": {
							"destination": "item_name"
						}
					}
				}
			}},
        "incremental": false,
        "root_node": "root_el",
        "in_type": "tables"
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/DatadirTest.php
================================================
<?php

declare(strict_types=1);

namespace esnerda\Json2CsvProcessor\FunctionalTests;

use Keboola\DatadirTests\DatadirTestCase;
use Keboola\DatadirTests\DatadirTestSpecification;

class DatadirTest extends DatadirTestCase
{
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/expected-code
================================================
0

================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/expected/data/out/tables/root.csv.manifest
================================================
{"incremental":false,"primary_key":["order_id"]}

================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/expected/data/out/tables/order-items.csv.manifest
================================================
{"incremental":false,"primary_key":["row_nr","order_id"]}

================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/expected/data/out/tables/root.csv
================================================
"order_id","order_date","customer_name"
"","",""
"","",""


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/expected/data/out/tables/order-items.csv
================================================
"row_nr","currency","price_value","item_name","order_id"
"","","","",""
"","","","",""


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/source/data/in/tables/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": [{
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/source/data/in/files/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": [{
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/source/data/in/files/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/sample-2-tables-root-el-mapping-add-filename/source/data/config.json
================================================
{
    "parameters": {
        "mapping": {
			"id": {
				"type": "column",
				"mapping": {
					"destination": "order_id",
					"primaryKey": true
				}
			},
			"date": {
				"type": "column",
				"mapping": {
					"destination": "order_date"
				}
			},
			"cust_name": {
				"type": "column",
				"mapping": {
					"destination": "customer_name"
				}
			},
			"order-item": {
				"type": "table",
				"destination": "order-items",
				"parentKey": {
					"primaryKey": true,
					"destination": "order_id"
				},
				"tableMapping": {
					"row_nr": {
						"type": "column",
						"mapping": {
							"destination": "row_nr",

							"primaryKey": true
						}
					},
					"price.xml_attr_currency": {
						"type": "column",
						"mapping": {
							"destination": "currency"
						}
					},
					"price.txt_content_": {
						"type": "column",
						"mapping": {
							"destination": "price_value"
						}
					},
					"item": {
						"type": "column",
						"mapping": {
							"destination": "item_name"
						}
					}
				}
			}},
        "incremental": false,
        "root_node": "",
        "in_type": "files",
        "add_file_name": true 
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /tests/functional/basic-sample-2-tables-root-el/expected-code
================================================
0

================================================
File: /tests/functional/basic-sample-2-tables-root-el/expected/data/out/tables/orders_orders_order_order-item.csv
================================================
"price_xml_attr_currency_u0","price_txt_content_u0","item_u0","JSON_parentId"
"CZK","100","Umbrella","orders.orders.order_b2f2f358c8c08dcc616ae523d94ac518"
"CZK","200","Rain Coat","orders.orders.order_b2f2f358c8c08dcc616ae523d94ac518"
"GBP","100","Sun Screen","orders.orders.order_d4b576112e3171d2c7b4ed15e8c49f8c"


================================================
File: /tests/functional/basic-sample-2-tables-root-el/expected/data/out/tables/orders.csv
================================================
"orders_order_id","orders_order_date","orders_order_cust_name","orders_order_order-item"
"1","2018-01-01","David","orders.orders.order_b2f2f358c8c08dcc616ae523d94ac518"
"2","2018-07-02","Tom","orders.orders.order_d4b576112e3171d2c7b4ed15e8c49f8c"


================================================
File: /tests/functional/basic-sample-2-tables-root-el/expected/data/out/tables/orders.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-tables-root-el/expected/data/out/tables/orders_orders_order_order-item.csv.manifest
================================================
{"incremental":false}

================================================
File: /tests/functional/basic-sample-2-tables-root-el/source/data/in/tables/sample2.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": {
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-tables-root-el/source/data/in/tables/sample1.xml.json
================================================
{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}


================================================
File: /tests/functional/basic-sample-2-tables-root-el/source/data/config.json
================================================
{
    "parameters": {
        "mapping": [],
        "incremental": false,
        "root_node": "root_el",
        "in_type": "tables"
    },
    "image_parameters": {},
    "action": "run",
    "storage": {},
    "authorization": {}
}

================================================
File: /LICENSE
================================================
MIT License

Copyright (c) 2018 Keboola

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


================================================
File: /composer.json
================================================
{
    "autoload": {
        "psr-4": {
            "esnerda\\Json2CsvProcessor\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "esnerda\\Json2CsvProcessor\\Tests\\": "tests/phpunit/"
        }
    },
    "name": "esnerda/json2csvprocessor",
    "license": "MIT",
    "description": "Convert Json files to CSV",
    "type": "project",
    "require": {
        "PHP": "^7.1",
        "keboola/php-component": "^4.1",
        "keboola/json-parser": "^2.1",
        "keboola/csvmap": "^0.5"
    },
    "require-dev": {
        "jakub-onderka/php-parallel-lint": "^1.0",
        "keboola/coding-standard": "^1.0",
        "keboola/php-temp": "^1.0",
        "phpstan/phpstan-shim": "^0.9.2",
        "phpunit/phpunit": "^7.0",
        "slevomat/coding-standard": "4.4.6",
        "squizlabs/php_codesniffer": "~3.2",
        "symfony/process": "^4.0",
        "keboola/datadir-tests": "2.3.1"
    },
    "config": {
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "scripts": {
        "tests-phpunit": "phpunit",
        "tests-datadir": "phpunit tests/functional",
        "tests": [
            "@tests-phpunit",
            "@tests-datadir"
        ],        
        "build": [
            "@tests"
        ],
        "ci": [
            "@composer validate --no-check-publish --no-check-all",
            "@build"
        ]
    }
}

================================================
File: /Dockerfile
================================================
FROM php:7-cli

ARG COMPOSER_FLAGS="--prefer-dist --no-interaction"
ARG DEBIAN_FRONTEND=noninteractive
ENV COMPOSER_ALLOW_SUPERUSER 1

WORKDIR /code/

COPY docker/php-prod.ini /usr/local/etc/php/php.ini
COPY docker/composer-install.sh /tmp/composer-install.sh

RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        unzip \
	&& rm -r /var/lib/apt/lists/* \
	&& chmod +x /tmp/composer-install.sh \
	&& /tmp/composer-install.sh

## Composer - deps always cached unless changed
# First copy only composer files
COPY composer.* /code/
# Download dependencies, but don't run scripts or init autoloaders as the app is missing
RUN composer install $COMPOSER_FLAGS --no-scripts --no-autoloader
# copy rest of the app
COPY . /code/
# run normal composer - all deps are cached already
RUN composer install $COMPOSER_FLAGS

CMD ["php", "/code/src/run.php"]


================================================
File: /src/JsonToCSvParser.php
================================================
<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace esnerda\Json2CsvProcessor;

use Keboola\Json\Analyzer;
use Keboola\Json\Parser;
use Keboola\Json\Structure;
use Keboola\CsvMap\Mapper;

/**
 * Description of JsonToCSvParser
 *
 * @author esner
 */
class JsonToCSvParser
{
    private $logger;
    private $parser;
    private $type;

    public function __construct($mapping, $logger, $type)
    {
        $this->logger = $logger;
        $this->type = $type;
        if ($mapping) {
            $this->parser = new Mapper($mapping, $type);
        } else {
            $this->parser = new Parser(new Analyzer($logger, new Structure(), true));
        }
    }

    public function parse($json_data)
    {
        $type = $this->getType($json_data);
        if (!is_array($json_data)) {
            $json_data = [$json_data];
        }
        if ($this->parser instanceof Mapper) {
            $this->parser->parse($json_data);
        } else {
            $this->parser->process($json_data, $type);
        }
    }

    public function getCsvFiles()
    {
        return $this->parser->getCsvFiles();
    }

    private function getType($json_data)
    {
        $type = key($json_data);
        if (!is_string ($type)) {
            $type = 'root';
        }
        return $type;
    }

    public function getResult()
    {
        return $this->parser->getCsvFiles();
    }

    private function addRowNumber($json)
    {
    }
}


================================================
File: /src/test.php
================================================
<?php

require '../vendor/autoload.php';

use esnerda\XML2CsvProcessor\XML2JsonConverter;
use Keboola\CsvTable\Table;


use Keboola\Json\Analyzer;
use Keboola\Json\Parser;
use Keboola\Json\Structure;
use Keboola\CsvMap\Mapper;
use Symfony\Component\Filesystem\Filesystem;
use Keboola\Component\Logger;

ini_set('memory_limit','1024M');
$memory_limit = ini_get('memory_limit');


//order-item is array
$json1 = json_decode('{
	"root_el": {
		"orders": {
			"order": {
				"id": "1",
				"date": "2018-01-01",
				"cust_name": "David",
				"order-item": [{
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "100"
						},
						"item": "Umbrella"
					}, {
						"price": {
							"xml_attr_currency": "CZK",
							"txt_content_": "200"
						},
						"item": "Rain Coat"
					}
				]
			}
		}
	}
}
');
// slightly different structure - order-item is object

$json2 = json_decode('{
	"root_el": {
		"orders": {
			"order": {
				"id": "2",
				"date": "2018-07-02",
				"cust_name": "Tom",
				"order-item": {
					"price": {
						"xml_attr_currency": "GBP",
						"txt_content_": "100"
					},
					"item": "Sun Screen"
				}
			}
		}
	}
}
');
$testfolder = '../data/out/tables';

$parser = new Parser(new Analyzer(new Logger(), new Structure()));

$parser->process([$json1]);
$parser->process([$json2]);

$results = $parser->getCsvFiles();
$fs = new Filesystem();
foreach ($results as $res){
    $dest = $testfolder.'/'.$res->getName().'.csv';
     copy($res->getPathname(), $dest);
}


================================================
File: /src/run.php
================================================
<?php

declare(strict_types = 1);

use Keboola\Component\UserException;
use Keboola\Component\Logger;
use esnerda\Json2CsvProcessor\Component;

require __DIR__ . '/../vendor/autoload.php';

$logger = new Logger();
try {
    if (count($argv) > 1) {
        putenv("KBC_DATADIR=$argv[1]");
    }
    $app = new Component($logger);
    $app->run();
    $logger->info("Conversion finished..");
    exit(0);
} catch (UserException $e) {
    $logger->error($e->getMessage());
    exit(1);
} catch (\Throwable $e) {
    $logger->critical(
            get_class($e) . ':' . $e->getMessage(), [
        'errFile' => $e->getFile(),
        'errLine' => $e->getLine(),
        'errCode' => $e->getCode(),
        'errTrace' => $e->getTraceAsString(),
        'errPrevious' => $e->getPrevious() ? get_class($e->getPrevious()) : '',
            ]
    );
    exit(1);
}


================================================
File: /src/Config.php
================================================
<?php

declare(strict_types = 1);

namespace esnerda\Json2CsvProcessor;

use Keboola\Component\Config\BaseConfig;

class Config extends BaseConfig {

    // @todo implement your custom getters
    public function getMapping(): array {
        return $this->getValue(['parameters', 'mapping']);
    }

    public function getAppendRowNr(): bool {
        return $this->getValue(['parameters', 'append_row_nr']);
    }

    public function isIncremental(): bool {
        return $this->getValue(['parameters', 'incremental']);
    }

    public function addFileName(): bool {
        return $this->getValue(['parameters', 'add_file_name']);
    }

    public function getRootNode(): string {
        return $this->getValue(['parameters', 'root_node']);
    }

    public function getInputType(): string {
        return $this->getValue(['parameters', 'in_type']);
    }

}


================================================
File: /src/Processor.php
================================================
<?php

namespace esnerda\Json2CsvProcessor;

use Keboola\Component\UserException;
use Symfony\Component\Finder\Finder;

class Processor
{
    const FILE_NAME_COL_NAME = 'keboola_file_name_col';
    /** @var  string */
    private $jsonParser;
    private $root_el;

    /** @var  bool */
    private $incremental;
    private $add_row_nr;
    private $addFileName;

    /** @var LoggerInterface */
    private $logger;

    public function __construct($jsonParser, bool $add_row_nr, bool $incremental, string $root_el, bool $addFileName, $logger)
    {
        $this->jsonParser = $jsonParser;
        $this->add_row_nr = $add_row_nr;
        $this->incremental = $incremental;
        $this->root_el = $root_el;
        $this->addFileName = $addFileName;
        $this->logger = $logger;
    }

    public function convert(string $datadir, string $type): self
    {
        return $this->processFiles(
                        sprintf("%s/in/" . $type . '/', $datadir),
            sprintf("%s/out/tables/", $datadir)
        );
    }

    private function processFiles(string $inputDir, string $outputDir): self
    {
        $finderFiles = new Finder();
        
        $finderFiles->files()->in($inputDir)->notName('*.manifest');
        $finderFiles->sortByName();
        $manifests = $this->getManifests($inputDir);

        foreach ($finderFiles as $file) {
            $this->logger->info("Parsing file " . $file->getFileName());

            $json_string = file_get_contents($file->getRealPath());
            $json_content = json_decode($json_string);

            // get root if specified
            $json_result_root = $this->getRoot($json_content);
            // add file name col
            if ($this->addFileName) {
                $json_result_root = $this->addFileName(json_encode($json_result_root), $file->getFileName(), self::FILE_NAME_COL_NAME);
            }
            $this->jsonParser->parse($json_result_root, $this->add_row_nr);
        }

        $this->logger->info("Writting results..");
        $csv_files = $this->jsonParser->getCsvFiles();
        $this->storeResults($outputDir, $csv_files, $this->incremental);
        return $this;
    }

    private function addFileName($json, $fileName, $colName)
    {
        // convert to arrays
        $json_arr = json_decode($json, true);
        // add filename col to root
        if (!is_array($json_arr)) {
            $json_arr[$colName] = $fileName;
        } else {
            // if its array, add field to all members
            foreach ($json_arr as $key => $entry) {
                $json_arr[$key][$colName] = $fileName;
            }
        }
        return json_decode(json_encode($json_arr));
    }
    private function getRoot($json)
    {
        if ($this->root_el != null) {
            $nodes = explode('.', $this->root_el);
            $root = $json;
            foreach ($nodes as $node) {
                $root = $root->{$node};
            }
            return $root;
        } else {
            return $json;
        }
    }

    private function getManifests($inputDir)
    {
        $finderManifests = new Finder();
        $manifests = [];
        $finderManifests->files()->in($inputDir)->name('*.manifest');
        foreach ($finderManifests->name('*.manifest') as $manifest) {
            $manFile = file_get_contents($manifest->getRealPath());
            $destination = explode('.', json_decode($manFile)->destination);
            if (count($destination) >= 2) {
                $manifests[$manifest->getFilename()] = $destination[0] . '.' . $destination[1];
            }
        }
        return $manifests;
    }

    /**
     * @param Table[] $csvFiles
     * @param string $bucketName
     * @param bool $sapiPrefix whether to prefix the output bucket with "in.c-"
     * @param bool $incremental Set the incremental flag in manifest
     * TODO: revisit this
     */
    private function storeResults(string $outdir, array $csvFiles, $incremental = false, $bucketName = null, $sapiPrefix = true)
    {
        foreach ($csvFiles as $key => $file) {
            $path = $outdir;

            if ($file == null) {
                $this->logger->info("No results parsed.");
                return $this;
            }
            if (!is_null($bucketName)) {
                $path .= $bucketName . '/';
                $bucketName = $sapiPrefix ? 'in.c-' . $bucketName : $bucketName;
            }
            if (!is_dir($path)) {
                mkdir($path, null, true);
                chown($path, fileowner($outdir));
                chgrp($path, filegroup($outdir));
            }

            $resFileName = $key . '.csv';
            $manifest = [];
            if (!is_null($bucketName)) {
                $manifest['destination'] = "{$bucketName}.{$key}";
            }
            $manifest['incremental'] = is_null($file->getIncremental()) ? $incremental : $file->getIncremental();
            if (!empty($file->getPrimaryKey())) {
                $manifest['primary_key'] = $file->getPrimaryKey(true);
            }
            $this->logger->info("Writting reult file: " . $resFileName);
            file_put_contents($path . $resFileName . '.manifest', json_encode($manifest));
            copy($file->getPathname(), $path . $resFileName);
        }
    }
}


================================================
File: /src/ConfigDefinition.php
================================================
<?php

declare(strict_types = 1);

namespace esnerda\Json2CsvProcessor;

use Keboola\Component\Config\BaseConfigDefinition;
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;

class ConfigDefinition extends BaseConfigDefinition {

    protected function getParametersDefinition(): ArrayNodeDefinition {
        $parametersNode = parent::getParametersDefinition();
        // @formatter:off
        /** @noinspection NullPointerExceptionInspection */
        $parametersNode
                ->children()
                ->variableNode('mapping')
                ->end()
                ->enumNode('placement')
                ->values(array('prepend', 'append'))
                ->end()
                ->scalarNode('append_row_nr')
                ->defaultValue(false)
                ->end()
                ->scalarNode('incremental')
                ->defaultValue(false)
                ->end()
                ->scalarNode('add_file_name')
                ->defaultValue(false)
                ->end()
                ->scalarNode('root_node')
                ->defaultValue(null)
                ->end()
                ->scalarNode('in_type')
                ->defaultValue('tables')
                ->end()
                ->variableNode('always_array')
                ->end()
                ->end()
        ;
        // @formatter:on
        return $parametersNode;
    }

}


================================================
File: /src/Component.php
================================================
<?php

declare(strict_types = 1);

namespace esnerda\Json2CsvProcessor;

use Keboola\Component\BaseComponent;

class Component extends BaseComponent {

    public function run(): void {
        $type = 'root';
        if ($this->getConfig()->getRootNode() != NULL) {
            $nodes = explode('.', $this->getConfig()->getRootNode());
            $type = $nodes[count($nodes) - 1];
        }
        $jsonParser = new JsonToCSvParser($this->getConfig()->getMapping(), $this->getLogger(), $type);

        $processor = new Processor(
                $jsonParser, $this->getConfig()->getAppendRowNr(),
                $this->getConfig()->isIncremental(), 
                $this->getConfig()->getRootNode(),
                $this->getConfig()->addFileName(),
                $this->getLogger()
        );



        $processor->convert($this->getDataDir(), $this->getConfig()->getInputType());
    }

    protected function getConfigClass(): string {
        return Config::class;
    }

    protected function getConfigDefinitionClass(): string {
        return ConfigDefinition::class;
    }

}


================================================
File: /bitbucket-pipelines.yml
================================================
options:
  docker: true

pipelines:
  default:
    - step:
        script:
          - export APP_IMAGE=$APP_IMAGE
          - docker -v
          - docker build -t $APP_IMAGE .
          - docker run $APP_IMAGE composer ci

  tags:
    '*':
      - step:
          deployment: production
          script:
          - docker -v
          - docker build -t $APP_IMAGE .
          - docker run $APP_IMAGE composer ci
          # push test image to ECR - uncomment when initialised
          # - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
          # - docker tag $APP_IMAGE:latest $REPOSITORY:test
          # - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
          # - docker push $REPOSITORY:test
          # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test
          # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $KBC_CONFIG_1 test
          - ./deploy.sh

================================================
File: /.dockerignore
================================================
vendor/


================================================
File: /deploy.sh
================================================
#!/bin/bash
set -e

if [ $BITBUCKET_BRANCH != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${BITBUCKET_TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})
docker push ${REPOSITORY}:${BITBUCKET_TAG}
docker push ${REPOSITORY}:latest

# Deploy to KBC -> update the tag in Keboola Developer Portal (needs $KBC_DEVELOPERPORTAL_VENDOR & $KBC_DEVELOPERPORTAL_APP)
docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${BITBUCKET_TAG} ecr ${REPOSITORY}


================================================
File: /docker-compose.yml
================================================
version: "2"
services:
  # for development purposes
  dev:
    build: .
    volumes:
        - ./:/code
        - ./data:/data
    environment:
      - KBC_DATADIR=./data
    mem_limit: 256m
  test:
    build: .
    volumes:
        - ./:/code
        - ./data:/data
    environment:
      - KBC_DATADIR=./data
    command: composer ci


================================================
File: /docker/php-prod.ini
================================================
; Recommended production values
display_errors = Off
display_startup_errors = Off
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
html_errors = On
log_errors = On
max_input_time = 60
output_buffering = 4096
register_argc_argv = Off
request_order = "GP"
session.gc_divisor = 1000
session.sid_bits_per_character = 5
short_open_tag = Off
track_errors = Off
variables_order = "GPCS"

; Custom
date.timezone = UTC
memory_limit = -1


================================================
File: /docker/composer-install.sh
================================================
#!/bin/sh

EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")

if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
then
    >&2 echo 'ERROR: Invalid installer signature'
    rm composer-setup.php
    exit 1
fi

php composer-setup.php --quiet --install-dir=/usr/local/bin/ --filename=composer
RESULT=$?
rm composer-setup.php
exit $RESULT


================================================
File: /phpunit.xml.dist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<phpunit backupGlobals="false"
         backupStaticAttributes="false"
         colors="true"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         processIsolation="false"
         stopOnFailure="false"
         bootstrap="tests/phpunit/bootstrap.php">
    <testsuite name="Main Test Suite">
        <directory>tests/phpunit</directory>
    </testsuite>
</phpunit>


================================================
File: /README.md
================================================


# JSON2CSV processor
Keboola Connection processor for JSON to CSV conversion.


Converts JSON files to CSV. May be used as an easier way of parsing JSON values than directly in `Snowflake SQL` in conjunction with [Column to Files app](https://bitbucket.org/kds_consulting_team/kds-team.app-column-to-files)

**Credits:**
- For JSON2CSV conversion uses Keboola developed [Json parser](https://github.com/keboola/php-jsonparser) and [CsvMap](https://github.com/keboola/php-csvmap) for analysis and automatic conversion from JSON to CSV. Supports Generic Ex -like mapping configuration.

# Usage
## Configuration parameters

- **in_type** (enum [`files`,`tables`]) -  specifies the input folder where to look for input data. e.g. when set to `table` the processor will look for inpu in `/in/tables/` folder.
- **incremental** (bool) - flag whether the resulting tables should be uploaded incrementally. Makes most sense with mapping setup, since it allows you to specify primary keys.
- **root_node** (string) - `.` separated path to the root node of the resulting JSON - usually you only want to map the root array, not all the wrapper tags. For more info see examples below.
- **add_file_name** (bool) - default `false` - flag whether to add the source file name column to the root object. The resulting column name is `keboola_file_name_col`. **NOTE**: Note that when you specify `root_node` the new column is added there. Also when using mapping you need to specify the mapping also for the new column name.

## Examples

### JSON example
```json
{
	"root_el": {
		"orders": {
			"order": [{
					"id": "1",
					"date": "2018-01-01",
					"cust_name": "David",
					"order-item": [{
							"price": {
								"xml_attr_currency": "CZK",
								"txt_content_": "100"
							},
							"item": "Umbrella",
							"row_nr": 1
						}, {
							"price": {
								"xml_attr_currency": "CZK",
								"txt_content_": "200"
							},
							"item": "Rain Coat",
							"row_nr": 2
						}
					],
					"row_nr": 1
				}, {
					"id": "2",
					"date": "2018-07-02",
					"cust_name": "Tom",
					"order-item": {
						"price": {
							"xml_attr_currency": "GBP",
							"txt_content_": "100"
						},
						"item": "Sun Screen",
						"row_nr": 1
					},
					"row_nr": 2
				}
			]
		}
	}
}
```

### Simple Example
Assuming JSON file in `/in/files/`.
#### Configuration
```json
{
    "definition": {
        "component": "kds-team.processor-json2csv"
    },
    "parameters" : {
	"mapping" : {},
	"incremental":true,
	"root_node" : "",
    "in_type": "files"
	}
}
```
The above produces two tables according to mapping setting `order.csv`:

| root_el.root_el.orders_a91b89e33c2b324f4204686aa64a0d5f |
| root_el_orders_order_id | root_el_orders_order_date | root_el_orders_customer_name |
|--|--|--|
| 1 |  2018-01-01| David |
| 2 |  2018-01-02|  Tom|


and `root_el_root_el_orders_order_order-item.csv`:

| price_xml_attr_currency | price_txt_content | item | row_nr| JSON_parentId
|--|--|--|--|--|
| CZK | 100| Umbrella |1|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6
| CZK | 200| Rain Coat|2|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6
| GBP | 100| Sun Screen|1|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6


### Simple Example - Add file name column
Assuming JSON file in `/in/files/`.
#### Configuration
```json
{
    "definition": {
        "component": "kds-team.processor-json2csv"
    },
    "parameters" : {
	"mapping" : {},
	"incremental":true,
	"root_node" : "",
	"in_type": "files",
	"add_file_name" : true
	}
}
```
The above produces two tables according to mapping setting `order.csv`:

| root_el.root_el.orders_a91b89e33c2b324f4204686aa64a0d5f |
| root_el_orders_order_id | root_el_orders_order_date | root_el_orders_customer_name | root_el_keboola_file_name_col
|--|--|--|--|
| 1 |  2018-01-01| David | sample.json |
| 2 |  2018-01-02|  Tom| sample.json |


and `root_el_root_el_orders_order_order-item.csv`:

| price_xml_attr_currency | price_txt_content | item | row_nr| JSON_parentId
|--|--|--|--|--|
| CZK | 100| Umbrella |1|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6
| CZK | 200| Rain Coat|2|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6
| GBP | 100| Sun Screen|1|root_el.root_el.orders.order_d3859e7943e09800b982215f5c4434c6


### Advanced Example 1 - nested arrays, with mapping
Assuming JSON file in `/in/files/`.
#### Configuration
```json
{
    "definition": {
        "component": "kds-team.processor-json2csv"
    },
    "parameters" : {
	"mapping" : {
			"id": {
				"type": "column",
				"mapping": {
					"destination": "order_id",
					"primaryKey": true
				}
			},
			"date": {
				"type": "column",
				"mapping": {
					"destination": "order_date"
				}
			},
			"cust_name": {
				"type": "column",
				"mapping": {
					"destination": "customer_name"
				}
			},
			"order-item": {
				"type": "table",
				"destination": "order-items",
				"parentKey": {
					"primaryKey": true,
					"destination": "order_id"
				},
				"tableMapping": {
					"row_nr": {
						"type": "column",
						"mapping": {
							"destination": "row_nr",

							"primaryKey": true
						}
					},
					"price.xml_attr_currency": {
						"type": "column",
						"mapping": {
							"destination": "currency"
						}
					},
					"price.txt_content_": {
						"type": "column",
						"mapping": {
							"destination": "price_value"
						}
					},
					"item": {
						"type": "column",
						"mapping": {
							"destination": "item_name"
						}
					}
				}
			}},		
	"incremental":true,
	"root_node" : "root_el.orders.order",
    "in_type": "files"
	}
}
```

#### Intermediate converted JSON - effect of `root_node` parameter
```json
[{
		"id": "1",
		"date": "2018-01-01",
		"cust_name": "David",
		"order-item": [{
				"price": {
					"xml_attr_currency": "CZK",
					"txt_content_": "100"
				},
				"item": "Umbrella",
				"row_nr": 1
			}, {
				"price": {
					"xml_attr_currency": "CZK",
					"txt_content_": "200"
				},
				"item": "Rain Coat",
				"row_nr": 2
			}
		],
		"row_nr": 1
	}, {
		"id": "2",
		"date": "2018-07-02",
		"cust_name": "Tom",
		"order-item": {
			"price": {
				"xml_attr_currency": "GBP",
				"txt_content_": "100"
			},
			"item": "Sun Screen",
			"row_nr": 1
		},
		"row_nr": 2
	}
]
```

The above produces two tables  according to mapping setting `order.csv`:

| order_id | order_date | customer_name |
|--|--|--|
| 1 |  2018-01-01| David |
| 2 |  2018-01-02|  Tom|

and `order-items.csv`:

| row_nr | currency | price_value | item_name| order_id
|--|--|--|--|--|
| 1 | CZK| 100 |Umbrella|1
| 2 | CZK| 200|Rain Coat|2
| 1 | GBP| 100|Sun Screen|2




For more information about Generic mapping plese refer to [the generic ex documentation](https://developers.keboola.com/extend/generic-extractor/map/)




For more information about processors, please refer to [the developers documentation](https://developers.keboola.com/extend/component/processors/).


================================================
File: /util-scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -t $COMP_TAG ../

echo Running component...
$DATA_PATH = Read-Host -Prompt 'Input data folder path:'
Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 




================================================
File: /util-scripts/run.bat
================================================
@echo off

echo Running component...
docker run -v %cd%:/data -e KBC_DATADIR=/data comp-tag

================================================
File: /util-scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test


