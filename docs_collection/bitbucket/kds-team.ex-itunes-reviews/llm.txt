Directory structure:
└── kds_consulting_team-kds-team.ex-itunes-reviews/
    ├── README.md
    ├── Dockerfile
    ├── LICENSE.md
    ├── bitbucket-pipelines.yml
    ├── change_log.md
    ├── deploy.sh
    ├── docker-compose.yml
    ├── flake8.cfg
    ├── requirements.txt
    ├── component_config/
    │   ├── component_long_description.md
    │   ├── component_short_description.md
    │   ├── configSchema.json
    │   ├── configuration_description.md
    │   ├── stack_parameters.json
    │   └── sample-config/
    │       ├── config.json
    │       ├── in/
    │       │   ├── state.json
    │       │   └── tables/
    │       │       ├── test.csv
    │       │       └── test.csv.manifest
    │       └── out/
    │           └── tables/
    │               ├── reviews.csv
    │               └── reviews.csv.manifest
    ├── scripts/
    │   ├── build_n_run.ps1
    │   ├── build_n_test.sh
    │   ├── run.bat
    │   ├── run.sh
    │   ├── run_kbc_tests.ps1
    │   └── update_dev_portal_properties.sh
    ├── src/
    │   ├── component.py
    │   └── lib/
    │       ├── __init__.py
    │       ├── app.py
    │       └── client.py
    └── tests/
        ├── __init__.py
        └── test_component.py

================================================
File: README.md
================================================
# iTunes Reviews Extractor

The iTunes Reviews extractor allows users to download reviews for any iTunes object (applications, songs, albumns, books, etc.) in Apple's database. The extractor downloads reviews for specified countries and incrementally saves them in Keboola Storage.

## API limitations

The extractor is limited to make 20 calls per minute, which is the direct limitation of the iTunes API. Moreover, due to storage reason, only 500 latest reviews are stored in iTunes API, hence only the latest 500 reviews can be downloaded for each object. 

**Note:** If the list of object and/or countries is too big, the extractor might be running for a couple of hours before finishing due to above API limitations.

## Configuration

Configuration of the extractor is very simple; all that's needed is a list of id's of objects and countries for which the reviews will be downloaded. The sample configuration can be found in the [extractor's repository](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/).

### Input table

The input table must be a table of **1 column** containing the id of the object. The extractor will loop over the list to download reviews for each specified object. If the 1 column specification is not met, the extractor will fail. The sample of the input table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/in/tables/test.csv).

### Countries

If the option `All countries` is selected, for each object reviews from all available countries is downloaded. Otherwise, only reviews for specified countries will be downloaded. 
If the extractor is configured via API, valid country codes must be provided. To download for all countries, use `ALL` option. See the [iTunes pages](https://affiliate.itunes.apple.com/resources/documentation/linking-to-the-itunes-music-store/#CountryCodes) for the list of all available countries and their respective country codes.

### Backfill

By default, the extractor only downloads reviews for objects, that were updated since the last successful run. By specifying `backfill` option to `true`, the extractor will download the latest 500 reviews (if available) regardless of the last successful run.

### Output

The output is a table of reviews for each object. The table is laoded incrementally into storage and uses `review_id`, `updated` and `country_code` columns as primary keys. Note that it is possible to have reviews with same `review_id` and `country_code`, but different `updated`, due to possibility of editing certain reviews. The expected output table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/out/tables/reviews.csv).

## Development

To run application locally or further develop it, run the following commands

```
docker-compose build
docker-compose run dev
```

which will build and run the `dev` image of application.


================================================
File: Dockerfile
================================================
FROM quay.io/keboola/docker-custom-python:latest

COPY . /code/
# COPY /data/ /data/

RUN pip install --ignore-installed -r /code/requirements.txt

# CODE FOLDERS
WORKDIR /code/

# RUN THE MAIN PYTHON SCRIPT
CMD ["python", "-u", "/code/src/component.py"]


================================================
File: LICENSE.md
================================================
The MIT License (MIT)

Copyright (c) 2018 Keboola DS, http://keboola.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files, to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


================================================
File: bitbucket-pipelines.yml
================================================
options:
  docker: true

pipelines:
  default:
    - step:
        script:
          - export APP_IMAGE=$APP_IMAGE
          - docker build . --tag=$APP_IMAGE
          - docker images
          - docker -v
          - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
          - echo "Running unit-tests..."
          - docker run $APP_IMAGE python -m unittest discover
          # push test image to ecr - uncomment for testing before deployment
#          - echo 'Pushing test image to repo. [tag=test]'
#          - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
#          - docker tag $APP_IMAGE:latest $REPOSITORY:test
#          - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
#          - docker push $REPOSITORY:test

  branches:
    master:
      - step:
          script:
            - export APP_IMAGE=$APP_IMAGE
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker -v
            - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
            - echo "Running unit-tests..."
            - docker run $APP_IMAGE python -m unittest discover
            # push test image to ecr - uncomment for testing before deployment
#            - echo 'Pushing test image to repo. [tag=test]'
#            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
#            - docker tag $APP_IMAGE:latest $REPOSITORY:test
#            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
#            - docker push $REPOSITORY:test
            - ./scripts/update_dev_portal_properties.sh
  tags:
    '*':
      - step:
          deployment: production
          script:
            - export APP_IMAGE=$APP_IMAGE
            - docker build . --tag=$APP_IMAGE
            - docker images
            - docker run $APP_IMAGE flake8 /code/ --config=/code/flake8.cfg
            - echo "Running unit-tests..."
            - docker run $APP_IMAGE python -m unittest discover
            - echo "Preparing KBC test image"
            - docker pull quay.io/keboola/developer-portal-cli-v2:latest
            # push test image to ECR - uncomment when initialised
            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            - docker tag $APP_IMAGE:latest $REPOSITORY:test
            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            - docker push $REPOSITORY:test
            - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP 503519629 test
            # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $KBC_CONFIG_1 test
            - ./scripts/update_dev_portal_properties.sh
            - ./deploy.sh


================================================
File: change_log.md
================================================
**0.1.0**
Added documentation and proper configuration description.
Cosmetic changes to code.
Ready for publication.

**0.0.3**
Added configuration schema

**0.0.2**
Added check for empty input and logging gelf.

**0.0.1**
Initial version of the component.


================================================
File: deploy.sh
================================================
#!/bin/sh
set -e

#check if deployment is triggered only in master
if [ $BITBUCKET_BRANCH != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi

# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`

eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})

# Push to the repository
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${BITBUCKET_TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
docker push ${REPOSITORY}:${BITBUCKET_TAG}
docker push ${REPOSITORY}:latest

# Update the tag in Keboola Developer Portal -> Deploy to KBC
if echo ${BITBUCKET_TAG} | grep -c '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$'
then
    docker run --rm \
        -e KBC_DEVELOPERPORTAL_USERNAME \
        -e KBC_DEVELOPERPORTAL_PASSWORD \
        quay.io/keboola/developer-portal-cli-v2:latest \
        update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${BITBUCKET_TAG} ecr ${REPOSITORY}
else
    echo "Skipping deployment to KBC, tag ${BITBUCKET_TAG} is not allowed."
fi



================================================
File: docker-compose.yml
================================================
version: "0.0.1"
services:
  # for development purposes
  dev:
    build: .
    volumes:
        - ./:/code
        - ./data:/data
    environment:
      - KBC_DATADIR=./data
    command: 
      - /bin/sh
      - /code/scripts/run.sh
  test:
    # Use to run flake8 and unittests checks
    build: .
    volumes:
      - ./:/code
      - ./data:/data
    environment:
      - KBC_DATADIR=./data
    command:
      - /bin/sh
      - /code/scripts/build_n_test.sh


================================================
File: flake8.cfg
================================================
[flake8]
exclude =
    .git,
    __pycache__,
    tests
max-line-length = 120

# F812: list comprehension redefines ...
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H233: Python 3.x incompatible use of print operator
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting



================================================
File: requirements.txt
================================================
logging_gelf
lxml
https://github.com/keboola/python-docker-application/zipball/master#egg=keboola
https://bitbucket.org/kds_consulting_team/keboola-python-util-lib/get/0.2.0.zip#egg=kbc



================================================
File: component_config/component_long_description.md
================================================
# iTunes Reviews Extractor

The iTunes Reviews extractor allows users to download reviews for any iTunes object (applications, songs, albumns, books, etc.) in Apple's database. The extractor downloads reviews for specified countries and incrementally saves them in Keboola Storage.

## API limitations

The extractor is limited to make 20 calls per minute, which is the direct limitation of the iTunes API. Moreover, due to storage reason, only 500 latest reviews are stored in iTunes API, hence only the latest 500 reviews can be downloaded for each object. 

**Note:** If the list of object and/or countries is too big, the extractor might be running for a couple of hours before finishing due to above API limitations.

## Configuration

Configuration of the extractor is very simple; all that's needed is a list of id's of objects and countries for which the reviews will be downloaded. The sample configuration can be found in the [extractor's repository](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/).

### Input table

The input table must be a table of **1 column** containing the id of the object. The extractor will loop over the list to download reviews for each specified object. If the 1 column specification is not met, the extractor will fail. The sample of the input table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/in/tables/test.csv).

### Countries

If the option `All countries` is selected, for each object reviews from all available countries is downloaded. Otherwise, only reviews for specified countries will be downloaded. 
If the extractor is configured via API, valid country codes must be provided. To download for all countries, use `ALL` option. See the [iTunes pages](https://affiliate.itunes.apple.com/resources/documentation/linking-to-the-itunes-music-store/#CountryCodes) for the list of all available countries and their respective country codes.

### Backfill

By default, the extractor only downloads reviews for objects, that were updated since the last successful run. By specifying `backfill` option to `true`, the extractor will download the latest 500 reviews (if available) regardless of the last successful run.

### Output

The output is a table of reviews for each object. The table is laoded incrementally into storage and uses `review_id`, `updated` and `country_code` columns as primary keys. Note that it is possible to have reviews with same `review_id` and `country_code`, but different `updated`, due to possibility of editing certain reviews. The expected output table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/out/tables/reviews.csv).

## Development

To run application locally or further develop it, run the following commands

```
docker-compose build
docker-compose run dev
```

which will build and run the `dev` image of application.


================================================
File: component_config/component_short_description.md
================================================
Download reviews for any object in iTunes database.


================================================
File: component_config/configSchema.json
================================================
{
    "title": "Parameters",
    "type": "object",
    "required": [
        "country_code",
        "backfill_mode"
    ],
    "properties": {
        "backfill_mode": {
            "type": "boolean",
            "title": "Backfill",
            "default": false,
            "description": "If checked, the extractor will ignore previously saved state and download all reviews.",
            "propertyOrder": 200
        },
        "country_code": {
            "type": "array",
            "title": "Countries",
            "items":{
                "type":"string",
                "enum": [
                    "ALL",
                    "DZ",
                    "AO",
                    "AI",
                    "AG",
                    "AR",
                    "AM",
                    "AU",
                    "AT",
                    "AZ",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BM",
                    "BO",
                    "BW",
                    "BR",
                    "VG",
                    "BN",
                    "BG",
                    "CA",
                    "KY",
                    "CL",
                    "CN",
                    "CO",
                    "CR",
                    "CI",
                    "HR",
                    "CY",
                    "CZ",
                    "DK",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "EE",
                    "FI",
                    "FR",
                    "DE",
                    "GH",
                    "GR",
                    "GD",
                    "GT",
                    "GY",
                    "HN",
                    "HK",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IE",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JO",
                    "KZ",
                    "KE",
                    "KR",
                    "KW",
                    "LV",
                    "LB",
                    "LI",
                    "LT",
                    "LU",
                    "MO",
                    "MK",
                    "MG",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MU",
                    "MX",
                    "MD",
                    "MS",
                    "NP",
                    "NL",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NO",
                    "OM",
                    "PK",
                    "PA",
                    "PY",
                    "PE",
                    "PH",
                    "PL",
                    "PT",
                    "QA",
                    "RO",
                    "RU",
                    "SA",
                    "SN",
                    "RS",
                    "SG",
                    "SK",
                    "SI",
                    "ZA",
                    "ES",
                    "LK",
                    "KN",
                    "LC",
                    "VC",
                    "SR",
                    "SE",
                    "CH",
                    "TW",
                    "TZ",
                    "TH",
                    "BS",
                    "TT",
                    "TN",
                    "TR",
                    "TC",
                    "UG",
                    "GB",
                    "UA",
                    "AE",
                    "UY",
                    "US",
                    "UZ",
                    "VE",
                    "VN",
                    "YE"
                ],
                "options":{
                    "enum_titles":[
                        "All countries",
                        "Algeria",
                        "Angola",
                        "Anguilla",
                        "Antigua & Barbuda",
                        "Argentina",
                        "Armenia",
                        "Australia",
                        "Austria",
                        "Azerbaijan",
                        "Bahrain",
                        "Bangladesh",
                        "Barbados",
                        "Belarus",
                        "Belgium",
                        "Belize",
                        "Bermuda",
                        "Bolivia",
                        "Botswana",
                        "Brazil",
                        "British Virgin Islands",
                        "Brunei",
                        "Bulgaria",
                        "Canada",
                        "Cayman Islands",
                        "Chile",
                        "China",
                        "Colombia",
                        "Costa Rica",
                        "Cote D’Ivoire",
                        "Croatia",
                        "Cyprus",
                        "Czech Republic",
                        "Denmark",
                        "Dominica",
                        "Dominican Rep.",
                        "Ecuador",
                        "Egypt",
                        "El Salvador",
                        "Estonia",
                        "Finland",
                        "France",
                        "Germany",
                        "Ghana",
                        "Greece",
                        "Grenada",
                        "Guatemala",
                        "Guyana",
                        "Honduras",
                        "Hong Kong",
                        "Hungary",
                        "Iceland",
                        "India",
                        "Indonesia",
                        "Ireland",
                        "Israel",
                        "Italy",
                        "Jamaica",
                        "Japan",
                        "Jordan",
                        "Kazakstan",
                        "Kenya",
                        "Korea, Republic Of",
                        "Kuwait",
                        "Latvia",
                        "Lebanon",
                        "Liechtenstein",
                        "Lithuania",
                        "Luxembourg",
                        "Macau",
                        "Macedonia",
                        "Madagascar",
                        "Malaysia",
                        "Maldives",
                        "Mali",
                        "Malta",
                        "Mauritius",
                        "Mexico",
                        "Moldova, Republic Of",
                        "Montserrat",
                        "Nepal",
                        "Netherlands",
                        "New Zealand",
                        "Nicaragua",
                        "Niger",
                        "Nigeria",
                        "Norway",
                        "Oman",
                        "Pakistan",
                        "Panama",
                        "Paraguay",
                        "Peru",
                        "Philippines",
                        "Poland",
                        "Portugal",
                        "Qatar",
                        "Romania",
                        "Russia",
                        "Saudi Arabia",
                        "Senegal",
                        "Serbia",
                        "Singapore",
                        "Slovakia",
                        "Slovenia",
                        "South Africa",
                        "Spain",
                        "Sri Lanka",
                        "St. Kitts & Nevis",
                        "St. Lucia",
                        "St. Vincent & The Grenadines",
                        "Suriname",
                        "Sweden",
                        "Switzerland",
                        "Taiwan",
                        "Tanzania",
                        "Thailand",
                        "The Bahamas",
                        "Trinidad & Tobago",
                        "Tunisia",
                        "Turkey",
                        "Turks & Caicos",
                        "Uganda",
                        "UK",
                        "Ukraine",
                        "United Arab Emirates",
                        "Uruguay",
                        "USA",
                        "Uzbekistan",
                        "Venezuela",
                        "Vietnam",
                        "Yemen"
                    ]
                } 
            },
            "uniqueItems": true,
            "propertyOrder": 100,
            "format":"select"
        }
    }
}


================================================
File: component_config/configuration_description.md
================================================
## Configuration

Configuration of the extractor is very simple; all that's needed is a list of id's of objects and countries for which the reviews will be downloaded. The sample configuration can be found in the [extractor's repository](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/).

### Input table

The input table must be a table of **1 column** containing the id of the object. The extractor will loop over the list to download reviews for each specified object. If the 1 column specification is not met, the extractor will fail. The sample of the input table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/in/tables/test.csv).

### Countries

If the option `All countries` is selected, for each object reviews from all available countries is downloaded. Otherwise, only reviews for specified countries will be downloaded. 
If the extractor is configured via API, valid country codes must be provided. To download for all countries, use `ALL` option. See the [iTunes pages](https://affiliate.itunes.apple.com/resources/documentation/linking-to-the-itunes-music-store/#CountryCodes) for the list of all available countries and their respective country codes.

### Backfill

By default, the extractor only downloads reviews for objects, that were updated since the last successful run. By specifying `backfill` option to `true`, the extractor will download the latest 500 reviews (if available) regardless of the last successful run.

### Output

The output is a table of reviews for each object. The table is laoded incrementally into storage and uses `review_id`, `updated` and `country_code` columns as primary keys. Note that it is possible to have reviews with same `review_id` and `country_code`, but different `updated`, due to possibility of editing certain reviews. The expected output table can be found [here](https://bitbucket.org/kds_consulting_team/kds-team.ex-itunes-reviews/src/master/component_config/sample-config/out/tables/reviews.csv).


================================================
File: component_config/stack_parameters.json
================================================
{}


================================================
File: component_config/sample-config/config.json
================================================
{
  "storage": {
    "input": {
      "files": [],
      "tables": [
        {
          "source": "in.c-test.test",
          "destination": "test.csv"
        }
      ]
    },
    "output": {
      "files": [],
      "tables": []
    }
  },
  "parameters": {
    "country_code":["CA", "US", "GB"],
    "backfill_mode": false
  },
  "image_parameters": {}
}



================================================
File: component_config/sample-config/in/state.json
================================================
{
    "861957320":{
        "CA":"2019-01-01T00:00:00-07:00",
        "GB":"2020-01-01T00:00:00-07:00"
    },
    "12345678":{
        "CA":null
    },
    "1411625594":{
        "CA":"2020-01-01T00:00:00-07:00"
    }
}


================================================
File: component_config/sample-config/in/tables/test.csv
================================================
"app_id"
"1411625594"



================================================
File: component_config/sample-config/in/tables/test.csv.manifest
================================================
{
    "id": "in.c-test.test",
    "uri": "https:\/\/connection.keboola.com\/v2\/storage\/tables\/in.c-test.test",
    "name": "test",
    "primary_key": [],
    "indexed_columns": [],
    "created": "2018-03-02T15:36:50+0100",
    "last_change_date": "2018-03-02T15:36:54+0100",
    "last_import_date": "2018-03-02T15:36:54+0100",
    "rows_count": 0,
    "data_size_bytes": 0,
    "is_alias": false,
    "attributes": [],
    "columns": [
        "app_id"
    ],
    "metadata": [],
    "column_metadata": {
       "app_id": []
    }
}


================================================
File: component_config/sample-config/out/tables/reviews.csv
================================================
"object_id","country_code","review_id","updated","title","content","voteSum","voteCount","rating","author_name","author_uri"
"1411625594","US","4065700800","2019-04-26T22:23:49-07:00","Best Imagine Dragons Songs","This Truly One of my Favorite Imagine Dragons Song our of all of them.","0","0","5","Lipro2K04","https://itunes.apple.com/us/reviews/id916858207"
"1411625594","US","4034502606","2019-04-19T16:03:35-07:00","BAD","It’s lame. And it’s not a good album. WASTE OF MONEY","0","0","1","Emarald dumond","https://itunes.apple.com/us/reviews/id954553498"
"1411625594","US","4033768713","2019-04-19T11:23:26-07:00","Feel the “Thunder”","Containing some of the most iconic songs of the decade (“Whatever It Takes,” “Believer,” and most of all, “Thunder”).\n\nI do believe that “Whatever It Takes” is SUPREMELY overrated, and that “Yesterday” and “Rise Up” are supremely UNDERrated, but that’s not why you are reading this. You are reading this to determine if you should buy the album.\n\nThe answer speaks for itself.","0","0","5","WillDaBeast496","https://itunes.apple.com/us/reviews/id975481461"
"1411625594","US","4030122199","2019-04-18T16:36:34-07:00","YASSSSS","I personally thought that the whole album is a hit and imagine dragons have done it again . Believer is my favorite song out of the album but that could be my emo self talking but whatever . Me and my bff when we are at sleep overs we blast this screaming the lyrics. That my friends Is how you know you did something right . Ten out of ten would recommend listening to at least once","0","0","5","random emo child","https://itunes.apple.com/us/reviews/id855217634"
"1411625594","US","4002598363","2019-04-12T04:41:44-07:00","👍🏾👍🏾💉💉","Amazing song!","0","0","5","period job","https://itunes.apple.com/us/reviews/id997198676"
"1411625594","US","3968347602","2019-04-04T05:47:14-07:00","🆒🆒🆒","Amazing cool hey hey hey","0","0","5","mkp0110","https://itunes.apple.com/us/reviews/id26036679"
"1411625594","US","3952946497","2019-03-31T13:37:10-07:00","Omg love this album","I love this album and group so much and yes I do fell the thunder lol","0","0","5","ropypp","https://itunes.apple.com/us/reviews/id495181227"
"1411625594","US","3947233020","2019-03-30T09:32:30-07:00","Nothing better than this❤️","I love it","0","0","5","lobronz james","https://itunes.apple.com/us/reviews/id998837553"
"1411625594","US","3938145138","2019-03-28T12:14:27-07:00","Fire.  Lit.","This song is awesome. Bro this album was a hit. Godly.  Imagine Dragons can only be classified as OG’s.  🔥🔥🔥","0","0","5","..... .... ... .. .","https://itunes.apple.com/us/reviews/id997976200"
"1411625594","US","3931173873","2019-03-26T18:48:36-07:00","Greatest song ever","In my opinion I think this is my favorite song in all the songs I heard🤩😍❤️❤️❤️⚜️","0","0","5","RoseSophiac","https://itunes.apple.com/us/reviews/id997225943"
"1411625594","US","3930876327","2019-03-26T16:49:29-07:00","Hi","Awesome","0","0","5","Starzz_Tropper","https://itunes.apple.com/us/reviews/id364667957"
"1411625594","US","3927012738","2019-03-25T17:07:39-07:00","🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥","I llloooovvvvveeeeee this music sssssoooo much I would scream🤩🤩🤩🤩🤩🤩😍😍😍😍😍","0","0","5","💀punisher","https://itunes.apple.com/us/reviews/id151099393"
"1411625594","US","3913977593","2019-03-22T16:36:09-07:00","Best","Best ever love so much 😛😛😛💩💩💩👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍","0","0","5","sorphie8puppy","https://itunes.apple.com/us/reviews/id957659334"
"1411625594","US","3907810531","2019-03-21T05:12:05-07:00","WOW","THIS ALBUM IS SO YUMMY \n🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤🤤","0","0","5","Luke Loman","https://itunes.apple.com/us/reviews/id954606554"
"1411625594","US","3900830993","2019-03-19T08:44:01-07:00","Great 👍","Keep it up","0","0","5","ha daddy","https://itunes.apple.com/us/reviews/id862145540"
"1411625594","US","3894834731","2019-03-17T17:50:13-07:00","😄😄😄😄😄😄😄😄😄😄","Three words love this song","0","0","5","MG oh wait","https://itunes.apple.com/us/reviews/id937116655"
"1411625594","US","3894543631","2019-03-17T15:56:35-07:00","🔥🔥🔥🔥🔥🔥🔥","Yes, yes, yes! I can hit the notes in thunder perfectly and these are songs the world needs!!! Keep going and never let haters hate!","0","0","5","Taylor swift fan41","https://itunes.apple.com/us/reviews/id985161418"
"1411625594","US","3892887926","2019-03-17T07:01:25-07:00","Great album","I purchased it, but looks like Crapple has deleted it from my purchased items.","0","0","5","usnathandrake","https://itunes.apple.com/us/reviews/id561921833"
"1411625594","US","3874290389","2019-03-12T14:35:43-07:00","Ye warriors","This is amazing and btw the people who say this is bad (like somebody who said they have basically only heard whatever it takes) should rethink","0","0","5","a reciwer","https://itunes.apple.com/us/reviews/id983415798"
"1411625594","US","3872755642","2019-03-12T04:47:27-07:00","...","I so great iiiiiii ...     it’s so great i just love believer  and natural and radioactive by the best imagine dragons good luck and p.s. do a halftime show again thanks byee ...","0","0","5","xmanop45","https://itunes.apple.com/us/reviews/id970353919"
"1411625594","US","3871196212","2019-03-11T17:56:19-07:00","Y R U SO GOOD","Amazing. Thunder literally changed my life when it come to music. Like origins is amazing but you can’t beat this. I was watching commercials for the MLB all star game, heard thunder, then had my friend play it on his ps4 and I bought the entire album entirely the next day. Just keep making incredible music. (P.S. why the rerelease now I have to rebuy the entire album lol) 😂🤣","0","0","5","DrizzyDylan825🏀🏈⚾️","https://itunes.apple.com/us/reviews/id664967477"
"1411625594","US","3862653931","2019-03-09T13:10:01-07:00","Yes yes yes","Hey man haters gonna hate chill guys Evolve is great","0","0","5","Bobba Fett06","https://itunes.apple.com/us/reviews/id957446858"
"1411625594","US","3851518377","2019-03-06T19:45:15-07:00","Why only part","I kinda want it to be the full song, cause of a video I’m goanna do, please make it the full song so I can do the video, please!","0","0","3","shadowrrx1300","https://itunes.apple.com/us/reviews/id978071167"
"1411625594","US","3843472622","2019-03-04T16:59:35-07:00","Good believer song I really like it","The believer song is so amazing I can never sot listening to it","0","0","5","pokefans_961","https://itunes.apple.com/us/reviews/id958170417"
"1411625594","US","3835307770","2019-03-02T19:15:46-07:00","Good songs","Don’t listen to black widow he or she is mean imagine dragons 🐉 I will love ❤️ your songs forever ♾ 🥰😍🥰😍🥰😍🥰😍🥰😍🥰🥰😍🥰😍🥰😍🥰😍🥰😍🥰😍😋🥰😍🥰😍🥰😍🥰😍🥰😍🥰😍🥰😍🥰🥰😍🥰😍🥰😍🥰🥰😍😍😍😍🥰😍🥰🥰😍😍😍😍😍🥰🥰😍🥰😍🥰😍🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩🤩ffffffffffffffffffffffffoooooooooooooooooorrrrrrrrrrrrrrrreeeeeeeeeeeeeeevvvvvvvvvvvvvvveeeeeeeeeeeeeeeerrrrrrrrrrrrrrrr!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","0","0","5","demonfuntimefreddyyt","https://itunes.apple.com/us/reviews/id746906108"
"1411625594","US","3825829011","2019-02-28T14:45:22-07:00","This is the best songs","Believer and thunder ROCK","0","0","5","love you guys songs","https://itunes.apple.com/us/reviews/id985155974"
"1411625594","US","3811048989","2019-02-24T15:25:39-07:00","THE BEST","AWSOME MUSIC","0","0","5","REBEL CLaaaaaaark","https://itunes.apple.com/us/reviews/id342885478"
"1411625594","US","3805975517","2019-02-23T10:34:29-07:00","T","R\nA\nS\nH","0","0","1","Jacksoncook225","https://itunes.apple.com/us/reviews/id489194816"
"1411625594","US","3798345209","2019-02-21T14:26:25-07:00","I love it I mean it","Imagine drogon","0","0","5","Imagine Dragon's","https://itunes.apple.com/us/reviews/id498482204"
"1411625594","US","3797799992","2019-02-21T10:34:26-07:00","Fantastic","I love the album","0","0","5","J4ylion","https://itunes.apple.com/us/reviews/id687223023"
"1411625594","US","3786853128","2019-02-18T16:56:59-07:00","LOVE IT A LOT! OwO","I love believer, Thunder, and Whatever it takes love it a lot! My friend suggested to listen to it and now I love it!","0","0","5","Bearbear🤗","https://itunes.apple.com/us/reviews/id577198728"
"1411625594","US","3782490002","2019-02-17T15:55:50-07:00","This song is my favorite I have been listening to it for 6 years","Awesome song","0","0","5","calebbossboy","https://itunes.apple.com/us/reviews/id979942515"
"1411625594","US","3775635785","2019-02-16T00:31:47-07:00","Like","My husband loves this music 🎼.  \nNow I’m starting feeling it!","0","0","5","ArtistLacy","https://itunes.apple.com/us/reviews/id41428283"
"1411625594","US","3767637017","2019-02-13T21:48:32-07:00","Annoying","Shut up","0","0","1","flowfaith","https://itunes.apple.com/us/reviews/id629738562"
"1411625594","US","3756342965","2019-02-10T19:37:57-07:00","Sick song","This song is one of my favorite songs","0","0","5","i❤️alex","https://itunes.apple.com/us/reviews/id930585304"
"1411625594","US","3741383311","2019-02-06T17:47:43-07:00","Omg love this","Just love this album and imagine Dragons","0","0","5","k&',ifkd,,dt,f,s,","https://itunes.apple.com/us/reviews/id736072861"
"1411625594","US","3737746708","2019-02-05T17:29:04-07:00","Love it!","I love this album so much! It has helped me write my book. I love it ! I am actually listening to it right now !🙂","0","0","5","password / #1 weirdo","https://itunes.apple.com/us/reviews/id737601469"
"1411625594","US","3734675101","2019-02-04T20:17:32-07:00","I LOVE IMAGINE DRAGONS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!","I’m your BIGGEST FAN!!!!!!!!!!!!!!!!!!!!!!!!! I just want you in my house!!!!!!!!!!","0","0","5","I LOVE WORD COOKIES!","https://itunes.apple.com/us/reviews/id862166987"
"1411625594","US","3734403780","2019-02-04T18:35:14-07:00","Exquisite","My dad and I listened to this all the time when I was little but he died when I was in first grade but in his memory I’ll listen to it when I have kids R.I.P. Joshua Padgett 😔😢🙁 in loving memory... father..son..husband...brother... and friend, Firefighter... and Sappi worker we love you and we’ll never forget to wear our seatbelts like you should have and in memory of the other lady my moms bus driver we love you imagine dragons thank you for getting me through my loss Madison Padgett/Sindelir","0","0","5","dog lady 🐶","https://itunes.apple.com/us/reviews/id974203890"
"1411625594","US","3732707675","2019-02-04T06:51:57-07:00","Great album","I really enjoy the songs, they are great. I think all the songs on all their albums are superb.","0","0","5","ALLTHE KINGS MEN","https://itunes.apple.com/us/reviews/id102016987"
"1411625594","US","3722692553","2019-02-01T19:48:50-07:00","Definitely An Evolution","Evolve introduces and new, cleaner sound to Imagine Dragons, and is definitely an evolution from the previous two albums.","0","0","5","Onehotfishy","https://itunes.apple.com/us/reviews/id535011823"
"1411625594","US","3698348975","2019-01-26T15:03:01-07:00","Well I love Believer","But they’re all good 😂","0","0","5","FareeshLeafyPop","https://itunes.apple.com/us/reviews/id34183729"
"1411625594","US","3667781977","2019-01-18T22:24:41-07:00","I ♥️ Imagine 🐉","Believer, whatever it takes, and thunder are my favs.","0","0","5","GiftedCashew56","https://itunes.apple.com/us/reviews/id770542008"
"1411625594","US","3651491553","2019-01-14T20:31:54-07:00","Awful","You earne 5 donkey heads🐴🐴🐴🐴🐴","0","0","1","Worst predictions ever","https://itunes.apple.com/us/reviews/id530622574"
"1411625594","US","3649719165","2019-01-14T08:18:18-07:00","😃😃😃","AWESOME","0","0","5","Huckle--berry","https://itunes.apple.com/us/reviews/id164535689"
"1411625594","US","3630516009","2019-01-09T07:41:57-07:00","Nice Variety","Just discovered Imagine Dragons. I bought this album after previewing because it's done well and the songs don't sound all the same. I appreciate musicians who can and do mix it up with different styles of rock.","0","0","4","cherikim","https://itunes.apple.com/us/reviews/id87776809"
"1411625594","US","3630273170","2019-01-09T06:23:35-07:00","Imagine Dragons","This is a GREAT album by a GREAT band!!!!!!!!","0","0","5","cats rule forever","https://itunes.apple.com/us/reviews/id960930238"
"1411625594","US","3620923411","2019-01-06T16:47:44-07:00","Wow...🤢🤢🤢","Do you people ACTUALLY listen to this crap. this is not music","0","0","1","depechegurl","https://itunes.apple.com/us/reviews/id851316212"
"1411625594","US","3604409057","2019-01-02T10:54:00-07:00","Meh...it’s....slightly more than OK...","This album is pretty good...if you only count the hit songs...Thunder,Believer,that one song whose title I forgot...the rest are T.E.R.R.I.B.L.E. I’ll give this album only 3 stars for the hit songs and the creativity...I’m sorry Imagine Dragons. 🤷🏻‍♂️","0","1","3","AlChieDrick","https://itunes.apple.com/us/reviews/id684719401"
"1411625594","US","3602351133","2019-01-01T23:44:19-07:00","Mom","💥🔥","0","0","5","mo llooo","https://itunes.apple.com/us/reviews/id954700685"
"1411625594","US","3597852997","2018-12-31T19:29:04-07:00","🔥🔥🔥🔥🔥🔥","Fire fire fire fire fire fire","0","0","5","Fhajd","https://itunes.apple.com/us/reviews/id356089375"
"1411625594","US","3587360975","2018-12-29T04:02:21-07:00","I feel betrayed","I really didn't want to do this but I just absolutely detest this album. I used to be really into Imagine Dragons as they used to put creativity into their work but it doesn't feel like it anymore at all. Even when I thought that they were going to shift styles, the lesser tracks of their previous albums showed that they still held on to their earlier style in some way but this album doesn't show it at all. There isn't one track that I like and it made me turn my back on this once favorite band of mine.","0","1","1","M-kore","https://itunes.apple.com/us/reviews/id117860752"
"1411625594","US","3586026855","2018-12-28T19:46:34-07:00","Evolve?","They have not done that yet","1","2","2","verik whereyomomma","https://itunes.apple.com/us/reviews/id956307517"
"1411625594","US","3571338214","2018-12-25T05:45:24-07:00","Boo believer","Believer is 💩 and the good song is whatever it takes.","0","1","4","Dedob","https://itunes.apple.com/us/reviews/id32790130"
"1411625594","US","3551057953","2018-12-19T23:30:28-07:00","Wow","I love these songs","0","0","5","qseata","https://itunes.apple.com/us/reviews/id561472216"
"1411625594","US","3513508351","2018-12-09T15:47:36-07:00","THUNDER AND BELIEVER","THUNDER AND BELIEVER ALL THE WAY🙌🏼🔥","0","0","5","rebgymnast","https://itunes.apple.com/us/reviews/id571206832"
"1411625594","US","3498140013","2018-12-05T18:16:38-07:00","🧐","Decent album, with a few hit songs. Wish there were better ones though...","0","0","4","The Ragin' Asian","https://itunes.apple.com/us/reviews/id639296570"
"1411625594","US","3481673997","2018-12-01T07:18:09-07:00","Not bad","I mostly like Whatever it takes","0","0","4","GamerTy21","https://itunes.apple.com/us/reviews/id783572443"
"1411625594","US","3468403336","2018-11-27T19:44:09-07:00","H","I give this so they know I’ll support them and so they keep up with the high quality songs","0","0","5","lmarx131","https://itunes.apple.com/us/reviews/id119839011"
"1411625594","US","3467336382","2018-11-27T12:26:46-07:00","Love it","It’s the best music I have ever listened to","0","0","5","Ry guy Rocks","https://itunes.apple.com/us/reviews/id913276577"
"1411625594","US","3461260116","2018-11-25T20:27:50-07:00","I don’t know why !!!!","My favorite album by this band","0","0","5","dudh bdixbd j","https://itunes.apple.com/us/reviews/id461812450"
"1411625594","US","3450589472","2018-11-23T03:50:15-07:00","Apple","Don’t like the song at all","0","1","1","partymix2000","https://itunes.apple.com/us/reviews/id520584297"
"1411625594","US","3424963693","2018-11-16T08:49:23-07:00","Disappointing","Imagine dragons could poop and people would praise them for it, this was one of those moments and the filler songs in this album are not on par with their previous album songs, Believer, Thunder, and Whatever It Takes are the reasons why I give this rating 3 stars","0","0","3","DJ PartyRyno","https://itunes.apple.com/us/reviews/id935965589"
"1411625594","US","3420428589","2018-11-15T04:27:27-07:00","Nissan Titan commercial","Every morning while watching the morning news, they play a commercial with Whatever It Takes. I hate it. Have a wonderful day, just wanted someone to know this.","1","2","1","PatM88","https://itunes.apple.com/us/reviews/id354335506"
"1411625594","US","3411912733","2018-11-12T19:27:04-07:00","Just No","This is my least favorite album of theirs I do not like the hits, and the things that aren’t hits do not deliver as well. This album is written in a different approach than we have seen from them before it is very broken and is not meant to be catchy. It much reminds me of Friction (one of their songs I didn’t like)","2","2","2","BlackWidow0938","https://itunes.apple.com/us/reviews/id934315330"
"1411625594","US","3406719622","2018-11-11T08:48:30-07:00","It’s ok","Thunder is pretty good but other than that the songs are bad.","0","0","3","eeeeaq","https://itunes.apple.com/us/reviews/id726235580"
"1411625594","US","3399664365","2018-11-09T14:28:38-07:00","Amazing","Worth the money anything these guys throw out I’ll throw them a great comment the are truly the best","0","0","5","CapRich Rb On Yt","https://itunes.apple.com/us/reviews/id899262931"
"1411625594","US","3399632759","2018-11-09T14:15:25-07:00","I love Imagine Dragons!","I love this album so much!!!!!!","0","0","5","Emily 72020","https://itunes.apple.com/us/reviews/id378097643"
"1411625594","US","3394283765","2018-11-08T03:22:43-07:00","Ben","Awesome listen to it every day all day","0","0","5","mussdogg","https://itunes.apple.com/us/reviews/id785098747"
"1411625594","US","3384877287","2018-11-05T12:55:29-07:00","AWWWWW YEAH","AMAZINGLY AMAZING \n\nAlso shut UP H8RS","0","0","5","Destrier547","https://itunes.apple.com/us/reviews/id927951363"
"1411625594","US","3383727387","2018-11-05T05:33:22-07:00","❤️❤️❤️❤️❤️❤️❤️❤️❤️❤️❤️❤️❤️😊😊😊😊❤️❤️❤️❤️❤️😊😊😊😊😊","THUNDER I have listened to Imagine Dragons for a long time I'm 10 years old and the first imagine dragons song I heard was on top of the world 🌎. Best band ever","0","0","5","Mommy Meyers","https://itunes.apple.com/us/reviews/id159556655"
"1411625594","US","3366355321","2018-10-31T16:05:01-07:00","Unbelievable","👍These songs are amazing keep up the good work.👍","0","0","5","JayseTDM","https://itunes.apple.com/us/reviews/id555687987"
"1411625594","US","3364533478","2018-10-31T04:26:12-07:00","😭😭😭","Epicness","0","0","5","attaker839","https://itunes.apple.com/us/reviews/id632482390"
"1411625594","US","3364532826","2018-10-31T04:25:58-07:00","LIT","IT TOOK ME A MOVIE (about penguins) TO BE A FAN OF THUNDER BUT WHATEVER IT TAKES IS JUST OFF THE CHARTS","0","0","5","MONSTER FANBOYS!","https://itunes.apple.com/us/reviews/id485978565"
"1411625594","US","3360725294","2018-10-30T03:33:50-07:00","Made me a Believer <3","Great tune and beat! Believer totally made me so hooked that I bought Thunder and tested it out. Both songs are so awesome and fun! Imagine Dragons does make me a believer. Keep up the good work I love Imagine Dragons so much!! Spread your joy across the world so everyone can hear it! God bless you","0","0","5","SamanthaandAbby❤️🍨","https://itunes.apple.com/us/reviews/id142963060"
"1411625594","US","3348909540","2018-10-27T00:59:52-07:00","Good. Not great","Good stuff, getting very repetitive and unoriginal, more rock anthems that sound like radioactive, which isn’t bad, but becoming lack luster.\n\nGood indie stuff with start over, dancing in the dark, next to me. Thunders high pitched is very annoying and ruins it for me as well as the repetitiveness. \n\nWhatever it takes a very solid well put together song as well as the power of rise up and I don’t know why.\n\nBeliever seems very unpolished even though a very good song, over played sadly so much it’s become sour and if it was better put together it couldn’t of lasted longer perhaps.\n\nYesterday Brings something very unique and was originally my favorite song but hasn’t done well over time. \n\nI’ll make it up to you is my favorite track with a peaceful rhythm with lots of heart while mouth of river doesn’t do much for me even though it’s simple and sweet similar to walking the wire.\n\nAlbum feels likes it’s missing some heart in my opinion and uses repetitive choruses to make up for it. Least favorite album to date, but still like them for who they are.","0","0","4","Calvin Arkon","https://itunes.apple.com/us/reviews/id283046156"
"1411625594","US","3332040124","2018-10-22T13:21:04-07:00","A little worried...","This album, for me, was pretty good, but it's definitely my least favorite album they've created so far. I'm not a fan of Dancing in the Dark at ALL, Thunder isn't my favorite but does have some great electric guitar work in the back, and I'll Make It Up To You and Start Over, while good songs, are a little too similar in my opinion. My favorites are Whatever It Takes, Believer, Rise Up, Yesterday, and Mouth of the River. I liked this album a lot, but not as much as a liked Smoke + Mirrors and Night Visions.","0","0","3","XxYO FACExX","https://itunes.apple.com/us/reviews/id390121207"
"1411625594","US","3325937775","2018-10-20T23:37:32-07:00","Believer fan","Please make more songs these songs areAWSOME","0","0","5","djjejdjdjfaskfkfkdkdf","https://itunes.apple.com/us/reviews/id132405290"
"1411625594","US","3290692202","2018-10-11T14:08:56-07:00","Best song","Song is the best 👍👍👍👍👍👍👍👍👍👍👍👍😎😎","0","0","5","Dwolck","https://itunes.apple.com/us/reviews/id105466813"
"1411625594","US","3290308926","2018-10-11T11:10:49-07:00","Rock","Like rock and roll!","0","0","5","The Gaming Minecart","https://itunes.apple.com/us/reviews/id114225888"
"1411625594","US","3276975436","2018-10-08T00:12:32-07:00","Boom","🤯","0","0","5","hamilto 2","https://itunes.apple.com/us/reviews/id470259156"
"1411625594","US","3275528682","2018-10-07T13:39:06-07:00","more songs","Please make more songs best band ever","0","0","5","BLue_Yolanda","https://itunes.apple.com/us/reviews/id538281260"
"1411625594","US","3275388417","2018-10-07T12:36:12-07:00","Love❤️❤️","This is the best when I am mad 😡 or 😞 😭😔 this is what I listen to👂🏽 thanks you imagine Dragons","0","0","5","aa squad","https://itunes.apple.com/us/reviews/id910667147"
"1411625594","US","3272542183","2018-10-06T19:53:57-07:00","I’m Diego","The best band ever","0","0","5","morales80","https://itunes.apple.com/us/reviews/id456311124"
"1411625594","US","3270359514","2018-10-06T06:20:02-07:00","Not very impressed","Whatever It Takes, Believer, and Thunder are all good songs and all had a chance to be on the HITS 1 radio station, but...what’s the point of songs like Start Over or Dancing In The Dark? Both songs are trash and Mouth Of River sounds like Taylor Swift worked with Imagine Dragons!! (I gotta admit though the music vids were cool)","0","0","3","Tony game man","https://itunes.apple.com/us/reviews/id521644215"
"1411625594","US","3268309889","2018-10-05T17:48:43-07:00","Believer","Never heard of them but I love believer","0","0","5","..Kitcat11..","https://itunes.apple.com/us/reviews/id841347713"
"1411625594","US","3253676373","2018-10-01T19:01:48-07:00","Old","Get with the new","0","0","1","ApolloSSGSS","https://itunes.apple.com/us/reviews/id913865471"
"1411625594","US","3247834426","2018-09-30T06:38:40-07:00","Believer","I mean i LOVE Believer","0","0","5","Dope Dexter","https://itunes.apple.com/us/reviews/id518475146"
"1411625594","US","3240317665","2018-09-28T09:17:03-07:00","Love","Next to me is so raw, powerful, emotional. I love it","0","0","5","altenthusiast","https://itunes.apple.com/us/reviews/id892800471"
"1411625594","US","3218327383","2018-09-22T10:56:01-07:00","Imagine Dragons","I love the Imagine Dragons!","0","0","5","gdgdhddhdh","https://itunes.apple.com/us/reviews/id108101672"
"1411625594","US","3216117036","2018-09-21T22:41:18-07:00","EPICNESS IS HERE!!!!!","This album is the bomb 💣!!! My fav are Mouth of The River, Whatever It Takes, Thunder, and Believer!!! Great band definitely the best rock band ever!!!!! ⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️⭐️ I give it 10 stars!!!!! (At least it counts in the chat so deal with it!!!!)","0","0","5","Imagine The Dragons","https://itunes.apple.com/us/reviews/id411000493"
"1411625594","US","3208004034","2018-09-19T16:55:42-07:00","Evolve Review","It’s my favorite album, love Imagine Dragons","0","0","5","B-D-Y","https://itunes.apple.com/us/reviews/id489000837"
"1411625594","US","3207300317","2018-09-19T10:59:32-07:00","Imagine awesome","Love your music😁 but (I don’t know why) should be in a single same thing with with (whatever it takes)","0","0","4","fox dovichak","https://itunes.apple.com/us/reviews/id872289224"
"1411625594","US","3200823333","2018-09-17T15:30:09-07:00","Lightning and the wow🔥🔥🔥⭐️⭐️","Second review the studios are doing more reviews this one gets them they love it keep up this good work your music is a hit mind blowing expect more","0","0","5","⭐️⭐️⭐️⭐️⭐️review","https://itunes.apple.com/us/reviews/id740907939"
"1411625594","US","3196454251","2018-09-16T09:11:47-07:00","Love it","Absolutely amazing!","0","0","5","Marianne823","https://itunes.apple.com/us/reviews/id106874607"
"1411625594","US","3186233161","2018-09-13T16:22:04-07:00","The best","I love imagine dragons and now that they have thunder as a ring town 🤯🤯🤯!!!","0","0","5","Sir llcooljr","https://itunes.apple.com/us/reviews/id447548068"
"1411625594","US","3176964976","2018-09-10T22:54:07-07:00","YASSS","Can’t go wrong with imagine dragons","0","0","5","Laximus Maximus","https://itunes.apple.com/us/reviews/id226685412"
"1411625594","US","3176536017","2018-09-10T19:26:55-07:00","Five stars","I reviewed it before and I will again. These guys are the greatest.","0","0","5","Packer 221","https://itunes.apple.com/us/reviews/id470956336"
"1411625594","US","3161758377","2018-09-06T19:25:24-07:00","Love it","... idk what to say","0","0","5","i hate kick the buddy","https://itunes.apple.com/us/reviews/id866969228"
"1411625594","US","3159479786","2018-09-06T04:31:02-07:00","The best","It the most coolest thing ever","0","0","5","63472;","https://itunes.apple.com/us/reviews/id818356030"
"1411625594","US","3158389499","2018-09-05T22:18:10-07:00","Wait? it’s Possible For The Imagine Dragons To Get A Bad Review???","Bruh By Far Greatest Album Ever","0","1","5","stlrfn","https://itunes.apple.com/us/reviews/id36892260"
"1411625594","US","3154090595","2018-09-04T18:05:20-07:00","Backstreet Boys are back","Awesome especially whatever it takes I learned the rap to it 10x more faster then them","0","0","5","back streets back alright","https://itunes.apple.com/us/reviews/id717581989"
"1411625594","US","3130789902","2018-08-29T17:20:06-07:00","Love it. U should get it. Everybody shud.","I discovered my love of this album when I learned grace vanderwaal was going on tour with imagine dragons. Cause I was planning on going to see her and imagine dragons I had to know their music so I got evolve and night visions (which u should totally get my fave song is it’s time). I instantly fell in love with Imagine Dragons music. Dan is such an honest singer and the songs are amazing. If ur one of those people scrolling through reviews try to decide whether to get something or not, stop looking at reviews and BUY THIS ALBUM it will be worth it.","0","0","5","HappyMe20000000","https://itunes.apple.com/us/reviews/id650091116"
"1411625594","US","3090028344","2018-08-20T03:00:38-07:00","Impossible","Impossible to get help from Apple I bought this twice by mistake and can't figure out how to get a credit. They deliberately obfuscate the process.","0","0","1","TheAsmar","https://itunes.apple.com/us/reviews/id102339001"
"1411625594","US","3087311766","2018-08-19T10:59:24-07:00","AWESOME SONGS!!","I LOVE all these songs!!!! Their AMAZING!! BELIEVER, WHAT EVER IT TAKES, THUNDER, DEMONS, WARRIORS, AND ETC","0","0","5","#EPIC FOR LIFE","https://itunes.apple.com/us/reviews/id884125660"
"1411625594","US","3083300166","2018-08-18T13:23:45-07:00","Yaaaaaaaaaaaaaaaaaaa","Yaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaqqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0","1","5","rmfjudrhfh","https://itunes.apple.com/us/reviews/id24720826"
"1411625594","US","3073505696","2018-08-16T09:52:29-07:00","loved it","i loved every song. loved it\n\n                    lir","0","0","5","healerfrank","https://itunes.apple.com/us/reviews/id353099499"
"1411625594","US","3069982663","2018-08-15T17:15:12-07:00","Love","I love this song, good rhythm and beat with good lyrics!","0","0","5","Ashbobash805","https://itunes.apple.com/us/reviews/id372060042"
"1411625594","US","3063495973","2018-08-14T06:45:17-07:00","Isaac","One of the beet song","0","0","5","jdhdodjdnzbdg","https://itunes.apple.com/us/reviews/id773632422"
"1411625594","US","3054431290","2018-08-12T07:00:55-07:00","Love this","Love love love it","0","0","5","malamik","https://itunes.apple.com/us/reviews/id101414926"
"1411625594","US","3037261443","2018-08-08T13:37:03-07:00","So much yeah!!!","Once again, they did it","0","0","5","lolpeacecray","https://itunes.apple.com/us/reviews/id881630254"
"1411625594","US","3031761048","2018-08-07T10:49:48-07:00","Awesome","So many good songs","0","0","5","ThatMusicReviewer","https://itunes.apple.com/us/reviews/id847515929"
"1411625594","US","3026631019","2018-08-06T10:03:09-07:00","Amazing!!!!!!","Best Yet!!!!!!!","0","0","5","MacPhert","https://itunes.apple.com/us/reviews/id27197123"
"1411625594","US","3025161812","2018-08-06T03:51:37-07:00","Believer","I love it","0","0","5","Veronica vannessa","https://itunes.apple.com/us/reviews/id348340806"
"1411625594","US","3016534021","2018-08-04T06:53:35-07:00","10/10","Would buy again","0","0","5","hfjdjef","https://itunes.apple.com/us/reviews/id214872846"
"1411625594","US","3012896698","2018-08-03T13:25:26-07:00","Elite","Imagine Dragons is unique and truly like no other band. This album proves their talent once again.","0","0","5","Strider2117","https://itunes.apple.com/us/reviews/id660469509"
"1411625594","US","3012415910","2018-08-03T10:49:49-07:00","Great Album... by why the re-release?","I’ve been a fan of Imagine Dragons for about four years now, and and once I found out about the release of this new album I was super pumped. The single, Believer, was solid, and I really enjoyed when it came to the lyrical content how they were growing from where they came from through “Night Visions”, through “Smoke + Mirrors”, all of it put together and leading up into this was great. I’m just super frustrated that a year later they re-released the album with a brand new song on it. Like, what the hell, guys? Turns out, I was one of the suckers who pre-ordered the album and out the original one without “Next to Me” on it, and as a big fan I don’t know how to feel about it. Hopefully they don’t re-release it again, but I do recommend this album. It is really good and really eye-opening growth wise to see how far they’ve come. Plus, it’s got a lot of Night Visions sounds in it, which I enjoy, but they do mix some Smoke+Mirrors in there as well which is nice.","1","1","4","CML_666","https://itunes.apple.com/us/reviews/id270007885"
"1411625594","US","3008295201","2018-08-02T17:41:38-07:00","Awesome","Sooooooooooooooooooooooooooooooooo oooooo great","0","0","5","OMG OMG 😀😀","https://itunes.apple.com/us/reviews/id561631831"
"1411625594","US","3006487745","2018-08-02T07:42:30-07:00","Best one","This is the best album of all of theirs so far.","0","1","5","Fine Music","https://itunes.apple.com/us/reviews/id35445963"
"1411625594","US","3003247066","2018-08-01T17:34:07-07:00","3rd Revision lol","Ok so they put Next to Me in front of I Don’t Know Why. I think they messed up on the first and wanted to redo it. Still a great band though. Love them to death","0","0","5","Notsofat the Gamer","https://itunes.apple.com/us/reviews/id409742006"
"1411625594","US","3002697000","2018-08-01T13:53:53-07:00","Unbelievable","Great","0","0","5","Jamweeeeee","https://itunes.apple.com/us/reviews/id431910985"
"1411625594","US","3001288707","2018-08-01T06:06:37-07:00","Wait what happened??","So, a THIRD review of this album? Ok. I’m on it. This is album is, start to finish, amazing. I’ve memorized every song they’ve put out since 2009 (those old songs ROCK btw), and several more from before then. These guys are amazing! Keep it up!","1","1","5","Jainaellis","https://itunes.apple.com/us/reviews/id193932052"
"1411625594","US","2994895306","2018-07-30T23:22:14-07:00","🔥🔥🔥","This album is absolutely amazing! Honestly anything that comes from these guys is amazing in my opinion!!!","6","6","5","Kennadie K","https://itunes.apple.com/us/reviews/id482257148"
"1411625594","GB","3894080205","2019-03-17T13:00:53-07:00","Bets song","Believer is my favirot song🦎🐍🐢","0","0","5","kobester008","https://itunes.apple.com/gb/reviews/id412075900"
"1411625594","GB","3809244688","2019-02-24T05:27:53-07:00","Amazing","I mean it was the best song I ever heard it is the best I always listen to it when I’m in the bus thunder!👍","0","0","5","noorshaabanz","https://itunes.apple.com/gb/reviews/id336046551"
"1411625594","GB","3754039893","2019-02-10T05:16:33-07:00","Imagine dragons🥰🥰","This is one of the BEST albums I have ever heard in my lifetime and my favourite song that you wrote edited and sung is Believer i can’t get the song out of my head","0","0","5","fortnite fan 311","https://itunes.apple.com/gb/reviews/id530974193"
"1411625594","GB","3672523577","2019-01-19T23:58:17-07:00","Peng","Sooooo goood","0","0","5","penting5000","https://itunes.apple.com/gb/reviews/id580501168"
"1411625594","GB","3534018534","2018-12-15T08:08:50-07:00","My fave music","I love it and it's my fave album joint with night visions (which I highly recommend).Also I love natural the song-it's great","0","0","5","Imagine dragons fan#1","https://itunes.apple.com/gb/reviews/id861743330"
"1411625594","GB","3263819145","2018-10-04T12:52:16-07:00","Unbelievable","One of the best albums ever made. This album made me become a huge ID fan. I always liked their stuff but after this album I am sold. They were amazing at the o2 touring this album.","0","0","5","wantedjosh","https://itunes.apple.com/gb/reviews/id43578344"
"1411625594","GB","3255963495","2018-10-02T09:08:19-07:00","Oh what the heck?","The most underrated album ever.","0","0","5","§Hackerz§","https://itunes.apple.com/gb/reviews/id535890472"
"1411625594","GB","3251804939","2018-10-01T06:46:13-07:00","good but","ok this is an amazing album etc & i used to adore believer but it’s so overplayed it hurts, it’s been on the charts for a year, i think we can let it slip off now","0","0","3","Philippa Adams","https://itunes.apple.com/gb/reviews/id472646899"
"1411625594","GB","3189295361","2018-09-14T11:51:46-07:00","Besttt","This is so great and I suggest you totally listen to Selene I could imagine dragons on riverdale and am now OBSESSED","0","0","5","Ellielol667","https://itunes.apple.com/gb/reviews/id458323961"
"1411625594","GB","3141770760","2018-09-01T09:48:14-07:00","👍👍👍👍","My fave band have done it again","0","1","5","star wars mad","https://itunes.apple.com/gb/reviews/id795309300"
"1411625594","GB","3078099052","2018-08-17T09:00:27-07:00","Okay","I like it but ‘thunder’ ruins it","0","0","4","hyseto","https://itunes.apple.com/gb/reviews/id712635969"
"1411625594","GB","3072555619","2018-08-16T05:53:40-07:00","❤️❤️❤️","I love this whole album their music is the besttt ❤️","0","0","5","Amazinggirl15","https://itunes.apple.com/gb/reviews/id467569061"
"1411625594","GB","3030879793","2018-08-07T06:49:15-07:00","Love it xx","one word AMAZING 😍😍","0","0","5","happy4457","https://itunes.apple.com/gb/reviews/id611287592"



================================================
File: component_config/sample-config/out/tables/reviews.csv.manifest
================================================
{"primary_key": ["review_id", "updated", "country_code"], "incremental": true}


================================================
File: scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -rm -t $COMP_TAG ../

echo Running component...
Write-host "Would you like to use default data folder? (../data)" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes use: " (join-path (Split-Path -Path (Get-Location).Path) "data"); $DATA_PATH = (join-path (Split-Path -Path (Get-Location).Path) "data") } 
       N {Write-Host "No, I'll specify myself"; $DATA_PATH = Read-Host -Prompt 'Input data folder path:'} 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 

Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 





================================================
File: scripts/build_n_test.sh
================================================
#!/bin/sh
set -e

flake8 --config=flake8.cfg
python -m unittest discover


================================================
File: scripts/run.bat
================================================
@echo off

echo Running component...
docker run -v %cd%:/data -e KBC_DATADIR=/data comp-tag


================================================
File: scripts/run.sh
================================================
#!/bin/sh
set -e

python /code/src/component.py


================================================
File: scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test



================================================
File: scripts/update_dev_portal_properties.sh
================================================
#!/usr/bin/env bash

set -e
# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest


# Update properties in Keboola Developer Portal
echo "Updating long description"
value=`cat component_config/component_long_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} longDescription --value="$value"
else
    echo "longDescription is empty!"
    exit 1
fi

echo "Updating config schema"
value=`cat component_config/configSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationSchema --value="$value"
else
    echo "configurationSchema is empty!"
fi


echo "Updating config description"

value=`cat component_config/configuration_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationDescription --value="$value"
else
    echo "configurationDescription is empty!"
fi


echo "Updating short description"

value=`cat component_config/component_short_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} shortDescription --value="$value"
else
    echo "shortDescription is empty!"
    exit 1
fi


================================================
File: src/component.py
================================================
import csv
import logging
import os
import re
import sys
import lxml.etree
import logging_gelf.handlers
import logging_gelf.formatters
from lib.client import iTunesClient
from lib.app import iTunesObject
from kbc.env_handler import KBCEnvHandler

# Environment setup
sys.tracebacklimit = 0


# Logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)-8s : [line:%(lineno)3s] %(message)s',
    datefmt="%Y-%m-%d %H:%M:%S")


logger = logging.getLogger()
logging_gelf_handler = logging_gelf.handlers.GELFTCPSocketHandler(
    host=os.getenv('KBC_LOGGER_ADDR'),
    port=int(os.getenv('KBC_LOGGER_PORT'))
    )
logging_gelf_handler.setFormatter(logging_gelf.formatters.GELFFormatter(null_character=True))
logger.addHandler(logging_gelf_handler)

# removes the initial stdout logging
logger.removeHandler(logger.handlers[0])


APP_VERSION = '0.1.0'
KEY_COUNTRY_CODES = 'country_code'
KEY_BACKFILL_MODE = 'backfill_mode'
MANDATORY_PARS = [KEY_COUNTRY_CODES, KEY_BACKFILL_MODE]

ALL_COUNTRY_CODES = ['DZ', 'AO', 'AI', 'AG', 'AR', 'AM', 'AU', 'AT',
                     'AZ', 'BH', 'BD', 'BB', 'BY', 'BE', 'BZ', 'BM',
                     'BO', 'BW', 'BR', 'VG', 'BN', 'BG', 'CA', 'KY',
                     'CL', 'CN', 'CO', 'CR', 'CI', 'HR', 'CY', 'CZ',
                     'DK', 'DM', 'DO', 'EC', 'EG', 'SV', 'EE', 'FI',
                     'FR', 'DE', 'GH', 'GR', 'GD', 'GT', 'GY', 'HN',
                     'HK', 'HU', 'IS', 'IN', 'ID', 'IE', 'IL', 'IT',
                     'JM', 'JP', 'JO', 'KZ', 'KE', 'KR', 'KW', 'LV',
                     'LB', 'LI', 'LT', 'LU', 'MO', 'MK', 'MG', 'MY',
                     'MV', 'ML', 'MT', 'MU', 'MX', 'MD', 'MS', 'NP',
                     'NL', 'NZ', 'NI', 'NE', 'NG', 'NO', 'OM', 'PK',
                     'PA', 'PY', 'PE', 'PH', 'PL', 'PT', 'QA', 'RO',
                     'RU', 'SA', 'SN', 'RS', 'SG', 'SK', 'SI', 'ZA',
                     'ES', 'LK', 'KN', 'LC', 'VC', 'SR', 'SE', 'CH',
                     'TW', 'TZ', 'TH', 'BS', 'TT', 'TN', 'TR', 'TC',
                     'UG', 'GB', 'UA', 'AE', 'UY', 'US', 'UZ', 'VE',
                     'VN', 'YE']

OUT_FIELDS = ['object_id',
              'country_code',
              'review_id',
              'updated',
              'title',
              'content',
              'voteSum',
              'voteCount',
              'rating',
              'author_name',
              'author_uri']


class Component(KBCEnvHandler):

    def __init__(self, ALL_COUNTRY_CODES, OUT_FIELDS):

        KBCEnvHandler.__init__(self, MANDATORY_PARS)

        try:

            self.validate_config()

        except ValueError as e:

            logging.error(e)
            sys.exit(1)

        _cc = self.cfg_params[KEY_COUNTRY_CODES]

        if 'ALL' in _cc:

            self.country_codes = ALL_COUNTRY_CODES

        else:

            self.country_codes = _cc

        self.backfill = self.cfg_params[KEY_BACKFILL_MODE]
        self.client = iTunesClient()

        try:
            self._input_table_path = self.configuration.get_input_tables()[
                0]['full_path']
        except IndexError:

            logging.error("No input table provided.")
            sys.exit(1)

        self._output_table_path = os.path.join(self.tables_out_path, 'reviews.csv')
        self._writer = csv.DictWriter(open(self._output_table_path, 'w+'),
                                      fieldnames=OUT_FIELDS,
                                      delimiter=',',
                                      quotechar='"',
                                      quoting=csv.QUOTE_ALL,
                                      extrasaction='ignore',
                                      restval='')

        self._writer.writeheader()
        self._get_state_file()

    def _get_state_file(self):

        logging.debug("Backfill mode: %s" % str(self.backfill))

        if self.backfill is True:

            self.state = {}
            self.state_out = {}

        else:

            self.state = self.get_state_file()
            self.state_out = self.state

        logging.debug("State for the component run: %s" % str(self.state))

    def _get_first_page(self, itunes_obj):

        object_id = itunes_obj.id
        country = itunes_obj.country
        page_number = 1

        _xml_str = self.client._get_paged_results(
            country, object_id, page_number)

        return _xml_str

    def _build_xml_tree(self, xml_str):

        tree = lxml.etree.ElementTree(lxml.etree.fromstring(xml_str))

        return tree

    def _get_last_page(self, xml_tree):

        root = xml_tree.getroot()
        _last_tag = root.find("{http://www.w3.org/2005/Atom}*[@rel='last']")
        _last_link = _last_tag.attrib.get('href')

        if _last_link == '':

            return None

        else:

            _last_link = _last_link.split('?')[0]
            _rgxp_page = re.search(r'page=\d+', _last_link)

            if _rgxp_page is None:

                return None

            else:

                return _rgxp_page.group(0).split('=')[1]

    def _get_entries(self, xml_tree, state_updated):

        root = xml_tree.getroot()

        entries = root.findall('{http://www.w3.org/2005/Atom}entry')

        _out = []

        _state_reached = False
        for entry in entries:

            _updt = entry.find('{http://www.w3.org/2005/Atom}updated').text
            _id = entry.find('{http://www.w3.org/2005/Atom}id').text
            _title = entry.find('{http://www.w3.org/2005/Atom}title').text.replace('\n', '\\n')
            _content = entry.find('{http://www.w3.org/2005/Atom}content').text.replace('\n', '\\n')
            _voteSum = entry.find('{http://itunes.apple.com/rss}voteSum').text
            _voteCount = entry.find(
                '{http://itunes.apple.com/rss}voteCount').text
            _rtg = entry.find('{http://itunes.apple.com/rss}rating').text
            _author = entry.find('{http://www.w3.org/2005/Atom}author')

            _usr_name = _author.find('{http://www.w3.org/2005/Atom}name').text
            _usr_uri = _author.find('{http://www.w3.org/2005/Atom}uri').text

            if _updt > state_updated:

                _dict = {'review_id': _id,
                         'updated': _updt,
                         'title': _title,
                         'content': _content,
                         'voteSum': _voteSum,
                         'voteCount': _voteCount,
                         'rating': _rtg,
                         'author_name': _usr_name,
                         'author_uri': _usr_uri}

                _out += [_dict]

            else:

                _state_reached = True
                return _out, _state_reached

        return _out, _state_reached

    def run(self):

        with open(self._input_table_path) as _inpt:

            _rdr = csv.reader(_inpt)

            for _row in _rdr:

                if len(_row) != 1:

                    logging.error("Input table must be a single column table")
                    sys.exit(1)

                elif _rdr.line_num == 1:

                    continue

                _app_id = _row[0]
                _app_state = self.state.get(_app_id)
                _app_state = {} if _app_state is None else _app_state
                logging.info("State for application: %s" % str(_app_state))

                for _c_code in self.country_codes:

                    logging.info("Downloading reviews for object id %s from country %s." % (_app_id, _c_code))

                    _country_state = _app_state.get(_c_code)
                    logging.info("State for country: %s" % str(_country_state))

                    it_obj = iTunesObject(_app_id, _c_code, _country_state)
                    _first_page_xml = self._get_first_page(it_obj)
                    _first_page_tree = self._build_xml_tree(_first_page_xml)
                    _last_page = self._get_last_page(_first_page_tree)

                    if _last_page is None:

                        logging.info("No reviews for application %s in country %s" % (it_obj.id, it_obj.country))

                        continue

                    else:

                        it_obj._last_page = _last_page

                    if it_obj.state is None:

                        _state_updt = '1970-01-01T00:00:00-0700'

                    else:

                        _state_updt = it_obj.state

                    logging.debug("Original state: %s" % str(it_obj.state))
                    logging.debug("New state: %s" % str(_state_updt))

                    _app_dict = {'object_id': it_obj.id,
                                 'country_code': it_obj.country}

                    _state_reached = False
                    _max_page = int(it_obj._last_page) + 1
                    _max_updt = None
                    for p in range(1, _max_page):

                        _xml_str = self.client._get_paged_results(it_obj.country, it_obj.id, p)
                        _xml_tree = self._build_xml_tree(_xml_str)
                        _entries, _state_reached = self._get_entries(_xml_tree, _state_updt)

                        if p == 1 and len(_entries) != 0:

                            _max_updt = _entries[0]['updated']

                        for d in _entries:

                            _dict_to_write = {**d, **_app_dict}
                            self._writer.writerow(_dict_to_write)

                        if _state_reached is True:

                            break

                    self.state_out[it_obj.id] = {it_obj.country: _max_updt}

            self.write_state_file(self.state_out)
            self.configuration.write_table_manifest(self._output_table_path,
                                                    incremental=True,
                                                    primary_key=['review_id', 'updated', 'country_code'])


if __name__ == '__main__':

    logging.info("Running extractor version %s." % APP_VERSION)
    c = Component(ALL_COUNTRY_CODES, OUT_FIELDS)
    c.run()



================================================
File: src/lib/__init__.py
================================================



================================================
File: src/lib/app.py
================================================
class iTunesObject:

    def __init__(self, itunes_id, country, state):

        self.id = itunes_id
        self.country = country
        self.state = state



================================================
File: src/lib/client.py
================================================
import logging
import time
from kbc.client_base import HttpClientBase

BASE_URL = 'https://itunes.apple.com'


class iTunesClient(HttpClientBase):

    def __init__(self):

        HttpClientBase.__init__(self, BASE_URL, auth=None)

    def _get_paged_results(self, country_code, object_id, page_number):

        if page_number > 10:

            logging.warn("Max depth of RSS feed is enforced to 10.")

            return '<feed></feed>'

        url = self.base_url + f'/{country_code}/rss/customerreviews/page={page_number}' + \
            f'/id={object_id}/sortby=mostrecent/xml'

        rsp = self.get_raw(url)

        # Sleep for 3 seconds to ensure no more than 20 calls per minute are made.
        time.sleep(3)

        return rsp.content



================================================
File: tests/__init__.py
================================================



================================================
File: tests/test_component.py
================================================


