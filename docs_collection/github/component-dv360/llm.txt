Directory structure:
└── keboola-component-dv360/
    ├── README.md
    ├── Dockerfile
    ├── LICENSE.md
    ├── TEMPLATE_README.md
    ├── deploy.sh
    ├── docker-compose.yml
    ├── flake8.cfg
    ├── requirements.txt
    ├── component_config/
    │   ├── component_long_description.md
    │   ├── component_short_description.md
    │   ├── configRowSchema.json
    │   ├── configSchema.json
    │   ├── configuration_description.md
    │   ├── documentationUrl.md
    │   ├── licenseUrl.md
    │   ├── logger
    │   ├── loggerConfiguration.json
    │   ├── sourceCodeUrl.md
    │   └── sample-config/
    │       ├── config.json
    │       ├── in/
    │       │   ├── state.json
    │       │   ├── files/
    │       │   │   └── order1.xml
    │       │   └── tables/
    │       │       ├── test.csv
    │       │       └── test.csv.manifest
    │       └── out/
    │           ├── files/
    │           │   └── order1.xml
    │           └── tables/
    │               └── test.csv
    ├── docs/
    │   └── imgs/
    ├── scripts/
    │   ├── build_n_run.ps1
    │   ├── build_n_test.sh
    │   ├── run.bat
    │   ├── run_kbc_tests.ps1
    │   ├── update_dev_portal_properties.sh
    │   └── developer_portal/
    │       ├── fn_actions_md_update.sh
    │       └── update_properties.sh
    ├── src/
    │   ├── component.py
    │   ├── configuration.py
    │   └── google_dv360/
    │       ├── __init__.py
    │       └── client.py
    ├── tests/
    │   ├── __init__.py
    │   └── test_component.py
    └── .github/
        └── workflows/
            └── push.yml

================================================
File: README.md
================================================
# DV360 Extractor

This data source component uses the Google Bid Manager API to create and run reports that measure the results of Display & Video 360 advertising campaigns. 
It automates data retrieval from the [Display&Video 360 Reports](https://marketingplatform.google.com/about/display-video-360/), allowing you to run
existing reports defined via the [DV360 Report Builder](https://support.google.com/displayvideo/answer/6375151?hl=en&ref_topic=2798432&sjid=[REDACTED]-EU)
or create ad-hoc reports directly from the configuration.


**Table of contents:**

[TOC]


## Prerequisites

Before using the connector, make sure the following prerequisites are met:

1. Get access to the [Display & Video 360](https://marketingplatform.google.com/about/display-video-360/) account.

2. Log in to your account using the Authorize Account button in the Keboola interface. 

![OAuth Authorization](docs/imgs/config_oauth.png)

## Configuration

The connector supports two modes:

1. Running and downloading an existing report definition. Such a report may be defined using the [DV360 Report Builder](https://support.google.com/displayvideo/answer/6375151?hl=en&ref_topic=2798432&sjid=[REDACTED]-EU).
   - This option is suitable when you need more control over the report definition.
2. Defining the report definition directly in the UI.
   - This allows you to define simple report definition directly in the configuration UI.
   - This mode will automatically create an offline report in the [DV360 console](https://displayvideo.google.com/ng_nav/reporting) that will be linked to the configuration. The naming convention of the created report is: `keboola_generated_{PROJECT_ID}_{CONFIG_ID}_{ROWID}`

### Running an existing report

1. Define your report in the [DV360 Report Builder](https://displayvideo.google.com/ng_nav/reporting). See the official [docs](https://support.google.com/displayvideo/answer/6375151?hl=en&ref_topic=2798432&sjid=[REDACTED]-EU).
2. Select the `Existing report ID` in the `Report definition mode` configuration option.
3. Select the existing report ID from the dropdown of available reports.
4. Set the desired `Time Range`.
   - You may select either a predefined period or a `Custom Date Range`.
   - This option allows you to define a relative report period range.
5. Set the **destination** parameters to control how the result is stored. See the `Destination` section.

### Defining a report directly in the UI

1. Select the `Report specification` in the `Report definition mode` configuration option.
2. Set up your report in  `Report Details`.
   1. Select the `Report Type`.
   2. Select the desired dimensions.
   3. Select the desired metrics.
   4. Optionally, specify filters.
3. Set the desired `Time Range`.
   - You may select either a predefined period or a `Custom Date Range`.
   - This option allows you to define a relative report period range.
4. Set the **destination** parameters to control how the result is stored. See the `Destination` section.



### Destination - report output

This section defines how the extracted data will be saved in Keboola Storage.

- **Load Type** – If `Full Load` is used, the destination table will be overwritten every run. If `Incremental Load` is used, data will be “upserted” into the destination table.
- **Storage Table Name** – The name assigned to the table in Keboola Storage.
- **Primary Key** - Since the reports are always custom-defined, you need to define what dimensions (columns) represent the unique primary key. This is then used to perform "upserts".
  - Note that if the primary key is not defined properly, you may lose some data during deduplication. If there is no primary key defined and `Incremental Load` mode is used, each execution will lead to a new set of records.



# Technical Details


The component uses version 2 of the Google Bid Manager API.

- `https://doubleclickbidmanager.googleapis.com`

It handles 2 resource types:
- v2.queries - [see reference to queries](https://doubleclickbidmanager.googleapis.com)
- v2.queries.reports - [see reference to reports](https://developers.google.com/bid-manager/reference/rest#rest-resource:-v2.queries.reports)


## Features

| **Feature**             | **Note**                                      |
|-------------------------|-----------------------------------------------|
| Generic UI form         | Dynamic UI form                               |
| Row Based configuration | Allows structuring the configuration in rows. |
| oAuth                   | oAuth authentication enabled                  |
| Incremental loading     | Allows fetching data in new increments.       |
| Dimension filter        | Fetch data of certain dimension values only.  |
| Date range filter       | Specify date range.                           |



## Sample Raw Configuration

```json
{
    "storage": {
        "input": {
            "files": [],
            "tables": [
                {
                    "source": "in.c-test.test",
                    "destination": "test.csv",
                    "limit": 50,
                    "columns": [],
                    "where_values": [],
                    "where_operator": "eq"
                }
            ]
        },
        "output": {
            "files": [],
            "tables": []
        }
    },
    "parameters": {
        "time_range": {
            "period": "CUSTOM_DATES",
            "date_from": "120 days ago",
            "date_to": "today"
        },
        "destination": {
            "table_name": "report_row_1",
            "incremental_loading": true,
            "primary_key": [
                "FILTER_ADVERTISER",
                "FILTER_ADVERTISER_NAME",
                "FILTER_BROWSER"
            ]
        },
        "input_variant": "report_specification",
        "report_specification": {
            "filters": [
                {
                    "name": "FILTER_ADVERTISER",
                    "value": "630317194"
                }
            ],
            "metrics": [
                "METRIC_CLICKS",
                "METRIC_COUNTERS",
                "METRIC_ENGAGEMENTS"
            ],
            "dimensions": [
                "FILTER_ADVERTISER",
                "FILTER_ADVERTISER_NAME",
                "FILTER_BROWSER"
            ],
            "report_type": "YOUTUBE"
        },
        "existing_report_id": "",
        "debug": false
    },
    "image_parameters": {
        "syrup_url": "https://syrup.keboola.com/"
    },
    "authorization": {
        "oauth_api": {
            "id": "OAUTH_API_ID",
            "credentials": {
                "id": "main",
                "authorizedFor": "Myself",
                "creator": {
                    "id": "1234",
                    "description": "me@keboola.com"
                },
                "created": "2016-01-31 00:13:30",
                "#data": "{\n    \"access_token\": \"ya29.a0AX9GBdWIPO_vxymZ6TnTLNp3ZBzWYbgL2CZ13SDS64V1hWm0C7nk-X4OQ7sCMSKxZQFP5oOHrWef5Yu1f_eZMmoBOS6ddDOxPSKp3xAG1QI1nrIe-CgpTg0EEKiB7vLa9IRv7cWQ-jO41dfHTWCw6iPdvojdaCgYKAQQSARMSFQHUCsbC5wpREHiB4-rzu7tQFgTmfA0163\",\n    \"scope\": \"https://www.googleapis.com/auth/doubleclickbidmanager\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3599,\n    \"refresh_token\": \"1//04AWs1av4uUF2CgYIARAAGAQSNwF-L9IrOqig-Xyig3ckKS_BEnvnd_JMneoJMdZPr5lxmLkWIzDV4-c_e_O5xS6fThkWlIkvatc\"\n}",
                "oauthVersion": "2.0",
                "appKey": "306269445270-icka3qa2liqrbkinij89v6uk1e1e21nd.apps.googleusercontent.com",
                "#appSecret": "KgAZGxKZ1RGVoGbNbDE-DclC"
            }
        }
    },
    "action": "validate_query"
}
```

Output
======

The schema and a list of tables and foreign keys.

Development
-----------

If required, change the local data folder (the `CUSTOM_FOLDER` placeholder) path to your custom path in
the `docker-compose.yml` file:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    volumes:
      - ./:/code
      - ./CUSTOM_FOLDER:/data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Clone this repository, init the workspace and run the component with the following command:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker-compose build
docker-compose run --rm dev
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run the test suite and lint checks using this command:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker-compose run --rm test
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Integration
===========

For information about deployment and integration with Keboola, refer to the
[deployment section in our developer documentation](https://developers.keboola.com/extend/component/deployment/).


================================================
File: Dockerfile
================================================
FROM python:3.10-slim
ENV PYTHONIOENCODING utf-8

COPY /src /code/src/
COPY /tests /code/tests/
COPY /scripts /code/scripts/
COPY requirements.txt /code/requirements.txt
COPY flake8.cfg /code/flake8.cfg
COPY deploy.sh /code/deploy.sh

# install gcc to be able to build packages - e.g. required by regex, dateparser, also required for pandas
RUN apt-get update && apt-get install -y build-essential

RUN pip install flake8

RUN pip install -r /code/requirements.txt

WORKDIR /code/


CMD ["python", "-u", "/code/src/component.py"]


================================================
File: LICENSE.md
================================================
The MIT License (MIT)

Copyright (c) 2018 Keboola DS, http://keboola.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files, to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

================================================
File: TEMPLATE_README.md
================================================
# KBC Component Python template

Python template for KBC Component creation. Defines the default structure and all Bitbucket pipeline CI scripts for automatic deployment.

Use as a starting point when creating a new component.

Example uses [keboola.component](https://pypi.org/project/keboola.component) library providing useful methods for KBC related tasks 
and boilerplate methods often needed by components, for more details see [documentation](https://github.com/keboola/python-component/blob/main/README.md)

*NOTE: Previously the template was based on top of the deprecated [keboola-python-util-lib library](https://bitbucket.org/kds_consulting_team/keboola-python-util-lib/src/master/)*

**Table of contents:**  
  
[TOC]

# Recommended component architecture
It is recommended to use the [keboola.component library](https://pypi.org/project/keboola.component), 
for each component. Major advantage is that it reduces the boilerplate code replication, the developer can focus on core component logic 
and not on boilerplate tasks. If anything is missing in the library, please fork and create a pull request with additional changes, 
so we can all benefit from it

**Base components on [CommonInterface](https://htmlpreview.github.io/?https://raw.githubusercontent.com/keboola/python-component/main/docs/api-html/component/interface.html#keboola.component.interface.CommonInterface)**

- No need to write configuration processing and validation code each time
- No need to setup logging environment manually
- No need to write code to store manifests, write statefile, retrieve dates based on relative period, and many more.
- The main focus can be the core component logic, which increases the code readability for new comers.

**Base Client on [HtttpClient](https://pypi.org/project/keboola.http-client/)**

- No need to write HTTP request handling over and over again
- Covers basic authentication, retry strategy, headers, default parameters


## Architecture using the template

![picture](docs/imgs/architecture.png)

## Example component
This template contains functional example of an [hello-world component](https://bitbucket.org/kds_consulting_team/kbc-python-template/src/master/src/component.py), 
it can be run with [sample configuration](https://bitbucket.org/kds_consulting_team/kbc-python-template/src/master/data/) and it produces valid results. 
It is advisable to use this structure as a base for new components. Especially the `component.py` module, which should only 
contain the base logic necessary for communication with KBC interface, processing parameters, collecting results
 and calling targeted API service methods. 


# Creating a new component
Clone this repository into new folder and remove git history
```bash
git clone https://bitbucket.org/kds_consulting_team/kbc-python-template.git my-new-component
cd my-new-component
rm -rf .git
git init
git remote add origin PATH_TO_YOUR_BB_REPO
git add .
git commit -m 'initial'
git push -u origin master
```

**Method #2:**

Copy the contents of the template folder into your clone empty repository

```bash
git clone PATH_TO_YOUR_BB_REPO my-new-component
# now copy the contents of the template into the my-new-component dir
cd my-new-component
git add .
git commit -m 'initial'
git push -u origin master
```

# Setting up the CI
 - Bitbucket: Enable [pipelines](https://confluence.atlassian.com/bitbucket/get-started-with-bitbucket-pipelines-792298921.html) in the repository.
    - For Github: Check that the [workflows are enabled](https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow).
    The actions are present in `.github/workflows/` folder. 
 - Set `KBC_DEVELOPERPORTAL_APP` env variable (dev portal app id)
 
 In case it is not set on the account level, set also other required dev portal env variables:
 
 - `KBC_DEVELOPERPORTAL_PASSWORD` - service account password
 - `KBC_DEVELOPERPORTAL_USERNAME` - service account username
 - `KBC_DEVELOPERPORTAL_VENDOR` - dev portal vendor
 - `KBC_STORAGE_TOKEN` - (optional) in case you wish to run KBC automated tests
  
 
 ![picture](docs/imgs/ci_variable.png)
 
The script execution is defined in three stages:

## Default stage
This script is executed on push to any branch except the master branch. It executes basic build and code quality steps. Following steps are performed:
Build docker image
Execute flake8 lint tests
Execute python unittest
(Optional) Push image with tag :test into the AWS repository for manual testing in KBC
If any of the above steps results in non 0 status, the build will fail. It is impossible to merge branches that fail to build into the master branch.

## Master stage
This script is executed on any push or change in the master branch. It performs every step as the default stage. Additionally, 
the `./scripts/update_dev_portal_properties.sh` script is executed. 
This script propagates all changes in the Component configuration files (component_config folder) to the Developer portal.
Currently these Dev Portal configuration parameters are supported:

 - `configSchema.json`
 - `configRowSchema.json`
 - `component_short_description.md`
 - `component_long_description.md`    

The choice to include this script directly in the master branch was made to simplify ad-hoc changes of the component configuration parameters. For instance if you wish to slightly modify the configuration schema without affecting the code itself, it is possible to simply push the changes directly into the master and these will be automatically propagated to the production without rebuilding the image itself. Solely Developer Portal configuration metadata is deployed at this stage.

## Tagged commit stage
Whenever a tagged commit is added, or tag created this script gets executed. This is a deployment phase, so a successful build results in new code being deployed in KBC production.
At this stage all steps present in the default and master stage are executed. Additionally, 
`deploy.sh` script that pushes the newly built image / tag into the ECR repository and KBC production is executed.
The deploy script is executed only after all tests and proper build steps passed. 
Moreover, the `deploy.sh` script will be executed **only in the master branch**. In other words if you create a tagged commit in another branch, the pipeline gets triggered but deployment script will fail, because it is not triggered within a master branch. This is to prevent accidental deployment from a feature branch.

 
# GELF logging

The template automatically chooses between STDOUT and GELF logger based on the Developer Portal configuration.

To fully leverage the benefits such as outputting the `Stack Trace` into the log event detail (available by clicking on the log event) 
log exceptions using `logger.exception(ex)`.

**TIP:** When the logger verbosity is set to `verbose` you may leverage `extra` fields to log the detailed message in the detail of the log event by adding extra fields to you messages:

```python
logging.error(f'{error}. See log detail for full query. ',
                         extra={"failed_query": json.dumps(query)})
```

Recommended [GELF logger setup](https://developers.keboola.com/extend/common-interface/logging/#setting-up) (Developer Portal) to allow debug mode logging:

```json
{
  "verbosity": {
    "100": "normal",
    "200": "normal",
    "250": "normal",
    "300": "verbose",
    "400": "verbose",
    "500": "camouflage",
    "550": "camouflage",
    "600": "camouflage"
  },
  "gelf_server_type": "tcp"
}
``` 
 
# Development
 
This example contains runnable container with simple unittest. For local testing it is useful to include `data` folder in the root
and use docker-compose commands to run the container or execute tests. 

If required, change local data folder (the `CUSTOM_FOLDER` placeholder) path to your custom path:
```yaml
    volumes:
      - ./:/code
      - ./CUSTOM_FOLDER:/data
```

Clone this repository, init the workspace and run the component with following command:

```
git clone https://bitbucket.org:kds_consulting_team/kbc-python-template.git my-new-component
cd my-new-component
docker-compose build
docker-compose run --rm dev
```

Run the test suite and lint check using this command:

```
docker-compose run --rm test
```

## Testing

The preset pipeline scripts contain sections allowing pushing testing image into the ECR repository and automatic 
testing in a dedicated project. These sections are by default commented out. 

**Running KBC tests on deploy step, before deployment**

Uncomment following section in the deployment step in `bitbucket-pipelines.yml` file:

```yaml
            # push test image to ECR - uncomment when initialised
            # - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
            # - docker tag $APP_IMAGE:latest $REPOSITORY:test
            # - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
            # - docker push $REPOSITORY:test
            # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP BASE_KBC_CONFIG test
            # - docker run --rm -e KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP KBC_CONFIG_1 test
            - ./scripts/update_dev_portal_properties.sh
            - ./deploy.sh
```

Make sure that you have `KBC_STORAGE_TOKEN` env. variable set, containing appropriate storage token with access 
to your KBC project. Also make sure to create a functional testing configuration and replace the `BASE_KBC_CONFIG` placeholder with its id.

**Pushing testing image for manual KBC tests**

In some cases you may wish to execute a testing version of your component manually prior to publishing. For instance to test various
configurations on it. For that it may be convenient to push the `test` image on every push either to master, or any branch.

To achieve that simply uncomment appropriate sections in `bitbucket-pipelines.yml` file, either in master branch step or in `default` step.

```yaml
            # push test image to ecr - uncomment for testing before deployment
#            - echo 'Pushing test image to repo. [tag=test]'
#            - export REPOSITORY=`docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP`
#            - docker tag $APP_IMAGE:latest $REPOSITORY:test
#            - eval $(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)
#            - docker push $REPOSITORY:test
```
 
 Once the build is finished, you may run such configuration in any KBC project as many times as you want by using [run-job](https://kebooladocker.docs.apiary.io/#reference/run/create-a-job-with-image/run-job) API call, using the `test` image tag.

# Integration

For information about deployment and integration with KBC, please refer to the [deployment section of developers documentation](https://developers.keboola.com/extend/component/deployment/) 

================================================
File: deploy.sh
================================================
#!/bin/sh
set -e

env

# compatibility with travis and bitbucket
if [ ! -z ${BITBUCKET_TAG} ]
then
	echo "assigning bitbucket tag"
	export TAG="$BITBUCKET_TAG"
elif [ ! -z ${TRAVIS_TAG} ]
then
	echo "assigning travis tag"
	export TAG="$TRAVIS_TAG"
elif [ ! -z ${GITHUB_TAG} ]
then
	echo "assigning github tag"
	export TAG="$GITHUB_TAG"
else
	echo No Tag is set!
	exit 1
fi

echo "Tag is '${TAG}'"

#check if deployment is triggered only in master
if [ ${BITBUCKET_BRANCH} != "master" ]; then
               echo Deploy on tagged commit can be only executed in master!
               exit 1
fi

# Obtain the component repository and log in
echo "Obtain the component repository and log in"
docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm  \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`

echo "Set credentials"
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME \
    -e KBC_DEVELOPERPORTAL_PASSWORD \
    quay.io/keboola/developer-portal-cli-v2:latest \
    ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})

# Push to the repository
echo "Push to the repository"
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:${TAG}
docker tag ${APP_IMAGE}:latest ${REPOSITORY}:latest
docker push ${REPOSITORY}:${TAG}
docker push ${REPOSITORY}:latest

# Update the tag in Keboola Developer Portal -> Deploy to KBC
if echo ${TAG} | grep -c '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$'
then
    docker run --rm \
        -e KBC_DEVELOPERPORTAL_USERNAME \
        -e KBC_DEVELOPERPORTAL_PASSWORD \
        quay.io/keboola/developer-portal-cli-v2:latest \
        update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${TAG} ecr ${REPOSITORY}
else
    echo "Skipping deployment to KBC, tag ${TAG} is not allowed."
fi


================================================
File: docker-compose.yml
================================================
version: "2"
services:
  # for development purposes
  dev:
    build: .
    volumes:
        - ./:/code
        - ./data:/data
    environment:
      - KBC_DATADIR=./data
  test:
    # Use to run flake8 and unittests checks
    build: .
    volumes:
      - ./:/code
      - ./data:/data
    environment:
      - KBC_DATADIR=./data
    command:
      - /bin/sh
      - /code/scripts/build_n_test.sh

================================================
File: flake8.cfg
================================================
[flake8]
exclude =
    .git,
    __pycache__,
    tests,
    example,
    data,
    venv
max-line-length = 120

# F812: list comprehension redefines ...
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H233: Python 3.x incompatible use of print operator
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting


================================================
File: requirements.txt
================================================
keboola.component==1.4.0
keboola.utils
google-api-python-client==2.71.0
google_auth_oauthlib==0.8.0
mock~=5.0.0
freezegun~=1.2.2

dataconf~=2.1.3
requests~=2.28.1
dateparser~=1.1.7
pyhocon~=0.3.59

================================================
File: component_config/component_long_description.md
================================================
Automate data retrieval from the [Display&Video 360 Reports](https://marketingplatform.google.com/about/display-video-360/). Run
existing reports defined via the [DV360 Report Builder](https://support.google.com/displayvideo/answer/6375151?hl=en&ref_topic=2798432&sjid=[REDACTED]-EU)
or define ad-hoc reports directly from the configuration.

**Google Limited Use Policy Disclosure:**

The app’s use and transfer to any other app of information received from Google APIs adheres
to [Google API Services User Data Policy](https://developers.google.com/terms/api-services-user-data-policy#additional_requirements_for_specific_api_scopes)
, including the Limited Use requirements.


================================================
File: component_config/component_short_description.md
================================================
Google Display & Video 360 is an integrated solution for end-to-end advertising campaigns.

================================================
File: component_config/configRowSchema.json
================================================
{
  "title": "DV360 report",
  "type": "object",
  "required": [
    "input_variant",
    "time_range",
    "destination"
  ],
  "properties": {
    "input_variant": {
      "type": "string",
      "title": "Report definition mode",
      "propertyOrder": 100,
      "description": "You may choose to either create a new report or use an existing report ID.",
      "enum": [
        "report_specification",
        "existing_report_id"
      ],
      "options": {
        "enum_titles": [
          "Report specification",
          "Existing report ID"
        ]
      },
      "default": "report_specification"
    },
    "time_range": {
      "type": "object",
      "title": "Time range",
      "propertyOrder": 200,
      "properties": {
        "period": {
          "type": "string",
          "title": "Report period",
          "propertyOrder": 10,
          "default": "LAST_7_DAYS",
          "enum": [
            "CUSTOM_DATES",
            "CURRENT_DAY",
            "PREVIOUS_DAY",
            "WEEK_TO_DATE",
            "MONTH_TO_DATE",
            "QUARTER_TO_DATE",
            "YEAR_TO_DATE",
            "PREVIOUS_WEEK",
            "PREVIOUS_MONTH",
            "PREVIOUS_QUARTER",
            "PREVIOUS_YEAR",
            "LAST_7_DAYS",
            "LAST_14_DAYS",
            "LAST_30_DAYS",
            "LAST_60_DAYS",
            "LAST_90_DAYS",
            "LAST_365_DAYS",
            "ALL_TIME"
          ],
          "options": {
            "enum_titles": [
              "Custom date range",
              "Current day",
              "Previous day",
              "All days, including the current day, since the most recent Sunday",
              "All days, including the current day, since the start of the current month",
              "All days, including the current day, since the start of the current quarter",
              "All days, including the current day, since the start of the current calendar year",
              "The previous completed week, beginning from Sunday",
              "The previous completed calendar month",
              "The previous completed quarter",
              "The previous completed calendar year",
              "The previous 7 days, excluding the current day",
              "The previous 14 days, excluding the current day",
              "The previous 30 days, excluding the current day",
              "The previous 60 days, excluding the current day",
              "The previous 90 days, excluding the current day",
              "The previous 365 days, excluding the current day",
              "All data, excluding the current day"
            ]
          }
        },
        "date_from": {
          "type": "string",
          "title": "Date from",
          "propertyOrder": 20,
          "description": "Start date: Either in YYYY-MM-DD format or a relative date string, e.g., 5 days ago, 1 month ago, yesterday, etc.",
          "options": {
            "dependencies": {
              "period": "CUSTOM_DATES"
            }
          }
        },
        "date_to": {
          "type": "string",
          "title": "Date to",
          "propertyOrder": 30,
          "description": "End date: Either in YYYY-MM-DD format or a relative date string, e.g., 5 days ago, 1 month ago, yesterday, etc.",
          "options": {
            "dependencies": {
              "period": "CUSTOM_DATES"
            }
          }
        }
      }
    },
    "report_specification": {
      "type": "object",
      "title": "Report details",
      "propertyOrder": 150,
      "properties": {
        "report_type": {
          "title": "Report type",
          "type": "string",
          "enum": [
            "STANDARD",
            "INVENTORY_AVAILABILITY",
            "AUDIENCE_COMPOSITION",
            "FLOODLIGHT",
            "YOUTUBE",
            "GRP",
            "YOUTUBE_PROGRAMMATIC_GUARANTEED",
            "REACH",
            "UNIQUE_REACH_AUDIENCE",
            "FULL_PATH",
            "PATH_ATTRIBUTION"
          ],
          "options": {
            "enum_titles": [
              "Standard",
              "Inventory Availability",
              "Audience Composition",
              "Floodlight",
              "YouTube",
              "GRP",
              "YouTube Programmatic Guaranteed",
              "Reach",
              "Unique Reach Audience",
              "Full Path",
              "Path Attribution"
            ]
          },
          "propertyOrder": 500
        },
        "dimensions": {
          "title": "Dimensions",
          "type": "array",
          "format": "select",
          "uniqueItems": true,
          "required": true,
          "minItems": 1,
          "items": {
            "type": "string",
            "enum": [
              "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_ID",
              "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_NAME",
              "FILTER_ACTIVE_VIEW_EXPECTED_VIEWABILITY",
              "FILTER_ADVERTISER",
              "FILTER_ADVERTISER_CURRENCY",
              "FILTER_ADVERTISER_INTEGRATION_CODE",
              "FILTER_ADVERTISER_INTEGRATION_STATUS",
              "FILTER_ADVERTISER_NAME",
              "FILTER_ADVERTISER_TIMEZONE",
              "FILTER_AD_POSITION",
              "FILTER_AD_TYPE",
              "FILTER_AGE",
              "FILTER_ALGORITHM",
              "FILTER_ALGORITHM_ID",
              "FILTER_AMP_PAGE_REQUEST",
              "FILTER_ANONYMOUS_INVENTORY_MODELING",
              "FILTER_APP_URL",
              "FILTER_APP_URL_EXCLUDED",
              "FILTER_ATTRIBUTED_USERLIST",
              "FILTER_ATTRIBUTED_USERLIST_COST",
              "FILTER_ATTRIBUTED_USERLIST_TYPE",
              "FILTER_ATTRIBUTION_MODEL",
              "FILTER_AUDIENCE_LIST",
              "FILTER_AUDIENCE_LIST_COST",
              "FILTER_AUDIENCE_LIST_TYPE",
              "FILTER_AUDIENCE_NAME",
              "FILTER_AUDIENCE_TYPE",
              "FILTER_AUDIO_FEED_TYPE_NAME",
              "FILTER_AUTHORIZED_SELLER_STATE",
              "FILTER_BILLABLE_OUTCOME",
              "FILTER_BRAND_LIFT_TYPE",
              "FILTER_BROWSER",
              "FILTER_BUDGET_SEGMENT_BUDGET",
              "FILTER_BUDGET_SEGMENT_DESCRIPTION",
              "FILTER_BUDGET_SEGMENT_END_DATE",
              "FILTER_BUDGET_SEGMENT_PACING_PERCENTAGE",
              "FILTER_BUDGET_SEGMENT_START_DATE",
              "FILTER_BUDGET_SEGMENT_TYPE",
              "FILTER_CAMPAIGN_DAILY_FREQUENCY",
              "FILTER_CARRIER",
              "FILTER_CARRIER_NAME",
              "FILTER_CHANNEL_GROUPING",
              "FILTER_CHANNEL_ID",
              "FILTER_CHANNEL_NAME",
              "FILTER_CHANNEL_TYPE",
              "FILTER_CITY",
              "FILTER_CITY_NAME",
              "FILTER_CM360_PLACEMENT_ID",
              "FILTER_COMPANION_CREATIVE_ID",
              "FILTER_COMPANION_CREATIVE_NAME",
              "FILTER_CONVERSION_AD_EVENT_TYPE",
              "FILTER_CONVERSION_AD_EVENT_TYPE_ID",
              "FILTER_CONVERSION_DELAY",
              "FILTER_CONVERSION_SOURCE",
              "FILTER_CONVERSION_SOURCE_ID",
              "FILTER_COUNTRY",
              "FILTER_COUNTRY_ID",
              "FILTER_CREATIVE",
              "FILTER_CREATIVE_ASSET",
              "FILTER_CREATIVE_ATTRIBUTE",
              "FILTER_CREATIVE_HEIGHT",
              "FILTER_CREATIVE_ID",
              "FILTER_CREATIVE_INTEGRATION_CODE",
              "FILTER_CREATIVE_RENDERED_IN_AMP",
              "FILTER_CREATIVE_SIZE",
              "FILTER_CREATIVE_SOURCE",
              "FILTER_CREATIVE_STATUS",
              "FILTER_CREATIVE_TYPE",
              "FILTER_CREATIVE_WIDTH",
              "FILTER_DATA_PROVIDER",
              "FILTER_DATA_PROVIDER_NAME",
              "FILTER_DATA_SOURCE",
              "FILTER_DATE",
              "FILTER_DAY_OF_WEEK",
              "FILTER_DETAILED_DEMOGRAPHICS",
              "FILTER_DETAILED_DEMOGRAPHICS_ID",
              "FILTER_DEVICE",
              "FILTER_DEVICE_MAKE",
              "FILTER_DEVICE_MODEL",
              "FILTER_DEVICE_TYPE",
              "FILTER_DFP_ORDER_ID",
              "FILTER_DIGITAL_CONTENT_LABEL",
              "FILTER_DMA",
              "FILTER_DMA_NAME",
              "FILTER_DOMAIN",
              "FILTER_ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST",
              "FILTER_ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST",
              "FILTER_EVENT_TYPE",
              "FILTER_EXCHANGE",
              "FILTER_EXCHANGE_CODE",
              "FILTER_EXCHANGE_ID",
              "FILTER_EXTENSION",
              "FILTER_EXTENSION_ASSET",
              "FILTER_EXTENSION_ASSET_STATUS",
              "FILTER_EXTENSION_ASSET_TYPE",
              "FILTER_EXTENSION_STATUS",
              "FILTER_EXTENSION_TYPE",
              "FILTER_FIRST_PARTY_AUDIENCE_LIST_COST",
              "FILTER_FIRST_PARTY_AUDIENCE_LIST_TYPE",
              "FILTER_FLOODLIGHT_ACTIVITY",
              "FILTER_FLOODLIGHT_ACTIVITY_ID",
              "FILTER_FORMAT",
              "FILTER_GAM_INSERTION_ORDER",
              "FILTER_GAM_LINE_ITEM",
              "FILTER_GAM_LINE_ITEM_ID",
              "FILTER_GENDER",
              "FILTER_GMAIL_AGE",
              "FILTER_GMAIL_CITY",
              "FILTER_GMAIL_COUNTRY",
              "FILTER_GMAIL_COUNTRY_NAME",
              "FILTER_GMAIL_DEVICE_TYPE",
              "FILTER_GMAIL_DEVICE_TYPE_NAME",
              "FILTER_GMAIL_GENDER",
              "FILTER_GMAIL_REGION",
              "FILTER_GMAIL_REMARKETING_LIST",
              "FILTER_HOUSEHOLD_INCOME",
              "FILTER_IMPRESSION_COUNTING_METHOD",
              "FILTER_IMPRESSION_LOSS_REJECTION_REASON",
              "FILTER_INSERTION_ORDER",
              "FILTER_INSERTION_ORDER_GOAL_TYPE",
              "FILTER_INSERTION_ORDER_GOAL_VALUE",
              "FILTER_INSERTION_ORDER_INTEGRATION_CODE",
              "FILTER_INSERTION_ORDER_NAME",
              "FILTER_INSERTION_ORDER_STATUS",
              "FILTER_INTEREST",
              "FILTER_INVENTORY_COMMITMENT_TYPE",
              "FILTER_INVENTORY_DELIVERY_METHOD",
              "FILTER_INVENTORY_FORMAT",
              "FILTER_INVENTORY_MEDIA_COST_TYPE",
              "FILTER_INVENTORY_RATE_TYPE",
              "FILTER_INVENTORY_SOURCE",
              "FILTER_INVENTORY_SOURCE_EXTERNAL_ID",
              "FILTER_INVENTORY_SOURCE_GROUP",
              "FILTER_INVENTORY_SOURCE_GROUP_ID",
              "FILTER_INVENTORY_SOURCE_ID",
              "FILTER_INVENTORY_SOURCE_NAME",
              "FILTER_INVENTORY_SOURCE_TYPE",
              "FILTER_KEYWORD",
              "FILTER_LIFE_EVENT",
              "FILTER_LIFE_EVENTS",
              "FILTER_LINE_ITEM",
              "FILTER_LINE_ITEM_BUDGET",
              "FILTER_LINE_ITEM_DAILY_FREQUENCY",
              "FILTER_LINE_ITEM_END_DATE",
              "FILTER_LINE_ITEM_INTEGRATION_CODE",
              "FILTER_LINE_ITEM_LIFETIME_FREQUENCY",
              "FILTER_LINE_ITEM_NAME",
              "FILTER_LINE_ITEM_PACING_PERCENTAGE",
              "FILTER_LINE_ITEM_START_DATE",
              "FILTER_LINE_ITEM_STATUS",
              "FILTER_LINE_ITEM_TYPE",
              "FILTER_MATCHED_GENRE_TARGET",
              "FILTER_MATCH_RATIO",
              "FILTER_MEASUREMENT_SOURCE",
              "FILTER_MEDIA_PLAN",
              "FILTER_MEDIA_PLAN_NAME",
              "FILTER_MEDIA_TYPE",
              "FILTER_MOBILE_GEO",
              "FILTER_MONTH",
              "FILTER_MRAID_SUPPORT",
              "FILTER_NIELSEN_AGE",
              "FILTER_NIELSEN_COUNTRY_CODE",
              "FILTER_NIELSEN_DATE_RANGE",
              "FILTER_NIELSEN_DEVICE_ID",
              "FILTER_NIELSEN_GENDER",
              "FILTER_NIELSEN_RESTATEMENT_DATE",
              "FILTER_OMID_CAPABLE",
              "FILTER_OM_SDK_AVAILABLE",
              "FILTER_ORDER_ID",
              "FILTER_OS",
              "FILTER_PAGE_CATEGORY",
              "FILTER_PAGE_LAYOUT",
              "FILTER_PARENTAL_STATUS",
              "FILTER_PARTNER",
              "FILTER_PARTNER_CURRENCY",
              "FILTER_PARTNER_NAME",
              "FILTER_PARTNER_STATUS",
              "FILTER_PATH_EVENT_INDEX",
              "FILTER_PATH_PATTERN_ID",
              "FILTER_PLACEMENT_ALL_YOUTUBE_CHANNELS",
              "FILTER_PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS",
              "FILTER_PLATFORM",
              "FILTER_PLAYBACK_METHOD",
              "FILTER_POSITION_IN_CONTENT",
              "FILTER_PUBLIC_INVENTORY",
              "FILTER_PUBLISHER_PROPERTY",
              "FILTER_PUBLISHER_PROPERTY_ID",
              "FILTER_PUBLISHER_PROPERTY_SECTION",
              "FILTER_PUBLISHER_PROPERTY_SECTION_ID",
              "FILTER_PUBLISHER_TRAFFIC_SOURCE",
              "FILTER_QUARTER",
              "FILTER_REFRESHED_AD_NAME",
              "FILTER_REFUND_REASON",
              "FILTER_REGION",
              "FILTER_REGION_NAME",
              "FILTER_REMARKETING_LIST",
              "FILTER_REWARDED",
              "FILTER_SENSITIVE_CATEGORY",
              "FILTER_SERVED_PIXEL_DENSITY",
              "FILTER_SITE_ID",
              "FILTER_SITE_LANGUAGE",
              "FILTER_SKIPPABLE_SUPPORT",
              "FILTER_TARGETED_DATA_PROVIDERS",
              "FILTER_TARGETED_USER_LIST",
              "FILTER_TARGETING_EXPANSION",
              "FILTER_THIRD_PARTY_AUDIENCE_LIST_COST",
              "FILTER_THIRD_PARTY_AUDIENCE_LIST_TYPE",
              "FILTER_TIME_OF_DAY",
              "FILTER_TRUEVIEW_AD",
              "FILTER_TRUEVIEW_AD_GROUP",
              "FILTER_TRUEVIEW_AD_GROUP_AD_ID",
              "FILTER_TRUEVIEW_AD_GROUP_ID",
              "FILTER_TRUEVIEW_AD_TYPE_NAME",
              "FILTER_TRUEVIEW_AGE",
              "FILTER_TRUEVIEW_CATEGORY",
              "FILTER_TRUEVIEW_CITY",
              "FILTER_TRUEVIEW_CLICK_TYPE_NAME",
              "FILTER_TRUEVIEW_CONVERSION_TYPE",
              "FILTER_TRUEVIEW_COUNTRY",
              "FILTER_TRUEVIEW_CUSTOM_AFFINITY",
              "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS",
              "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS_ID",
              "FILTER_TRUEVIEW_DMA",
              "FILTER_TRUEVIEW_DMA_NAME",
              "FILTER_TRUEVIEW_GENDER",
              "FILTER_TRUEVIEW_HOUSEHOLD_INCOME",
              "FILTER_TRUEVIEW_IAR_AGE",
              "FILTER_TRUEVIEW_IAR_CATEGORY",
              "FILTER_TRUEVIEW_IAR_CITY",
              "FILTER_TRUEVIEW_IAR_COUNTRY",
              "FILTER_TRUEVIEW_IAR_COUNTRY_NAME",
              "FILTER_TRUEVIEW_IAR_GENDER",
              "FILTER_TRUEVIEW_IAR_INTEREST",
              "FILTER_TRUEVIEW_IAR_LANGUAGE",
              "FILTER_TRUEVIEW_IAR_PARENTAL_STATUS",
              "FILTER_TRUEVIEW_IAR_REGION_NAME",
              "FILTER_TRUEVIEW_IAR_REMARKETING_LIST",
              "FILTER_TRUEVIEW_IAR_TIME_OF_DAY",
              "FILTER_TRUEVIEW_IAR_YOUTUBE_CHANNEL",
              "FILTER_TRUEVIEW_IAR_YOUTUBE_VIDEO",
              "FILTER_TRUEVIEW_IAR_ZIPCODE",
              "FILTER_TRUEVIEW_INTEREST",
              "FILTER_TRUEVIEW_KEYWORD",
              "FILTER_TRUEVIEW_PARENTAL_STATUS",
              "FILTER_TRUEVIEW_PLACEMENT",
              "FILTER_TRUEVIEW_PLACEMENT_ID",
              "FILTER_TRUEVIEW_REGION",
              "FILTER_TRUEVIEW_REGION_NAME",
              "FILTER_TRUEVIEW_REMARKETING_LIST",
              "FILTER_TRUEVIEW_REMARKETING_LIST_NAME",
              "FILTER_TRUEVIEW_TARGETING_EXPANSION",
              "FILTER_TRUEVIEW_URL",
              "FILTER_TRUEVIEW_ZIPCODE",
              "FILTER_USER_LIST",
              "FILTER_USER_LIST_FIRST_PARTY",
              "FILTER_USER_LIST_FIRST_PARTY_NAME",
              "FILTER_USER_LIST_THIRD_PARTY",
              "FILTER_USER_LIST_THIRD_PARTY_NAME",
              "FILTER_VARIANT_ID",
              "FILTER_VARIANT_NAME",
              "FILTER_VARIANT_VERSION",
              "FILTER_VENDOR_MEASUREMENT_MODE",
              "FILTER_VERIFICATION_AUDIBILITY_COMPLETE",
              "FILTER_VERIFICATION_AUDIBILITY_START",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_START",
              "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE",
              "FILTER_VERIFICATION_VIDEO_POSITION",
              "FILTER_VERIFICATION_VIDEO_RESIZED",
              "FILTER_VIDEO_AD_POSITION_IN_STREAM",
              "FILTER_VIDEO_COMPANION_CREATIVE_SIZE",
              "FILTER_VIDEO_CONTENT_DURATION",
              "FILTER_VIDEO_CONTENT_LIVE_STREAM",
              "FILTER_VIDEO_CONTINUOUS_PLAY",
              "FILTER_VIDEO_CREATIVE_DURATION",
              "FILTER_VIDEO_CREATIVE_DURATION_SKIPPABLE",
              "FILTER_VIDEO_DURATION",
              "FILTER_VIDEO_DURATION_SECONDS",
              "FILTER_VIDEO_DURATION_SECONDS_RANGE",
              "FILTER_VIDEO_FORMAT_SUPPORT",
              "FILTER_VIDEO_PLAYER_SIZE",
              "FILTER_VIDEO_RATING_TIER",
              "FILTER_VIDEO_SKIPPABLE_SUPPORT",
              "FILTER_WEEK",
              "FILTER_YEAR",
              "FILTER_YOUTUBE_ADAPTED_AUDIENCE_LIST",
              "FILTER_YOUTUBE_AD_VIDEO",
              "FILTER_YOUTUBE_AD_VIDEO_ID",
              "FILTER_YOUTUBE_CHANNEL",
              "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER",
              "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER",
              "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER",
              "FILTER_YOUTUBE_VIDEO",
              "FILTER_ZIP_CODE",
              "FILTER_ZIP_POSTAL_CODE"
            ],
            "options": {
              "enum_titles": [
                "Active View: Custom Metric ID",
                "Active View: Custom Metric Name",
                "Active View Expected Viewability",
                "Advertiser ID",
                "Advertiser Currency",
                "Advertiser Integration Code",
                "Advertiser Status",
                "Advertiser",
                "Advertiser Time Zone",
                "Ad Position",
                "Ad Type",
                "Age",
                "Algorithm",
                "Algorithm ID",
                "AMP Page Request",
                "Anonymous Inventory Modeling",
                "App/URL",
                "App/URL Excluded",
                "Attributed Userlist",
                "Attributed Userlist Cost",
                "Attributed Userlist Type",
                "Attribution Model",
                "Audience List",
                "Audience List Cost",
                "Audience List Type",
                "Audience Name",
                "Audience Type",
                "Audio Feed Type",
                "Authorized Seller State",
                "Billable Outcome",
                "Brand Lift Type",
                "Browser",
                "Budget Segment Budget",
                "Budget Segment Name",
                "Budget Segment End Date",
                "Budget Segment Pacing Percentage",
                "Budget Segment Start Date",
                "Budget Type (Segment)",
                "Insertion Order Daily Frequency",
                "ISP or Carrier ID",
                "ISP or Carrier",
                "Channel Grouping",
                "Channel ID",
                "Channel",
                "Channel Type",
                "City ID",
                "City",
                "CM360 Placement ID",
                "Companion Creative ID",
                "Companion Creative",
                "Conversion Ad Event Type",
                "Conversion Ad Event Type ID",
                "Time to Conversion",
                "Conversion Source",
                "Conversion Source ID",
                "Country",
                "Country",
                "Creative",
                "Creative Asset",
                "Creative Attributes",
                "Creative Height",
                "Creative ID",
                "Creative Integration Code",
                "Creative Rendered in AMP",
                "Creative Size",
                "Creative Source",
                "Creative Status",
                "Creative Type",
                "Creative Width",
                "Data Provider ID",
                "Data Provider",
                "Data Source",
                "Date",
                "Day of Week",
                "Detailed Demographics",
                "Detailed Demographics ID",
                "Device",
                "Device Make",
                "Device Model",
                "Device Type",
                "DFP Insertion Order ID",
                "Digital Content Label",
                "DMA Code",
                "DMA",
                "Domain",
                "Eligible Cookies on First-Party Audience List",
                "Eligible Cookies on Third-Party Audience List and Interest",
                "Event Type",
                "Exchange",
                "Exchange Code",
                "Exchange ID",
                "Asset",
                "Asset (upgraded)",
                "Asset Status (upgraded)",
                "Asset Type (upgraded)",
                "Asset Status",
                "Asset Type",
                "First Party Audience List Cost",
                "First Party Audience List Type",
                "Floodlight Activity",
                "Floodlight Activity ID",
                "Format",
                "DFP Insertion Order",
                "DFP Line Item",
                "DFP Line Item ID",
                "Gender",
                "Age",
                "City",
                "Country",
                "Country",
                "Device Type",
                "Device Type",
                "Gender",
                "Region",
                "Remarketing List",
                "Household Income",
                "Impression Counting Method",
                "Rejection Reason",
                "Insertion Order ID",
                "Insertion Order Goal Type",
                "Insertion Order Goal Value",
                "Insertion Order Integration Code",
                "Insertion Order",
                "Insertion Order Status",
                "Interest",
                "Inventory Commitment Type",
                "Inventory Delivery Method",
                "Format",
                "Inventory Media Cost Type",
                "Inventory Rate Type",
                "Inventory Source ID (Legacy)",
                "Inventory Source ID (external)",
                "Inventory Source Group",
                "Inventory Source Group ID",
                "Inventory Source ID",
                "Inventory Source",
                "Inventory Source Type",
                "Keyword",
                "Life Event",
                "Life Events",
                "Line Item ID",
                "Line Item Budget",
                "Line Item Daily Frequency",
                "Line Item End Date",
                "Line Item Integration Code",
                "Line Item Lifetime Frequency",
                "Line Item",
                "Line Item Pacing Percentage",
                "Line Item Start Date",
                "Line Item Status",
                "Line Item Type",
                "Matched Genre Target",
                "Match Ratio",
                "Measurement Source",
                "Campaign ID",
                "Campaign",
                "Media Type",
                "Business Chain",
                "Month",
                "MRAID Support",
                "Age",
                "Country",
                "Date Range for Cumulative Metrics",
                "Device ID",
                "Gender",
                "Restatement Date",
                "OM SDK Capable",
                "OM SDK Available",
                "Order ID",
                "Operating System",
                "Category",
                "Environment",
                "Parental Status",
                "Partner ID",
                "Partner Currency",
                "Partner",
                "Partner Status",
                "Path Event Index",
                "Path Pattern ID",
                "Placement (All YouTube Channels)",
                "Placement Name (All YouTube Channels)",
                "Platform",
                "Playback Method",
                "Position in Content",
                "Public Inventory",
                "Publisher Property",
                "Publisher Property ID",
                "Publisher Property Section",
                "Publisher Property Section ID",
                "Publisher Traffic Source",
                "Quarter",
                "Refreshed Ad",
                "Refund Reason",
                "Region ID",
                "Region",
                "Remarketing List",
                "Rewarded",
                "Sensitive Category",
                "Served Pixel Density",
                "App/URL ID",
                "Language",
                "Video Skippable Support",
                "Targeted Data Providers",
                "Attributed Userlist ID",
                "Targeting Expansion",
                "Third Party Audience List Cost",
                "Third Party Audience List Type",
                "Time of Day",
                "YouTube Ad",
                "YouTube Ad Group",
                "YouTube Ad ID",
                "YouTube Ad Group ID",
                "YouTube Ad Type",
                "Age (YouTube)",
                "Category",
                "City",
                "Click Type",
                "Conversion Type",
                "Country (YouTube)",
                "Custom Affinity",
                "Detailed Demographics",
                "Detailed Demographics ID",
                "DMA ID",
                "DMA",
                "Gender",
                "Household Income",
                "Age",
                "Category",
                "City",
                "Country",
                "Country",
                "Gender",
                "Interest",
                "Language",
                "Parental Status",
                "Region",
                "Remarketing List ID",
                "Time of Day",
                "YouTube Channel",
                "YouTube Video",
                "Zip Code",
                "Interest",
                "Keyword",
                "Parental Status",
                "Placement (Managed)",
                "Placement ID (Managed)",
                "Region ID",
                "Region",
                "Remarketing List ID",
                "Remarketing List",
                "Optimized Targeting",
                "Placement (All)",
                "Zipcode",
                "Audience List ID",
                "First Party Audience List ID",
                "First Party Audience List",
                "Third Party Audience List ID",
                "Third Party Audience List",
                "Variant ID",
                "Variant Name",
                "Variant Version",
                "Vendor Measurement Mode",
                "Audibility At Complete",
                "Audibility At Start",
                "Verification Video Player Size",
                "Video Player Size at Completion",
                "Video Player Size at First Quartile",
                "Video Player Size at Midpoint",
                "Video Player Size at Start",
                "Video Player Size at Third Quartile",
                "Verification Video Position",
                "Video Resized",
                "Video Ad Position In Stream",
                "Companion Creative Size",
                "Video Content Duration",
                "Video Content Live Stream",
                "Video Continuous Play",
                "Video Creative Duration",
                "Video Creative Duration (Skippable)",
                "Video Duration",
                "Max Video Duration",
                "Max Video Duration Range",
                "Video Format Support",
                "Video Player Size",
                "Digital Content Label",
                "Video Skippable Support",
                "Week",
                "Year",
                "YouTube Adapted Audience List",
                "YouTube Ad Video",
                "YouTube Ad Video ID",
                "YouTube Channel",
                "Advertiser",
                "Insertion Order",
                "Partner",
                "YouTube Video",
                "Zip Code ID",
                "Zip Code"
              ]
            }
          },
          "propertyOrder": 600
        },
        "metrics": {
          "type": "array",
          "title": "Metrics",
          "propertyOrder": 700,
          "format": "select",
          "required": true,
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_MEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_RATE",
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_TRUEVIEW_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_TRUEVIEW_MEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_AUDIBLE_FULLY_ON_SCREEN_HALF_OF_DURATION_TRUEVIEW_RATE",
              "METRIC_ACTIVE_VIEW_AUDIBLE_VISIBLE_ON_COMPLETE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME",
              "METRIC_ACTIVE_VIEW_CUSTOM_METRIC_MEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_CUSTOM_METRIC_VIEWABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_CUSTOM_METRIC_VIEWABLE_RATE",
              "METRIC_ACTIVE_VIEW_DISTRIBUTION_UNMEASURABLE",
              "METRIC_ACTIVE_VIEW_DISTRIBUTION_UNVIEWABLE",
              "METRIC_ACTIVE_VIEW_DISTRIBUTION_VIEWABLE",
              "METRIC_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_PCT_MEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_PCT_VIEWABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_VISIBLE_AT_START",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_VISIBLE_FIRST_QUAR",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_VISIBLE_ON_COMPLETE",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_VISIBLE_SECOND_QUAR",
              "METRIC_ACTIVE_VIEW_PERCENT_AUDIBLE_VISIBLE_THIRD_QUAR",
              "METRIC_ACTIVE_VIEW_PERCENT_FULLY_ON_SCREEN_2_SEC",
              "METRIC_ACTIVE_VIEW_PERCENT_FULL_SCREEN",
              "METRIC_ACTIVE_VIEW_PERCENT_IN_BACKGROUND",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_AD_PLAYED",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_COMPLETED_IMPRESSIONS_AUDIBLE_AND_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_COMPLETED_IMPRESSIONS_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_FIRST_QUARTILE_IMPRESSIONS_AUDIBLE_AND_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_FIRST_QUARTILE_IMPRESSIONS_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_MIDPOINT_IMPRESSIONS_AUDIBLE_AND_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_MIDPOINT_IMPRESSIONS_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_THIRD_QUARTILE_IMPRESSIONS_AUDIBLE_AND_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_OF_THIRD_QUARTILE_IMPRESSIONS_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_PLAY_TIME_AUDIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_PLAY_TIME_AUDIBLE_AND_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_PLAY_TIME_VISIBLE",
              "METRIC_ACTIVE_VIEW_PERCENT_VIEWABLE_FOR_TIME_THRESHOLD",
              "METRIC_ACTIVE_VIEW_PERCENT_VISIBLE_AT_START",
              "METRIC_ACTIVE_VIEW_PERCENT_VISIBLE_FIRST_QUAR",
              "METRIC_ACTIVE_VIEW_PERCENT_VISIBLE_ON_COMPLETE",
              "METRIC_ACTIVE_VIEW_PERCENT_VISIBLE_SECOND_QUAR",
              "METRIC_ACTIVE_VIEW_PERCENT_VISIBLE_THIRD_QUAR",
              "METRIC_ACTIVE_VIEW_UNMEASURABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_UNVIEWABLE_IMPRESSIONS",
              "METRIC_ACTIVE_VIEW_VIEWABLE_FOR_TIME_THRESHOLD",
              "METRIC_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS",
              "METRIC_ACTIVITY_REVENUE",
              "METRIC_ADAPTED_AUDIENCE_FREQUENCY",
              "METRIC_ADLINGO_FEE_ADVERTISER_CURRENCY",
              "METRIC_AUDIO_CLIENT_COST_ECPCL_ADVERTISER_CURRENCY",
              "METRIC_AUDIO_MEDIA_COST_ECPCL_ADVERTISER_CURRENCY",
              "METRIC_AUDIO_MUTES_AUDIO",
              "METRIC_AUDIO_REVENUE_ECPCL_ADVERTISER_CURRENCY",
              "METRIC_AUDIO_UNMUTES_AUDIO",
              "METRIC_AUDIO_UNMUTES_VIDEO",
              "METRIC_AVERAGE_DISPLAY_TIME",
              "METRIC_AVERAGE_IMPRESSION_FREQUENCY_PER_USER",
              "METRIC_AVERAGE_IMPRESSION_FREQUENCY_PER_USER_7DAYS",
              "METRIC_AVERAGE_INTERACTION_TIME",
              "METRIC_AVERAGE_WATCH_TIME_PER_IMPRESSION",
              "METRIC_BEGIN_TO_RENDER_ELIGIBLE_IMPRESSIONS",
              "METRIC_BEGIN_TO_RENDER_IMPRESSIONS",
              "METRIC_BENCHMARK_FREQUENCY",
              "METRIC_BID_REQUESTS",
              "METRIC_BILLABLE_COST_ADVERTISER",
              "METRIC_BILLABLE_COST_PARTNER",
              "METRIC_BILLABLE_COST_USD",
              "METRIC_BILLABLE_IMPRESSIONS",
              "METRIC_BRAND_LIFT_ABSOLUTE_BRAND_LIFT",
              "METRIC_BRAND_LIFT_ALL_SURVEY_RESPONSES",
              "METRIC_BRAND_LIFT_BASELINE_POSITIVE_RESPONSE_RATE",
              "METRIC_BRAND_LIFT_BASELINE_SURVEY_RESPONSES",
              "METRIC_BRAND_LIFT_COST_PER_LIFTED_USER",
              "METRIC_BRAND_LIFT_EXPOSED_SURVEY_RESPONSES",
              "METRIC_BRAND_LIFT_HEADROOM_BRAND_LIFT",
              "METRIC_BRAND_LIFT_RELATIVE_BRAND_LIFT",
              "METRIC_BRAND_LIFT_USERS",
              "METRIC_CARD_CLICKS",
              "METRIC_CLICKS",
              "METRIC_CLICK_TO_POST_CLICK_CONVERSION_RATE",
              "METRIC_CLIENT_COST_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_ECPA_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_ECPA_PC_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_ECPA_PV_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_ECPC_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_ECPM_ADVERTISER_CURRENCY",
              "METRIC_CLIENT_COST_VIEWABLE_ECPM_ADVERTISER_CURRENCY",
              "METRIC_CM360_POST_CLICK_REVENUE",
              "METRIC_CM360_POST_CLICK_REVENUE_CROSS_ENVIRONMENT",
              "METRIC_CM360_POST_VIEW_REVENUE",
              "METRIC_CM360_POST_VIEW_REVENUE_CROSS_ENVIRONMENT",
              "METRIC_COMPANION_CLICKS_AUDIO",
              "METRIC_COMPANION_IMPRESSIONS_AUDIO",
              "METRIC_COMPLETE_LISTENS_AUDIO",
              "METRIC_COMPLETION_RATE_AUDIO",
              "METRIC_CONVERSIONS_PER_MILLE",
              "METRIC_CONVERTING_PATHS",
              "METRIC_COOKIE_CONSENTED_FLOODLIGHT_IMPRESSIONS",
              "METRIC_COOKIE_REACH_AVERAGE_IMPRESSION_FREQUENCY",
              "METRIC_COOKIE_REACH_IMPRESSION_REACH",
              "METRIC_COOKIE_UNCONSENTED_FLOODLIGHT_IMPRESSIONS",
              "METRIC_COUNTERS",
              "METRIC_CPM_FEE1_ADVERTISER",
              "METRIC_CPM_FEE1_PARTNER",
              "METRIC_CPM_FEE1_USD",
              "METRIC_CPM_FEE2_ADVERTISER",
              "METRIC_CPM_FEE2_PARTNER",
              "METRIC_CPM_FEE2_USD",
              "METRIC_CPM_FEE3_ADVERTISER",
              "METRIC_CPM_FEE3_PARTNER",
              "METRIC_CPM_FEE3_USD",
              "METRIC_CPM_FEE4_ADVERTISER",
              "METRIC_CPM_FEE4_PARTNER",
              "METRIC_CPM_FEE4_USD",
              "METRIC_CPM_FEE5_ADVERTISER",
              "METRIC_CPM_FEE5_PARTNER",
              "METRIC_CPM_FEE5_USD",
              "METRIC_CTR",
              "METRIC_CUSTOM_FEE_1_ADVERTISER_CURRENCY",
              "METRIC_CUSTOM_FEE_2_ADVERTISER_CURRENCY",
              "METRIC_CUSTOM_FEE_3_ADVERTISER_CURRENCY",
              "METRIC_CUSTOM_FEE_4_ADVERTISER_CURRENCY",
              "METRIC_CUSTOM_FEE_5_ADVERTISER_CURRENCY",
              "METRIC_CUSTOM_VALUE_PER_1000_IMPRESSIONS",
              "METRIC_DATA_COST_ADVERTISER",
              "METRIC_DATA_COST_PARTNER",
              "METRIC_DATA_COST_USD",
              "METRIC_DEMO_COMPOSITION_IMPRESSION",
              "METRIC_DEMO_COMPOSITION_IMPRESSION_COVIEWED",
              "METRIC_DEMO_CORRECTED_CLICKS",
              "METRIC_DEMO_POPULATION",
              "METRIC_DUPLICATE_FLOODLIGHT_IMPRESSIONS",
              "METRIC_ENGAGEMENTS",
              "METRIC_ENGAGEMENT_RATE",
              "METRIC_ESTIMATED_CPM_FOR_IMPRESSIONS_WITH_CUSTOM_VALUE_ADVERTISER_CURRENCY",
              "METRIC_ESTIMATED_TOTAL_COST_FOR_IMPRESSIONS_WITH_CUSTOM_VALUE_ADVERTISER_CURRENCY",
              "METRIC_EXITS",
              "METRIC_EXPANSIONS",
              "METRIC_FEE10_ADVERTISER",
              "METRIC_FEE10_PARTNER",
              "METRIC_FEE10_USD",
              "METRIC_FEE11_ADVERTISER",
              "METRIC_FEE11_PARTNER",
              "METRIC_FEE11_USD",
              "METRIC_FEE12_ADVERTISER",
              "METRIC_FEE12_PARTNER",
              "METRIC_FEE12_USD",
              "METRIC_FEE13_ADVERTISER",
              "METRIC_FEE13_PARTNER",
              "METRIC_FEE13_USD",
              "METRIC_FEE14_ADVERTISER",
              "METRIC_FEE14_PARTNER",
              "METRIC_FEE14_USD",
              "METRIC_FEE15_ADVERTISER",
              "METRIC_FEE15_PARTNER",
              "METRIC_FEE15_USD",
              "METRIC_FEE16_ADVERTISER",
              "METRIC_FEE16_PARTNER",
              "METRIC_FEE16_USD",
              "METRIC_FEE17_ADVERTISER",
              "METRIC_FEE17_PARTNER",
              "METRIC_FEE17_USD",
              "METRIC_FEE18_ADVERTISER",
              "METRIC_FEE18_PARTNER",
              "METRIC_FEE18_USD",
              "METRIC_FEE19_ADVERTISER",
              "METRIC_FEE19_PARTNER",
              "METRIC_FEE19_USD",
              "METRIC_FEE20_ADVERTISER",
              "METRIC_FEE20_PARTNER",
              "METRIC_FEE20_USD",
              "METRIC_FEE21_ADVERTISER",
              "METRIC_FEE21_PARTNER",
              "METRIC_FEE21_USD",
              "METRIC_FEE22_ADVERTISER",
              "METRIC_FEE22_PARTNER",
              "METRIC_FEE22_USD",
              "METRIC_FEE2_ADVERTISER",
              "METRIC_FEE2_PARTNER",
              "METRIC_FEE2_USD",
              "METRIC_FEE31_ADVERTISER",
              "METRIC_FEE31_PARTNER",
              "METRIC_FEE31_USD",
              "METRIC_FEE3_ADVERTISER",
              "METRIC_FEE3_PARTNER",
              "METRIC_FEE3_USD",
              "METRIC_FEE4_ADVERTISER",
              "METRIC_FEE4_PARTNER",
              "METRIC_FEE4_USD",
              "METRIC_FEE5_ADVERTISER",
              "METRIC_FEE5_PARTNER",
              "METRIC_FEE5_USD",
              "METRIC_FEE6_ADVERTISER",
              "METRIC_FEE6_PARTNER",
              "METRIC_FEE6_USD",
              "METRIC_FEE7_ADVERTISER",
              "METRIC_FEE7_PARTNER",
              "METRIC_FEE7_USD",
              "METRIC_FEE8_ADVERTISER",
              "METRIC_FEE8_PARTNER",
              "METRIC_FEE8_USD",
              "METRIC_FEE9_ADVERTISER",
              "METRIC_FEE9_PARTNER",
              "METRIC_FEE9_USD",
              "METRIC_FIRST_QUARTILE_AUDIO",
              "METRIC_FLOODLIGHT_IMPRESSIONS",
              "METRIC_GENERAL_INVALID_TRAFFIC_GIVT_IMPRESSIONS",
              "METRIC_GENERAL_INVALID_TRAFFIC_GIVT_TRACKED_ADS",
              "METRIC_GIVT_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS",
              "METRIC_GIVT_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS",
              "METRIC_GIVT_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS",
              "METRIC_GIVT_BEGIN_TO_RENDER_IMPRESSIONS",
              "METRIC_GIVT_CLICKS",
              "METRIC_GMAIL_CONVERSIONS",
              "METRIC_GMAIL_POST_CLICK_CONVERSIONS",
              "METRIC_GMAIL_POST_VIEW_CONVERSIONS",
              "METRIC_GMAIL_POTENTIAL_VIEWS",
              "METRIC_GRP_CORRECTED_IMPRESSIONS",
              "METRIC_GRP_CORRECTED_IMPRESSIONS_COVIEWED",
              "METRIC_GRP_CORRECTED_VIEWABLE_IMPRESSIONS",
              "METRIC_GRP_CORRECTED_VIEWABLE_IMPRESSIONS_SHARE_PERCENT",
              "METRIC_IMPRESSIONS",
              "METRIC_IMPRESSIONS_COVIEWED",
              "METRIC_IMPRESSIONS_TO_CONVERSION_RATE",
              "METRIC_IMPRESSIONS_WITH_CUSTOM_VALUE",
              "METRIC_IMPRESSIONS_WITH_POSITIVE_CUSTOM_VALUE",
              "METRIC_IMPRESSION_CUSTOM_VALUE_COST",
              "METRIC_IMPRESSION_LOSS_TARGETED_IMPRESSIONS",
              "METRIC_INACTIVE_IMPRESSIONS",
              "METRIC_INTERACTIVE_IMPRESSIONS",
              "METRIC_INVALID_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS",
              "METRIC_INVALID_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS",
              "METRIC_INVALID_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS",
              "METRIC_INVALID_BEGIN_TO_RENDER_IMPRESSIONS",
              "METRIC_INVALID_CLICKS",
              "METRIC_INVALID_IMPRESSIONS",
              "METRIC_INVALID_TRACKED_ADS",
              "METRIC_LAST_CLICKS",
              "METRIC_LAST_IMPRESSIONS",
              "METRIC_LAST_TOUCH_CLICK_THROUGH_CONVERSIONS",
              "METRIC_LAST_TOUCH_TOTAL_CONVERSIONS",
              "METRIC_LAST_TOUCH_VIEW_THROUGH_CONVERSIONS",
              "METRIC_LINEITEM_BID_RESPONSE_COUNT",
              "METRIC_MEDIA_COST_ADVERTISER",
              "METRIC_MEDIA_COST_ECPAPC_ADVERTISER",
              "METRIC_MEDIA_COST_ECPAPC_PARTNER",
              "METRIC_MEDIA_COST_ECPAPC_USD",
              "METRIC_MEDIA_COST_ECPAPV_ADVERTISER",
              "METRIC_MEDIA_COST_ECPAPV_PARTNER",
              "METRIC_MEDIA_COST_ECPAPV_USD",
              "METRIC_MEDIA_COST_ECPA_ADVERTISER",
              "METRIC_MEDIA_COST_ECPA_PARTNER",
              "METRIC_MEDIA_COST_ECPA_USD",
              "METRIC_MEDIA_COST_ECPCV_ADVERTISER",
              "METRIC_MEDIA_COST_ECPCV_PARTNER",
              "METRIC_MEDIA_COST_ECPCV_USD",
              "METRIC_MEDIA_COST_ECPC_ADVERTISER",
              "METRIC_MEDIA_COST_ECPC_PARTNER",
              "METRIC_MEDIA_COST_ECPC_USD",
              "METRIC_MEDIA_COST_ECPM_ADVERTISER",
              "METRIC_MEDIA_COST_ECPM_PARTNER",
              "METRIC_MEDIA_COST_ECPM_USD",
              "METRIC_MEDIA_COST_PARTNER",
              "METRIC_MEDIA_COST_USD",
              "METRIC_MEDIA_COST_VIEWABLE_ECPM_ADVERTISER",
              "METRIC_MEDIA_COST_VIEWABLE_ECPM_PARTNER",
              "METRIC_MEDIA_COST_VIEWABLE_ECPM_USD",
              "METRIC_MEDIA_FEE1_ADVERTISER",
              "METRIC_MEDIA_FEE1_PARTNER",
              "METRIC_MEDIA_FEE1_USD",
              "METRIC_MEDIA_FEE2_ADVERTISER",
              "METRIC_MEDIA_FEE2_PARTNER",
              "METRIC_MEDIA_FEE2_USD",
              "METRIC_MEDIA_FEE3_ADVERTISER",
              "METRIC_MEDIA_FEE3_PARTNER",
              "METRIC_MEDIA_FEE3_USD",
              "METRIC_MEDIA_FEE4_ADVERTISER",
              "METRIC_MEDIA_FEE4_PARTNER",
              "METRIC_MEDIA_FEE4_USD",
              "METRIC_MEDIA_FEE5_ADVERTISER",
              "METRIC_MEDIA_FEE5_PARTNER",
              "METRIC_MEDIA_FEE5_USD",
              "METRIC_MIDPOINT_AUDIO",
              "METRIC_NIELSEN_AVERAGE_FREQUENCY",
              "METRIC_NIELSEN_GRP",
              "METRIC_NIELSEN_IMPRESSIONS",
              "METRIC_NIELSEN_IMPRESSIONS_SHARE",
              "METRIC_NIELSEN_IMPRESSION_INDEX",
              "METRIC_NIELSEN_POPULATION",
              "METRIC_NIELSEN_POPULATION_REACH",
              "METRIC_NIELSEN_POPULATION_SHARE",
              "METRIC_NIELSEN_REACH_INDEX",
              "METRIC_NIELSEN_REACH_SHARE",
              "METRIC_NIELSEN_UNIQUE_AUDIENCE",
              "METRIC_ORIGINAL_AUDIENCE_FREQUENCY",
              "METRIC_PATH_CONVERSION_RATE",
              "METRIC_PAUSES_AUDIO",
              "METRIC_PERCENTAGE_FROM_CURRENT_IO_GOAL",
              "METRIC_PERCENT_IMPRESSIONS_WITH_POSITIVE_CUSTOM_VALUE",
              "METRIC_PERCENT_INVALID_IMPRESSIONS_PREBID",
              "METRIC_PLATFORM_FEE_ADVERTISER",
              "METRIC_PLATFORM_FEE_PARTNER",
              "METRIC_PLATFORM_FEE_RATE",
              "METRIC_PLATFORM_FEE_USD",
              "METRIC_POST_CLICK_CONVERSIONS_CROSS_ENVIRONMENT",
              "METRIC_POST_VIEW_CONVERSIONS_CROSS_ENVIRONMENT",
              "METRIC_POTENTIAL_IMPRESSIONS",
              "METRIC_POTENTIAL_VIEWS",
              "METRIC_PREMIUM_FEE_ADVERTISER_CURRENCY",
              "METRIC_PROFIT_ADVERTISER",
              "METRIC_PROFIT_ECPM_ADVERTISER",
              "METRIC_PROFIT_ECPM_PARTNER",
              "METRIC_PROFIT_ECPM_USD",
              "METRIC_PROFIT_MARGIN",
              "METRIC_PROFIT_PARTNER",
              "METRIC_PROFIT_USD",
              "METRIC_PROFIT_VIEWABLE_ECPM_ADVERTISER",
              "METRIC_PROFIT_VIEWABLE_ECPM_PARTNER",
              "METRIC_PROFIT_VIEWABLE_ECPM_USD",
              "METRIC_PROGRAMMATIC_GUARANTEED_IMPRESSIONS_PASSED_DUE_TO_FREQUENCY",
              "METRIC_PROGRAMMATIC_GUARANTEED_SAVINGS_RE_INVESTED_DUE_TO_FREQUENCY_ADVERTISER_CURRENCY",
              "METRIC_PROVISIONAL_IMPRESSIONS",
              "METRIC_REFUND_BILLABLE_COST_ADVERTISER_CURRENCY",
              "METRIC_REFUND_MEDIA_COST_ADVERTISER_CURRENCY",
              "METRIC_REFUND_PLATFORM_FEE_ADVERTISER_CURRENCY",
              "METRIC_REVENUE_ADVERTISER",
              "METRIC_REVENUE_ECPAPC_ADVERTISER",
              "METRIC_REVENUE_ECPAPC_PARTNER",
              "METRIC_REVENUE_ECPAPC_USD",
              "METRIC_REVENUE_ECPAPV_ADVERTISER",
              "METRIC_REVENUE_ECPAPV_PARTNER",
              "METRIC_REVENUE_ECPAPV_USD",
              "METRIC_REVENUE_ECPA_ADVERTISER",
              "METRIC_REVENUE_ECPA_PARTNER",
              "METRIC_REVENUE_ECPA_USD",
              "METRIC_REVENUE_ECPCV_ADVERTISER",
              "METRIC_REVENUE_ECPCV_PARTNER",
              "METRIC_REVENUE_ECPCV_USD",
              "METRIC_REVENUE_ECPC_ADVERTISER",
              "METRIC_REVENUE_ECPC_PARTNER",
              "METRIC_REVENUE_ECPC_USD",
              "METRIC_REVENUE_ECPM_ADVERTISER",
              "METRIC_REVENUE_ECPM_PARTNER",
              "METRIC_REVENUE_ECPM_USD",
              "METRIC_REVENUE_PARTNER",
              "METRIC_REVENUE_USD",
              "METRIC_REVENUE_VIEWABLE_ECPM_ADVERTISER",
              "METRIC_REVENUE_VIEWABLE_ECPM_PARTNER",
              "METRIC_REVENUE_VIEWABLE_ECPM_USD",
              "METRIC_RICH_MEDIA_ENGAGEMENTS",
              "METRIC_RICH_MEDIA_SCROLLS",
              "METRIC_RICH_MEDIA_VIDEO_COMPLETIONS",
              "METRIC_RICH_MEDIA_VIDEO_FIRST_QUARTILE_COMPLETES",
              "METRIC_RICH_MEDIA_VIDEO_FULL_SCREENS",
              "METRIC_RICH_MEDIA_VIDEO_MIDPOINTS",
              "METRIC_RICH_MEDIA_VIDEO_MUTES",
              "METRIC_RICH_MEDIA_VIDEO_PAUSES",
              "METRIC_RICH_MEDIA_VIDEO_PLAYS",
              "METRIC_RICH_MEDIA_VIDEO_SKIPS",
              "METRIC_RICH_MEDIA_VIDEO_THIRD_QUARTILE_COMPLETES",
              "METRIC_STARTS_AUDIO",
              "METRIC_STOPS_AUDIO",
              "METRIC_STORE_VISIT_CONVERSIONS",
              "METRIC_STORE_VISIT_VIEW_THROUGH_CONVERSIONS",
              "METRIC_TARGET_RATING_POINTS",
              "METRIC_TARGET_RATING_POINTS_COVIEWED",
              "METRIC_TEA_TRUEVIEW_IMPRESSIONS",
              "METRIC_TEA_TRUEVIEW_UNIQUE_COOKIES",
              "METRIC_THIRD_QUARTILE_AUDIO",
              "METRIC_TIMERS",
              "METRIC_TOTAL_AUDIO_MEDIA_COST_ECPCL_ADVERTISER_CURRENCY",
              "METRIC_TOTAL_CONVERSIONS",
              "METRIC_TOTAL_CONVERSIONS_CROSS_ENVIRONMENT",
              "METRIC_TOTAL_DISPLAY_TIME",
              "METRIC_TOTAL_EXPOSURES",
              "METRIC_TOTAL_IMPRESSION_CUSTOM_VALUE",
              "METRIC_TOTAL_INTERACTION_TIME",
              "METRIC_TOTAL_MEDIA_COST_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPAPC_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPAPC_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPAPC_USD",
              "METRIC_TOTAL_MEDIA_COST_ECPAPV_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPAPV_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPAPV_USD",
              "METRIC_TOTAL_MEDIA_COST_ECPA_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPA_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPA_USD",
              "METRIC_TOTAL_MEDIA_COST_ECPCV_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPCV_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPCV_USD",
              "METRIC_TOTAL_MEDIA_COST_ECPC_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPC_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPC_USD",
              "METRIC_TOTAL_MEDIA_COST_ECPM_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_ECPM_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_ECPM_USD",
              "METRIC_TOTAL_MEDIA_COST_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_USD",
              "METRIC_TOTAL_MEDIA_COST_VIEWABLE_ECPM_ADVERTISER",
              "METRIC_TOTAL_MEDIA_COST_VIEWABLE_ECPM_PARTNER",
              "METRIC_TOTAL_MEDIA_COST_VIEWABLE_ECPM_USD",
              "METRIC_TOTAL_PATHS",
              "METRIC_TOTAL_USERS",
              "METRIC_TRACKED_ADS",
              "METRIC_TRACKING_UNCONSENTED_CLICKS",
              "METRIC_TRUEVIEW_ALL_AD_SEQUENCE_IMPRESSIONS",
              "METRIC_TRUEVIEW_AVERAGE_CPE_ADVERTISER",
              "METRIC_TRUEVIEW_AVERAGE_CPE_PARTNER",
              "METRIC_TRUEVIEW_AVERAGE_CPE_USD",
              "METRIC_TRUEVIEW_CONVERSION_COST_MANY_PER_VIEW_ADVERTISER",
              "METRIC_TRUEVIEW_CONVERSION_COST_MANY_PER_VIEW_PARTNER",
              "METRIC_TRUEVIEW_CONVERSION_COST_MANY_PER_VIEW_USD",
              "METRIC_TRUEVIEW_CONVERSION_MANY_PER_VIEW",
              "METRIC_TRUEVIEW_CONVERSION_RATE_ONE_PER_VIEW",
              "METRIC_TRUEVIEW_CPV_ADVERTISER",
              "METRIC_TRUEVIEW_CPV_PARTNER",
              "METRIC_TRUEVIEW_CPV_USD",
              "METRIC_TRUEVIEW_EARNED_LIKES",
              "METRIC_TRUEVIEW_EARNED_PLAYLIST_ADDITIONS",
              "METRIC_TRUEVIEW_EARNED_SHARES",
              "METRIC_TRUEVIEW_EARNED_SUBSCRIBERS",
              "METRIC_TRUEVIEW_EARNED_VIEWS",
              "METRIC_TRUEVIEW_ENGAGEMENTS",
              "METRIC_TRUEVIEW_ENGAGEMENT_RATE",
              "METRIC_TRUEVIEW_GENERAL_INVALID_TRAFFIC_GIVT_VIEWS",
              "METRIC_TRUEVIEW_IMPRESSION_SHARE",
              "METRIC_TRUEVIEW_INVALID_VIEWS",
              "METRIC_TRUEVIEW_LOST_IS_BUDGET",
              "METRIC_TRUEVIEW_LOST_IS_RANK",
              "METRIC_TRUEVIEW_TOTAL_CONVERSION_VALUES_ADVERTISER",
              "METRIC_TRUEVIEW_TOTAL_CONVERSION_VALUES_PARTNER",
              "METRIC_TRUEVIEW_TOTAL_CONVERSION_VALUES_USD",
              "METRIC_TRUEVIEW_UNIQUE_VIEWERS",
              "METRIC_TRUEVIEW_VIEWS",
              "METRIC_TRUEVIEW_VIEW_RATE",
              "METRIC_TRUEVIEW_VIEW_THROUGH_CONVERSION",
              "METRIC_UNIQUE_COOKIES_WITH_IMPRESSIONS",
              "METRIC_UNIQUE_REACH_AVERAGE_IMPRESSION_FREQUENCY",
              "METRIC_UNIQUE_REACH_AVERAGE_IMPRESSION_FREQUENCY_COVIEWED",
              "METRIC_UNIQUE_REACH_AVERAGE_VIEWABLE_IMPRESSION_FREQUENCY",
              "METRIC_UNIQUE_REACH_CLICK_REACH",
              "METRIC_UNIQUE_REACH_IMPRESSION_REACH",
              "METRIC_UNIQUE_REACH_IMPRESSION_REACH_ADDED_WITH_CROSS_STACK_FCAP",
              "METRIC_UNIQUE_REACH_IMPRESSION_REACH_ADDED_WITH_PG_FMGMT",
              "METRIC_UNIQUE_REACH_IMPRESSION_REACH_COVIEWED",
              "METRIC_UNIQUE_REACH_INCREMENTAL_CLICK_REACH",
              "METRIC_UNIQUE_REACH_INCREMENTAL_IMPRESSION_REACH",
              "METRIC_UNIQUE_REACH_INCREMENTAL_TOTAL_REACH",
              "METRIC_UNIQUE_REACH_INCREMENTAL_VIEWABLE_IMPRESSION_REACH",
              "METRIC_UNIQUE_REACH_TOTAL_REACH",
              "METRIC_UNIQUE_REACH_TOTAL_REACH_COVIEWED",
              "METRIC_UNIQUE_REACH_VIEWABLE_IMPRESSION_REACH",
              "METRIC_UNIQUE_VISITORS_COOKIES",
              "METRIC_VENDOR_BLOCKED_ADS",
              "METRIC_VERIFIABLE_IMPRESSIONS",
              "METRIC_VERIFICATION_VIDEO_PLAYER_SIZE_MEASURABLE_IMPRESSIONS",
              "METRIC_VIDEO_CLIENT_COST_ECPCV_ADVERTISER_CURRENCY",
              "METRIC_VIDEO_COMPANION_CLICKS",
              "METRIC_VIDEO_COMPANION_IMPRESSIONS",
              "METRIC_VIDEO_COMPLETION_RATE",
              "METRIC_VIEWABLE_BID_REQUESTS",
              "METRIC_VIEWABLE_GROSS_RATING_POINTS",
              "METRIC_VIRTUAL_PEOPLE_AVERAGE_IMPRESSION_FREQUENCY_BY_DEMO",
              "METRIC_VIRTUAL_PEOPLE_AVERAGE_IMPRESSION_FREQUENCY_BY_DEMO_COVIEWED",
              "METRIC_VIRTUAL_PEOPLE_AVERAGE_VIEWABLE_IMPRESSION_FREQUENCY_BY_DEMO",
              "METRIC_VIRTUAL_PEOPLE_CLICK_REACH_BY_DEMO",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_CLICK_REACH",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_CLICK_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_TOTAL_REACH",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_TOTAL_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_VIEWABLE_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_DUPLICATE_VIEWABLE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_CLICK_REACH",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_CLICK_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_TOTAL_REACH",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_TOTAL_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_VIEWABLE_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_EXCLUSIVE_VIEWABLE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_BY_DEMO",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_BY_DEMO_COVIEWED",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_PERCENT_COVIEWED",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_SHARE_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_IMPRESSION_REACH_SHARE_PERCENT_COVIEWED",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_CLICK_REACH",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_CLICK_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_TOTAL_REACH",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_TOTAL_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_VIEWABLE_IMPRESSION_REACH",
              "METRIC_VIRTUAL_PEOPLE_OVERLAP_VIEWABLE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_VIEWABLE_IMPRESSION_REACH_BY_DEMO",
              "METRIC_VIRTUAL_PEOPLE_VIEWABLE_IMPRESSION_REACH_PERCENT",
              "METRIC_VIRTUAL_PEOPLE_VIEWABLE_IMPRESSION_REACH_SHARE_PERCENT",
              "METRIC_WATCH_TIME",
              "METRIC_WIN_LOSS_DEAL_AVAILABLE_REQUESTS",
              "METRIC_WIN_LOSS_DEAL_TARGETED_IMPRESSIONS",
              "METRIC_WIN_LOSS_LINEITEM_AVAILABLE_REQUESTS",
              "METRIC_WIN_LOSS_LINEITEM_TARGETED_IMPRESSIONS",
              "METRIC_WIN_LOSS_RATE"
            ],
            "options": {
              "enum_titles": [
                "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Impressions",
                "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Measurable Impressions",
                "Active View: Audible & Fully On-Screen for Half of Duration (15 sec. cap) Rate",
                "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Impressions",
                "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Measurable Impressions",
                "Active View: Audible & Fully On-Screen for Half of Duration (TrueView) Rate",
                "Active View: Impressions Audible and Visible at Completion",
                "Active View: Average Viewable Time (Seconds)",
                "Active View: Custom Metric Measurable Impressions",
                "Active View: Custom Metric Viewable Impressions",
                "Active View: Custom Metric Viewable Rate",
                "Active View: Impression Distribution (Not Measurable)",
                "Active View: Impression Distribution (Not Viewable)",
                "Active View: Impression Distribution (Viewable)",
                "Active View: Eligible Impressions",
                "Active View: Measurable Impressions",
                "Active View: % Measurable Impressions",
                "Active View: % Viewable Impressions",
                "Active View: % Audible Impressions",
                "Active View: % Audible and Visible at Start",
                "Active View: % Audible and Visible at First Quartile",
                "Active View: % Audible and Visible at Completion",
                "Active View: % Audible and Visible at Midpoint",
                "Active View: % Audible and Visible at Third Quartile",
                "Active View: % Fully On-Screen 2 sec",
                "Active View: % Full-Screen",
                "Active View: % In Background",
                "Active View: % of Ad Played",
                "Active View: % of Completed Impressions Audible and Visible",
                "Active View: % of Completed Impressions Visible",
                "Active View: % of First Quartile Impressions Audible and Visible",
                "Active View: % of First Quartile Impressions Visible",
                "Active View: % of Midpoint Impressions Audible and Visible",
                "Active View: % of Midpoint Impressions Visible",
                "Active View: % of Third Quartile Impressions Audible and Visible",
                "Active View: % of Third Quartile Impressions Visible",
                "Active View: % Play Time Audible",
                "Active View: % Play Time Audible and Visible",
                "Active View: % Play Time Visible",
                "Active View: % Visible 10 Seconds",
                "Active View: % Visible at Start",
                "Active View: % Visible at First Quartile",
                "Active View: % Visible at Completion",
                "Active View: % Visible at Midpoint",
                "Active View: % Visible at Third Quartile",
                "Active View: Not Measurable Impressions",
                "Active View: Not Viewable Impressions",
                "Active View: Impressions Visible 10 Seconds",
                "Active View: Viewable Impressions",
                "Total Revenue",
                "Adapted Audience Frequency",
                "AdLingo Fee (Advertiser Currency)",
                "Audio Client Cost eCPCL (Advertiser Currency)",
                "Audio Media Cost eCPCL (Advertiser Currency)",
                "Audio Mutes (Audio)",
                "Audio Revenue eCPCL (Advertiser Currency)",
                "Audio Unmutes (Audio)",
                "Audio Unmutes (Video)",
                "Average Display Time",
                "Average Impression Frequency per User",
                "Average Impression Frequency per User (7 days)",
                "Average Interaction Time",
                "Average Watch Time per Impression",
                "Begin to Render Eligible Impressions",
                "Begin to Render Impressions",
                "Benchmark Frequency",
                "Potential Impressions",
                "Billable Cost (Advertiser Currency)",
                "Billable Cost (Partner Currency)",
                "Billable Cost (USD)",
                "Billable Impressions",
                "Brand Lift: Absolute Brand Lift",
                "Brand Lift: All Survey Responses",
                "Brand Lift: Baseline Positive Response Rate",
                "Brand Lift: Baseline Survey Responses",
                "Brand Lift: Cost Per Lifted User",
                "Brand Lift: Exposed Survey Responses",
                "Brand Lift: Headroom Brand Lift",
                "Brand Lift: Relative Brand Lift",
                "Brand Lift: Users",
                "Card Clicks",
                "Clicks",
                "% Clicks Leading to Conversions",
                "Client Cost (Advertiser Currency)",
                "Client Cost eCPA (Advertiser Currency)",
                "Client Cost eCPA (PC) (Advertiser Currency)",
                "Client Cost eCPA (PV) (Advertiser Currency)",
                "Client Cost eCPC (Advertiser Currency)",
                "Client Cost eCPM (Advertiser Currency)",
                "Client Cost Viewable eCPM (Advertiser Currency)",
                "CM360 Post-Click Revenue",
                "CM360 Post-Click Revenue + Cross-Environment",
                "CM360 Post-View Revenue",
                "CM360 Post-View Revenue + Cross-Environment",
                "Companion Clicks (Audio)",
                "Companion Views (Audio)",
                "Complete Listens (Audio)",
                "Completion Rate (Audio)",
                "Conversions per 1000 Impressions",
                "Converting Paths",
                "Cookie Consented Floodlight Impressions",
                "Cookie Reach: Average Impression Frequency",
                "Cookie Reach: Impression Reach",
                "Cookie Unconsented Floodlight Impressions",
                "Counters",
                "CPM Fee 1 (Advertiser Currency)",
                "CPM Fee 1 (Partner Currency)",
                "CPM Fee 1 (USD)",
                "CPM Fee 2 (Advertiser Currency)",
                "CPM Fee 2 (Partner Currency)",
                "CPM Fee 2 (USD)",
                "CPM Fee 3 (Advertiser Currency)",
                "CPM Fee 3 (Partner Currency)",
                "CPM Fee 3 (USD)",
                "CPM Fee 4 (Advertiser Currency)",
                "CPM Fee 4 (Partner Currency)",
                "CPM Fee 4 (USD)",
                "CPM Fee 5 (Advertiser Currency)",
                "CPM Fee 5 (Partner Currency)",
                "CPM Fee 5 (USD)",
                "Click Rate (CTR)",
                "Custom Fee 1 (Advertiser Currency)",
                "Custom Fee 2 (Advertiser Currency)",
                "Custom Fee 3 (Advertiser Currency)",
                "Custom Fee 4 (Advertiser Currency)",
                "Custom Fee 5 (Advertiser Currency)",
                "Custom value per 1000 impressions",
                "Data Fees (Advertiser Currency)",
                "Data Fees (Partner Currency)",
                "Data Fees (USD)",
                "% Composition Impressions",
                "% Composition Impressions (Co-Viewed)",
                "Clicks",
                "Population",
                "Duplicate Consented Floodlight Impressions",
                "Engagements",
                "Engagement Rate",
                "Estimated CPM for impressions with custom value (Advertiser Currency)",
                "Estimated total cost for impressions with custom value (Advertiser Currency)",
                "Exits",
                "Expansions",
                "Agency Trading Desk Fee (Advertiser Currency)",
                "Agency Trading Desk Fee (Partner Currency)",
                "Agency Trading Desk Fee (USD)",
                "Data Management Platform Fee (Advertiser Currency)",
                "Data Management Platform Fee (Partner Currency)",
                "Data Management Platform Fee (USD)",
                "Integral Ad Science Pre-Bid Fee (Advertiser Currency)",
                "Integral Ad Science Pre-Bid Fee (Partner Currency)",
                "Integral Ad Science Pre-Bid Fee (USD)",
                "DoubleVerify Pre-Bid Fee (Advertiser Currency)",
                "DoubleVerify Pre-Bid Fee (Partner Currency)",
                "DoubleVerify Pre-Bid Fee (USD)",
                "ShopLocal Fee (Advertiser Currency)",
                "ShopLocal Fee (Partner Currency)",
                "ShopLocal Fee (USD)",
                "TrustMetrics Fee (Advertiser Currency)",
                "TrustMetrics Fee (Partner Currency)",
                "TrustMetrics Fee (USD)",
                "MediaCost Data Fee (Advertiser Currency)",
                "MediaCost Data Fee (Partner Currency)",
                "MediaCost Data Fee (USD)",
                "Integral Ad Science Video Fee (Advertiser Currency)",
                "Integral Ad Science Video Fee (Partner Currency)",
                "Integral Ad Science Video Fee (USD)",
                "MOAT Video Fee (Advertiser Currency)",
                "MOAT Video Fee (Partner Currency)",
                "MOAT Video Fee (USD)",
                "Nielsen Digital Ad Ratings Fee (Advertiser Currency)",
                "Nielsen Digital Ad Ratings Fee (Partner Currency)",
                "Nielsen Digital Ad Ratings Fee (USD)",
                "comScore vCE in DoubleClick Fee (Advertiser Currency)",
                "comScore vCE in DoubleClick Fee (Partner Currency)",
                "comScore vCE in DoubleClick Fee (USD)",
                "Adloox Fee (Advertiser Currency)",
                "Adloox Fee (Partner Currency)",
                "Adloox Fee (USD)",
                "Adloox Pre-Bid Fee (Advertiser Currency)",
                "Adloox Pre-Bid Fee (Partner Currency)",
                "Adloox Pre-Bid Fee (USD)",
                "Third-Party Ad Server Fee (Advertiser Currency)",
                "Third-Party Ad Server Fee (Partner Currency)",
                "Third-Party Ad Server Fee (USD)",
                "Advanced Ad Serving Fee (Advertiser Currency)",
                "Advanced Ad Serving Fee (Partner Currency)",
                "Advanced Ad Serving Fee (USD)",
                "DoubleVerify Fee (Advertiser Currency)",
                "DoubleVerify Fee (Partner Currency)",
                "DoubleVerify Fee (USD)",
                "Adsafe Fee (Advertiser Currency)",
                "Adsafe Fee (Partner Currency)",
                "Adsafe Fee (USD)",
                "AdXpose Fee (Advertiser Currency)",
                "AdXpose Fee (Partner Currency)",
                "AdXpose Fee (USD)",
                "Vizu Fee (Advertiser Currency)",
                "Vizu Fee (Partner Currency)",
                "Vizu Fee (USD)",
                "Aggregate Knowledge Fee (Advertiser Currency)",
                "Aggregate Knowledge Fee (Partner Currency)",
                "Aggregate Knowledge Fee (USD)",
                "Teracent Fee (Advertiser Currency)",
                "Teracent Fee (Partner Currency)",
                "Teracent Fee (USD)",
                "Evidon Fee (Advertiser Currency)",
                "Evidon Fee (Partner Currency)",
                "Evidon Fee (USD)",
                "First-Quartile (Audio)",
                "Floodlight Impressions",
                "General Invalid Traffic (GIVT) Impressions",
                "General Invalid Traffic (GIVT) Tracked Ads",
                "General Invalid Traffic (GIVT) Active View Eligible Impressions",
                "General Invalid Traffic (GIVT) Active View Measurable Impressions",
                "General Invalid Traffic (GIVT) Active View Viewable Impressions",
                "General Invalid Traffic (GIVT) Begin to Render Impressions",
                "General Invalid Traffic (GIVT) Clicks",
                "Gmail Conversions",
                "Gmail Post-Click Conversions",
                "Gmail Post-View Conversions",
                "Potential Views",
                "Impressions",
                "Impressions (Co-Viewed)",
                "Viewable Impressions",
                "% Viewable Composition Impressions",
                "Impressions",
                "Impressions (Co-Viewed)",
                "% Impressions Leading to Conversions",
                "Impressions with custom value",
                "Impressions with positive custom value",
                "Custom impression value / cost",
                "Targeted Impressions",
                "Inactive Impressions",
                "Interactive Impressions",
                "Invalid Active View Eligible Impressions",
                "Invalid Active View Measurable Impressions",
                "Invalid Active View Viewable Impressions",
                "Invalid Begin to Render Impressions",
                "Invalid Clicks",
                "Invalid Impressions",
                "Invalid Tracked Ads",
                "Post-Click Conversions",
                "Post-View Conversions",
                "Click-through Conversions",
                "Total Conversions",
                "View-through Conversions",
                "Bid Responses",
                "Media Cost (Advertiser Currency)",
                "Media Cost eCPA (PC) (Advertiser Currency)",
                "Media Cost eCPC (PC) (Partner Currency)",
                "Media Cost eCPC (PC) (USD)",
                "Media Cost eCPA (PV) (Advertiser Currency)",
                "Media Cost eCPC (PV) (Partner Currency)",
                "Media Cost eCPC (PV) (USD)",
                "Media Cost eCPA (Advertiser Currency)",
                "Media Cost eCPA (Partner Currency)",
                "Media Cost eCPA (USD)",
                "Video Media Cost eCPCV (Advertiser Currency)",
                "Video Media Cost eCPCV (Partner Currency)",
                "Video Media Cost eCPCV (USD)",
                "Media Cost eCPC (Advertiser Currency)",
                "Media Cost eCPC (Partner Currency)",
                "Media Cost eCPC (USD)",
                "Media Cost eCPM (Advertiser Currency)",
                "Media Cost eCPM (Partner Currency)",
                "Media Cost eCPM (USD)",
                "Media Cost (Partner Currency)",
                "Media Cost (USD)",
                "Media Cost Viewable eCPM (Advertiser Currency)",
                "Media Cost Viewable eCPM (Partner Currency)",
                "Media Cost Viewable eCPM (USD)",
                "Media Fee 1 (Advertiser Currency)",
                "Media Fee 1 (Partner Currency)",
                "Media Fee 1 (USD)",
                "Media Fee 2 (Advertiser Currency)",
                "Media Fee 2 (Partner Currency)",
                "Media Fee 2 (USD)",
                "Media Fee 3 (Advertiser Currency)",
                "Media Fee 3 (Partner Currency)",
                "Media Fee 3 (USD)",
                "Media Fee 4 (Advertiser Currency)",
                "Media Fee 4 (Partner Currency)",
                "Media Fee 4 (USD)",
                "Media Fee 5 (Advertiser Currency)",
                "Media Fee 5 (Partner Currency)",
                "Media Fee 5 (USD)",
                "Midpoint (Audio)",
                "Average Frequency",
                "Gross Rating Points",
                "Nielsen Impressions",
                "% Impressions Share",
                "Impression Index",
                "Population",
                "Audience Reach",
                "% Population Share",
                "Audience Index",
                "% Audience Share",
                "Unique Audience",
                "Original Audience Frequency",
                "Path Conversion Rate",
                "Pauses (Audio)",
                "Percentage from Current IO Goal",
                "% Impressions with positive custom value",
                "% Invalid Impressions (Pre-bid)",
                "Platform Fee (Advertiser Currency)",
                "Platform Fee (Partner Currency)",
                "Platform Fee Rate",
                "Platform Fee (USD)",
                "Post-Click Conversions + Cross-Environment",
                "Post-View Conversions + Cross-Environment",
                "Potential Impressions",
                "Potential Views",
                "Premium Fee (Advertiser Currency)",
                "Profit (Advertiser Currency)",
                "Profit eCPM (Advertiser Currency)",
                "Profit eCPM (Partner Currency)",
                "Profit eCPM (USD)",
                "Profit Margin",
                "Profit (Partner Currency)",
                "Profit (USD)",
                "Profit Viewable eCPM (Advertiser Currency)",
                "Profit Viewable eCPM (Partner Currency)",
                "Profit Viewable eCPM (USD)",
                "Programmatic Guaranteed Bid Requests passed due to Frequency",
                "Programmatic Guaranteed savings re-invested due to frequency (Advertiser Currency)",
                "Provisional Impressions",
                "Refund Billable Cost (Advertiser Currency)",
                "Refund Media Cost (Advertiser Currency)",
                "Refund Platform Fee (Advertiser Currency)",
                "Revenue (Advertiser Currency)",
                "Revenue eCPA (PC) (Advertiser Currency)",
                "Revenue eCPA (PC) (Partner Currency)",
                "Revenue eCPA (PC) (USD)",
                "Revenue eCPA (PV) (Advertiser Currency)",
                "Revenue eCPA (PV) (Partner Currency)",
                "Revenue eCPA (PV) (USD)",
                "Revenue eCPA (Advertiser Currency)",
                "Revenue eCPA (Partner Currency)",
                "Revenue eCPA (USD)",
                "Video Revenue eCPCV (Advertiser Currency)",
                "Video Revenue eCPCV (Partner Currency)",
                "Video Revenue eCPCV (USD)",
                "Revenue eCPC (Advertiser Currency)",
                "Revenue eCPC (Partner Currency)",
                "Revenue eCPC (USD)",
                "Revenue eCPM (Advertiser Currency)",
                "Revenue eCPM (Partner Currency)",
                "Revenue eCPM (USD)",
                "Revenue (Partner Currency)",
                "Revenue (USD)",
                "Revenue Viewable eCPM (Advertiser Currency)",
                "Revenue Viewable eCPM (Partner Currency)",
                "Revenue Viewable eCPM (USD)",
                "Rich Media Engagements",
                "Scrolls",
                "Complete Views (Video)",
                "First-Quartile Views (Video)",
                "Fullscreens (Video)",
                "Midpoint Views (Video)",
                "Audio Mutes (Video)",
                "Pauses (Video)",
                "Starts (Video)",
                "Skips (Video)",
                "Third-Quartile Views (Video)",
                "Starts (Audio)",
                "Stops (Audio)",
                "Store Visit Conversions",
                "View-through Store Visits",
                "Target Rating Points",
                "Target Rating Points (Co-Viewed)",
                "Potential Impressions",
                "Unique Cookies with Impressions",
                "Third-Quartile (Audio)",
                "Timers",
                "Total Audio Media Cost eCPCL (Advertiser Currency)",
                "Total Conversions",
                "Total Conversions + Cross-Environment",
                "Total Display Time",
                "Total Exposures",
                "Total custom impression value",
                "Total Interaction Time",
                "Total Media Cost (Advertiser Currency)",
                "Total Media Cost eCPA (PC) (Advertiser Currency)",
                "Total Media Cost eCPA (PC) (Partner Currency)",
                "Total Media Cost eCPA (PC) (USD)",
                "Total Media Cost eCPA (PV) (Advertiser Currency)",
                "Total Media Cost eCPA (PV) (Partner Currency)",
                "Total Media Cost eCPA (PV) (USD)",
                "Total Media Cost eCPA (Advertiser Currency)",
                "Total Media Cost eCPA (Partner Currency)",
                "Total Media Cost eCPA (USD)",
                "Total Video Media Cost eCPCV (Advertiser Currency)",
                "Total Video Media Cost eCPCV (Partner Currency)",
                "Total Video Media Cost eCPCV (USD)",
                "Total Media Cost eCPC (Advertiser Currency)",
                "Total Media Cost eCPC (Partner Currency)",
                "Total Media Cost eCPC (USD)",
                "Total Media Cost eCPM (Advertiser Currency)",
                "Total Media Cost eCPM (Partner Currency)",
                "Total Media Cost eCPM (USD)",
                "Total Media Cost (Partner Currency)",
                "Total Media Cost (USD)",
                "Total Media Cost Viewable eCPM (Advertiser Currency)",
                "Total Media Cost Viewable eCPM (Partner Currency)",
                "Total Media Cost Viewable eCPM (USD)",
                "Total Paths",
                "Total Users",
                "Tracked Ads",
                "Cookie Unconsented Clicks",
                "All YouTube Sequence Impressions",
                "Revenue eCPE (Advertiser Currency)",
                "Revenue eCPE (Partner Currency)",
                "Revenue eCPE (USD)",
                "Cost / Conversion (Advertiser Currency)",
                "Cost / Conversion (Partner Currency)",
                "Cost / Conversion (USD)",
                "Conversions",
                "View Conversion Rate",
                "Revenue eCPV (Advertiser Currency)",
                "Revenue eCPV (Partner Currency)",
                "Revenue eCPV (USD)",
                "Earned Likes",
                "Earned Playlist Additions",
                "Earned Shares",
                "Earned Subscribers",
                "Earned Views",
                "Engagements (YouTube)",
                "Engagement Rate (YouTube)",
                "TrueView: General Invalid Traffic (GIVT) Views",
                "Impression Share",
                "TrueView: Invalid Views",
                "Lost Impression Share (Budget)",
                "Lost Impression Share (Rank)",
                "Total Conversion Value (Advertiser Currency)",
                "Total Conversion Value (Partner Currency)",
                "Total Conversion Value (USD)",
                "Unique Viewers",
                "TrueView: Views",
                "TrueView: View Rate",
                "View through Conversion",
                "Unique Cookies with Impressions",
                "Unique Reach: Average Impression Frequency",
                "Unique Reach: Average Impression Frequency (Co-Viewed)",
                "Unique Reach: Average Viewable Impression Frequency",
                "Unique Reach: Click Reach",
                "Unique Reach: Impression Reach",
                "Unique Reach: Added Impression Reach From Frequency Cap",
                "Programmatic Guaranteed Added Unique Reach: Impressions due to Frequency",
                "Unique Reach: Impression Reach (Co-Viewed)",
                "Unique Reach: Incremental Click Reach",
                "Unique Reach: Incremental Impression Reach",
                "Unique Reach: Incremental Total Reach",
                "Unique Reach: Incremental Viewable Impression Reach",
                "Unique Reach: Total Reach",
                "Unique Reach: Total Reach (Co-Viewed)",
                "Unique Reach: Viewable Impression Reach",
                "Unique Cookies with Impressions",
                "Vendor Blocked Ads",
                "Verifiable Impressions",
                "Measurable Impressions For Video Player Size",
                "Video Client Cost eCPCV (Advertiser Currency)",
                "Companion Clicks (Video)",
                "Companion Views (Video)",
                "Completion Rate (Video)",
                "Potential Viewable Impressions",
                "Viewable Target Rating Points",
                "Unique Reach: Average Impression Frequency",
                "Unique Reach: Average Impression Frequency (Co-Viewed)",
                "Unique Reach: Average Viewable Impression Frequency",
                "Unique Reach: Click Reach",
                "Unique Reach: Duplicate Click Reach",
                "Unique Reach: Duplicate Click Reach Percent",
                "Unique Reach: Duplicate Impression Reach",
                "Unique Reach: Duplicate Impression Reach Percent",
                "Unique Reach: Duplicate Total Reach",
                "Unique Reach: Duplicate Total Reach Percent",
                "Unique Reach: Duplicate Viewable Impression Reach",
                "Unique Reach: Duplicate Viewable Impression Reach Percent",
                "Unique Reach: Exclusive Click Reach",
                "Unique Reach: Exclusive Click Reach Percent",
                "Unique Reach: Exclusive Impression Reach",
                "Unique Reach: Exclusive Impression Reach Percent",
                "Unique Reach: Exclusive Total Reach",
                "Unique Reach: Exclusive Total Reach Percent",
                "Unique Reach: Exclusive Viewable Impression Reach",
                "Unique Reach: Exclusive Viewable Impression Reach Percent",
                "Unique Reach: Impression Reach",
                "Unique Reach: Impression Reach (Co-Viewed)",
                "% Population Reach",
                "% Population Reach (Co-Viewed)",
                "% Composition Reach",
                "% Composition Reach (Co-Viewed)",
                "Unique Reach: Overlap Click Reach",
                "Unique Reach: Overlap Click Reach Percent",
                "Unique Reach: Overlap Impression Reach",
                "Unique Reach: Overlap Impression Reach Percent",
                "Unique Reach: Overlap Total Reach",
                "Unique Reach: Overlap Total Reach Percent",
                "Unique Reach: Overlap Viewable Impression Reach",
                "Unique Reach: Overlap Viewable Impression Reach Percent",
                "Unique Reach: Viewable Impression Reach",
                "% Viewable Population Reach",
                "% Viewable Composition Reach",
                "Watch Time",
                "Available Requests (Deal)",
                "Targeted Impressions (Deal)",
                "Available Requests (Line Item)",
                "Targeted Impressions (Line Item)",
                "Win Rate"
              ]
            }
          }
        },
        "filters": {
          "type": "array",
          "title": "Filters",
          "propertyOrder": 800,
          "format": "table",
          "items": {
            "type": "object",
            "title": "Filter",
            "properties": {
              "name": {
                "type": "string",
                "title": "Filter",
                "propertyOrder": 10,
                "enum": [
                  "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_ID",
                  "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_NAME",
                  "FILTER_ACTIVE_VIEW_EXPECTED_VIEWABILITY",
                  "FILTER_ADVERTISER",
                  "FILTER_ADVERTISER_CURRENCY",
                  "FILTER_ADVERTISER_INTEGRATION_CODE",
                  "FILTER_ADVERTISER_INTEGRATION_STATUS",
                  "FILTER_ADVERTISER_NAME",
                  "FILTER_ADVERTISER_TIMEZONE",
                  "FILTER_AD_POSITION",
                  "FILTER_AD_TYPE",
                  "FILTER_AGE",
                  "FILTER_ALGORITHM",
                  "FILTER_ALGORITHM_ID",
                  "FILTER_AMP_PAGE_REQUEST",
                  "FILTER_ANONYMOUS_INVENTORY_MODELING",
                  "FILTER_APP_URL",
                  "FILTER_APP_URL_EXCLUDED",
                  "FILTER_ATTRIBUTED_USERLIST",
                  "FILTER_ATTRIBUTED_USERLIST_COST",
                  "FILTER_ATTRIBUTED_USERLIST_TYPE",
                  "FILTER_ATTRIBUTION_MODEL",
                  "FILTER_AUDIENCE_LIST",
                  "FILTER_AUDIENCE_LIST_COST",
                  "FILTER_AUDIENCE_LIST_TYPE",
                  "FILTER_AUDIENCE_NAME",
                  "FILTER_AUDIENCE_TYPE",
                  "FILTER_AUDIO_FEED_TYPE_NAME",
                  "FILTER_AUTHORIZED_SELLER_STATE",
                  "FILTER_BILLABLE_OUTCOME",
                  "FILTER_BRAND_LIFT_TYPE",
                  "FILTER_BROWSER",
                  "FILTER_BUDGET_SEGMENT_BUDGET",
                  "FILTER_BUDGET_SEGMENT_DESCRIPTION",
                  "FILTER_BUDGET_SEGMENT_END_DATE",
                  "FILTER_BUDGET_SEGMENT_PACING_PERCENTAGE",
                  "FILTER_BUDGET_SEGMENT_START_DATE",
                  "FILTER_BUDGET_SEGMENT_TYPE",
                  "FILTER_CAMPAIGN_DAILY_FREQUENCY",
                  "FILTER_CARRIER",
                  "FILTER_CARRIER_NAME",
                  "FILTER_CHANNEL_GROUPING",
                  "FILTER_CHANNEL_ID",
                  "FILTER_CHANNEL_NAME",
                  "FILTER_CHANNEL_TYPE",
                  "FILTER_CITY",
                  "FILTER_CITY_NAME",
                  "FILTER_CM360_PLACEMENT_ID",
                  "FILTER_COMPANION_CREATIVE_ID",
                  "FILTER_COMPANION_CREATIVE_NAME",
                  "FILTER_CONVERSION_AD_EVENT_TYPE",
                  "FILTER_CONVERSION_AD_EVENT_TYPE_ID",
                  "FILTER_CONVERSION_DELAY",
                  "FILTER_CONVERSION_SOURCE",
                  "FILTER_CONVERSION_SOURCE_ID",
                  "FILTER_COUNTRY",
                  "FILTER_COUNTRY_ID",
                  "FILTER_CREATIVE",
                  "FILTER_CREATIVE_ASSET",
                  "FILTER_CREATIVE_ATTRIBUTE",
                  "FILTER_CREATIVE_HEIGHT",
                  "FILTER_CREATIVE_ID",
                  "FILTER_CREATIVE_INTEGRATION_CODE",
                  "FILTER_CREATIVE_RENDERED_IN_AMP",
                  "FILTER_CREATIVE_SIZE",
                  "FILTER_CREATIVE_SOURCE",
                  "FILTER_CREATIVE_STATUS",
                  "FILTER_CREATIVE_TYPE",
                  "FILTER_CREATIVE_WIDTH",
                  "FILTER_DATA_PROVIDER",
                  "FILTER_DATA_PROVIDER_NAME",
                  "FILTER_DATA_SOURCE",
                  "FILTER_DATE",
                  "FILTER_DAY_OF_WEEK",
                  "FILTER_DETAILED_DEMOGRAPHICS",
                  "FILTER_DETAILED_DEMOGRAPHICS_ID",
                  "FILTER_DEVICE",
                  "FILTER_DEVICE_MAKE",
                  "FILTER_DEVICE_MODEL",
                  "FILTER_DEVICE_TYPE",
                  "FILTER_DFP_ORDER_ID",
                  "FILTER_DIGITAL_CONTENT_LABEL",
                  "FILTER_DMA",
                  "FILTER_DMA_NAME",
                  "FILTER_DOMAIN",
                  "FILTER_ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST",
                  "FILTER_ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST",
                  "FILTER_EVENT_TYPE",
                  "FILTER_EXCHANGE",
                  "FILTER_EXCHANGE_CODE",
                  "FILTER_EXCHANGE_ID",
                  "FILTER_EXTENSION",
                  "FILTER_EXTENSION_ASSET",
                  "FILTER_EXTENSION_ASSET_STATUS",
                  "FILTER_EXTENSION_ASSET_TYPE",
                  "FILTER_EXTENSION_STATUS",
                  "FILTER_EXTENSION_TYPE",
                  "FILTER_FIRST_PARTY_AUDIENCE_LIST_COST",
                  "FILTER_FIRST_PARTY_AUDIENCE_LIST_TYPE",
                  "FILTER_FLOODLIGHT_ACTIVITY",
                  "FILTER_FLOODLIGHT_ACTIVITY_ID",
                  "FILTER_FORMAT",
                  "FILTER_GAM_INSERTION_ORDER",
                  "FILTER_GAM_LINE_ITEM",
                  "FILTER_GAM_LINE_ITEM_ID",
                  "FILTER_GENDER",
                  "FILTER_GMAIL_AGE",
                  "FILTER_GMAIL_CITY",
                  "FILTER_GMAIL_COUNTRY",
                  "FILTER_GMAIL_COUNTRY_NAME",
                  "FILTER_GMAIL_DEVICE_TYPE",
                  "FILTER_GMAIL_DEVICE_TYPE_NAME",
                  "FILTER_GMAIL_GENDER",
                  "FILTER_GMAIL_REGION",
                  "FILTER_GMAIL_REMARKETING_LIST",
                  "FILTER_HOUSEHOLD_INCOME",
                  "FILTER_IMPRESSION_COUNTING_METHOD",
                  "FILTER_IMPRESSION_LOSS_REJECTION_REASON",
                  "FILTER_INSERTION_ORDER",
                  "FILTER_INSERTION_ORDER_GOAL_TYPE",
                  "FILTER_INSERTION_ORDER_GOAL_VALUE",
                  "FILTER_INSERTION_ORDER_INTEGRATION_CODE",
                  "FILTER_INSERTION_ORDER_NAME",
                  "FILTER_INSERTION_ORDER_STATUS",
                  "FILTER_INTEREST",
                  "FILTER_INVENTORY_COMMITMENT_TYPE",
                  "FILTER_INVENTORY_DELIVERY_METHOD",
                  "FILTER_INVENTORY_FORMAT",
                  "FILTER_INVENTORY_MEDIA_COST_TYPE",
                  "FILTER_INVENTORY_RATE_TYPE",
                  "FILTER_INVENTORY_SOURCE",
                  "FILTER_INVENTORY_SOURCE_EXTERNAL_ID",
                  "FILTER_INVENTORY_SOURCE_GROUP",
                  "FILTER_INVENTORY_SOURCE_GROUP_ID",
                  "FILTER_INVENTORY_SOURCE_ID",
                  "FILTER_INVENTORY_SOURCE_NAME",
                  "FILTER_INVENTORY_SOURCE_TYPE",
                  "FILTER_KEYWORD",
                  "FILTER_LIFE_EVENT",
                  "FILTER_LIFE_EVENTS",
                  "FILTER_LINE_ITEM",
                  "FILTER_LINE_ITEM_BUDGET",
                  "FILTER_LINE_ITEM_DAILY_FREQUENCY",
                  "FILTER_LINE_ITEM_END_DATE",
                  "FILTER_LINE_ITEM_INTEGRATION_CODE",
                  "FILTER_LINE_ITEM_LIFETIME_FREQUENCY",
                  "FILTER_LINE_ITEM_NAME",
                  "FILTER_LINE_ITEM_PACING_PERCENTAGE",
                  "FILTER_LINE_ITEM_START_DATE",
                  "FILTER_LINE_ITEM_STATUS",
                  "FILTER_LINE_ITEM_TYPE",
                  "FILTER_MATCHED_GENRE_TARGET",
                  "FILTER_MATCH_RATIO",
                  "FILTER_MEASUREMENT_SOURCE",
                  "FILTER_MEDIA_PLAN",
                  "FILTER_MEDIA_PLAN_NAME",
                  "FILTER_MEDIA_TYPE",
                  "FILTER_MOBILE_GEO",
                  "FILTER_MONTH",
                  "FILTER_MRAID_SUPPORT",
                  "FILTER_NIELSEN_AGE",
                  "FILTER_NIELSEN_COUNTRY_CODE",
                  "FILTER_NIELSEN_DATE_RANGE",
                  "FILTER_NIELSEN_DEVICE_ID",
                  "FILTER_NIELSEN_GENDER",
                  "FILTER_NIELSEN_RESTATEMENT_DATE",
                  "FILTER_OMID_CAPABLE",
                  "FILTER_OM_SDK_AVAILABLE",
                  "FILTER_ORDER_ID",
                  "FILTER_OS",
                  "FILTER_PAGE_CATEGORY",
                  "FILTER_PAGE_LAYOUT",
                  "FILTER_PARENTAL_STATUS",
                  "FILTER_PARTNER",
                  "FILTER_PARTNER_CURRENCY",
                  "FILTER_PARTNER_NAME",
                  "FILTER_PARTNER_STATUS",
                  "FILTER_PATH_EVENT_INDEX",
                  "FILTER_PATH_PATTERN_ID",
                  "FILTER_PLACEMENT_ALL_YOUTUBE_CHANNELS",
                  "FILTER_PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS",
                  "FILTER_PLATFORM",
                  "FILTER_PLAYBACK_METHOD",
                  "FILTER_POSITION_IN_CONTENT",
                  "FILTER_PUBLIC_INVENTORY",
                  "FILTER_PUBLISHER_PROPERTY",
                  "FILTER_PUBLISHER_PROPERTY_ID",
                  "FILTER_PUBLISHER_PROPERTY_SECTION",
                  "FILTER_PUBLISHER_PROPERTY_SECTION_ID",
                  "FILTER_PUBLISHER_TRAFFIC_SOURCE",
                  "FILTER_QUARTER",
                  "FILTER_REFRESHED_AD_NAME",
                  "FILTER_REFUND_REASON",
                  "FILTER_REGION",
                  "FILTER_REGION_NAME",
                  "FILTER_REMARKETING_LIST",
                  "FILTER_REWARDED",
                  "FILTER_SENSITIVE_CATEGORY",
                  "FILTER_SERVED_PIXEL_DENSITY",
                  "FILTER_SITE_ID",
                  "FILTER_SITE_LANGUAGE",
                  "FILTER_SKIPPABLE_SUPPORT",
                  "FILTER_TARGETED_DATA_PROVIDERS",
                  "FILTER_TARGETED_USER_LIST",
                  "FILTER_TARGETING_EXPANSION",
                  "FILTER_THIRD_PARTY_AUDIENCE_LIST_COST",
                  "FILTER_THIRD_PARTY_AUDIENCE_LIST_TYPE",
                  "FILTER_TIME_OF_DAY",
                  "FILTER_TRUEVIEW_AD",
                  "FILTER_TRUEVIEW_AD_GROUP",
                  "FILTER_TRUEVIEW_AD_GROUP_AD_ID",
                  "FILTER_TRUEVIEW_AD_GROUP_ID",
                  "FILTER_TRUEVIEW_AD_TYPE_NAME",
                  "FILTER_TRUEVIEW_AGE",
                  "FILTER_TRUEVIEW_CATEGORY",
                  "FILTER_TRUEVIEW_CITY",
                  "FILTER_TRUEVIEW_CLICK_TYPE_NAME",
                  "FILTER_TRUEVIEW_CONVERSION_TYPE",
                  "FILTER_TRUEVIEW_COUNTRY",
                  "FILTER_TRUEVIEW_CUSTOM_AFFINITY",
                  "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS",
                  "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS_ID",
                  "FILTER_TRUEVIEW_DMA",
                  "FILTER_TRUEVIEW_DMA_NAME",
                  "FILTER_TRUEVIEW_GENDER",
                  "FILTER_TRUEVIEW_HOUSEHOLD_INCOME",
                  "FILTER_TRUEVIEW_IAR_AGE",
                  "FILTER_TRUEVIEW_IAR_CATEGORY",
                  "FILTER_TRUEVIEW_IAR_CITY",
                  "FILTER_TRUEVIEW_IAR_COUNTRY",
                  "FILTER_TRUEVIEW_IAR_COUNTRY_NAME",
                  "FILTER_TRUEVIEW_IAR_GENDER",
                  "FILTER_TRUEVIEW_IAR_INTEREST",
                  "FILTER_TRUEVIEW_IAR_LANGUAGE",
                  "FILTER_TRUEVIEW_IAR_PARENTAL_STATUS",
                  "FILTER_TRUEVIEW_IAR_REGION_NAME",
                  "FILTER_TRUEVIEW_IAR_REMARKETING_LIST",
                  "FILTER_TRUEVIEW_IAR_TIME_OF_DAY",
                  "FILTER_TRUEVIEW_IAR_YOUTUBE_CHANNEL",
                  "FILTER_TRUEVIEW_IAR_YOUTUBE_VIDEO",
                  "FILTER_TRUEVIEW_IAR_ZIPCODE",
                  "FILTER_TRUEVIEW_INTEREST",
                  "FILTER_TRUEVIEW_KEYWORD",
                  "FILTER_TRUEVIEW_PARENTAL_STATUS",
                  "FILTER_TRUEVIEW_PLACEMENT",
                  "FILTER_TRUEVIEW_PLACEMENT_ID",
                  "FILTER_TRUEVIEW_REGION",
                  "FILTER_TRUEVIEW_REGION_NAME",
                  "FILTER_TRUEVIEW_REMARKETING_LIST",
                  "FILTER_TRUEVIEW_REMARKETING_LIST_NAME",
                  "FILTER_TRUEVIEW_TARGETING_EXPANSION",
                  "FILTER_TRUEVIEW_URL",
                  "FILTER_TRUEVIEW_ZIPCODE",
                  "FILTER_USER_LIST",
                  "FILTER_USER_LIST_FIRST_PARTY",
                  "FILTER_USER_LIST_FIRST_PARTY_NAME",
                  "FILTER_USER_LIST_THIRD_PARTY",
                  "FILTER_USER_LIST_THIRD_PARTY_NAME",
                  "FILTER_VARIANT_ID",
                  "FILTER_VARIANT_NAME",
                  "FILTER_VARIANT_VERSION",
                  "FILTER_VENDOR_MEASUREMENT_MODE",
                  "FILTER_VERIFICATION_AUDIBILITY_COMPLETE",
                  "FILTER_VERIFICATION_AUDIBILITY_START",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_START",
                  "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE",
                  "FILTER_VERIFICATION_VIDEO_POSITION",
                  "FILTER_VERIFICATION_VIDEO_RESIZED",
                  "FILTER_VIDEO_AD_POSITION_IN_STREAM",
                  "FILTER_VIDEO_COMPANION_CREATIVE_SIZE",
                  "FILTER_VIDEO_CONTENT_DURATION",
                  "FILTER_VIDEO_CONTENT_LIVE_STREAM",
                  "FILTER_VIDEO_CONTINUOUS_PLAY",
                  "FILTER_VIDEO_CREATIVE_DURATION",
                  "FILTER_VIDEO_CREATIVE_DURATION_SKIPPABLE",
                  "FILTER_VIDEO_DURATION",
                  "FILTER_VIDEO_DURATION_SECONDS",
                  "FILTER_VIDEO_DURATION_SECONDS_RANGE",
                  "FILTER_VIDEO_FORMAT_SUPPORT",
                  "FILTER_VIDEO_PLAYER_SIZE",
                  "FILTER_VIDEO_RATING_TIER",
                  "FILTER_VIDEO_SKIPPABLE_SUPPORT",
                  "FILTER_WEEK",
                  "FILTER_YEAR",
                  "FILTER_YOUTUBE_ADAPTED_AUDIENCE_LIST",
                  "FILTER_YOUTUBE_AD_VIDEO",
                  "FILTER_YOUTUBE_AD_VIDEO_ID",
                  "FILTER_YOUTUBE_CHANNEL",
                  "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER",
                  "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER",
                  "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER",
                  "FILTER_YOUTUBE_VIDEO",
                  "FILTER_ZIP_CODE",
                  "FILTER_ZIP_POSTAL_CODE"
                ],
                "options": {
                  "enum_titles": [
                    "Active View: Custom Metric ID",
                    "Active View: Custom Metric Name",
                    "Active View Expected Viewability",
                    "Advertiser ID",
                    "Advertiser Currency",
                    "Advertiser Integration Code",
                    "Advertiser Status",
                    "Advertiser",
                    "Advertiser Time Zone",
                    "Ad Position",
                    "Ad Type",
                    "Age",
                    "Algorithm",
                    "Algorithm ID",
                    "AMP Page Request",
                    "Anonymous Inventory Modeling",
                    "App/URL",
                    "App/URL Excluded",
                    "Attributed Userlist",
                    "Attributed Userlist Cost",
                    "Attributed Userlist Type",
                    "Attribution Model",
                    "Audience List",
                    "Audience List Cost",
                    "Audience List Type",
                    "Audience Name",
                    "Audience Type",
                    "Audio Feed Type",
                    "Authorized Seller State",
                    "Billable Outcome",
                    "Brand Lift Type",
                    "Browser",
                    "Budget Segment Budget",
                    "Budget Segment Name",
                    "Budget Segment End Date",
                    "Budget Segment Pacing Percentage",
                    "Budget Segment Start Date",
                    "Budget Type (Segment)",
                    "Insertion Order Daily Frequency",
                    "ISP or Carrier ID",
                    "ISP or Carrier",
                    "Channel Grouping",
                    "Channel ID",
                    "Channel",
                    "Channel Type",
                    "City ID",
                    "City",
                    "CM360 Placement ID",
                    "Companion Creative ID",
                    "Companion Creative",
                    "Conversion Ad Event Type",
                    "Conversion Ad Event Type ID",
                    "Time to Conversion",
                    "Conversion Source",
                    "Conversion Source ID",
                    "Country",
                    "Country",
                    "Creative",
                    "Creative Asset",
                    "Creative Attributes",
                    "Creative Height",
                    "Creative ID",
                    "Creative Integration Code",
                    "Creative Rendered in AMP",
                    "Creative Size",
                    "Creative Source",
                    "Creative Status",
                    "Creative Type",
                    "Creative Width",
                    "Data Provider ID",
                    "Data Provider",
                    "Data Source",
                    "Date",
                    "Day of Week",
                    "Detailed Demographics",
                    "Detailed Demographics ID",
                    "Device",
                    "Device Make",
                    "Device Model",
                    "Device Type",
                    "DFP Insertion Order ID",
                    "Digital Content Label",
                    "DMA Code",
                    "DMA",
                    "Domain",
                    "Eligible Cookies on First-Party Audience List",
                    "Eligible Cookies on Third-Party Audience List and Interest",
                    "Event Type",
                    "Exchange",
                    "Exchange Code",
                    "Exchange ID",
                    "Asset",
                    "Asset (upgraded)",
                    "Asset Status (upgraded)",
                    "Asset Type (upgraded)",
                    "Asset Status",
                    "Asset Type",
                    "First Party Audience List Cost",
                    "First Party Audience List Type",
                    "Floodlight Activity",
                    "Floodlight Activity ID",
                    "Format",
                    "DFP Insertion Order",
                    "DFP Line Item",
                    "DFP Line Item ID",
                    "Gender",
                    "Age",
                    "City",
                    "Country",
                    "Country",
                    "Device Type",
                    "Device Type",
                    "Gender",
                    "Region",
                    "Remarketing List",
                    "Household Income",
                    "Impression Counting Method",
                    "Rejection Reason",
                    "Insertion Order ID",
                    "Insertion Order Goal Type",
                    "Insertion Order Goal Value",
                    "Insertion Order Integration Code",
                    "Insertion Order",
                    "Insertion Order Status",
                    "Interest",
                    "Inventory Commitment Type",
                    "Inventory Delivery Method",
                    "Format",
                    "Inventory Media Cost Type",
                    "Inventory Rate Type",
                    "Inventory Source ID (Legacy)",
                    "Inventory Source ID (external)",
                    "Inventory Source Group",
                    "Inventory Source Group ID",
                    "Inventory Source ID",
                    "Inventory Source",
                    "Inventory Source Type",
                    "Keyword",
                    "Life Event",
                    "Life Events",
                    "Line Item ID",
                    "Line Item Budget",
                    "Line Item Daily Frequency",
                    "Line Item End Date",
                    "Line Item Integration Code",
                    "Line Item Lifetime Frequency",
                    "Line Item",
                    "Line Item Pacing Percentage",
                    "Line Item Start Date",
                    "Line Item Status",
                    "Line Item Type",
                    "Matched Genre Target",
                    "Match Ratio",
                    "Measurement Source",
                    "Campaign ID",
                    "Campaign",
                    "Media Type",
                    "Business Chain",
                    "Month",
                    "MRAID Support",
                    "Age",
                    "Country",
                    "Date Range for Cumulative Metrics",
                    "Device ID",
                    "Gender",
                    "Restatement Date",
                    "OM SDK Capable",
                    "OM SDK Available",
                    "Order ID",
                    "Operating System",
                    "Category",
                    "Environment",
                    "Parental Status",
                    "Partner ID",
                    "Partner Currency",
                    "Partner",
                    "Partner Status",
                    "Path Event Index",
                    "Path Pattern ID",
                    "Placement (All YouTube Channels)",
                    "Placement Name (All YouTube Channels)",
                    "Platform",
                    "Playback Method",
                    "Position in Content",
                    "Public Inventory",
                    "Publisher Property",
                    "Publisher Property ID",
                    "Publisher Property Section",
                    "Publisher Property Section ID",
                    "Publisher Traffic Source",
                    "Quarter",
                    "Refreshed Ad",
                    "Refund Reason",
                    "Region ID",
                    "Region",
                    "Remarketing List",
                    "Rewarded",
                    "Sensitive Category",
                    "Served Pixel Density",
                    "App/URL ID",
                    "Language",
                    "Video Skippable Support",
                    "Targeted Data Providers",
                    "Attributed Userlist ID",
                    "Targeting Expansion",
                    "Third Party Audience List Cost",
                    "Third Party Audience List Type",
                    "Time of Day",
                    "YouTube Ad",
                    "YouTube Ad Group",
                    "YouTube Ad ID",
                    "YouTube Ad Group ID",
                    "YouTube Ad Type",
                    "Age (YouTube)",
                    "Category",
                    "City",
                    "Click Type",
                    "Conversion Type",
                    "Country (YouTube)",
                    "Custom Affinity",
                    "Detailed Demographics",
                    "Detailed Demographics ID",
                    "DMA ID",
                    "DMA",
                    "Gender",
                    "Household Income",
                    "Age",
                    "Category",
                    "City",
                    "Country",
                    "Country",
                    "Gender",
                    "Interest",
                    "Language",
                    "Parental Status",
                    "Region",
                    "Remarketing List ID",
                    "Time of Day",
                    "YouTube Channel",
                    "YouTube Video",
                    "Zip Code",
                    "Interest",
                    "Keyword",
                    "Parental Status",
                    "Placement (Managed)",
                    "Placement ID (Managed)",
                    "Region ID",
                    "Region",
                    "Remarketing List ID",
                    "Remarketing List",
                    "Optimized Targeting",
                    "Placement (All)",
                    "Zipcode",
                    "Audience List ID",
                    "First Party Audience List ID",
                    "First Party Audience List",
                    "Third Party Audience List ID",
                    "Third Party Audience List",
                    "Variant ID",
                    "Variant Name",
                    "Variant Version",
                    "Vendor Measurement Mode",
                    "Audibility At Complete",
                    "Audibility At Start",
                    "Verification Video Player Size",
                    "Video Player Size at Completion",
                    "Video Player Size at First Quartile",
                    "Video Player Size at Midpoint",
                    "Video Player Size at Start",
                    "Video Player Size at Third Quartile",
                    "Verification Video Position",
                    "Video Resized",
                    "Video Ad Position In Stream",
                    "Companion Creative Size",
                    "Video Content Duration",
                    "Video Content Live Stream",
                    "Video Continuous Play",
                    "Video Creative Duration",
                    "Video Creative Duration (Skippable)",
                    "Video Duration",
                    "Max Video Duration",
                    "Max Video Duration Range",
                    "Video Format Support",
                    "Video Player Size",
                    "Digital Content Label",
                    "Video Skippable Support",
                    "Week",
                    "Year",
                    "YouTube Adapted Audience List",
                    "YouTube Ad Video",
                    "YouTube Ad Video ID",
                    "YouTube Channel",
                    "Advertiser",
                    "Insertion Order",
                    "Partner",
                    "YouTube Video",
                    "Zip Code ID",
                    "Zip Code"
                  ]
                }
              },
              "value": {
                "type": "string",
                "title": "Value",
                "propertyOrder": 20,
                "minLength": 1
              }
            }
          }
        }
      },
      "options": {
        "dependencies": {
          "input_variant": "report_specification"
        }
      }
    },
    "existing_report_id": {
      "type": "string",
      "title": "Report ID",
      "propertyOrder": 150,
      "minLength": 1,
      "description": "Enter the report ID as presented in the DV360 Report Builder.",
      "enum": [],
      "options": {
        "dependencies": {
          "input_variant": "existing_report_id"
        },
        "async": {
          "label": "Load available reports",
          "action": "list_queries"
        }
      }
    },
    "destination": {
      "title": "Destination",
      "type": "object",
      "propertyOrder": 600,
      "required": [
        "table_name",
        "primary_key",
        "incremental_loading"
      ],
      "properties": {
        "selected_variant": {
          "type": "string",
          "title": "Selected variant",
          "description": "Helper dummy element to render pkeys",
          "template": "{{var}}",
          "watch": {
            "var": "input_variant"
          },
          "options": {
            "hidden": true
          }
        },
        "table_name": {
          "type": "string",
          "title": "Storage table name",
          "propertyOrder": 10,
          "minLength": 1,
          "description": "Name of the destination table for this report (e.g., standard_performance_data)"
        },
        "primary_key": {
          "type": "array",
          "title": "Primary key",
          "description": "List of columns (from selected dimensions) to be used as the primary key of the resulting table. We recommend using ID columns where possible to avoid ambiguity if the dimension name changes.",
          "propertyOrder": 20,
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "watch": {
              "dim": "report_specification.dimensions"
            },
            "enumSource": "dim"
          },
          "options": {
            "dependencies": {
              "selected_variant": "report_specification"
            }
          }
        },
        "primary_key_existing": {
          "type": "array",
          "title": "Primary key",
          "description": "List of columns (load from report) to be used as the primary key of the resulting table. We recommend using ID columns where possible to avoid ambiguity if the dimension name changes.",
          "propertyOrder": 21,
          "format": "select",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [],
            "minLength": 1,
            "title": "Dimension"
          },
          "options": {
            "async": {
              "label": "Load available dimensions",
              "action": "list_report_dimensions"
            },
            "dependencies": {
              "selected_variant": "existing_report_id"
            }
          }
        },
        "incremental_loading": {
          "enum": [
            false,
            true
          ],
          "type": "boolean",
          "title": "Load type",
          "default": true,
          "options": {
            "enum_titles": [
              "Full load",
              "Incremental load"
            ]
          },
          "description": "If full load is used, the destination table will be overwritten every run. If incremental load is used, data will be upserted into the destination table.",
          "propertyOrder": 30
        }
      }
    }
  }
}


================================================
File: component_config/configSchema.json
================================================
{}

================================================
File: component_config/logger
================================================
gelf

================================================
File: component_config/loggerConfiguration.json
================================================
{
  "verbosity": {
    "100": "normal",
    "200": "normal",
    "250": "normal",
    "300": "verbose",
    "400": "verbose",
    "500": "camouflage",
    "550": "camouflage",
    "600": "camouflage"
  },
  "gelf_server_type": "tcp"
}

================================================
File: component_config/sample-config/config.json
================================================
{
  "storage": {
    "input": {
      "files": [],
      "tables": [
        {
          "source": "in.c-test.test",
          "destination": "test.csv",
          "limit": 50,
          "columns": [],
          "where_values": [],
          "where_operator": "eq"
        }
      ]
    },
    "output": {
      "files": [],
      "tables": []
    }
  },
  "parameters": {
    "#api_token": "demo",
    "period_from": "yesterday",
    "endpoints": [
      "deals",
      "companies"
    ],
    "company_properties": "",
    "deal_properties": "",
    "debug": true
  },
  "image_parameters": {
    "syrup_url": "https://syrup.keboola.com/"
  },
  "authorization": {
    "oauth_api": {
      "id": "OAUTH_API_ID",
      "credentials": {
        "id": "main",
        "authorizedFor": "Myself",
        "creator": {
          "id": "1234",
          "description": "me@keboola.com"
        },
        "created": "2016-01-31 00:13:30",
        "#data": "{\"refresh_token\":\"MCWBkfdK9m5YK*Oqahwm6XN6elMAEwcH5kYcK8Ku!bpiOgSDZN9MQIzunpMsh6LyKH0i!7OcwwwajuxPfvm2PrrWYSs*HerDr2ZSJ39pqHJcvwUNIvHdtcgFFr3Em*yhn3GKBwM2p9UrjtgdAriSDny5YgUYGuI3gYJY1ypD*wBaAOzzeeXZx6CdgjruJ7gboTAngbWk3CzO9rORIwXAAlGUH6ZgBQJL3AwkYVMRFV4BvIvDAMF*0DcGDyrcyYDw9X3vYn*Wy!OqgrenKCGowdJk0C0136SUv4PJI383y76UMim6Q7KGDj7Lf!K2N2FDbxsz2iZKZTBr2vHx8pEC1oBc$\"}",
        "oauthVersion": "2.0",
        "appKey": "000000004C184A49",
        "#appSecret": "vBAYak49pVK1zghHAgDH4tCSCNlT-CiN"
      }
    }
  }
}


================================================
File: component_config/sample-config/in/state.json
================================================
{"data_delta": "10222018"}

================================================
File: component_config/sample-config/in/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>

================================================
File: component_config/sample-config/in/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"


================================================
File: component_config/sample-config/in/tables/test.csv.manifest
================================================
{
    "id": "in.c-test.test",
    "uri": "https:\/\/connection.keboola.com\/v2\/storage\/tables\/in.c-test.test",
    "name": "test",
    "primary_key": [],
    "indexed_columns": [],
    "created": "2018-03-02T15:36:50+0100",
    "last_change_date": "2018-03-02T15:36:54+0100",
    "last_import_date": "2018-03-02T15:36:54+0100",
    "rows_count": 0,
    "data_size_bytes": 0,
    "is_alias": false,
    "attributes": [],
    "columns": [
        "Type",
        "Campaign_Name",
        "Status",
        "Start_Date",
        "End_Date",
        "Location",
        "Eventbrite_link"
    ],
    "metadata": [
        {
            "id": "18271581",
            "key": "KBC.createdBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271582",
            "key": "KBC.createdBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271583",
            "key": "KBC.createdBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271584",
            "key": "KBC.lastUpdatedBy.component.id",
            "value": "transformation",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271585",
            "key": "KBC.lastUpdatedBy.configuration.id",
            "value": "361585608",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        },
        {
            "id": "18271586",
            "key": "KBC.lastUpdatedBy.configurationRow.id",
            "value": "361585762",
            "provider": "system",
            "timestamp": "2018-03-02T15:37:02+0100"
        }
    ],
    "column_metadata": {
        "Type": [],
        "Campaign_Name": [],
        "Status": [],
        "Start_Date": [],
        "End_Date": [],
        "Location": [],
        "Eventbrite_link": []
    }
}

================================================
File: component_config/sample-config/out/files/order1.xml
================================================
<?xml version='1.0' ?>
<root_el>
    <orders>
        <order>
            <id>1</id>
            <date>2018-01-01</date>
            <cust_name>David</cust_name>	
            <order-item>
                <price currency="CZK">100</price>
                <item>Umbrella</item>
            </order-item>
            <order-item>
                <price currency="CZK">200</price>
                <item>Rain Coat</item>
            </order-item>
        </order>
    </orders>
</root_el>

================================================
File: component_config/sample-config/out/tables/test.csv
================================================
"Type","Campaign_Name","Status","Start_Date","End_Date","Location","Eventbrite_link"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","How to become data driven startup","Complete","2015-10-13","2015-10-13","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711425377"
"Event","How to become data driven startup","Complete","2015-11-04","2015-11-04","United Kingdom","https://www.eventbrite.co.uk/e/how-to-become-data-driven-startup-registration-18711426380"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-01-14","2016-01-14","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20152992142"
"Event","DATAGIRLS PRESENT: HOW TO BECOME DATA-DRIVEN","Complete","2016-02-25","2016-02-25","United Kingdom","https://www.eventbrite.co.uk/e/datagirls-present-how-to-become-data-driven-tickets-20967439175"
"Event","Data Tools for Startups","Complete","2016-03-17","2016-03-17","United Kingdom","https://www.eventbrite.co.uk/e/data-tools-for-startups-tickets-21257426535"
"Event","Data Festival London 2016","Complete","2016-06-24","2016-06-26","United Kingdom","https://www.eventbrite.co.uk/e/data-festival-london-2016-tickets-25192608771"
"Event","Becoming data driven in the high street fashion","Complete","2016-10-12","2016-10-12","United Kingdom","https://www.eventbrite.co.uk/e/becoming-data-driven-in-the-high-street-fashion-tickets-27481268213"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola DataBrunch - Amazon Go a ako s ním v maloobchode “bojovať”","Complete","2017-03-09","2017-03-09","Slovakia","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-ako-s-nim-v-maloobchode-bojovat-tickets-31827553068"
"Event","Keboola DataBrunch - Amazon Go a jak s nim v maloobchodě “bojovat”","Complete","2017-03-29","2017-03-29","Czech Republic","https://www.eventbrite.co.uk/e/keboola-databrunch-amazon-go-a-jak-s-nim-v-maloobchode-bojovat-tickets-32182393405"
"Event","The Data Foundry present: DATAGIRLS Weekend","Complete","2016-10-14","2016-10-16","United Kingdom","https://www.eventbrite.co.uk/e/the-data-foundry-present-datagirls-weekend-tickets-27350069795"
"Event","[NLP] How to analyse text data for knowledge discovery","Complete","2017-04-10","2017-04-10","United Kingdom","https://www.eventbrite.co.uk/e/nlp-how-to-analyse-text-data-for-knowledge-discovery-tickets-32320274812"
"Event","Keboola Data Brunch - KPIs and AmazonGo, budoucnost retailu? ","Complete","2017-06-27","2017-06-27","Czech Republic","https://www.eventbrite.co.uk/e/keboola-data-brunch-kpis-amazongo-budoucnost-retailu-tickets-35257195220"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"
"Event","Conversion Rate Optimisation in Travel Industry","Complete","2018-01-30","2018-01-30","United Kingdom","https://www.eventbrite.co.uk/e/conversion-rate-optimisation-in-travel-industry-tickets-38951076719"
"Event","Learn how to #DoMoreWithData with DataGirls","Complete","2017-10-01","2017-10-01","United Kingdom","https://www.eventbrite.co.uk/e/learn-how-to-domorewithdata-with-datagirls-tickets-36777944823"
"Event","Are You Using Data to Understand Your Customers? ","Complete","2018-02-27","2018-02-27","United Kingdom","https://www.eventbrite.co.uk/e/are-you-using-data-to-understand-your-customers-tickets-42000160611"


================================================
File: scripts/build_n_run.ps1
================================================
echo Building component...
$COMP_TAG = Read-Host -Prompt 'Input Docker tag name:'
docker build -rm -t $COMP_TAG ../

echo Running component...
Write-host "Would you like to use default data folder? (../data)" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes use: " (join-path (Split-Path -Path (Get-Location).Path) "data"); $DATA_PATH = (join-path (Split-Path -Path (Get-Location).Path) "data") } 
       N {Write-Host "No, I'll specify myself"; $DATA_PATH = Read-Host -Prompt 'Input data folder path:'} 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 

Write-host "Would you like to execute the container to Bash, skipping the execution?" -ForegroundColor Yellow 
    $Readhost = Read-Host " ( y / n ) " 
    Switch ($ReadHost) 
     { 
       Y {Write-host "Yes, get me to the bash"; docker run -ti -v $DATA_PATH`:/data --entrypoint=//bin//bash $COMP_TAG} 
       N {Write-Host "No, execute the app normally"; 
		    echo $DATA_PATH
			docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG
	   } 
       Default {Write-Host "Default, run app"; docker run -v $DATA_PATH`:/data -e KBC_DATADIR=/data $COMP_TAG} 
     } 




================================================
File: scripts/build_n_test.sh
================================================
#!/bin/sh
set -e

flake8 --config=flake8.cfg
python -m unittest discover

================================================
File: scripts/run.bat
================================================
@echo off

echo Running component...
docker run -v %cd%:/data -e KBC_DATADIR=/data comp-tag

================================================
File: scripts/run_kbc_tests.ps1
================================================
echo "Preparing KBC test image"
# set env vars
$KBC_DEVELOPERPORTAL_USERNAME  = Read-Host -Prompt 'Input your service account user name'
$KBC_DEVELOPERPORTAL_PASSWORD  = Read-Host -Prompt 'Input your service account pass'
$KBC_DEVELOPERPORTAL_VENDOR = 'esnerda'
$KBC_DEVELOPERPORTAL_APP = 'esnerda.ex-gusto-export'
$BASE_KBC_CONFIG = '455568423'
$KBC_STORAGE_TOKEN = Read-Host -Prompt 'Input your storage token'


#build app
$APP_IMAGE='keboola-comp-test'
docker build ..\ --tag=$APP_IMAGE
docker images
docker -v
#docker run $APP_IMAGE flake8 --config=./deployment/flake8.cfg
echo "Running unit-tests..."
docker run $APP_IMAGE python -m unittest discover

docker pull quay.io/keboola/developer-portal-cli-v2:latest
$REPOSITORY= docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP

docker tag $APP_IMAGE`:latest $REPOSITORY`:test

echo 'running login'
$(docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME=$KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD=$KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login $KBC_DEVELOPERPORTAL_VENDOR $KBC_DEVELOPERPORTAL_APP)

echo 'pushing test image'
docker push $REPOSITORY`:test

echo 'running test config in KBC'
docker run --rm -e KBC_STORAGE_TOKEN=$KBC_STORAGE_TOKEN quay.io/keboola/syrup-cli:latest run-job $KBC_DEVELOPERPORTAL_APP $BASE_KBC_CONFIG test


================================================
File: scripts/update_dev_portal_properties.sh
================================================
#!/usr/bin/env bash

set -e
# Obtain the component repository and log in
docker pull quay.io/keboola/developer-portal-cli-v2:latest


# Update properties in Keboola Developer Portal
echo "Updating long description"
value=`cat component_config/component_long_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} longDescription --value="$value"
else
    echo "longDescription is empty!"
    exit 1
fi

echo "Updating config schema"
value=`cat component_config/configSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationSchema --value="$value"
else
    echo "configurationSchema is empty!"
fi

echo "Updating row config schema"
value=`cat component_config/configRowSchema.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationRowSchema --value="$value"
else
    echo "configurationRowSchema is empty!"
fi


echo "Updating config description"

value=`cat component_config/configuration_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} configurationDescription --value="$value"
else
    echo "configurationDescription is empty!"
fi


echo "Updating short description"

value=`cat component_config/component_short_description.md`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} shortDescription --value="$value"
else
    echo "shortDescription is empty!"
fi

echo "Updating logger settings"

value=`cat component_config/logger`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} logger --value="$value"
else
    echo "logger type is empty!"
fi

echo "Updating logger configuration"
value=`cat component_config/loggerConfiguration.json`
echo "$value"
if [ ! -z "$value" ]
then
    docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} loggerConfiguration --value="$value"
else
    echo "loggerConfiguration is empty!"
fi

================================================
File: scripts/developer_portal/fn_actions_md_update.sh
================================================
#!/bin/bash

# Set the path to the Python script file
PYTHON_FILE="src/component.py"
# Set the path to the Markdown file containing actions
MD_FILE="component_config/actions.md"

# Check if the file exists before creating it
if [ ! -e "$MD_FILE" ]; then
    touch "$MD_FILE"
else
    echo "File already exists: $MD_FILE"
    exit 1
fi

# Get all occurrences of lines containing @sync_action('XXX') from the .py file
SYNC_ACTIONS=$(grep -o -E "@sync_action\(['\"][^'\"]*['\"]\)" "$PYTHON_FILE" | sed "s/@sync_action(\(['\"]\)\([^'\"]*\)\(['\"]\))/\2/" | sort | uniq)

# Check if any sync actions were found
if [ -n "$SYNC_ACTIONS" ]; then
    # Iterate over each occurrence of @sync_action('XXX')
    for sync_action in $SYNC_ACTIONS; do
        EXISTING_ACTIONS+=("$sync_action")
    done

    # Convert the array to JSON format
    JSON_ACTIONS=$(printf '"%s",' "${EXISTING_ACTIONS[@]}")
    JSON_ACTIONS="[${JSON_ACTIONS%,}]"

    # Update the content of the actions.md file
    echo "$JSON_ACTIONS" > "$MD_FILE"
else
    echo "No sync actions found. Not creating the file."
fi

================================================
File: scripts/developer_portal/update_properties.sh
================================================
#!/usr/bin/env bash

set -e

# Check if the KBC_DEVELOPERPORTAL_APP environment variable is set
if [ -z "$KBC_DEVELOPERPORTAL_APP" ]; then
    echo "Error: KBC_DEVELOPERPORTAL_APP environment variable is not set."
    exit 1
fi

# Pull the latest version of the developer portal CLI Docker image
docker pull quay.io/keboola/developer-portal-cli-v2:latest

# Function to update a property for the given app ID
update_property() {
    local app_id="$1"
    local prop_name="$2"
    local file_path="$3"

    if [ ! -f "$file_path" ]; then
        echo "File '$file_path' not found. Skipping update for property '$prop_name' of application '$app_id'."
        return
    fi

    # shellcheck disable=SC2155
    local value=$(<"$file_path")

    echo "Updating $prop_name for $app_id"
    echo "$value"

    if [ -n "$value" ]; then
        docker run --rm \
            -e KBC_DEVELOPERPORTAL_USERNAME \
            -e KBC_DEVELOPERPORTAL_PASSWORD \
            quay.io/keboola/developer-portal-cli-v2:latest \
            update-app-property "$KBC_DEVELOPERPORTAL_VENDOR" "$app_id" "$prop_name" --value="$value"
        echo "Property $prop_name updated successfully for $app_id"
    else
        echo "$prop_name is empty for $app_id, skipping..."
    fi
}

app_id="$KBC_DEVELOPERPORTAL_APP"

update_property "$app_id" "isDeployReady" "component_config/isDeployReady.md"
update_property "$app_id" "longDescription" "component_config/component_long_description.md"
update_property "$app_id" "configurationSchema" "component_config/configSchema.json"
update_property "$app_id" "configurationRowSchema" "component_config/configRowSchema.json"
update_property "$app_id" "configurationDescription" "component_config/configuration_description.md"
update_property "$app_id" "shortDescription" "component_config/component_short_description.md"
update_property "$app_id" "logger" "component_config/logger"
update_property "$app_id" "loggerConfiguration" "component_config/loggerConfiguration.json"
update_property "$app_id" "licenseUrl" "component_config/licenseUrl.md"
update_property "$app_id" "documentationUrl" "component_config/documentationUrl.md"
update_property "$app_id" "sourceCodeUrl" "component_config/sourceCodeUrl.md"
update_property "$app_id" "uiOptions" "component_config/uiOptions.md"

# Update the actions.md file
source "$(dirname "$0")/fn_actions_md_update.sh"
# update_property actions
update_property "$app_id" "actions" "component_config/actions.md"

================================================
File: src/component.py
================================================
"""
Template Component main class.

"""
# from typing import List, Tuple
import json
import logging

import dataconf
import requests
from google.auth.exceptions import RefreshError
from keboola.component.base import ComponentBase, sync_action
from keboola.component.exceptions import UserException
from keboola.utils.header_normalizer import DefaultHeaderNormalizer

from configuration import Configuration
from google_dv360 import GoogleDV360Client, translate_filters, get_filter_table, GoogleDV360ClientException


class Component(ComponentBase):
    """
        Extends base class for general Python components. Initializes the CommonInterface
        and performs configuration validation.

        For easier debugging the data folder is picked up by default from `../data` path,
        relative to working directory.

        If `debug` parameter is present in the `config.json`, the default logger is set to verbose DEBUG mode.
    """

    def __init__(self):
        super().__init__()
        self.cfg: Configuration = None

    def run(self):
        """
        Main component method.
        """

        logging.debug(self.configuration.parameters)
        self.cfg = Configuration.fromDict(self.configuration.parameters)

        self._validate_configuration()

        client = self._get_google_client()

        report_id = self.get_existing_report_id(client)

        if not report_id:
            if self.cfg.input_variant == 'report_specification':
                filters = [(filter_pair.name, filter_pair.value) for filter_pair in
                           self.cfg.report_specification.filters]
                report_id = client.create_report(self.generate_query_name(),
                                                 self.cfg.report_specification.report_type,
                                                 self.cfg.report_specification.dimensions,
                                                 self.cfg.report_specification.metrics,
                                                 filters)
            else:
                report_id = self.cfg.existing_report_id

        logging.info(f'Query used: {report_id}')

        report_run_id = client.run_report(report_id,
                                          self.cfg.time_range.period,
                                          date_from=self.cfg.time_range.date_from,
                                          date_to=self.cfg.time_range.date_to)

        # Response structure is documented here:
        # https://developers.google.com/bid-manager/reference/rest/v2/queries.reports#Report
        report_response = client.wait_report(report_id, report_run_id)

        contents_url = report_response['metadata']['googleCloudStoragePath']

        self.write_report(contents_url)

        self.save_state(report_response)

    def _get_google_client(self):
        if not self.configuration.oauth_credentials:
            raise UserException("The configuration is not authorized. Please authorize the configuration first.")

        client = GoogleDV360Client(
            self.configuration.oauth_credentials.appKey,
            self.configuration.oauth_credentials.appSecret,
            self.configuration.oauth_credentials.data
        )
        return client

    @staticmethod
    def download_file(url: str, result_file_path: str):
        res = requests.get(url, stream=True, timeout=180)
        res.raise_for_status()

        with open(result_file_path, 'wb') as out:
            for chunk in res.iter_content(chunk_size=8192):
                out.write(chunk)

    @staticmethod
    def extract_csv_from_raw(raw_file: str, csv_file: str, normalize_header: bool = True):
        with open(raw_file, 'r') as src, open(csv_file, 'w') as dst:
            # To ensure compatibility: https://bitbucket.org/kds_consulting_team/kds-team.ex-dv360/pull-requests/10
            if normalize_header:
                line = src.readline()
                header_normalizer = DefaultHeaderNormalizer()
                normalized = header_normalizer.normalize_header(line.split(","))
                dst.write(', '.join(normalized) + '\n')

            while True:
                line = src.readline()
                if not line or line.startswith(',') or line == '\n':
                    break
                dst.write(line)

    def write_report(self, contents_url: str):
        """

        Args:
            contents_url: URL where Google stored report contents

        Returns: no value returned

        """
        pks_raw = self.cfg.destination.primary_key_existing if self.cfg.input_variant == 'existing_report_id' else \
            self.cfg.destination.primary_key
        header_normalizer = DefaultHeaderNormalizer()
        pks = header_normalizer.normalize_header(translate_filters(pks_raw))
        result_table = self.create_out_table_definition(f"{self.cfg.destination.table_name}.csv",
                                                        primary_key=pks,
                                                        incremental=self.cfg.destination.incremental_loading)
        self.write_manifest(result_table)

        raw_output_file = self.files_out_path + '/' + result_table.name + '.raw.txt'
        self.download_file(contents_url, raw_output_file)
        self.extract_csv_from_raw(raw_output_file, result_table.full_path, self.cfg.destination.normalize_header)

    def save_state(self, report_response):
        cur_state = dict(
            report=report_response,
            configuration=json.loads(dataconf.dumps(self.cfg, out="json"))
        )
        self.write_state_file(cur_state)

    def get_existing_report_id(self, client):
        """ Retrieves existing query ID

        Decide whether we may use already existing query generated previously.
        If state contains configuration identical to current configuration we check
        that correspondent query still exists in dv360 and if so we use its id.
        In any other case, we return None and caller will use a new query (either generated or supplied externally).

        Args:
            client: Service used to check query availability

        Returns: Query id if found else None

        """
        prev_state = self.get_state_file()
        if not prev_state.get('configuration') or not prev_state.get('report'):
            return None
        prev_report_id = prev_state['report']['key']['queryId']
        prev_cfg = Configuration.fromDict(prev_state.get('configuration'))
        if prev_cfg == self.cfg:
            # check for query existence
            q = client.get_query(prev_report_id)
            return prev_report_id if q else None
        return None

    def generate_query_name(self):
        # TODO: Currently Keboola has an issue: It does not pass row-id in variables, we use a workaround:
        import os
        configrow_id = os.getenv('KBC_CONFIGROWID', 'xxxxxx')
        return 'keboola_generated_' + self.environment_variables.project_id + '_' + \
            self.environment_variables.config_id + '_' + \
            configrow_id

    @sync_action('list_queries')
    def list_queries(self):
        """ A sync action used by Keboola GUI to provide available report (query) IDs for Report ID field.

        Returns: List of dictionaries having value and label attributes.
        """
        client = self._get_google_client()
        queries = client.list_queries()
        # wish was to include query creation date but tha info is not available in the service
        resp = [dict(value=q[0], label=f'{q[0]} - {q[1]}') for q in queries]
        return resp

    @sync_action('list_report_dimensions')
    def list_report_dimensions(self):
        """ A sync action used by Keboola GUI to provide available dimensions for existing report (query)

        Returns: List of dictionaries having value and label attributes.
        """
        existing_report_id = self.configuration.parameters.get('existing_report_id')
        if not existing_report_id:
            raise UserException('No report ID provided.')
        client = self._get_google_client()
        query = client.get_query(query_id=existing_report_id)
        if not query:
            raise UserException(f'Report id = {existing_report_id} was not found')
        table = get_filter_table()
        resp = [dict(value=f, label=table.get(f)) for f in query["params"]["groupBys"]]
        return resp

    @sync_action('validate_query')
    def validate_query(self):
        """ A sync action used by Keboola GUI to check validity of entered data.
        Method uses GUI data and tries to create a query calling the service.
        If service succeeds report specification is considered valid.
        Created query is immediately deleted as it need not be the final specification.

        Returns: no return

        Raises: Exception when create query failed

        """
        report_specification = self.configuration.parameters.get('report_specification')
        if not report_specification:
            raise UserException('No report specification in configuration parameters')
        report_type = report_specification.get('report_type')
        dimensions = report_specification.get('dimensions')
        metrics = report_specification.get('metrics')
        filters = report_specification.get('filters')
        filters = [(filter_pair.get('name'), filter_pair.get('value')) for filter_pair in filters]

        client = self._get_google_client()

        report_id = client.create_report('just_dummy_2_delete', report_type, dimensions, metrics, filters)

        client.delete_query(report_id)

    def _validate_configuration(self):
        errors = []
        if self.cfg.input_variant == 'report_specification':
            if not self.cfg.report_specification.metrics:
                errors.append("At least one metric needs to be specified!")
            if not self.cfg.report_specification.dimensions:
                errors.append("At least one dimension needs to be specified!")
        if errors:
            err_string = '\n'.join(errors)
            raise UserException(f'The configuration is not valid, following errors occurred: \n{err_string}')


"""
        Main entrypoint
"""
if __name__ == "__main__":
    try:
        comp = Component()
        comp.execute_action()
    except (UserException, GoogleDV360ClientException) as exc:
        logging.exception(exc)
        exit(1)
    except RefreshError as exc:
        logging.error("The OAuth token has expired. Please reauthorize the application.", extra={"exception": exc})
        exit(1)
    except Exception as exc:
        logging.exception(exc)
        exit(2)


================================================
File: src/configuration.py
================================================
from dataclasses import dataclass, field
import dataconf


from pyhocon.config_tree import ConfigTree


@dataclass
class FilterPair:
    name: str
    value: str


@dataclass
class Destination:
    table_name: str
    incremental_loading: bool = True
    primary_key: list[str] = None
    primary_key_existing: list[str] = None
    normalize_header: bool = True


@dataclass
class TimeRange:
    period: str
    date_from: str = ""
    date_to: str = ""


@dataclass
class ReportSettings:
    report_type: str = ""
    dimensions: list[str] = None
    metrics: list[str] = None
    filters: list[FilterPair] = None


class ConfigurationBase:

    @staticmethod
    def fromDict(parameters: dict):
        return dataconf.dict(parameters, Configuration, ignore_unexpected=True)
        pass


@dataclass
class Configuration(ConfigurationBase):
    input_variant: str
    destination: Destination
    time_range: TimeRange
    report_specification: ReportSettings = field(default_factory=lambda: ConfigTree({}))
    existing_report_id: str = ""
    debug: bool = False

    def __eq__(self, other):
        if self.input_variant == "existing_report_id":
            return self.existing_report_id == other.existing_report_id
        else:
            return self.report_specification == other.report_specification


if __name__ == '__main__':
    json_conf_1 = """
    {
      "input_variant": "report_specification",
      "existing_report_id": ""
      "time_range": {
        "period": "LAST_90_DAYS"
        "date_from": "yesterday"
        "date_to": "dneska"
      },
      "report_specification": {
        "report_type": "STANDARD",
        "dimensions": [
          "FILTER_ADVERTISER",
          "FILTER_ADVERTISER_NAME",
          "FILTER_BROWSER"
        ],
        "metrics": ["METRIC_CLICKS", "METRIC_COUNTERS", "METRIC_ENGAGEMENTS"],
        "filters": [ {
              "name": "FILTER_ADVERTISER",
              "value": "630317194"
            }]
      },
      "destination": {
        "table_name": "report_row_1.csv",
        "incremental_loading": true,
        "primary_key": [
          "FILTER_ADVERTISER",
          "FILTER_BROWSER"
        ]
      },
      "debug": true,
      "dalsi_parametr": 12
    }
    """

    json_conf_2 = """
    {
      "input_variant": "report_specification",
      "existing_report_id": ""
      "time_range": {
        "period": "LAST_90_DAYS"
        "date_from": "yesterday"
        "date_to": "dneska"
      },
      "report_specification": {
        "report_type": "STANDARD",
        "dimensions": [
          "FILTER_ADVERTISER",
          "FILTER_ADVERTISER_NAME",
          "FILTER_BROWSER"
        ],
        "metrics": ["METRIC_CLICKS", "METRIC_COUNTERS", "METRIC_ENGAGEMENTS"],
        "filters": [ {
              "name": "FILTER_ADVERTISER",
              "value": "630317194"
            }]
      },
      "destination": {
        "table_name": "report_row_1.csv",
        "incremental_loading": true,
        "primary_key": [
          "FILTER_ADVERTISER",
          "FILTER_BROWSER"
        ]
      },
      "debug": true,
      "dalsi_parametr": 12
    }
        """

    # cf1 = dataconf.loads(json_conf_1, Configuration)
    cf2 = dataconf.loads(json_conf_2, Configuration, ignore_unexpected=True)

    # print(f'Equality cf1 == cf2 {cf1 == cf2}')

    pars = {
        "input_variant": "report_specification",
        "time_range": {
            "period": "LAST_90_DAYS",
            "date_from": "yesterday",
            "date_to": "dneska"
        },
        "destination": {
            "table_name": "report_row_1.csv",
            "primary_key": [
                "FILTER_ADVERTISER",
                "FILTER_BROWSER"
            ],
            "incremental_loading": True,
        }
    }

    cf3 = Configuration.fromDict(pars)

    pass


================================================
File: src/google_dv360/__init__.py
================================================
from .client import GoogleDV360Client, GoogleDV360ClientException  # noqa F401

_filter_table = {
    "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_ID": "Active View: Custom Metric ID",
    "FILTER_ACTIVE_VIEW_CUSTOM_METRIC_NAME": "Active View: Custom Metric Name",
    "FILTER_ACTIVE_VIEW_EXPECTED_VIEWABILITY": "Active View Expected Viewability",
    "FILTER_ADVERTISER": "Advertiser ID",
    "FILTER_ADVERTISER_CURRENCY": "Advertiser Currency",
    "FILTER_ADVERTISER_INTEGRATION_CODE": "Advertiser Integration Code",
    "FILTER_ADVERTISER_INTEGRATION_STATUS": "Advertiser Status",
    "FILTER_ADVERTISER_NAME": "Advertiser",
    "FILTER_ADVERTISER_TIMEZONE": "Advertiser Time Zone",
    "FILTER_AD_POSITION": "Ad Position",
    "FILTER_AD_TYPE": "Ad Type",
    "FILTER_AGE": "Age",
    "FILTER_ALGORITHM": "Algorithm",
    "FILTER_ALGORITHM_ID": "Algorithm ID",
    "FILTER_AMP_PAGE_REQUEST": "AMP Page Request",
    "FILTER_ANONYMOUS_INVENTORY_MODELING": "Anonymous Inventory Modeling",
    "FILTER_APP_URL": "App/URL",
    "FILTER_APP_URL_EXCLUDED": "App/URL Excluded",
    "FILTER_ATTRIBUTED_USERLIST": "Attributed Userlist",
    "FILTER_ATTRIBUTED_USERLIST_COST": "Attributed Userlist Cost",
    "FILTER_ATTRIBUTED_USERLIST_TYPE": "Attributed Userlist Type",
    "FILTER_ATTRIBUTION_MODEL": "Attribution Model",
    "FILTER_AUDIENCE_LIST": "Audience List",
    "FILTER_AUDIENCE_LIST_COST": "Audience List Cost",
    "FILTER_AUDIENCE_LIST_TYPE": "Audience List Type",
    "FILTER_AUDIENCE_NAME": "Audience Name",
    "FILTER_AUDIENCE_TYPE": "Audience Type",
    "FILTER_AUDIO_FEED_TYPE_NAME": "Audio Feed Type",
    "FILTER_AUTHORIZED_SELLER_STATE": "Authorized Seller State",
    "FILTER_BILLABLE_OUTCOME": "Billable Outcome",
    "FILTER_BRAND_LIFT_TYPE": "Brand Lift Type",
    "FILTER_BROWSER": "Browser",
    "FILTER_BUDGET_SEGMENT_BUDGET": "Budget Segment Budget",
    "FILTER_BUDGET_SEGMENT_DESCRIPTION": "Budget Segment Name",
    "FILTER_BUDGET_SEGMENT_END_DATE": "Budget Segment End Date",
    "FILTER_BUDGET_SEGMENT_PACING_PERCENTAGE": "Budget Segment Pacing Percentage",
    "FILTER_BUDGET_SEGMENT_START_DATE": "Budget Segment Start Date",
    "FILTER_BUDGET_SEGMENT_TYPE": "Budget Type (Segment)",
    "FILTER_CAMPAIGN_DAILY_FREQUENCY": "Insertion Order Daily Frequency",
    "FILTER_CARRIER": "ISP or Carrier ID",
    "FILTER_CARRIER_NAME": "ISP or Carrier",
    "FILTER_CHANNEL_GROUPING": "Channel Grouping",
    "FILTER_CHANNEL_ID": "Channel ID",
    "FILTER_CHANNEL_NAME": "Channel",
    "FILTER_CHANNEL_TYPE": "Channel Type",
    "FILTER_CITY": "City ID",
    "FILTER_CITY_NAME": "City",
    "FILTER_CM360_PLACEMENT_ID": "CM360 Placement ID",
    "FILTER_COMPANION_CREATIVE_ID": "Companion Creative ID",
    "FILTER_COMPANION_CREATIVE_NAME": "Companion Creative",
    "FILTER_CONVERSION_AD_EVENT_TYPE": "Conversion Ad Event Type",
    "FILTER_CONVERSION_AD_EVENT_TYPE_ID": "Conversion Ad Event Type ID",
    "FILTER_CONVERSION_DELAY": "Time to Conversion",
    "FILTER_CONVERSION_SOURCE": "Conversion Source",
    "FILTER_CONVERSION_SOURCE_ID": "Conversion Source ID",
    "FILTER_COUNTRY": "Country",
    "FILTER_COUNTRY_ID": "Country",
    "FILTER_CREATIVE": "Creative",
    "FILTER_CREATIVE_ASSET": "Creative Asset",
    "FILTER_CREATIVE_ATTRIBUTE": "Creative Attributes",
    "FILTER_CREATIVE_HEIGHT": "Creative Height",
    "FILTER_CREATIVE_ID": "Creative ID",
    "FILTER_CREATIVE_INTEGRATION_CODE": "Creative Integration Code",
    "FILTER_CREATIVE_RENDERED_IN_AMP": "Creative Rendered in AMP",
    "FILTER_CREATIVE_SIZE": "Creative Size",
    "FILTER_CREATIVE_SOURCE": "Creative Source",
    "FILTER_CREATIVE_STATUS": "Creative Status",
    "FILTER_CREATIVE_TYPE": "Creative Type",
    "FILTER_CREATIVE_WIDTH": "Creative Width",
    "FILTER_DATA_PROVIDER": "Data Provider ID",
    "FILTER_DATA_PROVIDER_NAME": "Data Provider",
    "FILTER_DATA_SOURCE": "Data Source",
    "FILTER_DATE": "Date",
    "FILTER_DAY_OF_WEEK": "Day of Week",
    "FILTER_DETAILED_DEMOGRAPHICS": "Detailed Demographics",
    "FILTER_DETAILED_DEMOGRAPHICS_ID": "Detailed Demographics ID",
    "FILTER_DEVICE": "Device",
    "FILTER_DEVICE_MAKE": "Device Make",
    "FILTER_DEVICE_MODEL": "Device Model",
    "FILTER_DEVICE_TYPE": "Device Type",
    "FILTER_DFP_ORDER_ID": "DFP Insertion Order ID",
    "FILTER_DIGITAL_CONTENT_LABEL": "Digital Content Label",
    "FILTER_DMA": "DMA Code",
    "FILTER_DMA_NAME": "DMA",
    "FILTER_DOMAIN": "Domain",
    "FILTER_ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST": "Eligible Cookies on First-Party Audience List",
    "FILTER_ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST":
        "Eligible Cookies on Third-Party Audience List and Interest",
    "FILTER_EVENT_TYPE": "Event Type",
    "FILTER_EXCHANGE": "Exchange",
    "FILTER_EXCHANGE_CODE": "Exchange Code",
    "FILTER_EXCHANGE_ID": "Exchange ID",
    "FILTER_EXTENSION": "Asset",
    "FILTER_EXTENSION_ASSET": "Asset (upgraded)",
    "FILTER_EXTENSION_ASSET_STATUS": "Asset Status (upgraded)",
    "FILTER_EXTENSION_ASSET_TYPE": "Asset Type (upgraded)",
    "FILTER_EXTENSION_STATUS": "Asset Status",
    "FILTER_EXTENSION_TYPE": "Asset Type",
    "FILTER_FIRST_PARTY_AUDIENCE_LIST_COST": "First Party Audience List Cost",
    "FILTER_FIRST_PARTY_AUDIENCE_LIST_TYPE": "First Party Audience List Type",
    "FILTER_FLOODLIGHT_ACTIVITY": "Floodlight Activity",
    "FILTER_FLOODLIGHT_ACTIVITY_ID": "Floodlight Activity ID",
    "FILTER_FORMAT": "Format",
    "FILTER_GAM_INSERTION_ORDER": "DFP Insertion Order",
    "FILTER_GAM_LINE_ITEM": "DFP Line Item",
    "FILTER_GAM_LINE_ITEM_ID": "DFP Line Item ID",
    "FILTER_GENDER": "Gender",
    "FILTER_GMAIL_AGE": "Age",
    "FILTER_GMAIL_CITY": "City",
    "FILTER_GMAIL_COUNTRY": "Country",
    "FILTER_GMAIL_COUNTRY_NAME": "Country",
    "FILTER_GMAIL_DEVICE_TYPE": "Device Type",
    "FILTER_GMAIL_DEVICE_TYPE_NAME": "Device Type",
    "FILTER_GMAIL_GENDER": "Gender",
    "FILTER_GMAIL_REGION": "Region",
    "FILTER_GMAIL_REMARKETING_LIST": "Remarketing List",
    "FILTER_HOUSEHOLD_INCOME": "Household Income",
    "FILTER_IMPRESSION_COUNTING_METHOD": "Impression Counting Method",
    "FILTER_IMPRESSION_LOSS_REJECTION_REASON": "Rejection Reason",
    "FILTER_INSERTION_ORDER": "Insertion Order ID",
    "FILTER_INSERTION_ORDER_GOAL_TYPE": "Insertion Order Goal Type",
    "FILTER_INSERTION_ORDER_GOAL_VALUE": "Insertion Order Goal Value",
    "FILTER_INSERTION_ORDER_INTEGRATION_CODE": "Insertion Order Integration Code",
    "FILTER_INSERTION_ORDER_NAME": "Insertion Order",
    "FILTER_INSERTION_ORDER_STATUS": "Insertion Order Status",
    "FILTER_INTEREST": "Interest",
    "FILTER_INVENTORY_COMMITMENT_TYPE": "Inventory Commitment Type",
    "FILTER_INVENTORY_DELIVERY_METHOD": "Inventory Delivery Method",
    "FILTER_INVENTORY_FORMAT": "Format",
    "FILTER_INVENTORY_MEDIA_COST_TYPE": "Inventory Media Cost Type",
    "FILTER_INVENTORY_RATE_TYPE": "Inventory Rate Type",
    "FILTER_INVENTORY_SOURCE": "Inventory Source ID (Legacy)",
    "FILTER_INVENTORY_SOURCE_EXTERNAL_ID": "Inventory Source ID (external)",
    "FILTER_INVENTORY_SOURCE_GROUP": "Inventory Source Group",
    "FILTER_INVENTORY_SOURCE_GROUP_ID": "Inventory Source Group ID",
    "FILTER_INVENTORY_SOURCE_ID": "Inventory Source ID",
    "FILTER_INVENTORY_SOURCE_NAME": "Inventory Source",
    "FILTER_INVENTORY_SOURCE_TYPE": "Inventory Source Type",
    "FILTER_KEYWORD": "Keyword",
    "FILTER_LIFE_EVENT": "Life Event",
    "FILTER_LIFE_EVENTS": "Life Events",
    "FILTER_LINE_ITEM": "Line Item ID",
    "FILTER_LINE_ITEM_BUDGET": "Line Item Budget",
    "FILTER_LINE_ITEM_DAILY_FREQUENCY": "Line Item Daily Frequency",
    "FILTER_LINE_ITEM_END_DATE": "Line Item End Date",
    "FILTER_LINE_ITEM_INTEGRATION_CODE": "Line Item Integration Code",
    "FILTER_LINE_ITEM_LIFETIME_FREQUENCY": "Line Item Lifetime Frequency",
    "FILTER_LINE_ITEM_NAME": "Line Item",
    "FILTER_LINE_ITEM_PACING_PERCENTAGE": "Line Item Pacing Percentage",
    "FILTER_LINE_ITEM_START_DATE": "Line Item Start Date",
    "FILTER_LINE_ITEM_STATUS": "Line Item Status",
    "FILTER_LINE_ITEM_TYPE": "Line Item Type",
    "FILTER_MATCHED_GENRE_TARGET": "Matched Genre Target",
    "FILTER_MATCH_RATIO": "Match Ratio",
    "FILTER_MEASUREMENT_SOURCE": "Measurement Source",
    "FILTER_MEDIA_PLAN": "Campaign ID",
    "FILTER_MEDIA_PLAN_NAME": "Campaign",
    "FILTER_MEDIA_TYPE": "Media Type",
    "FILTER_MOBILE_GEO": "Business Chain",
    "FILTER_MONTH": "Month",
    "FILTER_MRAID_SUPPORT": "MRAID Support",
    "FILTER_NIELSEN_AGE": "Age",
    "FILTER_NIELSEN_COUNTRY_CODE": "Country",
    "FILTER_NIELSEN_DATE_RANGE": "Date Range for Cumulative Metrics",
    "FILTER_NIELSEN_DEVICE_ID": "Device ID",
    "FILTER_NIELSEN_GENDER": "Gender",
    "FILTER_NIELSEN_RESTATEMENT_DATE": "Restatement Date",
    "FILTER_OMID_CAPABLE": "OM SDK Capable",
    "FILTER_OM_SDK_AVAILABLE": "OM SDK Available",
    "FILTER_ORDER_ID": "Order ID",
    "FILTER_OS": "Operating System",
    "FILTER_PAGE_CATEGORY": "Category",
    "FILTER_PAGE_LAYOUT": "Environment",
    "FILTER_PARENTAL_STATUS": "Parental Status",
    "FILTER_PARTNER": "Partner ID",
    "FILTER_PARTNER_CURRENCY": "Partner Currency",
    "FILTER_PARTNER_NAME": "Partner",
    "FILTER_PARTNER_STATUS": "Partner Status",
    "FILTER_PATH_EVENT_INDEX": "Path Event Index",
    "FILTER_PATH_PATTERN_ID": "Path Pattern ID",
    "FILTER_PLACEMENT_ALL_YOUTUBE_CHANNELS": "Placement (All YouTube Channels)",
    "FILTER_PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS": "Placement Name (All YouTube Channels)",
    "FILTER_PLATFORM": "Platform",
    "FILTER_PLAYBACK_METHOD": "Playback Method",
    "FILTER_POSITION_IN_CONTENT": "Position in Content",
    "FILTER_PUBLIC_INVENTORY": "Public Inventory",
    "FILTER_PUBLISHER_PROPERTY": "Publisher Property",
    "FILTER_PUBLISHER_PROPERTY_ID": "Publisher Property ID",
    "FILTER_PUBLISHER_PROPERTY_SECTION": "Publisher Property Section",
    "FILTER_PUBLISHER_PROPERTY_SECTION_ID": "Publisher Property Section ID",
    "FILTER_PUBLISHER_TRAFFIC_SOURCE": "Publisher Traffic Source",
    "FILTER_QUARTER": "Quarter",
    "FILTER_REFRESHED_AD_NAME": "Refreshed Ad",
    "FILTER_REFUND_REASON": "Refund Reason",
    "FILTER_REGION": "Region ID",
    "FILTER_REGION_NAME": "Region",
    "FILTER_REMARKETING_LIST": "Remarketing List",
    "FILTER_REWARDED": "Rewarded",
    "FILTER_SENSITIVE_CATEGORY": "Sensitive Category",
    "FILTER_SERVED_PIXEL_DENSITY": "Served Pixel Density",
    "FILTER_SITE_ID": "App/URL ID",
    "FILTER_SITE_LANGUAGE": "Language",
    "FILTER_SKIPPABLE_SUPPORT": "Video Skippable Support",
    "FILTER_TARGETED_DATA_PROVIDERS": "Targeted Data Providers",
    "FILTER_TARGETED_USER_LIST": "Attributed Userlist ID",
    "FILTER_TARGETING_EXPANSION": "Targeting Expansion",
    "FILTER_THIRD_PARTY_AUDIENCE_LIST_COST": "Third Party Audience List Cost",
    "FILTER_THIRD_PARTY_AUDIENCE_LIST_TYPE": "Third Party Audience List Type",
    "FILTER_TIME_OF_DAY": "Time of Day",
    "FILTER_TRUEVIEW_AD": "YouTube Ad",
    "FILTER_TRUEVIEW_AD_GROUP": "YouTube Ad Group",
    "FILTER_TRUEVIEW_AD_GROUP_AD_ID": "YouTube Ad ID",
    "FILTER_TRUEVIEW_AD_GROUP_ID": "YouTube Ad Group ID",
    "FILTER_TRUEVIEW_AD_TYPE_NAME": "YouTube Ad Type",
    "FILTER_TRUEVIEW_AGE": "Age (YouTube)",
    "FILTER_TRUEVIEW_CATEGORY": "Category",
    "FILTER_TRUEVIEW_CITY": "City",
    "FILTER_TRUEVIEW_CLICK_TYPE_NAME": "Click Type",
    "FILTER_TRUEVIEW_CONVERSION_TYPE": "Conversion Type",
    "FILTER_TRUEVIEW_COUNTRY": "Country (YouTube)",
    "FILTER_TRUEVIEW_CUSTOM_AFFINITY": "Custom Affinity",
    "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS": "Detailed Demographics",
    "FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS_ID": "Detailed Demographics ID",
    "FILTER_TRUEVIEW_DMA": "DMA ID",
    "FILTER_TRUEVIEW_DMA_NAME": "DMA",
    "FILTER_TRUEVIEW_GENDER": "Gender",
    "FILTER_TRUEVIEW_HOUSEHOLD_INCOME": "Household Income",
    "FILTER_TRUEVIEW_IAR_AGE": "Age",
    "FILTER_TRUEVIEW_IAR_CATEGORY": "Category",
    "FILTER_TRUEVIEW_IAR_CITY": "City",
    "FILTER_TRUEVIEW_IAR_COUNTRY": "Country",
    "FILTER_TRUEVIEW_IAR_COUNTRY_NAME": "Country",
    "FILTER_TRUEVIEW_IAR_GENDER": "Gender",
    "FILTER_TRUEVIEW_IAR_INTEREST": "Interest",
    "FILTER_TRUEVIEW_IAR_LANGUAGE": "Language",
    "FILTER_TRUEVIEW_IAR_PARENTAL_STATUS": "Parental Status",
    "FILTER_TRUEVIEW_IAR_REGION_NAME": "Region",
    "FILTER_TRUEVIEW_IAR_REMARKETING_LIST": "Remarketing List ID",
    "FILTER_TRUEVIEW_IAR_TIME_OF_DAY": "Time of Day",
    "FILTER_TRUEVIEW_IAR_YOUTUBE_CHANNEL": "YouTube Channel",
    "FILTER_TRUEVIEW_IAR_YOUTUBE_VIDEO": "YouTube Video",
    "FILTER_TRUEVIEW_IAR_ZIPCODE": "Zip Code",
    "FILTER_TRUEVIEW_INTEREST": "Interest",
    "FILTER_TRUEVIEW_KEYWORD": "Keyword",
    "FILTER_TRUEVIEW_PARENTAL_STATUS": "Parental Status",
    "FILTER_TRUEVIEW_PLACEMENT": "Placement (Managed)",
    "FILTER_TRUEVIEW_PLACEMENT_ID": "Placement ID (Managed)",
    "FILTER_TRUEVIEW_REGION": "Region ID",
    "FILTER_TRUEVIEW_REGION_NAME": "Region",
    "FILTER_TRUEVIEW_REMARKETING_LIST": "Remarketing List ID",
    "FILTER_TRUEVIEW_REMARKETING_LIST_NAME": "Remarketing List",
    "FILTER_TRUEVIEW_TARGETING_EXPANSION": "Optimized Targeting",
    "FILTER_TRUEVIEW_URL": "Placement (All)",
    "FILTER_TRUEVIEW_ZIPCODE": "Zipcode",
    "FILTER_USER_LIST": "Audience List ID",
    "FILTER_USER_LIST_FIRST_PARTY": "First Party Audience List ID",
    "FILTER_USER_LIST_FIRST_PARTY_NAME": "First Party Audience List",
    "FILTER_USER_LIST_THIRD_PARTY": "Third Party Audience List ID",
    "FILTER_USER_LIST_THIRD_PARTY_NAME": "Third Party Audience List",
    "FILTER_VARIANT_ID": "Variant ID",
    "FILTER_VARIANT_NAME": "Variant Name",
    "FILTER_VARIANT_VERSION": "Variant Version",
    "FILTER_VENDOR_MEASUREMENT_MODE": "Vendor Measurement Mode",
    "FILTER_VERIFICATION_AUDIBILITY_COMPLETE": "Audibility At Complete",
    "FILTER_VERIFICATION_AUDIBILITY_START": "Audibility At Start",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE": "Verification Video Player Size",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE": "Video Player Size at Completion",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE": "Video Player Size at First Quartile",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT": "Video Player Size at Midpoint",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_START": "Video Player Size at Start",
    "FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE": "Video Player Size at Third Quartile",
    "FILTER_VERIFICATION_VIDEO_POSITION": "Verification Video Position",
    "FILTER_VERIFICATION_VIDEO_RESIZED": "Video Resized",
    "FILTER_VIDEO_AD_POSITION_IN_STREAM": "Video Ad Position In Stream",
    "FILTER_VIDEO_COMPANION_CREATIVE_SIZE": "Companion Creative Size",
    "FILTER_VIDEO_CONTENT_DURATION": "Video Content Duration",
    "FILTER_VIDEO_CONTENT_LIVE_STREAM": "Video Content Live Stream",
    "FILTER_VIDEO_CONTINUOUS_PLAY": "Video Continuous Play",
    "FILTER_VIDEO_CREATIVE_DURATION": "Video Creative Duration",
    "FILTER_VIDEO_CREATIVE_DURATION_SKIPPABLE": "Video Creative Duration (Skippable)",
    "FILTER_VIDEO_DURATION": "Video Duration",
    "FILTER_VIDEO_DURATION_SECONDS": "Max Video Duration",
    "FILTER_VIDEO_DURATION_SECONDS_RANGE": "Max Video Duration Range",
    "FILTER_VIDEO_FORMAT_SUPPORT": "Video Format Support",
    "FILTER_VIDEO_PLAYER_SIZE": "Video Player Size",
    "FILTER_VIDEO_RATING_TIER": "Digital Content Label",
    "FILTER_VIDEO_SKIPPABLE_SUPPORT": "Video Skippable Support",
    "FILTER_WEEK": "Week",
    "FILTER_YEAR": "Year",
    "FILTER_YOUTUBE_ADAPTED_AUDIENCE_LIST": "YouTube Adapted Audience List",
    "FILTER_YOUTUBE_AD_VIDEO": "YouTube Ad Video",
    "FILTER_YOUTUBE_AD_VIDEO_ID": "YouTube Ad Video ID",
    "FILTER_YOUTUBE_CHANNEL": "YouTube Channel",
    "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER": "Advertiser",
    "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER": "Insertion Order",
    "FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER": "Partner",
    "FILTER_YOUTUBE_VIDEO": "YouTube Video",
    "FILTER_ZIP_CODE": "Zip Code ID",
    "FILTER_ZIP_POSTAL_CODE": "Zip Code"
}


def translate_filters(filter_constants: list[str]) -> list[str]:
    return [_filter_table.get(item) for item in filter_constants]


def get_filter_table() -> dict:
    return _filter_table


================================================
File: src/google_dv360/client.py
================================================
import logging
import time
from typing import List, Tuple

import dateparser
from google_auth_oauthlib.flow import Flow
from googleapiclient import discovery
from googleapiclient.errors import HttpError
from keboola.component.exceptions import UserException


class GoogleDV360ClientException(UserException):
    pass


def get_date_period_converted(period_from: str, period_to: str) -> Tuple[dict, dict]:
    """
    Returns given period parameters in datetime format, or next step in back-fill mode
    along with generated last state for next iteration.

    :param period_from: str YYYY-MM-DD or relative string supported by date parser e.g. 5 days ago
    :param period_to: str YYYY-MM-DD or relative string supported by date parser e.g. 5 days ago

    :return: start_date: datetime, end_date: datetime
    """

    start_date_form = dateparser.parse(period_from)
    end_date_form = dateparser.parse(period_to)
    if not start_date_form or not end_date_form:
        raise UserException("Error with dates, make sure both start and end date are defined properly")
    day_diff = (end_date_form - start_date_form).days
    if day_diff < 0:
        raise UserException("start_date cannot exceed end_date.")

    start = dict(
        year=start_date_form.year,
        month=start_date_form.month,
        day=start_date_form.day)

    end = dict(
        year=end_date_form.year,
        month=end_date_form.month,
        day=end_date_form.day)

    return start, end


class GoogleDV360Client:
    """
    Instance of this class provides a service object that is responsible for all communication
    to DV360 service.
    """

    def __init__(self, client_id: str, app_secret: str, token_data: dict):
        # oauth_credentials.appSecret .. app_secret,
        # oauth_credentials.appKey .. client_id a
        # oauth_credentials.data .. token_data
        self.service = None
        token_response = token_data
        token_response['expires_at'] = 22222
        client_secrets = {
            "web": {
                "client_id": client_id,
                "client_secret": app_secret,
                "redirect_uris": ["https://www.example.com/oauth2callback"],
                "auth_uri": "https://oauth2.googleapis.com/auth",
                "token_uri": "https://oauth2.googleapis.com/token"
            }
        }
        scopes = ['https://www.googleapis.com/auth/doubleclickbidmanager']
        credentials = Flow.from_client_config(client_secrets, scopes=scopes, token=token_response).credentials
        discovery_url = 'https://doubleclickbidmanager.googleapis.com/$discovery/rest?version=v2'
        # Build the API service.
        self.service = discovery.build(
            'doubleclickbidmanager',
            'v2',
            discoveryServiceUrl=discovery_url,
            credentials=credentials)

    def test_connection(self):
        # TODO: implement
        pass

    def create_report(self,
                      report_name: str,
                      report_type: str,
                      dimensions: List[str],
                      metrics: List[str],
                      filters: List[Tuple[str, str]]) -> str:
        """

        Args:
            report_name: A query name that will be stored in dv360 service
            report_type: One of dv360 predefined report types
            dimensions: Selection of dimensions (group by filters in dv360 terminology) to include
            metrics: Selection dv360 metrics to include
            filters: List of filter pairs to limit source data

        Returns: ID of created report (internally called query)

        """
        body = {
            "metadata": {
                "title": report_name,
                "format": "CSV",
                "dataRange": {
                    "range": "PREVIOUS_DAY"
                }
            },
            "params": {
                "type": report_type,
                "groupBys": dimensions,
                "filters": [dict(type=f[0], value=f[1]) for f in filters],
                "metrics": metrics
            },
            "schedule": {
                "frequency": "ONE_TIME"
            }
        }
        m = self.service.queries().create(body=body)
        try:
            response = m.execute()
        except Exception as ex:
            if hasattr(ex, 'reason'):
                raise UserException(ex.reason)
            raise ex
        report_id = response['queryId']
        return report_id

    def run_report(self, report_id: str, data_range: str, date_from=None, date_to=None):
        """ Run a specific query within specified date range.

        Args:
            report_id: existing query id (corresponds to report ID from dv360 console)
            data_range: one of predefined ranges or a custom range
            date_from: starting date specification for custom data range
            date_to: ending date specification for custom data range

        Returns: ID of started report run

        """
        body = {
            "dataRange": {
                "range": data_range
            }
        }
        if data_range == 'CUSTOM_DATES':
            body["dataRange"]["customStartDate"], body["dataRange"]["customEndDate"] = get_date_period_converted(
                date_from, date_to)
        try:
            m = self.service.queries().run(body=body, queryId=report_id)
            response = m.execute()
            run_id = response['key']['reportId']
            logging.info(f"Running query : {report_id}:{run_id}")
            return run_id
        except HttpError as e:
            if 400 <= e.status_code < 500:
                raise GoogleDV360ClientException(e.reason) from e
            else:
                raise e

    def wait_report(self, report_id: str, run_id: str) -> dict:
        """ Method keeps querying state of

        Args:
            report_id:
            run_id:

        Returns: A report object

        Raises:

        """
        m = self.service.queries().reports().get(queryId=report_id, reportId=run_id)
        while True:  # TODO: consider some timeout - currently we terminate on 'DONE' or abort on error
            response = m.execute()
            state = response['metadata']['status']['state']
            logging.info(f"Checking report state : {state}")
            if state == 'DONE':
                return response
            if state == 'FAILED':
                report_type = response['params']['type']
                raise GoogleDV360ClientException(f'report ({report_type}) failed: {response["metadata"]}')
            time.sleep(30)

    def list_queries(self) -> list[(str, str)]:
        """ List all queries associated with authorized user.

        Returns: list of tuples - (query id, query name)

        """
        page_token = None
        query_list = []
        while True:
            response = self.service.queries().list(pageSize=100, orderBy='queryId desc', pageToken=page_token).execute()
            if 'queries' in response:
                query_list.extend([(query['queryId'], query['metadata']['title']) for query in response['queries']])
                page_token = response.get('nextPageToken')
                if not page_token:
                    break
            else:
                break
        return query_list

    def get_query(self, query_id: str) -> object | None:
        """ Search for specific query

        If query exists corresponding dv360 object will be returned.

        Args:
            query_id: Query ID to search for

        Returns: dv360 query object or None

        """
        try:
            response = self.service.queries().get(queryId=query_id).execute()
            return response
        except Exception:
            return None
        pass

    def delete_query(self, query_id: str):
        try:
            self.service.queries().delete(queryId=query_id).execute()
        except Exception:
            pass


================================================
File: tests/__init__.py
================================================
import sys
import os
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../src")

================================================
File: tests/test_component.py
================================================
'''
Created on 12. 11. 2018

@author: esner
'''
import unittest
import mock
import os
from freezegun import freeze_time

from component import Component


class TestComponent(unittest.TestCase):

    # set global time to 2010-10-10 - affects functions like datetime.now()
    @freeze_time("2010-10-10")
    # set KBC_DATADIR env to non-existing dir
    @mock.patch.dict(os.environ, {'KBC_DATADIR': './non-existing-dir'})
    def test_run_no_cfg_fails(self):
        with self.assertRaises(ValueError):
            comp = Component()
            comp.run()


if __name__ == "__main__":
    # import sys;sys.argv = ['', 'Test.testName']
    unittest.main()


================================================
File: .github/workflows/push.yml
================================================
name: Keboola Component Build & Deploy Pipeline
on:
  push:
    branches:
      - 'feature/*'
      - 'bug/*'
    tags:
      - '*' # Skip the workflow on the main branch without tags

concurrency: ci-${{ github.ref }} # to avoid tag collisions in the ECR
env:
  # repository variables:
  KBC_DEVELOPERPORTAL_APP: "kds-team.ex-dv360" # replace with your component id
  KBC_DEVELOPERPORTAL_VENDOR: "kds-team" # replace with your vendor
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  KBC_DEVELOPERPORTAL_USERNAME: "kds-team+github"

  # repository secrets:
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }} # recommended for pushing to ECR
  KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}

  # (Optional) Test KBC project: https://connection.keboola.com/admin/projects/0000
  KBC_TEST_PROJECT_CONFIGS: "" # space separated list of config ids
  KBC_STORAGE_TOKEN: ${{ secrets.KBC_STORAGE_TOKEN }} # required for running KBC tests

jobs:
  push_event_info:
    name: Push Event Info
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: ${{ steps.tag.outputs.app_image_tag }}
      is_semantic_tag: ${{ steps.tag.outputs.is_semantic_tag }}
      is_default_branch: ${{ steps.default_branch.outputs.is_default_branch }}
      is_deploy_ready: ${{ steps.deploy_ready.outputs.is_deploy_ready }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch all branches from remote repository
        run: git fetch --prune --unshallow --tags -f

      - name: Get current branch name
        id: current_branch
        run: |
          if [[ ${{ github.ref }} != "refs/tags/"* ]]; then
            branch_name=${{ github.ref_name }}
            echo "branch_name=$branch_name" | tee -a $GITHUB_OUTPUT
          else
            raw=$(git branch -r --contains ${{ github.ref }})
            branch="$(echo ${raw//origin\//} | tr -d '\n')"
            echo "branch_name=$branch" | tee -a $GITHUB_OUTPUT
          fi

      - name: Is current branch the default branch
        id: default_branch
        run: |
          echo "default_branch='${{ github.event.repository.default_branch }}'"
          if [ "${{ github.event.repository.default_branch }}" = "${{ steps.current_branch.outputs.branch_name }}" ]; then
             echo "is_default_branch=true" | tee -a $GITHUB_OUTPUT
          else
             echo "is_default_branch=false" | tee -a $GITHUB_OUTPUT
          fi

      - name: Set image tag
        id: tag
        run: |
          TAG="${GITHUB_REF##*/}"
          IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
          echo "is_semantic_tag=$IS_SEMANTIC_TAG" | tee -a $GITHUB_OUTPUT
          echo "app_image_tag=$TAG" | tee -a $GITHUB_OUTPUT

      - name: Deploy-Ready check
        id: deploy_ready
        run: |
          if [[ "${{ steps.default_branch.outputs.is_default_branch }}" == "true" \
            && "${{ github.ref }}" == refs/tags/* \
            && "${{ steps.tag.outputs.is_semantic_tag }}" == "true" ]]; then
              echo "is_deploy_ready=true" | tee -a $GITHUB_OUTPUT
          else
              echo "is_deploy_ready=false" | tee -a $GITHUB_OUTPUT
          fi

  build:
    name: Docker Image Build
    runs-on: ubuntu-latest
    needs:
      - push_event_info
    env:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.KBC_DEVELOPERPORTAL_APP }}:latest
          outputs: type=docker,dest=/tmp/${{ env.KBC_DEVELOPERPORTAL_APP }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          path: /tmp/${{ env.KBC_DEVELOPERPORTAL_APP }}.tar

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs:
      - push_event_info
      - build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          path: /tmp

      - name: Load Image & Run Tests
        run: |
          docker load --input /tmp/${{ env.KBC_DEVELOPERPORTAL_APP }}.tar
          docker image ls -a
          docker run ${{ env.KBC_DEVELOPERPORTAL_APP }}:latest flake8 . --config=flake8.cfg
          echo "Running unit-tests..."
          docker run ${{ env.KBC_DEVELOPERPORTAL_APP }}:latest python -m unittest discover

  tests-kbc:
    name: Run KBC Tests
    needs:
      - push_event_info
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment variables
        run: |
          echo "KBC_TEST_PROJECT_CONFIGS=${KBC_TEST_PROJECT_CONFIGS}" >> $GITHUB_ENV
          echo "KBC_STORAGE_TOKEN=${{ secrets.KBC_STORAGE_TOKEN }}" >> $GITHUB_ENV

      - name: Run KBC test jobs
        if: env.KBC_TEST_PROJECT_CONFIGS != '' && env.KBC_STORAGE_TOKEN != ''
        uses: keboola/action-run-configs-parallel@master
        with:
          token: ${{ secrets.KBC_STORAGE_TOKEN }}
          componentId: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          tag: ${{ needs.push_event_info.outputs.app_image_tag }}
          configs: ${{ env.KBC_TEST_PROJECT_CONFIGS }}

  push:
    name: Docker Image Push
    runs-on: ubuntu-latest
    needs:
      - push_event_info
      - tests
      - tests-kbc
    env:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          path: /tmp

      - name: Load Image & Run Tests
        run: |
          docker load --input /tmp/${{ env.KBC_DEVELOPERPORTAL_APP }}.tar
          docker image ls -a

      - name: Docker login
        if: env.DOCKERHUB_TOKEN
        run: docker login --username "${{ env.DOCKERHUB_USER }}" --password "${{ env.DOCKERHUB_TOKEN }}"

      - name: Push image to ECR
        uses: keboola/action-push-to-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.push_event_info.outputs.app_image_tag }}
          push_latest: ${{ needs.push_event_info.outputs.is_deploy_ready }}
          source_image: ${{ env.KBC_DEVELOPERPORTAL_APP }}

  deploy:
    name: Deploy to KBC
    env:
      KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
    needs:
      - push_event_info
      - build
      - push
    if: needs.push_event_info.outputs.is_deploy_ready == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set Developer Portal Tag
        uses: keboola/action-set-tag-developer-portal@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.push_event_info.outputs.app_image_tag }}

  update_developer_portal_properties:
    name: Developer Portal Properties Update
    env:
      KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
    needs:
      - push_event_info
      - build
      - push
    runs-on: ubuntu-latest
    if: needs.push_event_info.outputs.is_deploy_ready == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update developer portal properties
        run: |
          chmod +x scripts/developer_portal/*.sh
          scripts/developer_portal/update_properties.sh

