Directory structure:
└── keboola-ex-google-ads/
    ├── README.md
    ├── Dockerfile
    ├── LICENSE
    ├── composer.json
    ├── composer.lock
    ├── docker-compose.yml
    ├── phpcs.xml
    ├── phpstan-baseline.neon
    ├── phpstan.neon
    ├── phpunit.xml.dist
    ├── .dockerignore
    ├── .env.dist
    ├── docker/
    │   ├── composer-install.sh
    │   └── php-prod.ini
    ├── src/
    │   ├── Component.php
    │   ├── Extractor.php
    │   ├── GetAccountHierarchy.php
    │   ├── run.php
    │   └── Configuration/
    │       ├── Config.php
    │       ├── ConfigActionDefinition.php
    │       └── ConfigDefinition.php
    ├── tests/
    │   ├── functional/
    │   │   ├── DatadirTest.php
    │   │   ├── customer-id-with-dash/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── empty-app/
    │   │   │   ├── expected-code
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               └── .gitkeep
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── empty-response/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               └── customer.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── error-invalid-credentials/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stderr
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               └── .gitkeep
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── error-list-account-invalid-credentials/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stderr
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               └── .gitkeep
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── error-wrong-primary-keys/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stderr
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               └── report-test-report.csv
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── error-wrong-query/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stderr
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               └── customer.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── get-removed-campaigns-with-no-dates/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── invalid-customer-id/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stderr
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               └── .gitkeep
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── simple-run/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── simple-run-with-debug-logging/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── setUp.php
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── simple-run-with-primary-keys/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   ├── skip-already-downloaded-customer/
    │   │   │   ├── expected-code
    │   │   │   ├── expected-stdout
    │   │   │   ├── expected/
    │   │   │   │   └── data/
    │   │   │   │       └── out/
    │   │   │   │           ├── files/
    │   │   │   │           │   └── .gitkeep
    │   │   │   │           └── tables/
    │   │   │   │               ├── campaign.csv
    │   │   │   │               ├── campaign.csv.manifest
    │   │   │   │               ├── customer.csv
    │   │   │   │               ├── customer.csv.manifest
    │   │   │   │               ├── report-test-report.csv
    │   │   │   │               └── report-test-report.csv.manifest
    │   │   │   └── source/
    │   │   │       └── data/
    │   │   │           └── config.json
    │   │   └── warn-permission-denied/
    │   │       ├── expected-code
    │   │       ├── expected-stderr
    │   │       ├── expected-stdout
    │   │       ├── expected/
    │   │       │   └── data/
    │   │       │       └── out/
    │   │       │           ├── files/
    │   │       │           │   └── .gitkeep
    │   │       │           └── tables/
    │   │       │               ├── campaign.csv
    │   │       │               ├── campaign.csv.manifest
    │   │       │               ├── customer.csv
    │   │       │               ├── customer.csv.manifest
    │   │       │               ├── report-test-report.csv
    │   │       │               └── report-test-report.csv.manifest
    │   │       └── source/
    │   │           └── data/
    │   │               └── config.json
    │   └── phpunit/
    │       ├── ConfigTest.php
    │       ├── GetAccountHierarchyTest.php
    │       └── bootstrap.php
    └── .github/
        └── workflows/
            └── push.yml

================================================
File: README.md
================================================
# Google Ads Extractor

This extractor allows you to import data from Google Ads. If you do not have a Google Ads manager account, follow this [guide](https://support.google.com/google-ads/answer/7459399?hl=en) to set it up.

# Example configuration
```json
{
  "parameters": {
    "customerId": "111111111",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "developertoken"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "{\"access_token\": ...}",
        "#appSecret": "appsecret",
        "appKey": "appkey"
      }
    }
  }
}
```

## Development
 
Clone this repository and init the workspace with following command:

```shell
git clone https://github.com/keboola/ex-google-ads.git
cd ex-google-ads
docker-compose build
docker-compose run --rm dev composer install --no-scripts
```

Set up envs and fill it with credentials:
```shell
cp .env.dist .env
```

Run the test suite using this command:
```shell
docker-compose run --rm dev composer tests
```
 
# Integration

For information about deployment and integration with KBC, please refer to the [deployment section of developers documentation](https://developers.keboola.com/extend/component/deployment/) 

## License

MIT licensed, see [LICENSE](./LICENSE) file.



================================================
File: Dockerfile
================================================
FROM php:8.2-cli-buster

ARG COMPOSER_FLAGS="--prefer-dist --no-interaction"
ARG DEBIAN_FRONTEND=noninteractive
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_PROCESS_TIMEOUT 3600

WORKDIR /code/

COPY docker/php-prod.ini /usr/local/etc/php/php.ini
COPY docker/composer-install.sh /tmp/composer-install.sh

RUN apt-get update && apt-get install -y --no-install-recommends \
        git \
        locales \
        unzip \
	&& rm -r /var/lib/apt/lists/* \
	&& sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
	&& locale-gen \
	&& chmod +x /tmp/composer-install.sh \
	&& /tmp/composer-install.sh

# Install and configure the C implementation of Protobuf extension if needed.
RUN pecl install protobuf-3.19.4; echo 'extension=protobuf.so' >> $PHP_INI_DIR/conf.d/protobuf.ini;

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

## Composer - deps always cached unless changed
# First copy only composer files
COPY composer.* /code/

# Download dependencies, but don't run scripts or init autoloaders as the app is missing
RUN composer install $COMPOSER_FLAGS --no-scripts --no-autoloader

# Copy rest of the app
COPY . /code/

# Run normal composer - all deps are cached already
RUN composer install $COMPOSER_FLAGS

CMD ["php", "/code/src/run.php"]



================================================
File: LICENSE
================================================
MIT License

Copyright (c) Keboola :(){:|:&};: s.r.o.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
File: composer.json
================================================
{
    "name": "keboola/my-component",
    "description": "MyComponent description",
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "ext-json": "*",
        "google/gax": "^1.24",
        "google/protobuf": "^3.25",
        "googleads/google-ads-php": "^26.1",
        "guzzlehttp/guzzle": "^7.8",
        "keboola/csv": "^4.0",
        "keboola/php-component": "^9.4",
        "keboola/retry": "^0.5.1",
        "psr/log": "^3.0",
        "symfony/config": "^6.3"
    },
    "require-dev": {
        "keboola/coding-standard": "^15.0",
        "keboola/datadir-tests": "^5.6",
        "keboola/php-temp": "^2.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "^9.6",
        "symfony/process": "^6.3",
        "vlucas/phpdotenv": "^5.6"
    },
    "autoload": {
        "psr-4": {
            "Keboola\\GoogleAds\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Keboola\\GoogleAds\\Tests\\": "tests/phpunit/",
            "Keboola\\GoogleAds\\FunctionalTests\\": "tests/functional/"
        }
    },
    "scripts": {
        "tests-phpunit": "phpunit",
        "tests-datadir": "phpunit tests/functional",
        "tests": [
            "@tests-phpunit",
            "@tests-datadir"
        ],

        "phpstan": "phpstan analyse ./src ./tests --level=max --no-progress -c phpstan.neon",
        "phpcs": "phpcs -n --ignore=vendor --extensions=php .",
        "phpcbf": "phpcbf -n --ignore=vendor --extensions=php .",
        "phplint": "parallel-lint -j 10 --exclude vendor .",
        "build": [
            "@phplint",
            "@phpcs",
            "@tests"
        ],
        "ci": [
            "@composer validate --no-check-publish --no-check-all",
            "@build"
        ]
    },
    "config": {
        "sort-packages": true,
        "optimize-autoloader": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    }
}



================================================
File: composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "833c2fdf6d2224397289b182324b7217",
    "packages": [
        {
            "name": "brick/math",
            "version": "0.12.3",
            "source": {
                "type": "git",
                "url": "https://github.com/brick/math.git",
                "reference": "866551da34e9a618e64a819ee1e01c20d8a588ba"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/brick/math/zipball/866551da34e9a618e64a819ee1e01c20d8a588ba",
                "reference": "866551da34e9a618e64a819ee1e01c20d8a588ba",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "php-coveralls/php-coveralls": "^2.2",
                "phpunit/phpunit": "^10.1",
                "vimeo/psalm": "6.8.8"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Brick\\Math\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Arbitrary-precision arithmetic library",
            "keywords": [
                "Arbitrary-precision",
                "BigInteger",
                "BigRational",
                "arithmetic",
                "bigdecimal",
                "bignum",
                "bignumber",
                "brick",
                "decimal",
                "integer",
                "math",
                "mathematics",
                "rational"
            ],
            "support": {
                "issues": "https://github.com/brick/math/issues",
                "source": "https://github.com/brick/math/tree/0.12.3"
            },
            "funding": [
                {
                    "url": "https://github.com/BenMorel",
                    "type": "github"
                }
            ],
            "time": "2025-02-28T13:11:00+00:00"
        },
        {
            "name": "firebase/php-jwt",
            "version": "v6.11.0",
            "source": {
                "type": "git",
                "url": "https://github.com/firebase/php-jwt.git",
                "reference": "8f718f4dfc9c5d5f0c994cdfd103921b43592712"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/firebase/php-jwt/zipball/8f718f4dfc9c5d5f0c994cdfd103921b43592712",
                "reference": "8f718f4dfc9c5d5f0c994cdfd103921b43592712",
                "shasum": ""
            },
            "require": {
                "php": "^8.0"
            },
            "require-dev": {
                "guzzlehttp/guzzle": "^7.4",
                "phpspec/prophecy-phpunit": "^2.0",
                "phpunit/phpunit": "^9.5",
                "psr/cache": "^2.0||^3.0",
                "psr/http-client": "^1.0",
                "psr/http-factory": "^1.0"
            },
            "suggest": {
                "ext-sodium": "Support EdDSA (Ed25519) signatures",
                "paragonie/sodium_compat": "Support EdDSA (Ed25519) signatures when libsodium is not present"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Firebase\\JWT\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Neuman Vong",
                    "email": "neuman+pear@twilio.com",
                    "role": "Developer"
                },
                {
                    "name": "Anant Narayanan",
                    "email": "anant@php.net",
                    "role": "Developer"
                }
            ],
            "description": "A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.",
            "homepage": "https://github.com/firebase/php-jwt",
            "keywords": [
                "jwt",
                "php"
            ],
            "support": {
                "issues": "https://github.com/firebase/php-jwt/issues",
                "source": "https://github.com/firebase/php-jwt/tree/v6.11.0"
            },
            "time": "2025-01-23T05:11:06+00:00"
        },
        {
            "name": "google/auth",
            "version": "v1.46.0",
            "source": {
                "type": "git",
                "url": "https://github.com/googleapis/google-auth-library-php.git",
                "reference": "7fafae99a41984cbfb92508174263cf7bf3049b9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/googleapis/google-auth-library-php/zipball/7fafae99a41984cbfb92508174263cf7bf3049b9",
                "reference": "7fafae99a41984cbfb92508174263cf7bf3049b9",
                "shasum": ""
            },
            "require": {
                "firebase/php-jwt": "^6.0",
                "guzzlehttp/guzzle": "^7.4.5",
                "guzzlehttp/psr7": "^2.4.5",
                "php": "^8.0",
                "psr/cache": "^2.0||^3.0",
                "psr/http-message": "^1.1||^2.0",
                "psr/log": "^3.0"
            },
            "require-dev": {
                "guzzlehttp/promises": "^2.0",
                "kelvinmo/simplejwt": "0.7.1",
                "phpseclib/phpseclib": "^3.0.35",
                "phpspec/prophecy-phpunit": "^2.1",
                "phpunit/phpunit": "^9.6",
                "sebastian/comparator": ">=1.2.3",
                "squizlabs/php_codesniffer": "^3.5",
                "symfony/process": "^6.0||^7.0",
                "webmozart/assert": "^1.11"
            },
            "suggest": {
                "phpseclib/phpseclib": "May be used in place of OpenSSL for signing strings or for token management. Please require version ^2."
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Google\\Auth\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "description": "Google Auth Library for PHP",
            "homepage": "https://github.com/google/google-auth-library-php",
            "keywords": [
                "Authentication",
                "google",
                "oauth2"
            ],
            "support": {
                "docs": "https://cloud.google.com/php/docs/reference/auth/latest",
                "issues": "https://github.com/googleapis/google-auth-library-php/issues",
                "source": "https://github.com/googleapis/google-auth-library-php/tree/v1.46.0"
            },
            "time": "2025-02-12T22:21:37+00:00"
        },
        {
            "name": "google/common-protos",
            "version": "4.11.0",
            "source": {
                "type": "git",
                "url": "https://github.com/googleapis/common-protos-php.git",
                "reference": "2554ed1f09aa20faae7b71b590e7063df97ff670"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/googleapis/common-protos-php/zipball/2554ed1f09aa20faae7b71b590e7063df97ff670",
                "reference": "2554ed1f09aa20faae7b71b590e7063df97ff670",
                "shasum": ""
            },
            "require": {
                "google/protobuf": "^v3.25.3||^4.26.1",
                "php": "^8.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.6"
            },
            "type": "library",
            "extra": {
                "component": {
                    "id": "common-protos",
                    "path": "CommonProtos",
                    "entry": "README.md",
                    "target": "googleapis/common-protos-php.git"
                }
            },
            "autoload": {
                "psr-4": {
                    "Google\\Api\\": "src/Api",
                    "Google\\Iam\\": "src/Iam",
                    "Google\\Rpc\\": "src/Rpc",
                    "Google\\Type\\": "src/Type",
                    "Google\\Cloud\\": "src/Cloud",
                    "GPBMetadata\\Google\\Api\\": "metadata/Api",
                    "GPBMetadata\\Google\\Iam\\": "metadata/Iam",
                    "GPBMetadata\\Google\\Rpc\\": "metadata/Rpc",
                    "GPBMetadata\\Google\\Type\\": "metadata/Type",
                    "GPBMetadata\\Google\\Cloud\\": "metadata/Cloud",
                    "GPBMetadata\\Google\\Logging\\": "metadata/Logging"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "description": "Google API Common Protos for PHP",
            "homepage": "https://github.com/googleapis/common-protos-php",
            "keywords": [
                "google"
            ],
            "support": {
                "source": "https://github.com/googleapis/common-protos-php/tree/v4.11.0"
            },
            "time": "2025-02-18T19:46:55+00:00"
        },
        {
            "name": "google/gax",
            "version": "v1.36.0",
            "source": {
                "type": "git",
                "url": "https://github.com/googleapis/gax-php.git",
                "reference": "140599cf5eae2432363ce6198e9fdff851625a7a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/googleapis/gax-php/zipball/140599cf5eae2432363ce6198e9fdff851625a7a",
                "reference": "140599cf5eae2432363ce6198e9fdff851625a7a",
                "shasum": ""
            },
            "require": {
                "google/auth": "^1.45",
                "google/common-protos": "^4.4",
                "google/grpc-gcp": "^0.4",
                "google/longrunning": "~0.4",
                "google/protobuf": "^v3.25.3||^4.26.1",
                "grpc/grpc": "^1.13",
                "guzzlehttp/promises": "^2.0",
                "guzzlehttp/psr7": "^2.0",
                "php": "^8.0",
                "ramsey/uuid": "^4.0"
            },
            "conflict": {
                "ext-protobuf": "<3.7.0"
            },
            "require-dev": {
                "phpspec/prophecy-phpunit": "^2.1",
                "phpstan/phpstan": "^2.0",
                "phpunit/phpunit": "^9.6",
                "squizlabs/php_codesniffer": "3.*"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Google\\ApiCore\\": "src",
                    "GPBMetadata\\ApiCore\\": "metadata/ApiCore"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "description": "Google API Core for PHP",
            "homepage": "https://github.com/googleapis/gax-php",
            "keywords": [
                "google"
            ],
            "support": {
                "issues": "https://github.com/googleapis/gax-php/issues",
                "source": "https://github.com/googleapis/gax-php/tree/v1.36.0"
            },
            "time": "2024-12-11T02:47:43+00:00"
        },
        {
            "name": "google/grpc-gcp",
            "version": "v0.4.1",
            "source": {
                "type": "git",
                "url": "https://github.com/GoogleCloudPlatform/grpc-gcp-php.git",
                "reference": "e585b7721bbe806ef45b5c52ae43dfc2bff89968"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/GoogleCloudPlatform/grpc-gcp-php/zipball/e585b7721bbe806ef45b5c52ae43dfc2bff89968",
                "reference": "e585b7721bbe806ef45b5c52ae43dfc2bff89968",
                "shasum": ""
            },
            "require": {
                "google/auth": "^1.3",
                "google/protobuf": "^v3.25.3||^4.26.1",
                "grpc/grpc": "^v1.13.0",
                "php": "^8.0",
                "psr/cache": "^1.0.1||^2.0.0||^3.0.0"
            },
            "require-dev": {
                "google/cloud-spanner": "^1.7",
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Grpc\\Gcp\\": "src/"
                },
                "classmap": [
                    "src/generated/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "description": "gRPC GCP library for channel management",
            "support": {
                "issues": "https://github.com/GoogleCloudPlatform/grpc-gcp-php/issues",
                "source": "https://github.com/GoogleCloudPlatform/grpc-gcp-php/tree/v0.4.1"
            },
            "time": "2025-02-19T21:53:22+00:00"
        },
        {
            "name": "google/longrunning",
            "version": "0.4.7",
            "source": {
                "type": "git",
                "url": "https://github.com/googleapis/php-longrunning.git",
                "reference": "624cabb874c10e5ddc9034c999f724894b70a3d3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/googleapis/php-longrunning/zipball/624cabb874c10e5ddc9034c999f724894b70a3d3",
                "reference": "624cabb874c10e5ddc9034c999f724894b70a3d3",
                "shasum": ""
            },
            "require-dev": {
                "google/gax": "^1.36.0",
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "extra": {
                "component": {
                    "id": "longrunning",
                    "path": "LongRunning",
                    "entry": null,
                    "target": "googleapis/php-longrunning"
                }
            },
            "autoload": {
                "psr-4": {
                    "Google\\LongRunning\\": "src/LongRunning",
                    "Google\\ApiCore\\LongRunning\\": "src/ApiCore/LongRunning",
                    "GPBMetadata\\Google\\Longrunning\\": "metadata/Longrunning"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "description": "Google LongRunning Client for PHP",
            "support": {
                "source": "https://github.com/googleapis/php-longrunning/tree/v0.4.7"
            },
            "time": "2025-01-24T21:24:06+00:00"
        },
        {
            "name": "google/protobuf",
            "version": "v3.25.6",
            "source": {
                "type": "git",
                "url": "https://github.com/protocolbuffers/protobuf-php.git",
                "reference": "fd843c68d1fb6d2f0010f4157f5febd08b723d6f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/protocolbuffers/protobuf-php/zipball/fd843c68d1fb6d2f0010f4157f5febd08b723d6f",
                "reference": "fd843c68d1fb6d2f0010f4157f5febd08b723d6f",
                "shasum": ""
            },
            "require": {
                "php": ">=7.0.0"
            },
            "require-dev": {
                "phpunit/phpunit": ">=5.0.0"
            },
            "suggest": {
                "ext-bcmath": "Need to support JSON deserialization"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Google\\Protobuf\\": "src/Google/Protobuf",
                    "GPBMetadata\\Google\\Protobuf\\": "src/GPBMetadata/Google/Protobuf"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "description": "proto library for PHP",
            "homepage": "https://developers.google.com/protocol-buffers/",
            "keywords": [
                "proto"
            ],
            "support": {
                "source": "https://github.com/protocolbuffers/protobuf-php/tree/v3.25.6"
            },
            "time": "2025-01-24T20:17:25+00:00"
        },
        {
            "name": "googleads/google-ads-php",
            "version": "v26.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/googleads/google-ads-php.git",
                "reference": "9a21c25de05921d67ba11726fa912886b697389e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/googleads/google-ads-php/zipball/9a21c25de05921d67ba11726fa912886b697389e",
                "reference": "9a21c25de05921d67ba11726fa912886b697389e",
                "shasum": ""
            },
            "require": {
                "google/gax": "^1.19.1",
                "google/protobuf": "^3.21.5 || ^4.26",
                "grpc/grpc": "^1.36.0",
                "monolog/monolog": "^1.26 || ^2.0 || ^3.0",
                "php": ">=8.1"
            },
            "require-dev": {
                "composer/composer": "^2.0",
                "ext-bcmath": "*",
                "ext-grpc": "*",
                "ext-protobuf": "*",
                "phpunit/phpunit": "^9.5",
                "react/http": "^1.2.0",
                "squizlabs/php_codesniffer": "^3.5",
                "ulrichsg/getopt-php": "^3.4"
            },
            "suggest": {
                "ext-grpc": "To be able to use the gRPC transport, use the C implementation of gRPC",
                "ext-protobuf": "For better performance, use the C implementation of Protobuf",
                "google/protobuf": "In case the C implementation of Protobuf is not suitable, use the PHP one",
                "grpc/grpc": "In case the C implementation of gRPC is not suitable, use the PHP one to enable other transports",
                "react/http": "To run the AuthenticateInWebApplication.php example"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Google\\Ads\\GoogleAds\\": "src/Google/Ads/GoogleAds",
                    "GPBMetadata\\Google\\Ads\\GoogleAds\\": "metadata/Google/Ads/GoogleAds"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "authors": [
                {
                    "name": "Google",
                    "homepage": "https://github.com/googleads/google-ads-php/contributors"
                }
            ],
            "description": "Google Ads API client for PHP",
            "homepage": "https://github.com/googleads/google-ads-php",
            "support": {
                "issues": "https://github.com/googleads/google-ads-php/issues",
                "source": "https://github.com/googleads/google-ads-php/tree/v26.1.0"
            },
            "time": "2025-02-27T17:49:57+00:00"
        },
        {
            "name": "grpc/grpc",
            "version": "1.57.0",
            "source": {
                "type": "git",
                "url": "https://github.com/grpc/grpc-php.git",
                "reference": "b610c42022ed3a22f831439cb93802f2a4502fdf"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/grpc/grpc-php/zipball/b610c42022ed3a22f831439cb93802f2a4502fdf",
                "reference": "b610c42022ed3a22f831439cb93802f2a4502fdf",
                "shasum": ""
            },
            "require": {
                "php": ">=7.0.0"
            },
            "require-dev": {
                "google/auth": "^v1.3.0"
            },
            "suggest": {
                "ext-protobuf": "For better performance, install the protobuf C extension.",
                "google/protobuf": "To get started using grpc quickly, install the native protobuf library."
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Grpc\\": "src/lib/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "description": "gRPC library for PHP",
            "homepage": "https://grpc.io",
            "keywords": [
                "rpc"
            ],
            "support": {
                "source": "https://github.com/grpc/grpc-php/tree/v1.57.0"
            },
            "time": "2023-08-14T23:57:54+00:00"
        },
        {
            "name": "guzzlehttp/guzzle",
            "version": "7.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/guzzle.git",
                "reference": "7b2f29fe81dc4da0ca0ea7d42107a0845946ea77"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/7b2f29fe81dc4da0ca0ea7d42107a0845946ea77",
                "reference": "7b2f29fe81dc4da0ca0ea7d42107a0845946ea77",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "guzzlehttp/promises": "^1.5.3 || ^2.0.3",
                "guzzlehttp/psr7": "^2.7.0",
                "php": "^7.2.5 || ^8.0",
                "psr/http-client": "^1.0",
                "symfony/deprecation-contracts": "^2.2 || ^3.0"
            },
            "provide": {
                "psr/http-client-implementation": "1.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "ext-curl": "*",
                "guzzle/client-integration-tests": "3.0.2",
                "php-http/message-factory": "^1.1",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20",
                "psr/log": "^1.1 || ^2.0 || ^3.0"
            },
            "suggest": {
                "ext-curl": "Required for CURL handler support",
                "ext-intl": "Required for Internationalized Domain Name (IDN) support",
                "psr/log": "Required for using the Log middleware"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "files": [
                    "src/functions_include.php"
                ],
                "psr-4": {
                    "GuzzleHttp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Jeremy Lindblom",
                    "email": "jeremeamia@gmail.com",
                    "homepage": "https://github.com/jeremeamia"
                },
                {
                    "name": "George Mponos",
                    "email": "gmponos@gmail.com",
                    "homepage": "https://github.com/gmponos"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://github.com/sagikazarmark"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "Guzzle is a PHP HTTP client library",
            "keywords": [
                "client",
                "curl",
                "framework",
                "http",
                "http client",
                "psr-18",
                "psr-7",
                "rest",
                "web service"
            ],
            "support": {
                "issues": "https://github.com/guzzle/guzzle/issues",
                "source": "https://github.com/guzzle/guzzle/tree/7.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T13:37:11+00:00"
        },
        {
            "name": "guzzlehttp/promises",
            "version": "2.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/promises.git",
                "reference": "7c69f28996b0a6920945dd20b3857e499d9ca96c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/promises/zipball/7c69f28996b0a6920945dd20b3857e499d9ca96c",
                "reference": "7c69f28996b0a6920945dd20b3857e499d9ca96c",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Promise\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "Guzzle promises library",
            "keywords": [
                "promise"
            ],
            "support": {
                "issues": "https://github.com/guzzle/promises/issues",
                "source": "https://github.com/guzzle/promises/tree/2.2.0"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/promises",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T13:27:01+00:00"
        },
        {
            "name": "guzzlehttp/psr7",
            "version": "2.7.1",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/psr7.git",
                "reference": "c2270caaabe631b3b44c85f99e5a04bbb8060d16"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/psr7/zipball/c2270caaabe631b3b44c85f99e5a04bbb8060d16",
                "reference": "c2270caaabe631b3b44c85f99e5a04bbb8060d16",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "psr/http-factory": "^1.0",
                "psr/http-message": "^1.1 || ^2.0",
                "ralouphie/getallheaders": "^3.0"
            },
            "provide": {
                "psr/http-factory-implementation": "1.0",
                "psr/http-message-implementation": "1.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "http-interop/http-factory-tests": "0.9.0",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20"
            },
            "suggest": {
                "laminas/laminas-httphandlerrunner": "Emit PSR-7 responses"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Psr7\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "George Mponos",
                    "email": "gmponos@gmail.com",
                    "homepage": "https://github.com/gmponos"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://github.com/sagikazarmark"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://sagikazarmark.hu"
                }
            ],
            "description": "PSR-7 message implementation that also provides common utility methods",
            "keywords": [
                "http",
                "message",
                "psr-7",
                "request",
                "response",
                "stream",
                "uri",
                "url"
            ],
            "support": {
                "issues": "https://github.com/guzzle/psr7/issues",
                "source": "https://github.com/guzzle/psr7/tree/2.7.1"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/psr7",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T12:30:47+00:00"
        },
        {
            "name": "keboola/common-exceptions",
            "version": "1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/common-exceptions.git",
                "reference": "35ac327808f0e4157c9de6cbe0bf8536145cb5ac"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/common-exceptions/zipball/35ac327808f0e4157c9de6cbe0bf8536145cb5ac",
                "reference": "35ac327808f0e4157c9de6cbe0bf8536145cb5ac",
                "shasum": ""
            },
            "require": {
                "php": "^7.1|^8.0"
            },
            "require-dev": {
                "keboola/coding-standard": "^13.0",
                "keboola/php-temp": "^1.0",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpstan": "^0.12.93",
                "phpunit/phpunit": "^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\CommonExceptions\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Common exceptions shared between different applications",
            "support": {
                "source": "https://github.com/keboola/common-exceptions/tree/1.2.1"
            },
            "time": "2022-10-02T21:12:00+00:00"
        },
        {
            "name": "keboola/csv",
            "version": "4.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csv.git",
                "reference": "a7e5828ceea0e2d8561bb07619c73091e6155c36"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csv/zipball/a7e5828ceea0e2d8561bb07619c73091e6155c36",
                "reference": "a7e5828ceea0e2d8561bb07619c73091e6155c36",
                "shasum": ""
            },
            "require": {
                "php": ">=7.4"
            },
            "require-dev": {
                "ext-json": "*",
                "keboola/coding-standard": "^15.0",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpdoc-parser": "^1.25",
                "phpstan/phpstan": "^1.10",
                "phpunit/phpunit": ">=7.5 <=9.6"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Csv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola CSV reader and writer",
            "homepage": "http://keboola.com",
            "keywords": [
                "csv",
                "rfc4180"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-csv/issues",
                "source": "https://github.com/keboola/php-csv/tree/4.1.0"
            },
            "time": "2024-01-11T09:30:47+00:00"
        },
        {
            "name": "keboola/php-component",
            "version": "9.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-component.git",
                "reference": "5ffea8afc13789fb0328acdbfca4e323c8232361"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-component/zipball/5ffea8afc13789fb0328acdbfca4e323c8232361",
                "reference": "5ffea8afc13789fb0328acdbfca4e323c8232361",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "keboola/common-exceptions": "^1.2",
                "monolog/monolog": "^2.3",
                "php": "^7.4|^8.0",
                "symfony/config": "^5.4|^6.0",
                "symfony/filesystem": "^5.4|^6.0",
                "symfony/finder": "^5.4|^6.0",
                "symfony/serializer": "^5.4|^6.0"
            },
            "require-dev": {
                "devedge/sami-github": "^1.0",
                "keboola/coding-standard": "^14.0",
                "keboola/php-temp": "^2.0",
                "phpstan/phpstan": "^1.4",
                "phpunit/phpunit": "^9.5"
            },
            "type": "project",
            "autoload": {
                "psr-4": {
                    "Keboola\\Component\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Helper classes for developing Keboola PHP components",
            "keywords": [
                "component",
                "docker",
                "keboola"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-component/issues",
                "source": "https://github.com/keboola/php-component/tree/9.4.0"
            },
            "time": "2023-05-30T06:36:55+00:00"
        },
        {
            "name": "keboola/retry",
            "version": "0.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/retry.git",
                "reference": "e2ce6f343db1167350df2850a4532ad6845a635d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/retry/zipball/e2ce6f343db1167350df2850a4532ad6845a635d",
                "reference": "e2ce6f343db1167350df2850a4532ad6845a635d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "psr/log": "^1.1|^2|^3"
            },
            "replace": {
                "vkartaviy/retry": "*"
            },
            "require-dev": {
                "keboola/coding-standard": "^7.0",
                "phpstan/phpstan-shim": "^0.10",
                "phpunit/phpunit": "7.*"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Retry\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola Dev",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Library for repeatable and retryable operations",
            "keywords": [
                "backoff",
                "proxy",
                "repeat",
                "retry"
            ],
            "support": {
                "issues": "https://github.com/keboola/retry/issues",
                "source": "https://github.com/keboola/retry/tree/0.5.1"
            },
            "time": "2022-09-13T10:26:25+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "2.10.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "5cf826f2991858b54d5c3809bee745560a1042a7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/5cf826f2991858b54d5c3809bee745560a1042a7",
                "reference": "5cf826f2991858b54d5c3809bee745560a1042a7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2",
                "psr/log": "^1.0.1 || ^2.0 || ^3.0"
            },
            "provide": {
                "psr/log-implementation": "1.0.0 || 2.0.0 || 3.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "elasticsearch/elasticsearch": "^7 || ^8",
                "ext-json": "*",
                "graylog2/gelf-php": "^1.4.2 || ^2@dev",
                "guzzlehttp/guzzle": "^7.4",
                "guzzlehttp/psr7": "^2.2",
                "mongodb/mongodb": "^1.8",
                "php-amqplib/php-amqplib": "~2.4 || ^3",
                "phpspec/prophecy": "^1.15",
                "phpstan/phpstan": "^1.10",
                "phpunit/phpunit": "^8.5.38 || ^9.6.19",
                "predis/predis": "^1.1 || ^2.0",
                "rollbar/rollbar": "^1.3 || ^2 || ^3",
                "ruflin/elastica": "^7",
                "swiftmailer/swiftmailer": "^5.3|^6.0",
                "symfony/mailer": "^5.4 || ^6",
                "symfony/mime": "^5.4 || ^6"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "elasticsearch/elasticsearch": "Allow sending log messages to an Elasticsearch server via official client",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-curl": "Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler",
                "ext-mbstring": "Allow to work properly with unicode symbols",
                "ext-mongodb": "Allow sending log messages to a MongoDB server (via driver)",
                "ext-openssl": "Required to send log messages using SSL",
                "ext-sockets": "Allow sending log messages to a Syslog server (via UDP driver)",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server (via library)",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "https://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "https://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/monolog/issues",
                "source": "https://github.com/Seldaek/monolog/tree/2.10.0"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/monolog/monolog",
                    "type": "tidelift"
                }
            ],
            "time": "2024-11-12T12:43:37+00:00"
        },
        {
            "name": "psr/cache",
            "version": "3.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/cache.git",
                "reference": "aa5030cfa5405eccfdcb1083ce040c2cb8d253bf"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/cache/zipball/aa5030cfa5405eccfdcb1083ce040c2cb8d253bf",
                "reference": "aa5030cfa5405eccfdcb1083ce040c2cb8d253bf",
                "shasum": ""
            },
            "require": {
                "php": ">=8.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Cache\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for caching libraries",
            "keywords": [
                "cache",
                "psr",
                "psr-6"
            ],
            "support": {
                "source": "https://github.com/php-fig/cache/tree/3.0.0"
            },
            "time": "2021-02-03T23:26:27+00:00"
        },
        {
            "name": "psr/http-client",
            "version": "1.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-client.git",
                "reference": "bb5906edc1c324c9a05aa0873d40117941e5fa90"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90",
                "reference": "bb5906edc1c324c9a05aa0873d40117941e5fa90",
                "shasum": ""
            },
            "require": {
                "php": "^7.0 || ^8.0",
                "psr/http-message": "^1.0 || ^2.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Client\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP clients",
            "homepage": "https://github.com/php-fig/http-client",
            "keywords": [
                "http",
                "http-client",
                "psr",
                "psr-18"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-client"
            },
            "time": "2023-09-23T14:17:50+00:00"
        },
        {
            "name": "psr/http-factory",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-factory.git",
                "reference": "2b4765fddfe3b508ac62f829e852b1501d3f6e8a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-factory/zipball/2b4765fddfe3b508ac62f829e852b1501d3f6e8a",
                "reference": "2b4765fddfe3b508ac62f829e852b1501d3f6e8a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "psr/http-message": "^1.0 || ^2.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "PSR-17: Common interfaces for PSR-7 HTTP message factories",
            "keywords": [
                "factory",
                "http",
                "message",
                "psr",
                "psr-17",
                "psr-7",
                "request",
                "response"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-factory"
            },
            "time": "2024-04-15T12:06:14+00:00"
        },
        {
            "name": "psr/http-message",
            "version": "2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-message.git",
                "reference": "402d35bcb92c70c026d1a6a9883f06b2ead23d71"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-message/zipball/402d35bcb92c70c026d1a6a9883f06b2ead23d71",
                "reference": "402d35bcb92c70c026d1a6a9883f06b2ead23d71",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP messages",
            "homepage": "https://github.com/php-fig/http-message",
            "keywords": [
                "http",
                "http-message",
                "psr",
                "psr-7",
                "request",
                "response"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-message/tree/2.0"
            },
            "time": "2023-04-04T09:54:51+00:00"
        },
        {
            "name": "psr/log",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "f16e1d5863e37f8d8c2a01719f5b34baa2b714d3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/f16e1d5863e37f8d8c2a01719f5b34baa2b714d3",
                "reference": "f16e1d5863e37f8d8c2a01719f5b34baa2b714d3",
                "shasum": ""
            },
            "require": {
                "php": ">=8.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "support": {
                "source": "https://github.com/php-fig/log/tree/3.0.2"
            },
            "time": "2024-09-11T13:17:53+00:00"
        },
        {
            "name": "ralouphie/getallheaders",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/ralouphie/getallheaders.git",
                "reference": "120b605dfeb996808c31b6477290a714d356e822"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822",
                "reference": "120b605dfeb996808c31b6477290a714d356e822",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "php-coveralls/php-coveralls": "^2.1",
                "phpunit/phpunit": "^5 || ^6.5"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/getallheaders.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ralph Khattar",
                    "email": "ralph.khattar@gmail.com"
                }
            ],
            "description": "A polyfill for getallheaders.",
            "support": {
                "issues": "https://github.com/ralouphie/getallheaders/issues",
                "source": "https://github.com/ralouphie/getallheaders/tree/develop"
            },
            "time": "2019-03-08T08:55:37+00:00"
        },
        {
            "name": "ramsey/collection",
            "version": "2.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/ramsey/collection.git",
                "reference": "344572933ad0181accbf4ba763e85a0306a8c5e2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ramsey/collection/zipball/344572933ad0181accbf4ba763e85a0306a8c5e2",
                "reference": "344572933ad0181accbf4ba763e85a0306a8c5e2",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "captainhook/plugin-composer": "^5.3",
                "ergebnis/composer-normalize": "^2.45",
                "fakerphp/faker": "^1.24",
                "hamcrest/hamcrest-php": "^2.0",
                "jangregor/phpstan-prophecy": "^2.1",
                "mockery/mockery": "^1.6",
                "php-parallel-lint/php-console-highlighter": "^1.0",
                "php-parallel-lint/php-parallel-lint": "^1.4",
                "phpspec/prophecy-phpunit": "^2.3",
                "phpstan/extension-installer": "^1.4",
                "phpstan/phpstan": "^2.1",
                "phpstan/phpstan-mockery": "^2.0",
                "phpstan/phpstan-phpunit": "^2.0",
                "phpunit/phpunit": "^10.5",
                "ramsey/coding-standard": "^2.3",
                "ramsey/conventional-commits": "^1.6",
                "roave/security-advisories": "dev-latest"
            },
            "type": "library",
            "extra": {
                "captainhook": {
                    "force-install": true
                },
                "ramsey/conventional-commits": {
                    "configFile": "conventional-commits.json"
                }
            },
            "autoload": {
                "psr-4": {
                    "Ramsey\\Collection\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ben Ramsey",
                    "email": "ben@benramsey.com",
                    "homepage": "https://benramsey.com"
                }
            ],
            "description": "A PHP library for representing and manipulating collections.",
            "keywords": [
                "array",
                "collection",
                "hash",
                "map",
                "queue",
                "set"
            ],
            "support": {
                "issues": "https://github.com/ramsey/collection/issues",
                "source": "https://github.com/ramsey/collection/tree/2.1.1"
            },
            "time": "2025-03-22T05:38:12+00:00"
        },
        {
            "name": "ramsey/uuid",
            "version": "4.7.6",
            "source": {
                "type": "git",
                "url": "https://github.com/ramsey/uuid.git",
                "reference": "91039bc1faa45ba123c4328958e620d382ec7088"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ramsey/uuid/zipball/91039bc1faa45ba123c4328958e620d382ec7088",
                "reference": "91039bc1faa45ba123c4328958e620d382ec7088",
                "shasum": ""
            },
            "require": {
                "brick/math": "^0.8.8 || ^0.9 || ^0.10 || ^0.11 || ^0.12",
                "ext-json": "*",
                "php": "^8.0",
                "ramsey/collection": "^1.2 || ^2.0"
            },
            "replace": {
                "rhumsaa/uuid": "self.version"
            },
            "require-dev": {
                "captainhook/captainhook": "^5.10",
                "captainhook/plugin-composer": "^5.3",
                "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
                "doctrine/annotations": "^1.8",
                "ergebnis/composer-normalize": "^2.15",
                "mockery/mockery": "^1.3",
                "paragonie/random-lib": "^2",
                "php-mock/php-mock": "^2.2",
                "php-mock/php-mock-mockery": "^1.3",
                "php-parallel-lint/php-parallel-lint": "^1.1",
                "phpbench/phpbench": "^1.0",
                "phpstan/extension-installer": "^1.1",
                "phpstan/phpstan": "^1.8",
                "phpstan/phpstan-mockery": "^1.1",
                "phpstan/phpstan-phpunit": "^1.1",
                "phpunit/phpunit": "^8.5 || ^9",
                "ramsey/composer-repl": "^1.4",
                "slevomat/coding-standard": "^8.4",
                "squizlabs/php_codesniffer": "^3.5",
                "vimeo/psalm": "^4.9"
            },
            "suggest": {
                "ext-bcmath": "Enables faster math with arbitrary-precision integers using BCMath.",
                "ext-gmp": "Enables faster math with arbitrary-precision integers using GMP.",
                "ext-uuid": "Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.",
                "paragonie/random-lib": "Provides RandomLib for use with the RandomLibAdapter",
                "ramsey/uuid-doctrine": "Allows the use of Ramsey\\Uuid\\Uuid as Doctrine field type."
            },
            "type": "library",
            "extra": {
                "captainhook": {
                    "force-install": true
                }
            },
            "autoload": {
                "files": [
                    "src/functions.php"
                ],
                "psr-4": {
                    "Ramsey\\Uuid\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "A PHP library for generating and working with universally unique identifiers (UUIDs).",
            "keywords": [
                "guid",
                "identifier",
                "uuid"
            ],
            "support": {
                "issues": "https://github.com/ramsey/uuid/issues",
                "source": "https://github.com/ramsey/uuid/tree/4.7.6"
            },
            "funding": [
                {
                    "url": "https://github.com/ramsey",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/ramsey/uuid",
                    "type": "tidelift"
                }
            ],
            "time": "2024-04-27T21:32:50+00:00"
        },
        {
            "name": "symfony/config",
            "version": "v6.4.14",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/config.git",
                "reference": "4e55e7e4ffddd343671ea972216d4509f46c22ef"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/config/zipball/4e55e7e4ffddd343671ea972216d4509f46c22ef",
                "reference": "4e55e7e4ffddd343671ea972216d4509f46c22ef",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/filesystem": "^5.4|^6.0|^7.0",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "symfony/finder": "<5.4",
                "symfony/service-contracts": "<2.5"
            },
            "require-dev": {
                "symfony/event-dispatcher": "^5.4|^6.0|^7.0",
                "symfony/finder": "^5.4|^6.0|^7.0",
                "symfony/messenger": "^5.4|^6.0|^7.0",
                "symfony/service-contracts": "^2.5|^3",
                "symfony/yaml": "^5.4|^6.0|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Config\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Helps you find, load, combine, autofill and validate configuration values of any kind",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/config/tree/v6.4.14"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-11-04T11:33:53+00:00"
        },
        {
            "name": "symfony/deprecation-contracts",
            "version": "v3.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/deprecation-contracts.git",
                "reference": "74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6",
                "reference": "74c71c939a79f7d5bf3c1ce9f5ea37ba0114c6f6",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/contracts",
                    "name": "symfony/contracts"
                },
                "branch-alias": {
                    "dev-main": "3.5-dev"
                }
            },
            "autoload": {
                "files": [
                    "function.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "A generic function and convention to trigger deprecation notices",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/deprecation-contracts/tree/v3.5.1"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-25T14:20:29+00:00"
        },
        {
            "name": "symfony/filesystem",
            "version": "v6.4.13",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/filesystem.git",
                "reference": "4856c9cf585d5a0313d8d35afd681a526f038dd3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/filesystem/zipball/4856c9cf585d5a0313d8d35afd681a526f038dd3",
                "reference": "4856c9cf585d5a0313d8d35afd681a526f038dd3",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-mbstring": "~1.8"
            },
            "require-dev": {
                "symfony/process": "^5.4|^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Filesystem\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides basic utilities for the filesystem",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/filesystem/tree/v6.4.13"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-10-25T15:07:50+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v6.4.17",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "1d0e8266248c5d9ab6a87e3789e6dc482af3c9c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/1d0e8266248c5d9ab6a87e3789e6dc482af3c9c7",
                "reference": "1d0e8266248c5d9ab6a87e3789e6dc482af3c9c7",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1"
            },
            "require-dev": {
                "symfony/filesystem": "^6.0|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Finds files and directories via an intuitive fluent interface",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/finder/tree/v6.4.17"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-12-29T13:51:37+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-ctype": "*"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-mbstring",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-mbstring.git",
                "reference": "85181ba99b2345b0ef10ce42ecac37612d9fd341"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/85181ba99b2345b0ef10ce42ecac37612d9fd341",
                "reference": "85181ba99b2345b0ef10ce42ecac37612d9fd341",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-mbstring": "*"
            },
            "suggest": {
                "ext-mbstring": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Mbstring\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for the Mbstring extension",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "mbstring",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/serializer",
            "version": "v6.4.19",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/serializer.git",
                "reference": "a221b2f6066af304d760cff7a26f201b4fab4aef"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/serializer/zipball/a221b2f6066af304d760cff7a26f201b4fab4aef",
                "reference": "a221b2f6066af304d760cff7a26f201b4fab4aef",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "doctrine/annotations": "<1.12",
                "phpdocumentor/reflection-docblock": "<3.2.2",
                "phpdocumentor/type-resolver": "<1.4.0",
                "symfony/dependency-injection": "<5.4",
                "symfony/property-access": "<5.4",
                "symfony/property-info": "<5.4.24|>=6,<6.2.11",
                "symfony/uid": "<5.4",
                "symfony/validator": "<6.4",
                "symfony/yaml": "<5.4"
            },
            "require-dev": {
                "doctrine/annotations": "^1.12|^2",
                "phpdocumentor/reflection-docblock": "^3.2|^4.0|^5.0",
                "seld/jsonlint": "^1.10",
                "symfony/cache": "^5.4|^6.0|^7.0",
                "symfony/config": "^5.4|^6.0|^7.0",
                "symfony/console": "^5.4|^6.0|^7.0",
                "symfony/dependency-injection": "^5.4|^6.0|^7.0",
                "symfony/error-handler": "^5.4|^6.0|^7.0",
                "symfony/filesystem": "^5.4|^6.0|^7.0",
                "symfony/form": "^5.4|^6.0|^7.0",
                "symfony/http-foundation": "^5.4|^6.0|^7.0",
                "symfony/http-kernel": "^5.4|^6.0|^7.0",
                "symfony/messenger": "^5.4|^6.0|^7.0",
                "symfony/mime": "^5.4|^6.0|^7.0",
                "symfony/property-access": "^5.4.26|^6.3|^7.0",
                "symfony/property-info": "^5.4.24|^6.2.11|^7.0",
                "symfony/translation-contracts": "^2.5|^3",
                "symfony/uid": "^5.4|^6.0|^7.0",
                "symfony/validator": "^6.4|^7.0",
                "symfony/var-dumper": "^5.4|^6.0|^7.0",
                "symfony/var-exporter": "^5.4|^6.0|^7.0",
                "symfony/yaml": "^5.4|^6.0|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Serializer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Handles serializing and deserializing data structures, including object graphs, into array structures or other formats like XML and JSON.",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/serializer/tree/v6.4.19"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-02-24T08:42:36+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "dealerdirect/phpcodesniffer-composer-installer",
            "version": "v1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/PHPCSStandards/composer-installer.git",
                "reference": "4be43904336affa5c2f70744a348312336afd0da"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/PHPCSStandards/composer-installer/zipball/4be43904336affa5c2f70744a348312336afd0da",
                "reference": "4be43904336affa5c2f70744a348312336afd0da",
                "shasum": ""
            },
            "require": {
                "composer-plugin-api": "^1.0 || ^2.0",
                "php": ">=5.4",
                "squizlabs/php_codesniffer": "^2.0 || ^3.1.0 || ^4.0"
            },
            "require-dev": {
                "composer/composer": "*",
                "ext-json": "*",
                "ext-zip": "*",
                "php-parallel-lint/php-parallel-lint": "^1.3.1",
                "phpcompatibility/php-compatibility": "^9.0",
                "yoast/phpunit-polyfills": "^1.0"
            },
            "type": "composer-plugin",
            "extra": {
                "class": "PHPCSStandards\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\Plugin"
            },
            "autoload": {
                "psr-4": {
                    "PHPCSStandards\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Franck Nijhof",
                    "email": "franck.nijhof@dealerdirect.com",
                    "homepage": "http://www.frenck.nl",
                    "role": "Developer / IT Manager"
                },
                {
                    "name": "Contributors",
                    "homepage": "https://github.com/PHPCSStandards/composer-installer/graphs/contributors"
                }
            ],
            "description": "PHP_CodeSniffer Standards Composer Installer Plugin",
            "homepage": "http://www.dealerdirect.com",
            "keywords": [
                "PHPCodeSniffer",
                "PHP_CodeSniffer",
                "code quality",
                "codesniffer",
                "composer",
                "installer",
                "phpcbf",
                "phpcs",
                "plugin",
                "qa",
                "quality",
                "standard",
                "standards",
                "style guide",
                "stylecheck",
                "tests"
            ],
            "support": {
                "issues": "https://github.com/PHPCSStandards/composer-installer/issues",
                "source": "https://github.com/PHPCSStandards/composer-installer"
            },
            "time": "2023-01-05T11:28:13+00:00"
        },
        {
            "name": "doctrine/instantiator",
            "version": "2.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/instantiator.git",
                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "doctrine/coding-standard": "^11",
                "ext-pdo": "*",
                "ext-phar": "*",
                "phpbench/phpbench": "^1.2",
                "phpstan/phpstan": "^1.9.4",
                "phpstan/phpstan-phpunit": "^1.3",
                "phpunit/phpunit": "^9.5.27",
                "vimeo/psalm": "^5.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com",
                    "homepage": "https://ocramius.github.io/"
                }
            ],
            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
            "homepage": "https://www.doctrine-project.org/projects/instantiator.html",
            "keywords": [
                "constructor",
                "instantiate"
            ],
            "support": {
                "issues": "https://github.com/doctrine/instantiator/issues",
                "source": "https://github.com/doctrine/instantiator/tree/2.0.0"
            },
            "funding": [
                {
                    "url": "https://www.doctrine-project.org/sponsorship.html",
                    "type": "custom"
                },
                {
                    "url": "https://www.patreon.com/phpdoctrine",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator",
                    "type": "tidelift"
                }
            ],
            "time": "2022-12-30T00:23:10+00:00"
        },
        {
            "name": "graham-campbell/result-type",
            "version": "v1.1.3",
            "source": {
                "type": "git",
                "url": "https://github.com/GrahamCampbell/Result-Type.git",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "GrahamCampbell\\ResultType\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "An Implementation Of The Result Type",
            "keywords": [
                "Graham Campbell",
                "GrahamCampbell",
                "Result Type",
                "Result-Type",
                "result"
            ],
            "support": {
                "issues": "https://github.com/GrahamCampbell/Result-Type/issues",
                "source": "https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/graham-campbell/result-type",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:45:45+00:00"
        },
        {
            "name": "keboola/coding-standard",
            "version": "15.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/phpcs-standard.git",
                "reference": "39ae7c3d14776105d574c7c3636e76b72482916a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/phpcs-standard/zipball/39ae7c3d14776105d574c7c3636e76b72482916a",
                "reference": "39ae7c3d14776105d574c7c3636e76b72482916a",
                "shasum": ""
            },
            "require": {
                "slevomat/coding-standard": "^8",
                "squizlabs/php_codesniffer": "^3.2"
            },
            "type": "phpcodesniffer-standard",
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keboola coding standard",
            "support": {
                "issues": "https://github.com/keboola/phpcs-standard/issues",
                "source": "https://github.com/keboola/phpcs-standard/tree/15.0.1"
            },
            "time": "2023-12-11T08:31:50+00:00"
        },
        {
            "name": "keboola/datadir-tests",
            "version": "5.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/datadir-tests.git",
                "reference": "d43f7657806d660f2326d8c438dd800d7ccc1e3d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/datadir-tests/zipball/d43f7657806d660f2326d8c438dd800d7ccc1e3d",
                "reference": "d43f7657806d660f2326d8c438dd800d7ccc1e3d",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "keboola/php-temp": "^2.0",
                "php": "^7.4|^8.0",
                "phpunit/phpunit": "^9.5",
                "symfony/filesystem": "^5.0|^6.0",
                "symfony/finder": "^5.0|^6.0",
                "symfony/process": "^5.0|^6.0"
            },
            "require-dev": {
                "keboola/coding-standard": "^13.0",
                "php-parallel-lint/php-parallel-lint": "^1.3",
                "phpstan/phpstan": "^1.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\DatadirTests\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Tool for functional testing of Keboola Connection components",
            "support": {
                "issues": "https://github.com/keboola/datadir-tests/issues",
                "source": "https://github.com/keboola/datadir-tests/tree/5.6.0"
            },
            "time": "2023-10-20T08:02:53+00:00"
        },
        {
            "name": "keboola/php-temp",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-temp.git",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-temp/zipball/cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "reference": "cbdb4dd0dfe548d7bffd74a0e66294981aea49ce",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "symfony/filesystem": ">2.8"
            },
            "require-dev": {
                "infection/infection": "^0.12",
                "jakub-onderka/php-parallel-lint": "^1.0",
                "keboola/coding-standard": "^8.0",
                "phpstan/phpstan-shim": "^0.11",
                "phpunit/phpunit": "^7.0|^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Temp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Temp library handles application temporary files",
            "keywords": [
                "filesystem",
                "temp"
            ],
            "support": {
                "issues": "https://github.com/keboola/php-temp/issues",
                "source": "https://github.com/keboola/php-temp/tree/2.0.1"
            },
            "time": "2019-04-26T07:18:24+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.13.0",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "024473a478be9df5fdaca2c793f2232fe788e414"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/024473a478be9df5fdaca2c793f2232fe788e414",
                "reference": "024473a478be9df5fdaca2c793f2232fe788e414",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "conflict": {
                "doctrine/collections": "<1.6.8",
                "doctrine/common": "<2.13.3 || >=3 <3.2.2"
            },
            "require-dev": {
                "doctrine/collections": "^1.6.8",
                "doctrine/common": "^2.13.3 || ^3.2.2",
                "phpspec/prophecy": "^1.10",
                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ],
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "support": {
                "issues": "https://github.com/myclabs/DeepCopy/issues",
                "source": "https://github.com/myclabs/DeepCopy/tree/1.13.0"
            },
            "funding": [
                {
                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
                    "type": "tidelift"
                }
            ],
            "time": "2025-02-12T12:17:51+00:00"
        },
        {
            "name": "nikic/php-parser",
            "version": "v5.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/PHP-Parser.git",
                "reference": "447a020a1f875a434d62f2a401f53b82a396e494"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/447a020a1f875a434d62f2a401f53b82a396e494",
                "reference": "447a020a1f875a434d62f2a401f53b82a396e494",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "ext-json": "*",
                "ext-tokenizer": "*",
                "php": ">=7.4"
            },
            "require-dev": {
                "ircmaxell/php-yacc": "^0.0.7",
                "phpunit/phpunit": "^9.0"
            },
            "bin": [
                "bin/php-parse"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpParser\\": "lib/PhpParser"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov"
                }
            ],
            "description": "A PHP parser written in PHP",
            "keywords": [
                "parser",
                "php"
            ],
            "support": {
                "issues": "https://github.com/nikic/PHP-Parser/issues",
                "source": "https://github.com/nikic/PHP-Parser/tree/v5.4.0"
            },
            "time": "2024-12-30T11:07:19+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "54750ef60c58e43759730615a392c31c80e23176"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176",
                "reference": "54750ef60c58e43759730615a392c31c80e23176",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-phar": "*",
                "ext-xmlwriter": "*",
                "phar-io/version": "^3.0.1",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "support": {
                "issues": "https://github.com/phar-io/manifest/issues",
                "source": "https://github.com/phar-io/manifest/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:33:53+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "support": {
                "issues": "https://github.com/phar-io/version/issues",
                "source": "https://github.com/phar-io/version/tree/3.2.1"
            },
            "time": "2022-02-21T01:04:05+00:00"
        },
        {
            "name": "php-parallel-lint/php-parallel-lint",
            "version": "v1.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-parallel-lint/PHP-Parallel-Lint.git",
                "reference": "6db563514f27e19595a19f45a4bf757b6401194e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-parallel-lint/PHP-Parallel-Lint/zipball/6db563514f27e19595a19f45a4bf757b6401194e",
                "reference": "6db563514f27e19595a19f45a4bf757b6401194e",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "php": ">=5.3.0"
            },
            "replace": {
                "grogy/php-parallel-lint": "*",
                "jakub-onderka/php-parallel-lint": "*"
            },
            "require-dev": {
                "nette/tester": "^1.3 || ^2.0",
                "php-parallel-lint/php-console-highlighter": "0.* || ^1.0",
                "squizlabs/php_codesniffer": "^3.6"
            },
            "suggest": {
                "php-parallel-lint/php-console-highlighter": "Highlight syntax in code snippet"
            },
            "bin": [
                "parallel-lint"
            ],
            "type": "library",
            "autoload": {
                "classmap": [
                    "./src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-2-Clause"
            ],
            "authors": [
                {
                    "name": "Jakub Onderka",
                    "email": "ahoj@jakubonderka.cz"
                }
            ],
            "description": "This tool checks the syntax of PHP files about 20x faster than serial check.",
            "homepage": "https://github.com/php-parallel-lint/PHP-Parallel-Lint",
            "keywords": [
                "lint",
                "static analysis"
            ],
            "support": {
                "issues": "https://github.com/php-parallel-lint/PHP-Parallel-Lint/issues",
                "source": "https://github.com/php-parallel-lint/PHP-Parallel-Lint/tree/v1.4.0"
            },
            "time": "2024-03-27T12:14:49+00:00"
        },
        {
            "name": "phpoption/phpoption",
            "version": "1.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/schmittjoh/php-option.git",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "1.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpOption\\": "src/PhpOption/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "authors": [
                {
                    "name": "Johannes M. Schmitt",
                    "email": "schmittjoh@gmail.com",
                    "homepage": "https://github.com/schmittjoh"
                },
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "Option Type for PHP",
            "keywords": [
                "language",
                "option",
                "php",
                "type"
            ],
            "support": {
                "issues": "https://github.com/schmittjoh/php-option/issues",
                "source": "https://github.com/schmittjoh/php-option/tree/1.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpoption/phpoption",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:41:07+00:00"
        },
        {
            "name": "phpstan/phpdoc-parser",
            "version": "2.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpdoc-parser.git",
                "reference": "9b30d6fd026b2c132b3985ce6b23bec09ab3aa68"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpdoc-parser/zipball/9b30d6fd026b2c132b3985ce6b23bec09ab3aa68",
                "reference": "9b30d6fd026b2c132b3985ce6b23bec09ab3aa68",
                "shasum": ""
            },
            "require": {
                "php": "^7.4 || ^8.0"
            },
            "require-dev": {
                "doctrine/annotations": "^2.0",
                "nikic/php-parser": "^5.3.0",
                "php-parallel-lint/php-parallel-lint": "^1.2",
                "phpstan/extension-installer": "^1.0",
                "phpstan/phpstan": "^2.0",
                "phpstan/phpstan-phpunit": "^2.0",
                "phpstan/phpstan-strict-rules": "^2.0",
                "phpunit/phpunit": "^9.6",
                "symfony/process": "^5.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "PHPStan\\PhpDocParser\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPDoc parser with support for nullable, intersection and generic types",
            "support": {
                "issues": "https://github.com/phpstan/phpdoc-parser/issues",
                "source": "https://github.com/phpstan/phpdoc-parser/tree/2.1.0"
            },
            "time": "2025-02-19T13:28:12+00:00"
        },
        {
            "name": "phpstan/phpstan",
            "version": "1.12.23",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpstan.git",
                "reference": "29201e7a743a6ab36f91394eab51889a82631428"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpstan/zipball/29201e7a743a6ab36f91394eab51889a82631428",
                "reference": "29201e7a743a6ab36f91394eab51889a82631428",
                "shasum": ""
            },
            "require": {
                "php": "^7.2|^8.0"
            },
            "conflict": {
                "phpstan/phpstan-shim": "*"
            },
            "bin": [
                "phpstan",
                "phpstan.phar"
            ],
            "type": "library",
            "autoload": {
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPStan - PHP Static Analysis Tool",
            "keywords": [
                "dev",
                "static analysis"
            ],
            "support": {
                "docs": "https://phpstan.org/user-guide/getting-started",
                "forum": "https://github.com/phpstan/phpstan/discussions",
                "issues": "https://github.com/phpstan/phpstan/issues",
                "security": "https://github.com/phpstan/phpstan/security/policy",
                "source": "https://github.com/phpstan/phpstan-src"
            },
            "funding": [
                {
                    "url": "https://github.com/ondrejmirtes",
                    "type": "github"
                },
                {
                    "url": "https://github.com/phpstan",
                    "type": "github"
                }
            ],
            "time": "2025-03-23T14:57:32+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "9.2.32",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "85402a822d1ecf1db1096959413d35e1c37cf1a5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/85402a822d1ecf1db1096959413d35e1c37cf1a5",
                "reference": "85402a822d1ecf1db1096959413d35e1c37cf1a5",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-xmlwriter": "*",
                "nikic/php-parser": "^4.19.1 || ^5.1.0",
                "php": ">=7.3",
                "phpunit/php-file-iterator": "^3.0.6",
                "phpunit/php-text-template": "^2.0.4",
                "sebastian/code-unit-reverse-lookup": "^2.0.3",
                "sebastian/complexity": "^2.0.3",
                "sebastian/environment": "^5.1.5",
                "sebastian/lines-of-code": "^1.0.4",
                "sebastian/version": "^3.0.2",
                "theseer/tokenizer": "^1.2.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.6"
            },
            "suggest": {
                "ext-pcov": "PHP extension that provides line coverage",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "9.2.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
                "security": "https://github.com/sebastianbergmann/php-code-coverage/security/policy",
                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.32"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-08-22T04:23:01+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "3.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2021-12-02T12:48:52+00:00"
        },
        {
            "name": "phpunit/php-invoker",
            "version": "3.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-invoker.git",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "ext-pcntl": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-pcntl": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Invoke callables with a timeout",
            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
            "keywords": [
                "process"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
                "source": "https://github.com/sebastianbergmann/php-invoker/tree/3.1.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:58:55+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
                "source": "https://github.com/sebastianbergmann/php-text-template/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T05:33:50+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "5.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
                "source": "https://github.com/sebastianbergmann/php-timer/tree/5.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:16:10+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "9.6.22",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "f80235cb4d3caa59ae09be3adf1ded27521d1a9c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/f80235cb4d3caa59ae09be3adf1ded27521d1a9c",
                "reference": "f80235cb4d3caa59ae09be3adf1ded27521d1a9c",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.5.0 || ^2",
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "ext-xmlwriter": "*",
                "myclabs/deep-copy": "^1.12.1",
                "phar-io/manifest": "^2.0.4",
                "phar-io/version": "^3.2.1",
                "php": ">=7.3",
                "phpunit/php-code-coverage": "^9.2.32",
                "phpunit/php-file-iterator": "^3.0.6",
                "phpunit/php-invoker": "^3.1.1",
                "phpunit/php-text-template": "^2.0.4",
                "phpunit/php-timer": "^5.0.3",
                "sebastian/cli-parser": "^1.0.2",
                "sebastian/code-unit": "^1.0.8",
                "sebastian/comparator": "^4.0.8",
                "sebastian/diff": "^4.0.6",
                "sebastian/environment": "^5.1.5",
                "sebastian/exporter": "^4.0.6",
                "sebastian/global-state": "^5.0.7",
                "sebastian/object-enumerator": "^4.0.4",
                "sebastian/resource-operations": "^3.0.4",
                "sebastian/type": "^3.2.1",
                "sebastian/version": "^3.0.2"
            },
            "suggest": {
                "ext-soap": "To be able to generate mocks based on WSDL files",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "9.6-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Framework/Assert/Functions.php"
                ],
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
                "security": "https://github.com/sebastianbergmann/phpunit/security/policy",
                "source": "https://github.com/sebastianbergmann/phpunit/tree/9.6.22"
            },
            "funding": [
                {
                    "url": "https://phpunit.de/sponsors.html",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpunit/phpunit",
                    "type": "tidelift"
                }
            ],
            "time": "2024-12-05T13:48:26+00:00"
        },
        {
            "name": "sebastian/cli-parser",
            "version": "1.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/cli-parser.git",
                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for parsing CLI options",
            "homepage": "https://github.com/sebastianbergmann/cli-parser",
            "support": {
                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
                "source": "https://github.com/sebastianbergmann/cli-parser/tree/1.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:27:43+00:00"
        },
        {
            "name": "sebastian/code-unit",
            "version": "1.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit.git",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the PHP code units",
            "homepage": "https://github.com/sebastianbergmann/code-unit",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
                "source": "https://github.com/sebastianbergmann/code-unit/tree/1.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:08:54+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:30:19+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "4.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/diff": "^4.0",
                "sebastian/exporter": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/comparator/issues",
                "source": "https://github.com/sebastianbergmann/comparator/tree/4.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2022-09-14T12:41:17+00:00"
        },
        {
            "name": "sebastian/complexity",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/complexity.git",
                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a",
                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.18 || ^5.0",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for calculating the complexity of PHP code units",
            "homepage": "https://github.com/sebastianbergmann/complexity",
            "support": {
                "issues": "https://github.com/sebastianbergmann/complexity/issues",
                "source": "https://github.com/sebastianbergmann/complexity/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-12-22T06:19:30+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "4.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc",
                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3",
                "symfony/process": "^4.2 || ^5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff",
                "udiff",
                "unidiff",
                "unified diff"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/diff/issues",
                "source": "https://github.com/sebastianbergmann/diff/tree/4.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:30:58+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "5.1.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-posix": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "http://www.github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/environment/issues",
                "source": "https://github.com/sebastianbergmann/environment/tree/5.1.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:03:51+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "4.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72",
                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-mbstring": "*",
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "https://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/exporter/issues",
                "source": "https://github.com/sebastianbergmann/exporter/tree/4.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:33:00+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "5.0.7",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-dom": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-uopz": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "http://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/global-state/issues",
                "source": "https://github.com/sebastianbergmann/global-state/tree/5.0.7"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:35:11+00:00"
        },
        {
            "name": "sebastian/lines-of-code",
            "version": "1.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5",
                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.18 || ^5.0",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for counting the lines of code in PHP source code",
            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
            "support": {
                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-12-22T06:20:34+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "4.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:12:34+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
                "source": "https://github.com/sebastianbergmann/object-reflector/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:14:26+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "4.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "https://github.com/sebastianbergmann/recursion-context",
            "support": {
                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
                "source": "https://github.com/sebastianbergmann/recursion-context/tree/4.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:07:39+00:00"
        },
        {
            "name": "sebastian/resource-operations",
            "version": "3.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/resource-operations.git",
                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides a list of PHP built-in functions that operate on resources",
            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
            "support": {
                "source": "https://github.com/sebastianbergmann/resource-operations/tree/3.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-14T16:00:52+00:00"
        },
        {
            "name": "sebastian/type",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/type.git",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the types of the PHP type system",
            "homepage": "https://github.com/sebastianbergmann/type",
            "support": {
                "issues": "https://github.com/sebastianbergmann/type/issues",
                "source": "https://github.com/sebastianbergmann/type/tree/3.2.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:13:03+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "c6c1022351a901512170118436c764e473f6de8c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c",
                "reference": "c6c1022351a901512170118436c764e473f6de8c",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "support": {
                "issues": "https://github.com/sebastianbergmann/version/issues",
                "source": "https://github.com/sebastianbergmann/version/tree/3.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T06:39:44+00:00"
        },
        {
            "name": "slevomat/coding-standard",
            "version": "8.16.2",
            "source": {
                "type": "git",
                "url": "https://github.com/slevomat/coding-standard.git",
                "reference": "8bf0408a9cf30687d87957d364de9a3d5d00d948"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/slevomat/coding-standard/zipball/8bf0408a9cf30687d87957d364de9a3d5d00d948",
                "reference": "8bf0408a9cf30687d87957d364de9a3d5d00d948",
                "shasum": ""
            },
            "require": {
                "dealerdirect/phpcodesniffer-composer-installer": "^0.6.2 || ^0.7 || ^1.0",
                "php": "^7.4 || ^8.0",
                "phpstan/phpdoc-parser": "^2.1.0",
                "squizlabs/php_codesniffer": "^3.11.3"
            },
            "require-dev": {
                "phing/phing": "3.0.1",
                "php-parallel-lint/php-parallel-lint": "1.4.0",
                "phpstan/phpstan": "2.1.11",
                "phpstan/phpstan-deprecation-rules": "2.0.1",
                "phpstan/phpstan-phpunit": "2.0.6",
                "phpstan/phpstan-strict-rules": "2.0.4",
                "phpunit/phpunit": "9.6.8|10.5.45|11.4.4|11.5.15|12.0.10"
            },
            "type": "phpcodesniffer-standard",
            "extra": {
                "branch-alias": {
                    "dev-master": "8.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "SlevomatCodingStandard\\": "SlevomatCodingStandard/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Slevomat Coding Standard for PHP_CodeSniffer complements Consistence Coding Standard by providing sniffs with additional checks.",
            "keywords": [
                "dev",
                "phpcs"
            ],
            "support": {
                "issues": "https://github.com/slevomat/coding-standard/issues",
                "source": "https://github.com/slevomat/coding-standard/tree/8.16.2"
            },
            "funding": [
                {
                    "url": "https://github.com/kukulich",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/slevomat/coding-standard",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T19:37:58+00:00"
        },
        {
            "name": "squizlabs/php_codesniffer",
            "version": "3.12.0",
            "source": {
                "type": "git",
                "url": "https://github.com/PHPCSStandards/PHP_CodeSniffer.git",
                "reference": "2d1b63db139c3c6ea0c927698e5160f8b3b8d630"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/PHPCSStandards/PHP_CodeSniffer/zipball/2d1b63db139c3c6ea0c927698e5160f8b3b8d630",
                "reference": "2d1b63db139c3c6ea0c927698e5160f8b3b8d630",
                "shasum": ""
            },
            "require": {
                "ext-simplexml": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": ">=5.4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.0 || ^5.0 || ^6.0 || ^7.0 || ^8.0 || ^9.3.4"
            },
            "bin": [
                "bin/phpcbf",
                "bin/phpcs"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Greg Sherwood",
                    "role": "Former lead"
                },
                {
                    "name": "Juliette Reinders Folmer",
                    "role": "Current lead"
                },
                {
                    "name": "Contributors",
                    "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer/graphs/contributors"
                }
            ],
            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
            "homepage": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
            "keywords": [
                "phpcs",
                "standards",
                "static analysis"
            ],
            "support": {
                "issues": "https://github.com/PHPCSStandards/PHP_CodeSniffer/issues",
                "security": "https://github.com/PHPCSStandards/PHP_CodeSniffer/security/policy",
                "source": "https://github.com/PHPCSStandards/PHP_CodeSniffer",
                "wiki": "https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki"
            },
            "funding": [
                {
                    "url": "https://github.com/PHPCSStandards",
                    "type": "github"
                },
                {
                    "url": "https://github.com/jrfnl",
                    "type": "github"
                },
                {
                    "url": "https://opencollective.com/php_codesniffer",
                    "type": "open_collective"
                },
                {
                    "url": "https://thanks.dev/u/gh/phpcsstandards",
                    "type": "thanks_dev"
                }
            ],
            "time": "2025-03-18T05:04:51+00:00"
        },
        {
            "name": "symfony/polyfill-php80",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php80.git",
                "reference": "60328e362d4c2c802a54fcbf04f9d3fb892b4cf8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/60328e362d4c2c802a54fcbf04f9d3fb892b4cf8",
                "reference": "60328e362d4c2c802a54fcbf04f9d3fb892b4cf8",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php80\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ion Bazan",
                    "email": "ion.bazan@gmail.com"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php80/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/process",
            "version": "v6.4.20",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/process.git",
                "reference": "e2a61c16af36c9a07e5c9906498b73e091949a20"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/process/zipball/e2a61c16af36c9a07e5c9906498b73e091949a20",
                "reference": "e2a61c16af36c9a07e5c9906498b73e091949a20",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Process\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Executes commands in sub-processes",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/process/tree/v6.4.20"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-10T17:11:00+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.2.3",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "support": {
                "issues": "https://github.com/theseer/tokenizer/issues",
                "source": "https://github.com/theseer/tokenizer/tree/1.2.3"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:36:25+00:00"
        },
        {
            "name": "vlucas/phpdotenv",
            "version": "v5.6.1",
            "source": {
                "type": "git",
                "url": "https://github.com/vlucas/phpdotenv.git",
                "reference": "a59a13791077fe3d44f90e7133eb68e7d22eaff2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/vlucas/phpdotenv/zipball/a59a13791077fe3d44f90e7133eb68e7d22eaff2",
                "reference": "a59a13791077fe3d44f90e7133eb68e7d22eaff2",
                "shasum": ""
            },
            "require": {
                "ext-pcre": "*",
                "graham-campbell/result-type": "^1.1.3",
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3",
                "symfony/polyfill-ctype": "^1.24",
                "symfony/polyfill-mbstring": "^1.24",
                "symfony/polyfill-php80": "^1.24"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "ext-filter": "*",
                "phpunit/phpunit": "^8.5.34 || ^9.6.13 || ^10.4.2"
            },
            "suggest": {
                "ext-filter": "Required to use the boolean validator."
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "5.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Dotenv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Vance Lucas",
                    "email": "vance@vancelucas.com",
                    "homepage": "https://github.com/vlucas"
                }
            ],
            "description": "Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.",
            "keywords": [
                "dotenv",
                "env",
                "environment"
            ],
            "support": {
                "issues": "https://github.com/vlucas/phpdotenv/issues",
                "source": "https://github.com/vlucas/phpdotenv/tree/v5.6.1"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/vlucas/phpdotenv",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:52:34+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": {
        "php": "^8.2",
        "ext-json": "*"
    },
    "platform-dev": [],
    "plugin-api-version": "2.3.0"
}



================================================
File: docker-compose.yml
================================================
services:
  dev:
    build: .
    volumes:
      - ./:/code
      - ./data:/data
    environment:
      - KBC_COMPONENT_RUN_MODE=run
      - CLIENT_ID
      - CLIENT_SECRET
      - API_DATA
      - CUSTOMER_ID
      - CUSTOMER_ID_WITH_DASH
      - CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS
      - DEVELOPER_TOKEN



================================================
File: phpcs.xml
================================================
<?xml version="1.0"?>
<ruleset name="Project">
    <rule ref="vendor/keboola/coding-standard/src/ruleset.xml"/>
</ruleset>



================================================
File: phpstan-baseline.neon
================================================
parameters:
	ignoreErrors:
		-
			message: "#^Cannot access offset 'message' on mixed\\.$#"
			count: 1
			path: src/Component.php

		-
			message: "#^Cannot access offset 'refresh_token' on mixed\\.$#"
			count: 1
			path: src/Component.php

		-
			message: "#^Parameter \\#1 \\$oAuth2Credential of method Google\\\\Ads\\\\GoogleAds\\\\Lib\\\\V13\\\\GoogleAdsClientBuilder\\:\\:withOAuth2Credential\\(\\) expects Google\\\\Auth\\\\FetchAuthTokenInterface, mixed given\\.$#"
			count: 1
			path: src/Component.php

		-
			message: "#^Parameter \\#3 \\.\\.\\.\\$values of function sprintf expects bool\\|float\\|int\\|string\\|null, mixed given\\.$#"
			count: 1
			path: src/Component.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getAccountChildren\\(\\) should return bool but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getDeveloperToken\\(\\) should return string but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getName\\(\\) should return string but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getPrimaryKeys\\(\\) should return array\\<int, string\\> but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getQuery\\(\\) should return string but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:onlyEnabledCustomers\\(\\) should return bool but returns mixed\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Parameter \\#1 \\$date of method Keboola\\\\GoogleAds\\\\Configuration\\\\Config\\:\\:getDate\\(\\) expects string, mixed given\\.$#"
			count: 2
			path: src/Configuration/Config.php

		-
			message: "#^Parameter \\#2 \\$array of function array_map expects array, mixed given\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Parameter \\#3 \\$subject of function str_replace expects array\\|string, mixed given\\.$#"
			count: 1
			path: src/Configuration/Config.php

		-
			message: "#^Call to an undefined method Traversable\\<mixed, mixed\\>\\:\\:current\\(\\)\\.$#"
			count: 1
			path: src/Extractor.php

		-
			message: "#^Call to an undefined method Traversable\\<mixed, mixed\\>\\:\\:next\\(\\)\\.$#"
			count: 1
			path: src/Extractor.php

		-
			message: "#^Call to an undefined method Traversable\\<mixed, mixed\\>\\:\\:valid\\(\\)\\.$#"
			count: 1
			path: src/Extractor.php

		-
			message: "#^Method Keboola\\\\GoogleAds\\\\Extractor\\:\\:processResultRow\\(\\) should return array\\<string, string\\> but returns array\\<string, mixed\\>\\.$#"
			count: 1
			path: src/Extractor.php

		-
			message: "#^Parameter \\#1 \\$data of method Keboola\\\\GoogleAds\\\\Extractor\\:\\:processResultRow\\(\\) expects array\\<string, mixed\\>, mixed given\\.$#"
			count: 1
			path: src/Extractor.php

		-
			message: "#^Parameter \\#2 \\$array of function array_key_exists expects array, mixed given\\.$#"
			count: 1
			path: src/Extractor.php



================================================
File: phpstan.neon
================================================
includes:
    - ./phpstan-baseline.neon
parameters:
    checkMissingIterableValueType: false
    ignoreErrors:
        - '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::scalarPrototype\(\)\.#'



================================================
File: phpunit.xml.dist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<phpunit backupGlobals="false"
         backupStaticAttributes="false"
         colors="true"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         processIsolation="false"
         stopOnFailure="false"
         bootstrap="tests/phpunit/bootstrap.php">
    <testsuite name="Main Test Suite">
        <directory>tests/phpunit</directory>
    </testsuite>
</phpunit>



================================================
File: .dockerignore
================================================
vendor/



================================================
File: .env.dist
================================================
CUSTOMER_ID=
CUSTOMER_ID_WITH_DASH=
CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS=
DEVELOPER_TOKEN=
API_DATA=
CLIENT_SECRET=
CLIENT_ID=


================================================
File: docker/composer-install.sh
================================================
#!/bin/sh

EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")

if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
then
    >&2 echo 'ERROR: Invalid installer signature'
    rm composer-setup.php
    exit 1
fi

php composer-setup.php --quiet --install-dir=/usr/local/bin/ --filename=composer
RESULT=$?
rm composer-setup.php
exit $RESULT



================================================
File: docker/php-prod.ini
================================================
; Recommended production values
display_errors = Off
display_startup_errors = Off
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
html_errors = On
log_errors = On
max_input_time = 60
output_buffering = 4096
register_argc_argv = Off
request_order = "GP"
session.gc_divisor = 1000
session.sid_bits_per_character = 5
short_open_tag = Off
track_errors = Off
variables_order = "GPCS"

; Custom
date.timezone = UTC
memory_limit = -1



================================================
File: src/Component.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds;

use Google\Ads\GoogleAds\Lib\Configuration;
use Google\Ads\GoogleAds\Lib\OAuth2TokenBuilder;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClient;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClientBuilder;
use Google\ApiCore\ApiException;
use GuzzleHttp\Exception\ClientException;
use Keboola\Component\BaseComponent;
use Keboola\Component\UserException;
use Keboola\GoogleAds\Configuration\Config;
use Keboola\GoogleAds\Configuration\ConfigActionDefinition;
use Keboola\GoogleAds\Configuration\ConfigDefinition;

class Component extends BaseComponent
{
    private const ACTION_LIST_ACCOUNTS = 'listAccounts';

    protected function run(): void
    {
        $customersIdDownloaded = [];
        foreach ($this->getConfig()->getCustomersId() as $customerId) {
            $googleAdsClient = $this->getGoogleAdsClient($customerId);
            $extractor = new Extractor(
                $googleAdsClient,
                $this->getConfig(),
                $this->getLogger(),
                $this->getManifestManager(),
                $this->getDataDir(),
                $customersIdDownloaded,
            );

            try {
                $customersIdDownloaded = $extractor->extract($customerId);
            } catch (ClientException $e) {
                if (in_array($e->getCode(), range(400, 499))) {
                    throw new UserException($e->getMessage(), $e->getCode(), $e);
                }
            } catch (ApiException $e) {
                $message = json_decode($e->getMessage(), true);
                throw new UserException(sprintf(
                    '%s: %s',
                    $e->getStatus(),
                    $message['message'] ?? $e->getMessage(),
                ));
            }
        }
    }

    /**
     * @return mixed[]
     */
    protected function runListAccounts(): array
    {
        $accountHierarchy = new GetAccountHierarchy(
            $this->getGoogleAdsClient(),
            $this->getConfig()->getAccountChildren(),
        );
        return $accountHierarchy->run();
    }

    public function getConfig(): Config
    {
        /** @var Config $config */
        $config = parent::getConfig();
        return $config;
    }

    protected function getConfigClass(): string
    {
        return Config::class;
    }

    /**
     * @return array<string, string>
     */
    protected function getSyncActions(): array
    {
        return [
            self::ACTION_LIST_ACCOUNTS => 'runListAccounts',
        ];
    }

    protected function getConfigDefinitionClass(): string
    {
        $action = $this->getRawConfig()['action'] ?? 'run';
        switch ($action) {
            case self::ACTION_LIST_ACCOUNTS:
                return ConfigActionDefinition::class;
            default:
                return ConfigDefinition::class;
        }
    }

    private function getGoogleAdsClient(?string $customerId = null): GoogleAdsClient
    {
        $oauth = (new OAuth2TokenBuilder())->from($this->getOAuthConfiguration())->build();

        $googleAdsClient = (new GoogleAdsClientBuilder())
            ->withOAuth2Credential($oauth)
            ->from($this->getGoogleAdsConfiguration($customerId))
            ->build();

        return $googleAdsClient;
    }

    private function getOAuthConfiguration(): Configuration
    {
        if (empty($this->getConfig()->getAuthorization()['oauth_api']['credentials'])) {
            throw new UserException('OAuth Credentials is not set.');
        }

        $credentials = $this->getConfig()->getAuthorization()['oauth_api']['credentials'];
        $credentialsData = json_decode($credentials['#data'], true);
        return new Configuration([
            'OAUTH2' => [
                'clientId' => $credentials['appKey'],
                'clientSecret' => $credentials['#appSecret'],
                'refreshToken' => $credentialsData['refresh_token'],
            ],
        ]);
    }

    private function getGoogleAdsConfiguration(?string $customerId = null): Configuration
    {
        $config = [
            'GOOGLE_ADS' => [
                'developerToken' => $this->getConfig()->getDeveloperToken(),
            ],
        ];

        if ($customerId) {
            $config['GOOGLE_ADS']['loginCustomerId'] = $customerId;
        }

        return new Configuration($config);
    }
}



================================================
File: src/Extractor.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds;

use Generator;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClient;
use Google\Ads\GoogleAds\V19\Resources\Customer;
use Google\Ads\GoogleAds\V19\Resources\CustomerClient;
use Google\Ads\GoogleAds\V19\Services\GoogleAdsRow;
use Google\Ads\GoogleAds\V19\Services\SearchGoogleAdsRequest;
use Google\Ads\GoogleAds\V19\Services\SearchGoogleAdsResponse;
use Google\ApiCore\ApiException;
use Google\ApiCore\ApiStatus;
use Google\ApiCore\PagedListResponse;
use Google\Protobuf\Internal\Message;
use Google\Rpc\Code;
use GuzzleHttp\Exception\ConnectException;
use Keboola\Component\Manifest\ManifestManager;
use Keboola\Component\Manifest\ManifestManager\Options\OutTableManifestOptions;
use Keboola\Component\UserException;
use Keboola\Csv\CsvWriter;
use Keboola\Csv\Exception;
use Keboola\GoogleAds\Configuration\Config;
use Psr\Log\LoggerInterface;
use Retry\BackOff\ExponentialBackOffPolicy;
use Retry\Policy\SimpleRetryPolicy;
use Retry\RetryProxy;

class Extractor
{
    private const CLIENT_TIMEOUT_MILLIS = 300*60*1000;

    private const REPORT_PAGE_SIZE = 1000;

    private const CUSTOMER_TABLE = 'customer';

    private const CAMPAIGN_TABLE = 'campaign';

    private const USER_TABLES_PRIMARY_KEYS = [
        self::CUSTOMER_TABLE => ['id'],
        self::CAMPAIGN_TABLE => ['customerId', 'id'],
    ];
    private const RETRY_SETTINGS = [
        'totalTimeoutMillis' => self::CLIENT_TIMEOUT_MILLIS,
        'initialRpcTimeoutMillis' => self::CLIENT_TIMEOUT_MILLIS / 10,
        'maxRpcTimeoutMillis' => self::CLIENT_TIMEOUT_MILLIS / 5,
    ];

    private GoogleAdsClient $googleAdsClient;

    private Config $config;

    private LoggerInterface $logger;

    private ManifestManager $manifestManager;

    private string $dataDir;

    /** @var string[] */
    private array $customersIdDownloaded;

    /**
     * @param string[] $customersIdDownloaded
     */
    public function __construct(
        GoogleAdsClient $googleAdsClient,
        Config $config,
        LoggerInterface $logger,
        ManifestManager $manifestManager,
        string $dataDir,
        array $customersIdDownloaded,
    ) {
        $this->googleAdsClient = $googleAdsClient;
        $this->config = $config;
        $this->logger = $logger;
        $this->manifestManager = $manifestManager;
        $this->dataDir = $dataDir;
        $this->customersIdDownloaded = $customersIdDownloaded;
    }

    /**
     * @return string[]
     */
    public function extract(string $rootCustomerId): array
    {
        /** @var Customer $customer */
        foreach ($this->getAndSaveCustomers($rootCustomerId) as $customer) {
            $customerId = (string) $customer->getId();
            $this->logger->info(sprintf('Extraction data of customer "%s".', $customer->getDescriptiveName()));
            try {
                $this->logger->info('Downloading campaigns.');
                $this->getAndSaveCampaigns($customerId);

                // Download Report
                $this->logger->info('Downloading query report.');

                $this->getRetryProxy()->call(function () use ($customerId): void {
                    $tableName = sprintf('report-%s', $this->config->getName());
                    $this->getReport(
                        $customerId,
                        $this->config->getQuery(),
                        $tableName,
                    );
                });
            } catch (ApiException|ConnectException $e) {
                $this->logger->error(sprintf(
                    'Fetching the report for client "%s" with ID "%s" failed: "%s".',
                    $customer->getDescriptiveName(),
                    $customerId,
                    $e->getMessage(),
                ));
            }
            $this->customersIdDownloaded[] = $customerId;
        }
        return $this->customersIdDownloaded;
    }

    private function getAndSaveCustomers(string $customerId): Generator
    {
        $query = [];
        $query[] = 'SELECT '
            . 'customer_client.id, '
            . 'customer_client.manager, '
            . 'customer_client.descriptive_name, '
            . 'customer_client.currency_code, '
            . 'customer_client.time_zone';

        $query[] = ' FROM customer_client';
        if ($this->config->onlyEnabledCustomers()) {
            $query[] = ' WHERE customer_client.status = ENABLED';
        }
        $query[] = ' ORDER BY customer_client.id';

        $this->logger->debug(sprintf('Call query: "%s"', implode(' ', $query)));
        $search = $this->googleAdsClient->getGoogleAdsServiceClient()->search(
            SearchGoogleAdsRequest::build(
                $customerId,
                implode(' ', $query),
            ),
            [
                'retrySettings' => array_merge(
                    self::RETRY_SETTINGS,
                    [
                        'retryableCodes' => [ApiStatus::INTERNAL, Code::INTERNAL],
                    ],
                ),
            ],
        );

        $listColumns = $this->getColumnsFromSearch($search, true);
        unset($listColumns['manager']);

        $csvCustomer = $this->openCsvFile(sprintf(
            '%s/out/tables/%s.csv',
            $this->dataDir,
            self::CUSTOMER_TABLE,
        ));

        // Create manifest for Customer
        $manifestOptions = new OutTableManifestOptions();
        $manifestOptions
            ->setIncremental(true)
            ->setPrimaryKeyColumns(self::USER_TABLES_PRIMARY_KEYS[self::CUSTOMER_TABLE])
            ->setColumns(array_values($listColumns));

        $this->manifestManager->writeTableManifest(
            sprintf('%s.csv', self::CUSTOMER_TABLE),
            $manifestOptions,
        );

        foreach ($search->iterateAllElements() as $result) {
            /** @var GoogleAdsRow $result */
            if (!($result->getCustomerClient() instanceof CustomerClient)) {
                continue;
            }

            if ($result->getCustomerClient()->getManager()) {
                continue;
            }

            if (in_array($customerId, $this->customersIdDownloaded)) {
                $this->logger->info(sprintf(
                    'Customer "%s" already downloaded.',
                    $result->getCustomerClient()->getDescriptiveName(),
                ));
                continue;
            }

            $parsedCustomer = $this->parseResponse($result->getCustomerClient(), $listColumns);
            $csvCustomer->writeRow($parsedCustomer);
            yield $result->getCustomerClient();
        }
    }

    private function getAndSaveCampaigns(string $customerId): void
    {
        $csvCampaign = $this->openCsvFile(sprintf(
            '%s/out/tables/%s.csv',
            $this->dataDir,
            self::CAMPAIGN_TABLE,
        ));

        $query = [];
        $query[] = 'SELECT '
            . 'campaign.id, '
            . 'campaign.name, '
            . 'campaign.status, '
            . 'campaign.serving_status, '
            . 'campaign.ad_serving_optimization_status, '
            . 'campaign.advertising_channel_type, '
            . 'campaign.start_date, '
            . 'campaign.end_date';

        $query[] = 'FROM campaign';
        $where = [];
        if ($this->config->onlyEnabledCustomers()) {
            $where[] = 'campaign.status = ENABLED';
        }
        if ($this->config->getSince() && $this->config->getUntil()) {
            $where[] = sprintf(
                'segments.date BETWEEN "%s" AND "%s"',
                $this->config->getSince(),
                $this->config->getUntil(),
            );
        }
        if (!empty($where)) {
            $query[] = 'WHERE ' . implode(' AND ', $where);
        }
        $query[] = 'ORDER BY campaign.id';

        $this->logger->debug(sprintf('Call query: "%s"', implode(' ', $query)));
        $search = $this->googleAdsClient->getGoogleAdsServiceClient()->search(
            SearchGoogleAdsRequest::build(
                $customerId,
                implode(' ', $query),
            ),
            [
                'retrySettings' => self::RETRY_SETTINGS,
            ],
        );

        $listColumns = $this->getColumnsFromSearch($search, true);

        foreach ($search->iterateAllElements() as $result) {
            /** @var GoogleAdsRow $result */
            /** @var Message $campaign */
            $campaign = $result->getCampaign();
            $parsedCampaign = $this->parseResponse($campaign, $listColumns);
            $csvCampaign->writeRow(array_merge(
                ['customerId' => $customerId],
                $parsedCampaign,
            ));
        }

        // Create manifest for Campaigns
        $manifestOptions = new OutTableManifestOptions();
        $manifestOptions
            ->setIncremental(true)
            ->setPrimaryKeyColumns(self::USER_TABLES_PRIMARY_KEYS[self::CAMPAIGN_TABLE])
            ->setColumns(array_values(['customerId'] + $listColumns));

        $this->manifestManager->writeTableManifest(
            sprintf('%s.csv', self::CAMPAIGN_TABLE),
            $manifestOptions,
        );
    }

    private function getReport(string $customerId, string $query, string $tableName): void
    {
        if ($this->config->getSince() && $this->config->getUntil()) {
            $query .= sprintf(
                ' WHERE segments.date BETWEEN "%s" AND "%s"',
                $this->config->getSince(),
                $this->config->getUntil(),
            );
        }

        $this->logger->debug(sprintf('Call query: "%s"', $query));
        $search = $this->googleAdsClient->getGoogleAdsServiceClient()->search(
            SearchGoogleAdsRequest::build(
                $customerId,
                $query,
            ),
            [
                'retrySettings' => self::RETRY_SETTINGS,
            ],
        );

        $page = $search->getPage();
        if ($page->getPageElementCount() === 0) {
            return;
        }

        $csv = $this->openCsvFile(sprintf(
            '%s/out/tables/%s.csv',
            $this->dataDir,
            $tableName,
        ));

        $listColumns = $this->getColumnsFromSearch($search);

        $hasNextPage = true;
        $isPrimaryKeysValidated = false;
        while ($hasNextPage) {
            /** @var SearchGoogleAdsResponse $response */
            $response = $page->getResponseObject();

            /** @var GoogleAdsRow $result */
            foreach ($response->getResults() as $result) {
                $data = $this->parseResponse($result, $listColumns);
                if (!$isPrimaryKeysValidated) {
                    $this->validatePrimaryKeys($listColumns, $this->config->getPrimaryKeys());
                    $isPrimaryKeysValidated = true;
                }
                $csv->writeRow($data);
            }

            $hasNextPage = $page->hasNextPage();
            if ($hasNextPage) {
                $page = $page->getNextPage();
            }
        }

        // Create manifest for Report
        $manifestOptions = new OutTableManifestOptions();
        $manifestOptions
            ->setIncremental(true)
            ->setPrimaryKeyColumns($this->config->getPrimaryKeys())
            ->setColumns(array_values($listColumns));

        $this->manifestManager->writeTableManifest(
            sprintf('%s.csv', $tableName),
            $manifestOptions,
        );
    }

    /**
     * @param array<string, string> $listColumns
     * @return array<string, string>
     */
    private function parseResponse(Message $result, array $listColumns): array
    {
        $json = $result->serializeToJsonString();
        $data = json_decode($json, true);
        return $this->processResultRow($data, $listColumns);
    }

    /**
     * @param array<string, mixed> $data
     * @param array<string, string> $listColumns
     * @return array<string, string>
     */
    private function processResultRow(array $data, array $listColumns): array
    {
        $output = [];
        foreach ($listColumns as $columnKey => $columnName) {
            $columnData = $data;
            foreach (explode('.', $columnKey) as $key) {
                if (!array_key_exists($key, $columnData)) {
                    $output[$columnName] = null;
                    continue 2;
                }
                $columnData = $columnData[$key];
            }
            if (is_array($columnData)) {
                $columnData = json_encode($columnData);
            }
            $output[$columnName] = $columnData;
        }
        return $output;
    }

    /**
     * @param array<string, string> $columns
     * @param array<int, string> $primaryKeys
     */
    private function validatePrimaryKeys(array $columns, array $primaryKeys): void
    {
        $invalidPrimaryKeys = [];
        foreach ($primaryKeys as $primaryKey) {
            if (!in_array($primaryKey, $columns)) {
                $invalidPrimaryKeys[] = $primaryKey;
            }
        }
        if ($invalidPrimaryKeys) {
            throw new UserException(sprintf(
                'Primary keys "%s" are not valid. Expected keys: "%s"',
                implode(', ', $invalidPrimaryKeys),
                implode(', ', $columns),
            ));
        }
    }

    /**
     * @return array<string,string>
     */
    private function getColumnsFromSearch(PagedListResponse $search, bool $skipFirstColumnKey = false): array
    {
        $listColumns = [];

        /** @var SearchGoogleAdsResponse $response */
        $response = $search->getPage()->getResponseObject();

        $fieldMask = $response->getFieldMask();
        if (!$fieldMask) {
            return [];
        }
        $fieldMaskPaths = $fieldMask->getPaths();
        $iterator = $fieldMaskPaths->getIterator();
        while ($iterator->valid()) {
            $column = (string) $iterator->current();
            if ($skipFirstColumnKey) {
                $column = explode('.', $column);
                array_shift($column);
                $column = implode('.', $column);
            }
            $columnKey = lcfirst(str_replace('_', '', ucwords($column, '_')));
            $columnValue = lcfirst(str_replace(['.', '_'], '', ucwords($column, '._')));

            $listColumns[$columnKey] = $columnValue;
            $iterator->next();
        }

        return $listColumns;
    }

    private function openCsvFile(string $fileName): CsvWriter
    {
        $filePointer = @fopen($fileName, 'a');
        if (!$filePointer) {
            $message = !is_null(error_get_last()) ? error_get_last()['message'] : '';
            throw new Exception(
                "Cannot open file {$fileName} " . $message,
                Exception::FILE_NOT_EXISTS,
            );
        }
        return new CsvWriter($filePointer);
    }

    private function getRetryProxy(): RetryProxy
    {
        $policy = new SimpleRetryPolicy(
            Config::RETRY_ATTEMPTS,
            ['Exception', 'ErrorExceptions', 'ApiException'],
        );
        $backoff = new ExponentialBackOffPolicy();
        return new RetryProxy($policy, $backoff, $this->logger);
    }
}



================================================
File: src/GetAccountHierarchy.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds;

use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClient;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClientBuilder;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsException;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsServerStreamDecorator;
use Google\Ads\GoogleAds\V19\Errors\GoogleAdsError;
use Google\Ads\GoogleAds\V19\Resources\CustomerClient;
use Google\Ads\GoogleAds\V19\Services\Client\CustomerServiceClient;
use Google\Ads\GoogleAds\V19\Services\GoogleAdsRow;
use Google\Ads\GoogleAds\V19\Services\ListAccessibleCustomersRequest;
use Google\Ads\GoogleAds\V19\Services\SearchGoogleAdsStreamRequest;
use Google\ApiCore\ApiException;
use GuzzleHttp\Exception\ClientException;
use Keboola\Component\UserException;

class GetAccountHierarchy
{
    private GoogleAdsClient $googleAdsClient;

    /**
     * @var CustomerClient[]
     */
    private static array $rootCustomerClients = [];

    private bool $getAccountChildren;

    public function __construct(GoogleAdsClient $googleAdsClient, bool $getAccountChildren = false)
    {
        $this->googleAdsClient = $googleAdsClient;
        $this->getAccountChildren = $getAccountChildren;
    }

    /**
     * @return array<int|string, mixed>|array
     */
    public function run(): array
    {
        $allHierarchies = [];
        try {
            $rootCustomerIds = self::getAccessibleCustomers($this->googleAdsClient);

            foreach ($rootCustomerIds as $rootCustomerId) {
                try {
                    $customerClientToHierarchy = self::createCustomerClientToHierarchy($rootCustomerId);
                } catch (ApiException $exception) {
                    continue;
                }
                if (!is_null($customerClientToHierarchy)) {
                    $allHierarchies += $customerClientToHierarchy;
                }
            }
        } catch (GoogleAdsException $googleAdsException) {
            $messages = [];
            foreach ($googleAdsException->getGoogleAdsFailure()->getErrors() as $error) {
                /** @var GoogleAdsError $error */
                $messages[] = $error->getMessage();
            }
            throw new UserException(implode("\n", $messages));
        } catch (ApiException $apiException) {
            throw new UserException(sprintf(
                "ApiException was thrown with message '%s'.",
                $apiException->getMessage(),
            ));
        } catch (ClientException $clientException) {
            throw new UserException(sprintf(
                "ClientException was thrown with message '%s'.",
                $clientException->getMessage(),
            ));
        }

        $result = [];
        /** @var array $customerIdsToChildAccounts */
        foreach ($allHierarchies as $rootCustomerId => $customerIdsToChildAccounts) {
            $result[$rootCustomerId] =
                self::buildAccountHierarchy(self::$rootCustomerClients[$rootCustomerId], $customerIdsToChildAccounts);
        }
        return $result;
    }

    /**
     * @return array<int|string, mixed>|null
     */
    private function createCustomerClientToHierarchy(int $rootCustomerId): ?array
    {
        $googleAdsClient = (new GoogleAdsClientBuilder())
            ->withOAuth2Credential($this->googleAdsClient->getOAuth2Credential())
            ->withDeveloperToken($this->googleAdsClient->getDeveloperToken())
            ->withLoginCustomerId($rootCustomerId)
            ->build();

        $googleAdsServiceClient = $googleAdsClient->getGoogleAdsServiceClient();

        $query = sprintf(
            'SELECT customer_client.client_customer, customer_client.level,'
            . ' customer_client.manager, customer_client.descriptive_name,'
            . ' customer_client.id FROM customer_client'
            . ' WHERE customer_client.level <= %d AND customer_client.status = ENABLED',
            $this->getAccountChildren === true ? 1 : 0,
        );

        $rootCustomerClient = null;
        $managerCustomerIdsToSearch = [$rootCustomerId];

        $customerIdsToChildAccounts = [];

        while (!empty($managerCustomerIdsToSearch)) {
            $customerIdToSearch = array_shift($managerCustomerIdsToSearch);

            /** @var GoogleAdsServerStreamDecorator $stream */
            $stream = $googleAdsServiceClient->searchStream(SearchGoogleAdsStreamRequest::build(
                (string) $customerIdToSearch,
                $query,
            ));

            foreach ($stream->iterateAllElements() as $googleAdsRow) {
                /** @var GoogleAdsRow $googleAdsRow */
                $customerClient = $googleAdsRow->getCustomerClient();

                if (is_null($customerClient)) {
                    continue;
                }

                if ($customerClient->getId() === $rootCustomerId) {
                    $rootCustomerClient = $customerClient;
                    self::$rootCustomerClients[$rootCustomerId] = $rootCustomerClient;
                }

                if ($customerClient->getId() === $customerIdToSearch) {
                    continue;
                }

                $customerIdsToChildAccounts[$customerIdToSearch][] = $customerClient;

                if ($customerClient->getManager()) {
                    $alreadyVisited = array_key_exists(
                        $customerClient->getId(),
                        $customerIdsToChildAccounts,
                    );
                    if (!$alreadyVisited && $customerClient->getLevel() === 1) {
                        $managerCustomerIdsToSearch[] = $customerClient->getId();
                    }
                }
            }
        }

        return is_null($rootCustomerClient) ? null : [$rootCustomerClient->getId() => $customerIdsToChildAccounts];
    }

    /**
     * @return int[]
     */
    private static function getAccessibleCustomers(GoogleAdsClient $googleAdsClient): array
    {
        $customerServiceClient = $googleAdsClient->getCustomerServiceClient();
        $accessibleCustomers = $customerServiceClient->listAccessibleCustomers(new ListAccessibleCustomersRequest());

        $accessibleCustomerIds = [];
        /** @var string $customerResourceName */
        foreach ($accessibleCustomers->getResourceNames() as $customerResourceName) {
            $customer = CustomerServiceClient::parseName($customerResourceName)['customer_id'];
            $accessibleCustomerIds[] = intval($customer);
        }

        return $accessibleCustomerIds;
    }


    /**
     * @param array<string, array<int, CustomerClient>> $customerIdsToChildAccounts
     * @return array<string, mixed>
     */
    private static function buildAccountHierarchy(
        CustomerClient $customerClient,
        array $customerIdsToChildAccounts,
    ): array {
        $customerId = $customerClient->getId();
        $customer = [
            'info' => json_decode($customerClient->serializeToJsonString(), true),
            'children' => [],
        ];

        // Recursively call this function for all child accounts of $customerClient.
        if (array_key_exists($customerId, $customerIdsToChildAccounts)) {
            foreach ($customerIdsToChildAccounts[$customerId] as $childAccount) {
                $customer['children'][] = self::buildAccountHierarchy($childAccount, $customerIdsToChildAccounts);
            }
        }

        return $customer;
    }
}



================================================
File: src/run.php
================================================
<?php

declare(strict_types=1);

use Keboola\Component\Logger;
use Keboola\Component\UserException;
use Keboola\GoogleAds\Component;

require __DIR__ . '/../vendor/autoload.php';

$logger = new Logger();
try {
    $app = new Component($logger);
    $app->execute();
    exit(0);
} catch (UserException $e) {
    $logger->error($e->getMessage());
    exit(1);
} catch (Throwable $e) {
    $logger->critical(
        get_class($e) . ':' . $e->getMessage(),
        [
            'errFile' => $e->getFile(),
            'errLine' => $e->getLine(),
            'errCode' => $e->getCode(),
            'errTrace' => $e->getTraceAsString(),
            'errPrevious' => is_object($e->getPrevious()) ? get_class($e->getPrevious()) : '',
        ],
    );
    exit(2);
}



================================================
File: src/Configuration/Config.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\Configuration;

use Keboola\Component\Config\BaseConfig;
use Keboola\Component\UserException;

class Config extends BaseConfig
{
    public const RETRY_ATTEMPTS = 5;

    public function getName(): string
    {
        return $this->getValue(['parameters', 'name']);
    }

    public function getQuery(): string
    {
        return $this->getValue(['parameters', 'query']);
    }

    /**
     * @return string[]
     */
    public function getCustomersId(): array
    {
        $customers = $this->getValue(['parameters', 'customerId']);
        return array_map(fn($v) => str_replace('-', '', $v), $customers);
    }

    public function getAccountChildren(): bool
    {
        return $this->getValue(['parameters', 'getAccountChildren'], false);
    }

    public function getSince(): ?string
    {
        $since = $this->getValue(['parameters', 'since'], '-1 day');
        if ($since) {
            return $this->getDate($since, 'since');
        }
        return null;
    }

    /**
     * @return array<int, string>
     */
    public function getPrimaryKeys(): array
    {
        return $this->getValue(['parameters', 'primary'], []);
    }

    public function getUntil(): ?string
    {
        $until = $this->getValue(['parameters', 'until'], '-1 day');
        if ($until) {
            return $this->getDate($until, 'until');
        }
        return null;
    }

    public function getDeveloperToken(): string
    {
        $localDeveloperToken = $this->getValue(['parameters', '#developerToken'], false);
        if ($localDeveloperToken) {
            return $localDeveloperToken;
        }
        $imageParameters = $this->getImageParameters();
        if (!isset($imageParameters['#developer_token'])) {
            throw new UserException('Developer token doesn\'t set.');
        }
        return $imageParameters['#developer_token'];
    }

    public function onlyEnabledCustomers(): bool
    {
        return $this->getValue(['parameters', 'onlyEnabledCustomers'], true);
    }

    protected function getDate(string $date, string $name): string
    {
        $time = strtotime($date);
        if ($time === false) {
            throw new UserException("Date $name in configuration is invalid.");
        }
        return date('Y-m-d', $time);
    }
}



================================================
File: src/Configuration/ConfigActionDefinition.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\Configuration;

use Keboola\Component\Config\BaseConfigDefinition;
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;

class ConfigActionDefinition extends BaseConfigDefinition
{
    protected function getParametersDefinition(): ArrayNodeDefinition
    {
        $parametersNode = parent::getParametersDefinition();
        // @formatter:off
        /** @noinspection NullPointerExceptionInspection */
        $parametersNode
            ->children()
                ->booleanNode('getAccountChildren')->defaultFalse()
            ->end()
        ;
        // @formatter:on
        return $parametersNode;
    }
}



================================================
File: src/Configuration/ConfigDefinition.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\Configuration;

use Keboola\Component\Config\BaseConfigDefinition;
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;

class ConfigDefinition extends BaseConfigDefinition
{
    protected function getParametersDefinition(): ArrayNodeDefinition
    {
        $parametersNode = parent::getParametersDefinition();
        // @formatter:off
        /** @noinspection NullPointerExceptionInspection */
        $parametersNode
            ->ignoreExtraKeys(false)
            ->children()
                ->arrayNode('customerId')
                    ->isRequired()
                    ->cannotBeEmpty()
                    ->beforeNormalization()
                        ->ifString()->then(fn($v) => [$v])
                    ->end()
                    ->scalarPrototype()->end()
                ->end()
                ->booleanNode('onlyEnabledCustomers')->defaultTrue()->end()
                ->scalarNode('since')->end()
                ->scalarNode('until')->end()
                ->scalarNode('#developerToken')->end()
                ->scalarNode('name')->isRequired()->cannotBeEmpty()->end()
                ->scalarNode('query')->isRequired()->cannotBeEmpty()->end()
                ->arrayNode('primary')->scalarPrototype()->end()->end()
            ->end()
        ;

        // @formatter:on
        return $parametersNode;
    }
}



================================================
File: tests/functional/DatadirTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\FunctionalTests;

use Keboola\DatadirTests\DatadirTestCase;
use RuntimeException;
use Symfony\Component\Finder\Finder;
use Throwable;

class DatadirTest extends DatadirTestCase
{
    public function assertDirectoryContentsSame(string $expected, string $actual): void
    {
        $this->prettifyAllManifests($actual);
        parent::assertDirectoryContentsSame($expected, $actual);
    }

    protected function setUp(): void
    {
        parent::setUp();
        putenv('KBC_COMPONENT_RUN_MODE=run');

        // Test dir, eg. "/code/tests/functional/full-load-ok"
        $this->testProjectDir = $this->getTestFileDir() . '/' . $this->dataName();

        // Load setUp.php file - used to init database state
        $setUpPhpFile = $this->testProjectDir . '/setUp.php';
        if (file_exists($setUpPhpFile)) {
            // Get callback from file and check it
            $initCallback = require $setUpPhpFile;
            if (!is_callable($initCallback)) {
                throw new RuntimeException(sprintf('File "%s" must return callback!', $setUpPhpFile));
            }

            // Invoke callback
            $initCallback($this);
        }
    }

    protected function prettifyAllManifests(string $actual): void
    {
        foreach ($this->findManifests($actual . '/tables') as $file) {
            $this->prettifyJsonFile((string) $file->getRealPath());
        }
    }

    protected function prettifyJsonFile(string $path): void
    {
        $json = (string) file_get_contents($path);
        try {
            file_put_contents($path, (string) json_encode(json_decode($json), JSON_PRETTY_PRINT));
        } catch (Throwable $e) {
            // If a problem occurs, preserve the original contents
            file_put_contents($path, $json);
        }
    }

    protected function findManifests(string $dir): Finder
    {
        $finder = new Finder();
        return $finder->files()->in($dir)->name(['~.*\.manifest~']);
    }
}



================================================
File: tests/functional/customer-id-with-dash/expected-code
================================================
0


================================================
File: tests/functional/customer-id-with-dash/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/customer-id-with-dash/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/campaign.csv.manifest
================================================
{
  "primary_key": [
    "customerId",
    "id"
  ],
  "columns": [
    "customerId",
    "id",
    "name",
    "status",
    "servingStatus",
    "adServingOptimizationStatus",
    "advertisingChannelType",
    "startDate",
    "endDate"
  ],
  "incremental": true
}


================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/customer.csv.manifest
================================================
{
  "primary_key": [
    "id"
  ],
  "columns": [
    "id",
    "descriptiveName",
    "currencyCode",
    "timeZone"
  ],
  "incremental": true
}


================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/report-test-report.csv
================================================
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/customer-id-with-dash/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
  "primary_key": [],
  "columns": [
    "campaignId",
    "campaignName",
    "metricsClicks",
    "metricsImpressions"
  ],
  "incremental": true
}


================================================
File: tests/functional/customer-id-with-dash/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID_WITH_DASH)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/empty-app/expected-code
================================================
1


================================================
File: tests/functional/empty-app/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/empty-app/expected/data/out/tables/.gitkeep
================================================



================================================
File: tests/functional/empty-app/source/data/config.json
================================================
{
  "parameters": {}
}



================================================
File: tests/functional/empty-response/expected-code
================================================
0


================================================
File: tests/functional/empty-response/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/empty-response/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/empty-response/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/empty-response/expected/data/out/tables/campaign.csv.manifest
================================================
{
  "primary_key": [
    "customerId",
    "id"
  ],
  "columns": [
    "customerId",
    "id",
    "name",
    "status",
    "servingStatus",
    "adServingOptimizationStatus",
    "advertisingChannelType",
    "startDate",
    "endDate"
  ],
  "incremental": true
}


================================================
File: tests/functional/empty-response/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/empty-response/expected/data/out/tables/customer.csv.manifest
================================================
{
  "primary_key": [
    "id"
  ],
  "columns": [
    "id",
    "descriptiveName",
    "currencyCode",
    "timeZone"
  ],
  "incremental": true
}


================================================
File: tests/functional/empty-response/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT segments.date, metrics.cost_micros, customer.currency_code, customer.descriptive_name FROM customer"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/error-invalid-credentials/expected-code
================================================
1


================================================
File: tests/functional/error-invalid-credentials/expected-stderr
================================================
Client error: `POST https://oauth2.googleapis.com/token` resulted in a `401 Unauthorized` response: {   "error": "invalid_client",   "error_description": "The OAuth client was not found." }


================================================
File: tests/functional/error-invalid-credentials/expected-stdout
================================================



================================================
File: tests/functional/error-invalid-credentials/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/error-invalid-credentials/expected/data/out/tables/.gitkeep
================================================



================================================
File: tests/functional/error-invalid-credentials/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "invalid",
        "appKey": "invalid"
      }
    }
  }
}


================================================
File: tests/functional/error-list-account-invalid-credentials/expected-code
================================================
1


================================================
File: tests/functional/error-list-account-invalid-credentials/expected-stderr
================================================
ClientException was thrown with message 'Client error: `POST https://oauth2.googleapis.com/token` resulted in a `400 Bad Request` response: {   "error": "invalid_grant",   "error_description": "Bad Request" } '.


================================================
File: tests/functional/error-list-account-invalid-credentials/expected-stdout
================================================



================================================
File: tests/functional/error-list-account-invalid-credentials/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/error-list-account-invalid-credentials/expected/data/out/tables/.gitkeep
================================================



================================================
File: tests/functional/error-list-account-invalid-credentials/source/data/config.json
================================================
{
  "action": "listAccounts",
  "parameters": {},
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "{\"refresh_token\": \"invalidToken\"}",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/error-wrong-primary-keys/expected-code
================================================
1


================================================
File: tests/functional/error-wrong-primary-keys/expected-stderr
================================================
Primary keys "invalidPrimaryKey" are not valid. Expected keys: "campaignId, campaignName, metricsClicks, metricsImpressions"


================================================
File: tests/functional/error-wrong-primary-keys/expected-stdout
================================================
Extraction data of customer "Keboola Test".
Downloading campaigns.
Downloading query report.
Primary keys "invalidPrimaryKey" are not valid. Expected keys: "campaignId, campaignName, metricsClicks, metricsImpressions". Retrying... [1x]
Primary keys "invalidPrimaryKey" are not valid. Expected keys: "campaignId, campaignName, metricsClicks, metricsImpressions". Retrying... [2x]
Primary keys "invalidPrimaryKey" are not valid. Expected keys: "campaignId, campaignName, metricsClicks, metricsImpressions". Retrying... [3x]
Primary keys "invalidPrimaryKey" are not valid. Expected keys: "campaignId, campaignName, metricsClicks, metricsImpressions". Retrying... [4x]



================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"


================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/tables/campaign.csv.manifest
================================================
{
    "primary_key": [
        "customerId",
        "id"
    ],
    "columns": [
        "customerId",
        "id",
        "name",
        "status",
        "servingStatus",
        "adServingOptimizationStatus",
        "advertisingChannelType",
        "startDate",
        "endDate"
    ],
    "incremental": true
}


================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"


================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/tables/customer.csv.manifest
================================================
{
    "primary_key": [
        "id"
    ],
    "columns": [
        "id",
        "descriptiveName",
        "currencyCode",
        "timeZone"
    ],
    "incremental": true
}



================================================
File: tests/functional/error-wrong-primary-keys/expected/data/out/tables/report-test-report.csv
================================================



================================================
File: tests/functional/error-wrong-primary-keys/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign",
    "primary": [
      "invalidPrimaryKey"
    ]
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/error-wrong-query/expected-code
================================================
0


================================================
File: tests/functional/error-wrong-query/expected-stderr
================================================
%sexpected SELECT instead of invalidQuery.%s


================================================
File: tests/functional/error-wrong-query/expected-stdout
================================================
Extraction data of customer "Keboola Test".
Downloading campaigns.
Downloading query report.
%s Retrying... [1x]
%s Retrying... [2x]
%s Retrying... [3x]
%s Retrying... [4x]



================================================
File: tests/functional/error-wrong-query/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/error-wrong-query/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/error-wrong-query/expected/data/out/tables/campaign.csv.manifest
================================================
{
    "primary_key": [
        "customerId",
        "id"
    ],
    "columns": [
        "customerId",
        "id",
        "name",
        "status",
        "servingStatus",
        "adServingOptimizationStatus",
        "advertisingChannelType",
        "startDate",
        "endDate"
    ],
    "incremental": true
}


================================================
File: tests/functional/error-wrong-query/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/error-wrong-query/expected/data/out/tables/customer.csv.manifest
================================================
{
    "primary_key": [
        "id"
    ],
    "columns": [
        "id",
        "descriptiveName",
        "currencyCode",
        "timeZone"
    ],
    "incremental": true
}


================================================
File: tests/functional/error-wrong-query/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "invalidQuery"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected-code
================================================
0


================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/campaign.csv
================================================
"9250499593","6621889575","Brand awareness and reach-Display-1","REMOVED","SERVING","OPTIMIZE","DISPLAY","2019-10-01","2037-12-30"
"9250499593","11319146328","5f8014e5c9d74","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11319151818","5f8015b83c676","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11319214719","5f8018c6706da","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321411750","5f8014ed02dca","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321412164","5f8014e963314","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321415296","5f8015b4bc9eb","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321422487","5f8016aa4f085","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321424650","5f8016aeaa1b5","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321444618","5f8018c48f5d4","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321445245","5f8018c2cc944","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321787115","5f8015bceb339","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321795995","5f8016ac31a8d","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321827801","5f80193bab515","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321827906","5f80193971f77","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321828815","5f80193853166","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","12443401142","603ca2ff31563","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12443401151","603ca3005ed55","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445768027","603c9d82b6090","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445812154","603ca3020a5f6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445817197","603ca38abd8ca","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445817644","603ca38d330a0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446272962","603c9d83d0272","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446273013","603c9d8544d4e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446320737","603ca38bc8ff9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12449511071","603dfb13dbf92","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12449950310","603e04a6c7426","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12451943419","603dfb1531bd4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12451954233","603dfb170d3d5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452363713","603e043da4b35","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452364901","603e043edc91e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452373030","603e04402f67e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452380783","603e04a4dfe62","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452380960","603e04a8df275","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12913628868","608bf12352421","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913643754","608bf227cfda4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913669434","608bf542028a6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913671834","608bf5bca3829","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913683741","608bf713abded","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913685718","608bf7507e3d5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913689249","608bf78aacb51","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913695000","608bf7f97e7e5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913697001","608bf83bdfcb3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913719087","608bfb21d9298","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913757686","608bf2cd899cf","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913782187","608bf562a704c","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913784074","608bf5a33065e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913793008","608bf6ecb190b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913794409","608bf733a1537","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913804993","608bf82f74a74","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913824880","608bfb1e9ba8b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913824934","608bfb2fd9e02","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913828744","608bfba112272","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913828957","608bfba596b36","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914272034","608bef9dc1baa","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914294150","608bf1ea2d0fe","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914294849","608bf20670944","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914339240","608bf76abae12","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914342846","608bf7a3f2904","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914345270","608bf7d9d71ce","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914347619","608bf8149d7f6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914349305","608bf85a63f96","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914371901","608bfba011b36","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12945644865","608f928654655","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947238932","608f92853d2e0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947340388","608f919b9fdf9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947341108","608f91a178a59","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947341126","608f919d1bd67","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947344513","608f928ae446f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","15102372693","617bc78719ced","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15102880755","617be12f82695","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15102881682","617be12b4e3e7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15103106304","617bed0f58666","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15103106538","617bed0b1982d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104003731","617bc7838ca94","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104426314","617bddfd704f5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104426617","617bde01d01d3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104445763","617bdf4938430","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104445820","617bdf4f4c250","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459236","617be03e711f8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459440","617be04006c27","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459740","617be0444a479","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104470768","617be12a0fb4d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104669449","617bec6c43c6f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104670214","617bec71540b8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104678800","617bed0945331","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106182701","617bc7906e516","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106655207","617bddfbd7fcb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106671782","617bdf4ab05b5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106946360","617bec6a847ce","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15233997531","618d789217472","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15233999220","618d788fcb708","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234041700","618d7a37543bb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234059436","618d7b2268372","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234093576","618d7c19b7aa2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234094023","618d7c27abed9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234095016","618d7c481fb6e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234101964","618d7cdb58f4f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234102705","618d7cf5ae934","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234116778","618d7d93ae0bb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234146280","618d7eae27a5e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234147252","618d7eb131113","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234148470","618d7ee455e2d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234228924","618d813ce0f62","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234252135","618d827250276","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234254634","618d82bceb169","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234255111","618d82d109d07","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234258192","618d830942582","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234258603","618d831adbec8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234268983","618d835263c5e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234276459","618d83bd65d24","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234282930","618d84837a69b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234283632","618d8485f16df","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237528451","618d7899b1e6e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237539923","618d7901c54a2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237540475","618d790b46f00","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237541816","618d79349c1e1","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237563491","618d7a34dfe74","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237578575","618d7b1fcc00a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237597028","618d7c1031e04","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237598078","618d7c2aa4897","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237608878","618d7cd6ac68f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237610459","618d7d118ff5d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237610552","618d7d144c263","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237611164","618d7d2cca9d3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237651817","618d7e9d3ba46","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237660205","618d7ee757c10","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237669070","618d7f5d8ae22","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237669274","618d7f6092bb3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237722761","618d8288832b2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237729484","618d828be0e94","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237736441","618d82a89bdc7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237736450","618d82ab708de","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237743752","618d82d42ecb2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237747061","618d830659dd4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757090","618d8329edcf5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757096","618d832d5e4bd","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757864","618d8371a7651","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237758617","618d83429c0fb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237774184","618d83c06cbc2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237779914","618d848ba5ddb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15238900281","618e48fabcfff","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15239664179","618d77b2dcb0b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239693426","618d77aac05a0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239693516","618d77a7e6a25","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239732351","618d790425e5a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239733095","618d793830215","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239735504","618d793f98840","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764046","618d7b05f0e34","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764274","618d7b01aec7a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764763","618d7b2890a53","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239772128","618d7c12bc6e2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239772917","618d7c455d5e0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239773619","618d7c4f824d2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239788274","618d7cf98a0a7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239789648","618d7d31335a2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239802122","618d7d97d49ec","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239812235","618d7e9a4f054","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239841323","618d7eeea586d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239905382","618d813f7de43","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239906381","618d8145da5ea","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239947586","618d81e16a8bc","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239966351","618d82e5267fc","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239973284","618d82b9ca00a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239974493","618d831d9d437","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239975027","618d82e7ed552","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239981510","618d833feecb6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239981918","618d834fcf3fb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239988650","618d83743f5d9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15243109852","618e4807a51ff","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15243110596","618e480dd921f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245032004","618e48091eb78","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245063891","618e48f44f9e4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245063948","618e48f6033aa","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245085995","618e49b0063b2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245086076","618e49b1c5dd3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/campaign.csv.manifest
================================================
{
    "primary_key": [
        "customerId",
        "id"
    ],
    "columns": [
        "customerId",
        "id",
        "name",
        "status",
        "servingStatus",
        "adServingOptimizationStatus",
        "advertisingChannelType",
        "startDate",
        "endDate"
    ],
    "incremental": true
}


================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/customer.csv.manifest
================================================
{
    "primary_key": [
        "id"
    ],
    "columns": [
        "id",
        "descriptiveName",
        "currencyCode",
        "timeZone"
    ],
    "incremental": true
}


================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/report-test-report.csv
================================================
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/get-removed-campaigns-with-no-dates/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
    "primary_key": [],
    "columns": [
        "campaignId",
        "campaignName",
        "metricsClicks",
        "metricsImpressions"
    ],
    "incremental": true
}


================================================
File: tests/functional/get-removed-campaigns-with-no-dates/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "onlyEnabledCustomers": false,
    "name": "test-report",
    "since": "",
    "until": "",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/invalid-customer-id/expected-code
================================================
1


================================================
File: tests/functional/invalid-customer-id/expected-stderr
================================================
PERMISSION_DENIED: The caller does not have permission


================================================
File: tests/functional/invalid-customer-id/expected-stdout
================================================



================================================
File: tests/functional/invalid-customer-id/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/invalid-customer-id/expected/data/out/tables/.gitkeep
================================================



================================================
File: tests/functional/invalid-customer-id/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "5643061637",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/simple-run/expected-code
================================================
0


================================================
File: tests/functional/simple-run/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/simple-run/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/simple-run/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/simple-run/expected/data/out/tables/campaign.csv.manifest
================================================
{
  "primary_key": [
    "customerId",
    "id"
  ],
  "columns": [
    "customerId",
    "id",
    "name",
    "status",
    "servingStatus",
    "adServingOptimizationStatus",
    "advertisingChannelType",
    "startDate",
    "endDate"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/simple-run/expected/data/out/tables/customer.csv.manifest
================================================
{
  "primary_key": [
    "id"
  ],
  "columns": [
    "id",
    "descriptiveName",
    "currencyCode",
    "timeZone"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run/expected/data/out/tables/report-test-report.csv
================================================
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/simple-run/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
  "primary_key": [],
  "columns": [
    "campaignId",
    "campaignName",
    "metricsClicks",
    "metricsImpressions"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/simple-run-with-debug-logging/expected-code
================================================
0


================================================
File: tests/functional/simple-run-with-debug-logging/expected-stdout
================================================
[%s] DEBUG: Component initialization completed [] []
[%s] DEBUG: Call query: "SELECT customer_client.id, customer_client.manager, customer_client.descriptive_name, customer_client.currency_code, customer_client.time_zone  FROM customer_client  WHERE customer_client.status = ENABLED  ORDER BY customer_client.id" [] []
Extraction data of customer "Keboola Test".
Downloading campaigns.
[%s] DEBUG: Call query: "SELECT campaign.id, campaign.name, campaign.status, campaign.serving_status, campaign.ad_serving_optimization_status, campaign.advertising_channel_type, campaign.start_date, campaign.end_date FROM campaign WHERE campaign.status = ENABLED AND segments.date BETWEEN "%s" AND "%s" ORDER BY campaign.id" [] []
Downloading query report.
[%s] DEBUG: Call query: "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign WHERE segments.date BETWEEN "%s" AND "%s"" [] []



================================================
File: tests/functional/simple-run-with-debug-logging/setUp.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\FunctionalTests\DatadirTest;

use Keboola\GoogleAds\FunctionalTests\DatadirTest;

return function (DatadirTest $test): void {
    putenv('KBC_COMPONENT_RUN_MODE=debug');
};



================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/campaign.csv.manifest
================================================
{
  "primary_key": [
    "customerId",
    "id"
  ],
  "columns": [
    "customerId",
    "id",
    "name",
    "status",
    "servingStatus",
    "adServingOptimizationStatus",
    "advertisingChannelType",
    "startDate",
    "endDate"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/customer.csv.manifest
================================================
{
  "primary_key": [
    "id"
  ],
  "columns": [
    "id",
    "descriptiveName",
    "currencyCode",
    "timeZone"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/report-test-report.csv
================================================
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/simple-run-with-debug-logging/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
  "primary_key": [],
  "columns": [
    "campaignId",
    "campaignName",
    "metricsClicks",
    "metricsImpressions"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-debug-logging/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/simple-run-with-primary-keys/expected-code
================================================
0


================================================
File: tests/functional/simple-run-with-primary-keys/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/campaign.csv
================================================
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/campaign.csv.manifest
================================================
{
  "primary_key": [
    "customerId",
    "id"
  ],
  "columns": [
    "customerId",
    "id",
    "name",
    "status",
    "servingStatus",
    "adServingOptimizationStatus",
    "advertisingChannelType",
    "startDate",
    "endDate"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/customer.csv
================================================
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/customer.csv.manifest
================================================
{
  "primary_key": [
    "id"
  ],
  "columns": [
    "id",
    "descriptiveName",
    "currencyCode",
    "timeZone"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/report-test-report.csv
================================================
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/simple-run-with-primary-keys/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
  "primary_key": [
    "campaignId",
    "metricsClicks"
  ],
  "columns": [
    "campaignId",
    "campaignName",
    "metricsClicks",
    "metricsImpressions"
  ],
  "incremental": true
}


================================================
File: tests/functional/simple-run-with-primary-keys/source/data/config.json
================================================
{
  "parameters": {
    "customerId": "%env(string:CUSTOMER_ID)%",
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign",
    "primary": [
      "campaignId",
      "metricsClicks"
    ]
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/skip-already-downloaded-customer/expected-code
================================================
0


================================================
File: tests/functional/skip-already-downloaded-customer/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.
Extraction data of customer "Keboola Test".
Downloading campaigns.
Downloading query report.
Customer "Keboola Test" already downloaded.


================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/campaign.csv
================================================
"3260444947","1015595176","test","ENABLED","SERVING","OPTIMIZE","SEARCH","2017-12-11","2037-12-30"
"3260444947","6621804912","Brand awareness and reach-Display-1","ENABLED","SERVING","OPTIMIZE","DISPLAY","2019-10-01","2037-12-30"
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/campaign.csv.manifest
================================================
{
    "primary_key": [
        "customerId",
        "id"
    ],
    "columns": [
        "customerId",
        "id",
        "name",
        "status",
        "servingStatus",
        "adServingOptimizationStatus",
        "advertisingChannelType",
        "startDate",
        "endDate"
    ],
    "incremental": true
}


================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/customer.csv
================================================
"3260444947","EthnicAsatru.org","CZK","Europe/Prague"
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/customer.csv.manifest
================================================
{
    "primary_key": [
        "id"
    ],
    "columns": [
        "id",
        "descriptiveName",
        "currencyCode",
        "timeZone"
    ],
    "incremental": true
}


================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/report-test-report.csv
================================================
"1015595176","test","0","0"
"6621804912","Brand awareness and reach-Display-1","0","0"
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/skip-already-downloaded-customer/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
    "primary_key": [],
    "columns": [
        "campaignId",
        "campaignName",
        "metricsClicks",
        "metricsImpressions"
    ],
    "incremental": true
}


================================================
File: tests/functional/skip-already-downloaded-customer/source/data/config.json
================================================
{
  "parameters": {
    "customerId": [
      "%env(string:CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS)%",
      "%env(string:CUSTOMER_ID)%"
    ],
    "name": "test-report",
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}


================================================
File: tests/functional/warn-permission-denied/expected-code
================================================
0


================================================
File: tests/functional/warn-permission-denied/expected-stderr
================================================
%sThe customer account can't be accessed because it is not yet enabled or has been deactivated.%s



================================================
File: tests/functional/warn-permission-denied/expected-stdout
================================================
Extraction data of customer "%s".
Downloading campaigns.
Downloading query report.
Extraction data of customer "Keboola Test Disabled".
Downloading campaigns.
Extraction data of customer "Keboola Test".
Downloading campaigns.
Downloading query report.



================================================
File: tests/functional/warn-permission-denied/expected/data/out/files/.gitkeep
================================================



================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/campaign.csv
================================================
"3260444947","1015595176","test","ENABLED","SERVING","OPTIMIZE","SEARCH","2017-12-11","2037-12-30"
"3260444947","6621804912","Brand awareness and reach-Display-1","ENABLED","SERVING","OPTIMIZE","DISPLAY","2019-10-01","2037-12-30"
"9250499593","6621889575","Brand awareness and reach-Display-1","REMOVED","SERVING","OPTIMIZE","DISPLAY","2019-10-01","2037-12-30"
"9250499593","11319146328","5f8014e5c9d74","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11319151818","5f8015b83c676","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11319214719","5f8018c6706da","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321411750","5f8014ed02dca","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321412164","5f8014e963314","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321415296","5f8015b4bc9eb","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321422487","5f8016aa4f085","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321424650","5f8016aeaa1b5","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321444618","5f8018c48f5d4","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321445245","5f8018c2cc944","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321787115","5f8015bceb339","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321795995","5f8016ac31a8d","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321827801","5f80193bab515","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321827906","5f80193971f77","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","11321828815","5f80193853166","REMOVED","SERVING","OPTIMIZE","SEARCH","2020-10-09","2037-12-30"
"9250499593","12443401142","603ca2ff31563","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12443401151","603ca3005ed55","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445768027","603c9d82b6090","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445812154","603ca3020a5f6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445817197","603ca38abd8ca","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12445817644","603ca38d330a0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446272962","603c9d83d0272","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446273013","603c9d8544d4e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12446320737","603ca38bc8ff9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-01","2037-12-30"
"9250499593","12449511071","603dfb13dbf92","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12449950310","603e04a6c7426","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12451943419","603dfb1531bd4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12451954233","603dfb170d3d5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452363713","603e043da4b35","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452364901","603e043edc91e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452373030","603e04402f67e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452380783","603e04a4dfe62","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12452380960","603e04a8df275","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-03-02","2037-12-30"
"9250499593","12913628868","608bf12352421","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913643754","608bf227cfda4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913669434","608bf542028a6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913671834","608bf5bca3829","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913683741","608bf713abded","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913685718","608bf7507e3d5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913689249","608bf78aacb51","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913695000","608bf7f97e7e5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913697001","608bf83bdfcb3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913719087","608bfb21d9298","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913757686","608bf2cd899cf","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913782187","608bf562a704c","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913784074","608bf5a33065e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913793008","608bf6ecb190b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913794409","608bf733a1537","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913804993","608bf82f74a74","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913824880","608bfb1e9ba8b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913824934","608bfb2fd9e02","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913828744","608bfba112272","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12913828957","608bfba596b36","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914272034","608bef9dc1baa","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914294150","608bf1ea2d0fe","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914294849","608bf20670944","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914339240","608bf76abae12","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914342846","608bf7a3f2904","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914345270","608bf7d9d71ce","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914347619","608bf8149d7f6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914349305","608bf85a63f96","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12914371901","608bfba011b36","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-04-30","2037-12-30"
"9250499593","12945644865","608f928654655","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947238932","608f92853d2e0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947340388","608f919b9fdf9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947341108","608f91a178a59","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947341126","608f919d1bd67","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","12947344513","608f928ae446f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-05-03","2037-12-30"
"9250499593","15102372693","617bc78719ced","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15102880755","617be12f82695","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15102881682","617be12b4e3e7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15103106304","617bed0f58666","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15103106538","617bed0b1982d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104003731","617bc7838ca94","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104426314","617bddfd704f5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104426617","617bde01d01d3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104445763","617bdf4938430","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104445820","617bdf4f4c250","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459236","617be03e711f8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459440","617be04006c27","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104459740","617be0444a479","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104470768","617be12a0fb4d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104669449","617bec6c43c6f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104670214","617bec71540b8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15104678800","617bed0945331","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106182701","617bc7906e516","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106655207","617bddfbd7fcb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106671782","617bdf4ab05b5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15106946360","617bec6a847ce","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-10-29","2037-12-30"
"9250499593","15233997531","618d789217472","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15233999220","618d788fcb708","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234041700","618d7a37543bb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234059436","618d7b2268372","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234093576","618d7c19b7aa2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234094023","618d7c27abed9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234095016","618d7c481fb6e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234101964","618d7cdb58f4f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234102705","618d7cf5ae934","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234116778","618d7d93ae0bb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234146280","618d7eae27a5e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234147252","618d7eb131113","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234148470","618d7ee455e2d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234228924","618d813ce0f62","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234252135","618d827250276","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234254634","618d82bceb169","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234255111","618d82d109d07","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234258192","618d830942582","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234258603","618d831adbec8","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234268983","618d835263c5e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234276459","618d83bd65d24","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234282930","618d84837a69b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15234283632","618d8485f16df","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237528451","618d7899b1e6e","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237539923","618d7901c54a2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237540475","618d790b46f00","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237541816","618d79349c1e1","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237563491","618d7a34dfe74","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237578575","618d7b1fcc00a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237597028","618d7c1031e04","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237598078","618d7c2aa4897","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237608878","618d7cd6ac68f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237610459","618d7d118ff5d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237610552","618d7d144c263","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237611164","618d7d2cca9d3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237651817","618d7e9d3ba46","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237660205","618d7ee757c10","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237669070","618d7f5d8ae22","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237669274","618d7f6092bb3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237722761","618d8288832b2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237729484","618d828be0e94","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237736441","618d82a89bdc7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237736450","618d82ab708de","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237743752","618d82d42ecb2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237747061","618d830659dd4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757090","618d8329edcf5","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757096","618d832d5e4bd","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237757864","618d8371a7651","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237758617","618d83429c0fb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237774184","618d83c06cbc2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15237779914","618d848ba5ddb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15238900281","618e48fabcfff","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15239664179","618d77b2dcb0b","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239693426","618d77aac05a0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239693516","618d77a7e6a25","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239732351","618d790425e5a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239733095","618d793830215","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239735504","618d793f98840","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764046","618d7b05f0e34","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764274","618d7b01aec7a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239764763","618d7b2890a53","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239772128","618d7c12bc6e2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239772917","618d7c455d5e0","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239773619","618d7c4f824d2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239788274","618d7cf98a0a7","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239789648","618d7d31335a2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239802122","618d7d97d49ec","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239812235","618d7e9a4f054","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239841323","618d7eeea586d","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239905382","618d813f7de43","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239906381","618d8145da5ea","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239947586","618d81e16a8bc","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239966351","618d82e5267fc","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239973284","618d82b9ca00a","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239974493","618d831d9d437","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239975027","618d82e7ed552","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239981510","618d833feecb6","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239981918","618d834fcf3fb","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15239988650","618d83743f5d9","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-11","2037-12-30"
"9250499593","15243109852","618e4807a51ff","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15243110596","618e480dd921f","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15243152140","618e49b68ce4a","ENABLED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245032004","618e48091eb78","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245063891","618e48f44f9e4","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245063948","618e48f6033aa","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245085995","618e49b0063b2","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"
"9250499593","15245086076","618e49b1c5dd3","REMOVED","SERVING","OPTIMIZE","SEARCH","2021-11-12","2037-12-30"



================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/campaign.csv.manifest
================================================
{
    "primary_key": [
        "customerId",
        "id"
    ],
    "columns": [
        "customerId",
        "id",
        "name",
        "status",
        "servingStatus",
        "adServingOptimizationStatus",
        "advertisingChannelType",
        "startDate",
        "endDate"
    ],
    "incremental": true
}


================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/customer.csv
================================================
"3260444947","EthnicAsatru.org","CZK","Europe/Prague"
"4719855300","Keboola Test Disabled","CZK","Europe/Prague"
"9250499593","Keboola Test","CZK","Europe/Prague"



================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/customer.csv.manifest
================================================
{
    "primary_key": [
        "id"
    ],
    "columns": [
        "id",
        "descriptiveName",
        "currencyCode",
        "timeZone"
    ],
    "incremental": true
}


================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/report-test-report.csv
================================================
"1015595176","test","0","0"
"6621804912","Brand awareness and reach-Display-1","0","0"
"6621889575","Brand awareness and reach-Display-1","0","0"
"11319146328","5f8014e5c9d74","0","0"
"11319151818","5f8015b83c676","0","0"
"11319214719","5f8018c6706da","0","0"
"11321411750","5f8014ed02dca","0","0"
"11321412164","5f8014e963314","0","0"
"11321415296","5f8015b4bc9eb","0","0"
"11321422487","5f8016aa4f085","0","0"
"11321424650","5f8016aeaa1b5","0","0"
"11321444618","5f8018c48f5d4","0","0"
"11321445245","5f8018c2cc944","0","0"
"11321787115","5f8015bceb339","0","0"
"11321795995","5f8016ac31a8d","0","0"
"11321827801","5f80193bab515","0","0"
"11321827906","5f80193971f77","0","0"
"11321828815","5f80193853166","0","0"
"12443401142","603ca2ff31563","0","0"
"12443401151","603ca3005ed55","0","0"
"12445768027","603c9d82b6090","0","0"
"12445812154","603ca3020a5f6","0","0"
"12445817197","603ca38abd8ca","0","0"
"12445817644","603ca38d330a0","0","0"
"12446272962","603c9d83d0272","0","0"
"12446273013","603c9d8544d4e","0","0"
"12446320737","603ca38bc8ff9","0","0"
"12449511071","603dfb13dbf92","0","0"
"12449950310","603e04a6c7426","0","0"
"12451943419","603dfb1531bd4","0","0"
"12451954233","603dfb170d3d5","0","0"
"12452363713","603e043da4b35","0","0"
"12452364901","603e043edc91e","0","0"
"12452373030","603e04402f67e","0","0"
"12452380783","603e04a4dfe62","0","0"
"12452380960","603e04a8df275","0","0"
"12913628868","608bf12352421","0","0"
"12913643754","608bf227cfda4","0","0"
"12913669434","608bf542028a6","0","0"
"12913671834","608bf5bca3829","0","0"
"12913683741","608bf713abded","0","0"
"12913685718","608bf7507e3d5","0","0"
"12913689249","608bf78aacb51","0","0"
"12913695000","608bf7f97e7e5","0","0"
"12913697001","608bf83bdfcb3","0","0"
"12913719087","608bfb21d9298","0","0"
"12913757686","608bf2cd899cf","0","0"
"12913782187","608bf562a704c","0","0"
"12913784074","608bf5a33065e","0","0"
"12913793008","608bf6ecb190b","0","0"
"12913794409","608bf733a1537","0","0"
"12913804993","608bf82f74a74","0","0"
"12913824880","608bfb1e9ba8b","0","0"
"12913824934","608bfb2fd9e02","0","0"
"12913828744","608bfba112272","0","0"
"12913828957","608bfba596b36","0","0"
"12914272034","608bef9dc1baa","0","0"
"12914294150","608bf1ea2d0fe","0","0"
"12914294849","608bf20670944","0","0"
"12914339240","608bf76abae12","0","0"
"12914342846","608bf7a3f2904","0","0"
"12914345270","608bf7d9d71ce","0","0"
"12914347619","608bf8149d7f6","0","0"
"12914349305","608bf85a63f96","0","0"
"12914371901","608bfba011b36","0","0"
"12945644865","608f928654655","0","0"
"12947238932","608f92853d2e0","0","0"
"12947340388","608f919b9fdf9","0","0"
"12947341108","608f91a178a59","0","0"
"12947341126","608f919d1bd67","0","0"
"12947344513","608f928ae446f","0","0"
"15102372693","617bc78719ced","0","0"
"15102880755","617be12f82695","0","0"
"15102881682","617be12b4e3e7","0","0"
"15103106304","617bed0f58666","0","0"
"15103106538","617bed0b1982d","0","0"
"15104003731","617bc7838ca94","0","0"
"15104426314","617bddfd704f5","0","0"
"15104426617","617bde01d01d3","0","0"
"15104445763","617bdf4938430","0","0"
"15104445820","617bdf4f4c250","0","0"
"15104459236","617be03e711f8","0","0"
"15104459440","617be04006c27","0","0"
"15104459740","617be0444a479","0","0"
"15104470768","617be12a0fb4d","0","0"
"15104669449","617bec6c43c6f","0","0"
"15104670214","617bec71540b8","0","0"
"15104678800","617bed0945331","0","0"
"15106182701","617bc7906e516","0","0"
"15106655207","617bddfbd7fcb","0","0"
"15106671782","617bdf4ab05b5","0","0"
"15106946360","617bec6a847ce","0","0"
"15233997531","618d789217472","0","0"
"15233999220","618d788fcb708","0","0"
"15234041700","618d7a37543bb","0","0"
"15234059436","618d7b2268372","0","0"
"15234093576","618d7c19b7aa2","0","0"
"15234094023","618d7c27abed9","0","0"
"15234095016","618d7c481fb6e","0","0"
"15234101964","618d7cdb58f4f","0","0"
"15234102705","618d7cf5ae934","0","0"
"15234116778","618d7d93ae0bb","0","0"
"15234146280","618d7eae27a5e","0","0"
"15234147252","618d7eb131113","0","0"
"15234148470","618d7ee455e2d","0","0"
"15234228924","618d813ce0f62","0","0"
"15234252135","618d827250276","0","0"
"15234254634","618d82bceb169","0","0"
"15234255111","618d82d109d07","0","0"
"15234258192","618d830942582","0","0"
"15234258603","618d831adbec8","0","0"
"15234268983","618d835263c5e","0","0"
"15234276459","618d83bd65d24","0","0"
"15234282930","618d84837a69b","0","0"
"15234283632","618d8485f16df","0","0"
"15237528451","618d7899b1e6e","0","0"
"15237539923","618d7901c54a2","0","0"
"15237540475","618d790b46f00","0","0"
"15237541816","618d79349c1e1","0","0"
"15237563491","618d7a34dfe74","0","0"
"15237578575","618d7b1fcc00a","0","0"
"15237597028","618d7c1031e04","0","0"
"15237598078","618d7c2aa4897","0","0"
"15237608878","618d7cd6ac68f","0","0"
"15237610459","618d7d118ff5d","0","0"
"15237610552","618d7d144c263","0","0"
"15237611164","618d7d2cca9d3","0","0"
"15237651817","618d7e9d3ba46","0","0"
"15237660205","618d7ee757c10","0","0"
"15237669070","618d7f5d8ae22","0","0"
"15237669274","618d7f6092bb3","0","0"
"15237722761","618d8288832b2","0","0"
"15237729484","618d828be0e94","0","0"
"15237736441","618d82a89bdc7","0","0"
"15237736450","618d82ab708de","0","0"
"15237743752","618d82d42ecb2","0","0"
"15237747061","618d830659dd4","0","0"
"15237757090","618d8329edcf5","0","0"
"15237757096","618d832d5e4bd","0","0"
"15237757864","618d8371a7651","0","0"
"15237758617","618d83429c0fb","0","0"
"15237774184","618d83c06cbc2","0","0"
"15237779914","618d848ba5ddb","0","0"
"15238900281","618e48fabcfff","0","0"
"15239664179","618d77b2dcb0b","0","0"
"15239693426","618d77aac05a0","0","0"
"15239693516","618d77a7e6a25","0","0"
"15239732351","618d790425e5a","0","0"
"15239733095","618d793830215","0","0"
"15239735504","618d793f98840","0","0"
"15239764046","618d7b05f0e34","0","0"
"15239764274","618d7b01aec7a","0","0"
"15239764763","618d7b2890a53","0","0"
"15239772128","618d7c12bc6e2","0","0"
"15239772917","618d7c455d5e0","0","0"
"15239773619","618d7c4f824d2","0","0"
"15239788274","618d7cf98a0a7","0","0"
"15239789648","618d7d31335a2","0","0"
"15239802122","618d7d97d49ec","0","0"
"15239812235","618d7e9a4f054","0","0"
"15239841323","618d7eeea586d","0","0"
"15239905382","618d813f7de43","0","0"
"15239906381","618d8145da5ea","0","0"
"15239947586","618d81e16a8bc","0","0"
"15239966351","618d82e5267fc","0","0"
"15239973284","618d82b9ca00a","0","0"
"15239974493","618d831d9d437","0","0"
"15239975027","618d82e7ed552","0","0"
"15239981510","618d833feecb6","0","0"
"15239981918","618d834fcf3fb","0","0"
"15239988650","618d83743f5d9","0","0"
"15243109852","618e4807a51ff","0","0"
"15243110596","618e480dd921f","0","0"
"15243152140","618e49b68ce4a","0","0"
"15245032004","618e48091eb78","0","0"
"15245063891","618e48f44f9e4","0","0"
"15245063948","618e48f6033aa","0","0"
"15245085995","618e49b0063b2","0","0"
"15245086076","618e49b1c5dd3","0","0"



================================================
File: tests/functional/warn-permission-denied/expected/data/out/tables/report-test-report.csv.manifest
================================================
{
    "primary_key": [],
    "columns": [
        "campaignId",
        "campaignName",
        "metricsClicks",
        "metricsImpressions"
    ],
    "incremental": true
}


================================================
File: tests/functional/warn-permission-denied/source/data/config.json
================================================
{
  "parameters": {
    "customerId": [
      "%env(string:CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS)%"
    ],
    "name": "test-report",
    "onlyEnabledCustomers": false,
    "query": "SELECT campaign.id, campaign.name, metrics.clicks, metrics.impressions FROM campaign"
  },
  "image_parameters": {
    "#developer_token": "%env(string:DEVELOPER_TOKEN)%"
  },
  "authorization": {
    "oauth_api": {
      "credentials": {
        "#data": "%env(string:API_DATA)%",
        "#appSecret": "%env(string:CLIENT_SECRET)%",
        "appKey": "%env(string:CLIENT_ID)%"
      }
    }
  }
}



================================================
File: tests/phpunit/ConfigTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\Tests;

use Generator;
use Keboola\GoogleAds\Configuration\Config;
use Keboola\GoogleAds\Configuration\ConfigDefinition;
use PHPUnit\Framework\Assert;
use PHPUnit\Framework\TestCase;
use Symfony\Component\Config\Definition\Exception\InvalidConfigurationException;

class ConfigTest extends TestCase
{
    /**
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint
     * @dataProvider validConfigDataProvider
     */
    public function testValidConfig(array $configData, string $expectedToken): void
    {
        $config = new Config($configData, new ConfigDefinition());

        Assert::assertEquals($expectedToken, $config->getDeveloperToken());
        Assert::assertEquals($configData, $config->getData());
    }

    /**
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint
     * @dataProvider invalidConfigDataProvider
     */
    public function testInvalidConfig(array $configData, string $expectedErrorMessage): void
    {
        $this->expectException(InvalidConfigurationException::class);
        $this->expectExceptionMessage($expectedErrorMessage);
        new Config($configData, new ConfigDefinition());
    }

    public function validConfigDataProvider(): Generator
    {
        yield 'min-config' => [
            [
                'parameters' => [
                    'customerId' => ['1234567890'],
                    'name' => 'testName',
                    'query' => 'testQuery',
                    'primary' => [],
                    'onlyEnabledCustomers' => true,
                ],
                'image_parameters' => [
                    '#developer_token' => 'imageToken',
                ],
            ],
            'imageToken',
        ];

        yield 'config-with-date' => [
            [
                'parameters' => [
                    'customerId' => ['1234567890'],
                    'name' => 'testName',
                    'since' => '20200101',
                    'until' => '20220203',
                    'query' => 'testQuery',
                    'primary' => [],
                    'onlyEnabledCustomers' => true,
                ],
                'image_parameters' => [
                    '#developer_token' => 'imageToken',
                ],
            ],
            'imageToken',
        ];

        yield 'config-with-primary' => [
            [
                'parameters' => [
                    'customerId' => ['1234567890'],
                    'name' => 'testName',
                    'query' => 'testQuery',
                    'primary' => [
                        'primary1',
                        'primary2',
                        'primary3',
                        'primary4',
                    ],
                    'onlyEnabledCustomers' => true,
                ],
                'image_parameters' => [
                    '#developer_token' => 'imageToken',
                ],
            ],
            'imageToken',
        ];

        yield 'config-with-dev-token' => [
            [
                'parameters' => [
                    'customerId' => ['1234567890'],
                    'name' => 'testName',
                    'query' => 'testQuery',
                    'primary' => [],
                    '#developerToken' => 'paramsToken',
                    'onlyEnabledCustomers' => true,
                ],
                'image_parameters' => [
                    '#developer_token' => 'imageToken',
                ],
            ],
            'paramsToken',
        ];

        yield 'min-config-with-extra-keys' => [
            [
                'parameters' => [
                    'extraKeys' => '1234567890',
                    'customerId' => ['1234567890'],
                    'name' => 'testName',
                    'query' => 'testQuery',
                    'primary' => [],
                    'onlyEnabledCustomers' => true,
                ],
                'image_parameters' => [
                    '#developer_token' => 'imageToken',
                ],
            ],
            'imageToken',
        ];
    }

    public function invalidConfigDataProvider(): Generator
    {
        yield 'empty-config' => [
            [
                'parameters' => [],
            ],
            'The child config "customerId" under "root.parameters" must be configured.',
        ];

        yield 'missing-name' => [
            [
                'parameters' => [
                    'customerId' => 'testCustomer',
                ],
            ],
            'The child config "name" under "root.parameters" must be configured.',
        ];

        yield 'missing-query' => [
            [
                'parameters' => [
                    'customerId' => 'testCustomer',
                    'name' => 'testName',
                ],
            ],
            'The child config "query" under "root.parameters" must be configured.',
        ];
    }
}



================================================
File: tests/phpunit/GetAccountHierarchyTest.php
================================================
<?php

declare(strict_types=1);

namespace Keboola\GoogleAds\Tests;

use Google\Ads\GoogleAds\Lib\Configuration;
use Google\Ads\GoogleAds\Lib\OAuth2TokenBuilder;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClient;
use Google\Ads\GoogleAds\Lib\V19\GoogleAdsClientBuilder;
use Google\Auth\Credentials\UserRefreshCredentials;
use Keboola\GoogleAds\GetAccountHierarchy;
use PHPUnit\Framework\TestCase;

class GetAccountHierarchyTest extends TestCase
{
    private GoogleAdsClient $googleAdsClient;

    protected function setUp(): void
    {
        parent::setUp();

        /** @var array{refresh_token: string} $credentialsData */
        $credentialsData = json_decode((string) getenv('API_DATA'), true);

        $oauthConfiguration = new Configuration([
            'OAUTH2' => [
                'clientId' => (string) getenv('CLIENT_ID'),
                'clientSecret' => (string) getenv('CLIENT_SECRET'),
                'refreshToken' => $credentialsData['refresh_token'],
            ],
        ]);

        /** @var UserRefreshCredentials $oauth */
        $oauth = (new OAuth2TokenBuilder())->from($oauthConfiguration)->build();

        $this->googleAdsClient = (new GoogleAdsClientBuilder())
            ->withOAuth2Credential($oauth)
            ->withDeveloperToken((string) getenv('DEVELOPER_TOKEN'))
            ->build();
    }

    public function testRunWithChildren(): void
    {
        $accountHierarchy = new GetAccountHierarchy($this->googleAdsClient, true);

        $result = $accountHierarchy->run();

        self::assertGreaterThanOrEqual(1, count($result));
        self::assertArrayHasKey(
            (string) getenv('CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS'),
            $result,
            (string) json_encode($result),
        );

        $customer = $result[(int) getenv('CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS')];

        // check customer info
        self::assertArrayHasKey('info', $customer);
        self::assertArrayHasKey('id', $customer['info']);
        self::assertArrayHasKey('descriptiveName', $customer['info']);
        self::assertArrayHasKey('resourceName', $customer['info']);
        self::assertArrayHasKey('level', $customer['info']);
        self::assertEquals(0, $customer['info']['level']);

        // check customer sub-accounts
        self::assertArrayHasKey('children', $customer);
        self::assertGreaterThanOrEqual(1, count($customer['children']));

        $firstChild = $customer['children'][0];
        self::assertArrayHasKey('id', $firstChild['info']);
        self::assertArrayHasKey('descriptiveName', $firstChild['info']);
        self::assertArrayHasKey('resourceName', $firstChild['info']);
        self::assertArrayHasKey('level', $firstChild['info']);
        self::assertArrayHasKey('children', $firstChild);
        self::assertEquals(1, $firstChild['info']['level']);
    }

    public function testRunWithoutChildren(): void
    {
        $accountHierarchy = new GetAccountHierarchy($this->googleAdsClient);

        $result = $accountHierarchy->run();

        self::assertGreaterThanOrEqual(1, count($result));
        self::assertArrayHasKey(
            (string) getenv('CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS'),
            $result,
            (string) json_encode($result),
        );

        $customer = $result[(int) getenv('CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS')];

        // check customer info
        self::assertArrayHasKey('info', $customer);
        self::assertArrayHasKey('id', $customer['info']);
        self::assertArrayHasKey('descriptiveName', $customer['info']);
        self::assertArrayHasKey('resourceName', $customer['info']);
        self::assertArrayHasKey('level', $customer['info']);
        self::assertEquals(0, $customer['info']['level']);

        // check customer sub-accounts
        self::assertArrayHasKey('children', $customer);
        self::assertCount(0, $customer['children']);
    }
}



================================================
File: tests/phpunit/bootstrap.php
================================================
<?php

declare(strict_types=1);

require __DIR__ . '/../../vendor/autoload.php';



================================================
File: .github/workflows/push.yml
================================================
name: 'GitHub Actions'
'on':
    - push
concurrency: 'ci-${{ github.ref }}'
env:
    APP_IMAGE: keboola/ex-google-ads
    KBC_DEVELOPERPORTAL_VENDOR: keboola
    KBC_DEVELOPERPORTAL_APP: keboola.ex-google-ads
    KBC_DEVELOPERPORTAL_USERNAME: keboola+ex_google_ads_gh_actions
    KBC_DEVELOPERPORTAL_PASSWORD: '${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}'
    DOCKERHUB_USER: keboolabot
    DOCKERHUB_TOKEN: '${{ secrets.DOCKERHUB_TOKEN }}'
    KBC_STORAGE_TOKEN: '${{ secrets.KBC_STORAGE_TOKEN }}'
    CLIENT_ID: '1025566943657-4s4n2n7ls96df5re7jklko26rhvs5b79.apps.googleusercontent.com'
    CLIENT_SECRET: '${{ secrets.CLIENT_SECRET }}'
    API_DATA: '${{ secrets.API_DATA }}'
    CUSTOMER_ID: '9250499593'
    CUSTOMER_ID_WITH_DASH: '925-049-9593'
    CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS: '6823200026'
    DEVELOPER_TOKEN: '${{ secrets.DEVELOPER_TOKEN }}'
    KBC_TEST_PROJECT_URL: ''
    KBC_TEST_PROJECT_CONFIGS: ''
jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            app_image_tag: '${{ steps.tag.outputs.app_image_tag }}'
            is_semantic_tag: '${{ steps.tag.outputs.is_semantic_tag }}'
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v4
            -
                name: 'Print Docker version'
                run: 'docker -v'
            -
                name: 'Docker login'
                if: env.DOCKERHUB_TOKEN
                run: 'docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"'
            -
                name: 'Build image'
                run: 'docker build -t $APP_IMAGE .'
            -
                name: 'Set image tag'
                id: tag
                run: |
                    TAG="${GITHUB_REF##*/}"
                    IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
                    echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
                    echo "is_semantic_tag=$IS_SEMANTIC_TAG" >> $GITHUB_OUTPUT
                    echo "app_image_tag=$TAG" >> $GITHUB_OUTPUT
            -
                name: 'Push image to ECR'
                uses: keboola/action-push-to-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ steps.tag.outputs.app_image_tag }}'
                    push_latest: '${{ steps.tag.outputs.is_semantic_tag }}'
                    source_image: '${{ env.APP_IMAGE}}'
    tests:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v4
            -
                name: 'Pull image from ECR'
                uses: keboola/action-pull-from-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    target_image: '${{ env.APP_IMAGE}}'
                    tag_as_latest: true
            -
                name: 'Run tests'
                run: |
                    docker run \
                    -e CLIENT_ID \
                    -e CLIENT_SECRET \
                    -e API_DATA \
                    -e CUSTOMER_ID \
                    -e CUSTOMER_ID_WITH_DASH \
                    -e DEVELOPER_TOKEN \
                    -e CUSTOMER_ID_MANAGER_WITH_SUBACCOUNTS \
                    ${{env.APP_IMAGE}} \
                    composer ci
    tests-in-kbc:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Run KBC test jobs'
                if: 'env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS'
                uses: keboola/action-run-configs-parallel@master
                with:
                    token: '${{ env.KBC_STORAGE_TOKEN }}'
                    componentId: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    configs: '${{ env.KBC_TEST_PROJECT_CONFIGS }}'
    deploy:
        needs:
            - build
            - tests
            - tests-in-kbc
        runs-on: ubuntu-latest
        if: 'startsWith(github.ref, ''refs/tags/'') && needs.build.outputs.is_semantic_tag == ''true'''
        steps:
            -
                name: 'Set tag in the Deloper Portal'
                uses: keboola/action-set-tag-developer-portal@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'


