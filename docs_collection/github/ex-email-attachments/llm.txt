Directory structure:
└── keboola-ex-email-attachments/
    ├── README.md
    ├── Dockerfile
    ├── LICENSE
    ├── build.xml
    ├── cf-stack.json
    ├── composer.json
    ├── composer.lock
    ├── deploy.sh
    ├── docker-compose.yml
    ├── phpstan.neon
    ├── phpunit.xml.dist
    ├── tests.sh
    ├── .codeclimate.yml
    ├── .dockerignore
    ├── .travis.yml
    ├── docker/
    │   ├── php/
    │   │   └── php.ini
    │   └── xdebug/
    │       ├── Dockerfile
    │       └── xdebug.ini
    ├── src/
    │   ├── bootstrap.php
    │   ├── run.php
    │   └── Keboola/
    │       └── ExEmailAttachments/
    │           ├── App.php
    │           ├── RunCommand.php
    │           ├── Action/
    │           │   ├── AbstractAction.php
    │           │   ├── GetAction.php
    │           │   ├── ListAction.php
    │           │   └── RunAction.php
    │           └── Exception/
    │               ├── EmailException.php
    │               ├── Exception.php
    │               ├── InvalidEmailRecipientException.php
    │               ├── MoreAttachmentsInEmailException.php
    │               └── NoAttachmentInEmailException.php
    └── tests/
        ├── bootstrap.php
        └── Keboola/
            └── ExEmailAttachments/
                ├── email
                ├── email-cc
                ├── email-just-image
                ├── email-more-texts
                ├── email-multiple-to
                ├── email-with-image
                ├── Functional/
                │   ├── AbstractTest.php
                │   ├── GetTest.php
                │   ├── ListTest.php
                │   └── RunTest.php
                └── Unit/
                    └── RunActionTest.php

================================================
File: README.md
================================================
# Email attachments extractor
KBC Docker app provisions email mailboxes and monitors them for incoming csv files in attachments which are imported to Keboola Storage. Each email must contain one text attachment.

Lambda handler is in separate repository [keboola/ex-email-attachments-lambda](https://github.com/keboola/ex-email-attachments-lambda)

## Status

[![Build Status](https://travis-ci.org/keboola/ex-email-attachments.svg)](https://travis-ci.org/keboola/ex-email-attachments) [![Code Climate](https://codeclimate.com/github/keboola/ex-email-attachments/badges/gpa.svg)](https://codeclimate.com/github/keboola/ex-email-attachments)

## App Flow

- Emails are processed by AWS SES service
- `get` sync action generates an email address for extractor's configuration and saves it to DynamoDB table
- SES has a rule to save all emails with specified email domain to a S3 bucket in folder `_incoming`
- There is a lambda handler subscribed to the `_incoming` folder which gets recipient address and checks its existence in DynamoDB
- If the email exists, the email file is moved to folder `[projectId]/[configId]`
- If the email does not exist, the file is moved to folder `_invalid`
- The S3 bucket has a lifecycle 30 days - all files are deleted after that period
- The extractor checks S3 folder `[projectId]/[configId]` and processes new file. It is saved to a table called `data` in the default bucket. If there are more incoming attachments (e.g. multiple email messages or multiple attachments in a single message), they are saved separately into tables called `data1`, `data2`, etc.
- It saves timestamp of last processed file to the state

## Notice

The extractor saves timestamp of last processed email to know where to start in the next run. Potentially, it may bring a problem in a moment when two emails are delivered in the same second and the extractor processes only one of them and ends. Then, in its next run, it will skip the other email and won't process it at all.

## Setup
1. Create CloudFormation stack: `aws cloudformation create-stack --stack-name dev-ex-email-attachments --template-body file://./cf-stack.json --parameters ParameterKey=KeboolaStack,ParameterValue=ex-email-attachments --region eu-west-1 --capabilities CAPABILITY_NAMED_IAM`
    - It creates S3 Bucket, Dynamo DB table and IAM user
    - You need to set stack name (e.g. `dev-ex-email-attachments-resources`), a value for tag `KeboolaStack` (e.g. `ex-email-attachments` - it should be the same accross all instances), `ServiceName` (e.g. `dev-ex-email-attachments` - it should be unique across all instances but the same as in the lambda handler) and a region
    - Beware that only some regions support Amazon SES
2. Add a MX record with value e.g. `1 inbound-smtp.eu-west-1.amazonaws.com` pointing to your email domain (e.g. `import.keboola.com`) in Route53
3. Verify the domain in SES (https://console.aws.amazon.com/ses/home?region=eu-west-1#verified-senders-domain:)
4. Create a Rule Set in SES if there is none active yet (https://eu-west-1.console.aws.amazon.com/ses/home?region=eu-west-1#receipt-rules: - notice that there can be only one active at a time)
5. Create a Rule in the Rule Set
    - set `Recipient` as `email_domain` (e.g. `import.test.keboola.com`)
    - add `S3` action, choose the bucket created by CloudFormation and set `_incoming/` as Object key prefix
6. Set these `image_parameters`:
    - `access_key_id` - Set from CloudFormation output `UserAccessKey`
    - `#secret_access_key` - Set from CloudFormation output `UserSecretKey` amd encrypt
    - `region` - e.g. `eu-west-1`
    - `bucket` - Set from CloudFormation output `S3BucketName`
    - `dynamo_table` - Set from CloudFormation output `DynamoTable`
    - `rule_set` - SES rule set, `default-rule-set` by default
    - `email_domain` - A domain for mailboxes (e.g. `import.test.keboola.com`)


================================================
File: Dockerfile
================================================
FROM php:7.2-cli

WORKDIR /code

RUN apt-get update && apt-get install -y \
        git \
        unzip \
   --no-install-recommends && rm -r /var/lib/apt/lists/*

RUN pecl install mailparse

RUN curl -sS https://getcomposer.org/installer | php \
  && mv /code/composer.phar /usr/local/bin/composer

COPY . /code/
COPY ./docker/php/php.ini /usr/local/etc/php/php.ini
WORKDIR /code

RUN composer install

CMD php ./src/run.php run /data


================================================
File: LICENSE
================================================
The MIT License

Copyright (c) 2018 Keboola, http://keboola.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


================================================
File: build.xml
================================================
<?xml version="1.0" encoding="UTF-8"?>

<project name="ex-email-attachments-tests" default="build">
    <target name="build" depends="prepare,unit-tests"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/results/api"/>
        <delete dir="${basedir}/build/results/code-browser"/>
        <delete dir="${basedir}/build/results/coverage"/>
        <delete dir="${basedir}/build/results/logs"/>
        <delete dir="${basedir}/build/results/pdepend"/>
        <delete dir="${basedir}/build/results/apigen"/>
    </target>

    <target name="prepare" depends="clean"
            description="Prepare for build">
        <mkdir dir="${basedir}/build/results/api"/>
        <mkdir dir="${basedir}/build/results/code-browser"/>
        <mkdir dir="${basedir}/build/results/coverage"/>
        <mkdir dir="${basedir}/build/results/logs"/>
        <mkdir dir="${basedir}/build/results/pdepend"/>
        <mkdir dir="${basedir}/build/results/apigen"/>
        <exec executable="/usr/local/bin/composer">
            <arg value="install" />
        </exec>
    </target>

    <target name="unit-tests" depends="prepare" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="--configuration"/>
            <arg path="phpunit.xml.dist"/>
        </exec>
    </target>

</project>


================================================
File: cf-stack.json
================================================
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "KeboolaStack" : {
      "Type" : "String",
      "Description" : "Name of the stack, used for tagging, it should be the same accross all instances, e.g. ex-email-attachments"
    },
    "ServiceName" : {
      "Type" : "String",
      "Description" : "Name of the instance, used for resources names, it should be unique accross all instances, e.g. dev-ex-email-attachments"
    }
  },
  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Fn::Join" : ["-", [{ "Ref": "ServiceName" }, { "Ref" : "AWS::Region" }, "emails"]] },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "RemovalRule",
              "Status": "Enabled",
              "ExpirationInDays": "30"
            }
          ]
        },
        "Tags": [
          {
            "Key": "KeboolaStack",
            "Value": { "Ref": "KeboolaStack" }
          }
        ]
      }
    },
    "S3BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref" : "S3Bucket" },
        "PolicyDocument": {
          "Statement":[{
            "Action": ["s3:PutObject"],
            "Effect": "Allow",
            "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3Bucket" }, "/*" ]]},
            "Principal": {
              "Service": "ses.amazonaws.com"
            }
          }]
        }
      },
      "DependsOn": [
        "S3Bucket"
      ]
    },
    "DynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": { "Fn::Join" : ["-", [{ "Ref": "ServiceName" }, { "Ref" : "AWS::Region" }, "emails"]] },
        "AttributeDefinitions": [
          {
            "AttributeName": "Project",
            "AttributeType": "N"
          },
          {
            "AttributeName": "Config",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Project",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "Config",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "Tags": [
          {
            "Key": "KeboolaStack",
            "Value": { "Ref": "KeboolaStack" }
          }
        ]
      }
    },
    "IamUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": { "Fn::Join" : ["-", [{ "Ref": "ServiceName" }, { "Ref" : "AWS::Region" }]] },
        "Policies": [
          {
            "PolicyName": "S3BucketAccess",
            "PolicyDocument":  {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3Bucket" } ]]},
                    { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3Bucket" }, "/*" ]]}
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "DynamoAccess",
            "PolicyDocument":  {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": [
                    { "Fn::GetAtt" : [ "DynamoTable", "Arn" ] }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "IamUserAccessKey": {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "IamUser" }
      }
    }
  },
  "Outputs": {
    "S3BucketName": {
      "Value": { "Ref": "S3Bucket" }
    },
    "DynamoTable": {
      "Value": { "Ref": "DynamoTable" }
    },
    "UserAccessKey" : {
      "Value" : { "Ref" : "IamUserAccessKey" }
    },
    "UserSecretKey" : {
      "Value" : {
        "Fn::GetAtt" : [ "IamUserAccessKey", "SecretAccessKey" ]
      }
    }
  }
}


================================================
File: composer.json
================================================
{
  "name": "keboola/ex-email-attachments",
  "license": "MIT",
  "type": "project",
  "description": "Keboola Email attachments extractor - Imports csv files from email attachments to Keboola",
  "keywords": ["keboola", "email"],
  "authors": [
    {
      "name": "Jakub Matejka",
      "email": "jakub@keboola.com"
    }
  ],
  "require": {
    "php": "~7.2",
    "keboola/csv": "~1.1",
    "keboola/php-temp": "0.1.3",
    "symfony/config": "^4.0",
    "symfony/console": "^4.0",
    "symfony/filesystem": "^4.0",
    "symfony/process": "^4.0",
    "symfony/serializer": "^4.0",
    "monolog/monolog": "^1.22",
    "aws/aws-sdk-php": "^3.46",
    "php-mime-mail-parser/php-mime-mail-parser": "^2.9"
  },
  "require-dev": {
    "phpunit/phpunit": "~6.1",
    "squizlabs/php_codesniffer": "^2.8",
    "phpstan/phpstan": "^0.9.1"
  },
  "autoload": {
    "psr-4": {
      "Keboola\\ExEmailAttachments\\": "src/Keboola/ExEmailAttachments/",
      "Keboola\\ExEmailAttachments\\Tests\\": "tests/Keboola/ExEmailAttachments/"
    }
  }
}


================================================
File: composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "a5b0da94875a9f8ff6ecef79c5f4b61a",
    "packages": [
        {
            "name": "aws/aws-sdk-php",
            "version": "3.62.7",
            "source": {
                "type": "git",
                "url": "https://github.com/aws/aws-sdk-php.git",
                "reference": "0935b8b9048c9ca803e8afd8aec8f38225f1de79"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/aws/aws-sdk-php/zipball/0935b8b9048c9ca803e8afd8aec8f38225f1de79",
                "reference": "0935b8b9048c9ca803e8afd8aec8f38225f1de79",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-pcre": "*",
                "ext-simplexml": "*",
                "ext-spl": "*",
                "guzzlehttp/guzzle": "^5.3.1|^6.2.1",
                "guzzlehttp/promises": "~1.0",
                "guzzlehttp/psr7": "^1.4.1",
                "mtdowling/jmespath.php": "~2.2",
                "php": ">=5.5"
            },
            "require-dev": {
                "andrewsville/php-token-reflection": "^1.4",
                "aws/aws-php-sns-message-validator": "~1.0",
                "behat/behat": "~3.0",
                "doctrine/cache": "~1.4",
                "ext-dom": "*",
                "ext-openssl": "*",
                "nette/neon": "^2.3",
                "phpunit/phpunit": "^4.8.35|^5.4.3",
                "psr/cache": "^1.0"
            },
            "suggest": {
                "aws/aws-php-sns-message-validator": "To validate incoming SNS notifications",
                "doctrine/cache": "To use the DoctrineCacheAdapter",
                "ext-curl": "To send requests using cURL",
                "ext-openssl": "Allows working with CloudFront private distributions and verifying received SNS messages"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Aws\\": "src/"
                },
                "files": [
                    "src/functions.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "authors": [
                {
                    "name": "Amazon Web Services",
                    "homepage": "http://aws.amazon.com"
                }
            ],
            "description": "AWS SDK for PHP - Use Amazon Web Services in your PHP project",
            "homepage": "http://aws.amazon.com/sdkforphp",
            "keywords": [
                "amazon",
                "aws",
                "cloud",
                "dynamodb",
                "ec2",
                "glacier",
                "s3",
                "sdk"
            ],
            "time": "2018-07-02T20:50:31+00:00"
        },
        {
            "name": "guzzlehttp/guzzle",
            "version": "6.3.3",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/guzzle.git",
                "reference": "407b0cb880ace85c9b63c5f9551db498cb2d50ba"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/407b0cb880ace85c9b63c5f9551db498cb2d50ba",
                "reference": "407b0cb880ace85c9b63c5f9551db498cb2d50ba",
                "shasum": ""
            },
            "require": {
                "guzzlehttp/promises": "^1.0",
                "guzzlehttp/psr7": "^1.4",
                "php": ">=5.5"
            },
            "require-dev": {
                "ext-curl": "*",
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.4 || ^7.0",
                "psr/log": "^1.0"
            },
            "suggest": {
                "psr/log": "Required for using the Log middleware"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "6.3-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/functions_include.php"
                ],
                "psr-4": {
                    "GuzzleHttp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                }
            ],
            "description": "Guzzle is a PHP HTTP client library",
            "homepage": "http://guzzlephp.org/",
            "keywords": [
                "client",
                "curl",
                "framework",
                "http",
                "http client",
                "rest",
                "web service"
            ],
            "time": "2018-04-22T15:46:56+00:00"
        },
        {
            "name": "guzzlehttp/promises",
            "version": "v1.3.1",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/promises.git",
                "reference": "a59da6cf61d80060647ff4d3eb2c03a2bc694646"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/promises/zipball/a59da6cf61d80060647ff4d3eb2c03a2bc694646",
                "reference": "a59da6cf61d80060647ff4d3eb2c03a2bc694646",
                "shasum": ""
            },
            "require": {
                "php": ">=5.5.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.4-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Promise\\": "src/"
                },
                "files": [
                    "src/functions_include.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                }
            ],
            "description": "Guzzle promises library",
            "keywords": [
                "promise"
            ],
            "time": "2016-12-20T10:07:11+00:00"
        },
        {
            "name": "guzzlehttp/psr7",
            "version": "1.4.2",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/psr7.git",
                "reference": "f5b8a8512e2b58b0071a7280e39f14f72e05d87c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/psr7/zipball/f5b8a8512e2b58b0071a7280e39f14f72e05d87c",
                "reference": "f5b8a8512e2b58b0071a7280e39f14f72e05d87c",
                "shasum": ""
            },
            "require": {
                "php": ">=5.4.0",
                "psr/http-message": "~1.0"
            },
            "provide": {
                "psr/http-message-implementation": "1.0"
            },
            "require-dev": {
                "phpunit/phpunit": "~4.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.4-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Psr7\\": "src/"
                },
                "files": [
                    "src/functions_include.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Tobias Schultze",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "PSR-7 message implementation that also provides common utility methods",
            "keywords": [
                "http",
                "message",
                "request",
                "response",
                "stream",
                "uri",
                "url"
            ],
            "time": "2017-03-20T17:10:46+00:00"
        },
        {
            "name": "keboola/csv",
            "version": "1.4.2",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-csv.git",
                "reference": "eb77f51e22d3e13a8e14a5d5a0b588cf9e8c56c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-csv/zipball/eb77f51e22d3e13a8e14a5d5a0b588cf9e8c56c5",
                "reference": "eb77f51e22d3e13a8e14a5d5a0b588cf9e8c56c5",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "^0.4",
                "phpunit/phpunit": "^5.7",
                "squizlabs/php_codesniffer": "^3.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Keboola\\Csv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "keboola",
                    "email": "devel@keboola.com"
                }
            ],
            "description": "Keboola CSV reader and writer",
            "homepage": "http://keboola.com",
            "keywords": [
                "csv",
                "rfc4180"
            ],
            "time": "2018-05-14T07:45:45+00:00"
        },
        {
            "name": "keboola/php-temp",
            "version": "0.1.3",
            "source": {
                "type": "git",
                "url": "https://github.com/keboola/php-temp.git",
                "reference": "25a5b7902d3dd6e9f211071acc388b33990d6b6e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keboola/php-temp/zipball/25a5b7902d3dd6e9f211071acc388b33990d6b6e",
                "reference": "25a5b7902d3dd6e9f211071acc388b33990d6b6e",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3",
                "symfony/filesystem": ">2.1.0"
            },
            "require-dev": {
                "phpunit/phpunit": "3.7.*"
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Keboola\\Temp": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Miro Cillik",
                    "email": "miro@keboola.cz"
                },
                {
                    "name": "Ondrej Vana",
                    "email": "kachna@keboola.cz"
                }
            ],
            "description": "Temp service - handles application's temporary files",
            "keywords": [
                "filesystem",
                "temp"
            ],
            "time": "2015-12-18T13:57:34+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "1.23.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "fd8c787753b3a2ad11bc60c063cff1358a32a3b4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/fd8c787753b3a2ad11bc60c063cff1358a32a3b4",
                "reference": "fd8c787753b3a2ad11bc60c063cff1358a32a3b4",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0",
                "psr/log": "~1.0"
            },
            "provide": {
                "psr/log-implementation": "1.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "graylog2/gelf-php": "~1.0",
                "jakub-onderka/php-parallel-lint": "0.9",
                "php-amqplib/php-amqplib": "~2.4",
                "php-console/php-console": "^3.1.3",
                "phpunit/phpunit": "~4.5",
                "phpunit/phpunit-mock-objects": "2.3.0",
                "ruflin/elastica": ">=0.90 <3.0",
                "sentry/sentry": "^0.13",
                "swiftmailer/swiftmailer": "^5.3|^6.0"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-mongo": "Allow sending log messages to a MongoDB server",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server via PHP Driver",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "php-console/php-console": "Allow sending log messages to Google Chrome",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server",
                "sentry/sentry": "Allow sending log messages to a Sentry server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "http://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "time": "2017-06-19T01:22:40+00:00"
        },
        {
            "name": "mtdowling/jmespath.php",
            "version": "2.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/jmespath/jmespath.php.git",
                "reference": "adcc9531682cf87dfda21e1fd5d0e7a41d292fac"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/jmespath/jmespath.php/zipball/adcc9531682cf87dfda21e1fd5d0e7a41d292fac",
                "reference": "adcc9531682cf87dfda21e1fd5d0e7a41d292fac",
                "shasum": ""
            },
            "require": {
                "php": ">=5.4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "~4.0"
            },
            "bin": [
                "bin/jp.php"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "JmesPath\\": "src/"
                },
                "files": [
                    "src/JmesPath.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                }
            ],
            "description": "Declaratively specify how to extract elements from a JSON document",
            "keywords": [
                "json",
                "jsonpath"
            ],
            "time": "2016-12-03T22:08:25+00:00"
        },
        {
            "name": "php-mime-mail-parser/php-mime-mail-parser",
            "version": "2.11.1",
            "source": {
                "type": "git",
                "url": "https://github.com/php-mime-mail-parser/php-mime-mail-parser.git",
                "reference": "4769e942ed0dbbdd7882fc390b119d625463c8af"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-mime-mail-parser/php-mime-mail-parser/zipball/4769e942ed0dbbdd7882fc390b119d625463c8af",
                "reference": "4769e942ed0dbbdd7882fc390b119d625463c8af",
                "shasum": ""
            },
            "require": {
                "ext-mailparse": "*",
                "php": "^5.4.0 || ^7.0"
            },
            "replace": {
                "exorus/php-mime-mail-parser": "*",
                "messaged/php-mime-mail-parser": "*"
            },
            "require-dev": {
                "phpunit/php-token-stream": "^1.3.0",
                "phpunit/phpunit": "^4.0 || ^5.0",
                "satooshi/php-coveralls": "0.*",
                "squizlabs/php_codesniffer": "2.*"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "PhpMimeMailParser\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "bucabay",
                    "email": "gabe@fijiwebdesign.com",
                    "homepage": "http://www.fijiwebdesign.com",
                    "role": "Developer"
                },
                {
                    "name": "eXorus",
                    "email": "exorus.spam@gmail.com",
                    "homepage": "https://github.com/eXorus/",
                    "role": "Developer"
                },
                {
                    "name": "M.Valinskis",
                    "email": "M.Valins@gmail.com",
                    "homepage": "https://code.google.com/p/php-mime-mail-parser",
                    "role": "Developer"
                },
                {
                    "name": "eugene.emmett.wood",
                    "email": "gene_w@cementhorizon.com",
                    "homepage": "https://code.google.com/p/php-mime-mail-parser",
                    "role": "Developer"
                },
                {
                    "name": "alknetso",
                    "email": "alkne@gmail.com",
                    "homepage": "https://code.google.com/p/php-mime-mail-parser",
                    "role": "Developer"
                }
            ],
            "description": "Fully Tested Mailparse Extension Wrapper for PHP 5.4+",
            "homepage": "https://github.com/php-mime-mail-parser/php-mime-mail-parser",
            "keywords": [
                "MimeMailParser",
                "mail",
                "mailparse",
                "mime"
            ],
            "time": "2018-04-30T05:55:59+00:00"
        },
        {
            "name": "psr/http-message",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-message.git",
                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363",
                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP messages",
            "homepage": "https://github.com/php-fig/http-message",
            "keywords": [
                "http",
                "http-message",
                "psr",
                "psr-7",
                "request",
                "response"
            ],
            "time": "2016-08-06T14:39:51+00:00"
        },
        {
            "name": "psr/log",
            "version": "1.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "4ebe3a8bf773a19edfe0a84b6585ba3d401b724d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/4ebe3a8bf773a19edfe0a84b6585ba3d401b724d",
                "reference": "4ebe3a8bf773a19edfe0a84b6585ba3d401b724d",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "Psr/Log/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "time": "2016-10-10T12:19:37+00:00"
        },
        {
            "name": "symfony/config",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/config.git",
                "reference": "e57e7b573df9d0eaa8c0152768c708ee7ea2b8e5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/config/zipball/e57e7b573df9d0eaa8c0152768c708ee7ea2b8e5",
                "reference": "e57e7b573df9d0eaa8c0152768c708ee7ea2b8e5",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/filesystem": "~3.4|~4.0",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "symfony/finder": "<3.4"
            },
            "require-dev": {
                "symfony/dependency-injection": "~3.4|~4.0",
                "symfony/event-dispatcher": "~3.4|~4.0",
                "symfony/finder": "~3.4|~4.0",
                "symfony/yaml": "~3.4|~4.0"
            },
            "suggest": {
                "symfony/yaml": "To use the yaml reference dumper"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Config\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Config Component",
            "homepage": "https://symfony.com",
            "time": "2018-06-20T11:15:17+00:00"
        },
        {
            "name": "symfony/console",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/console.git",
                "reference": "70591cda56b4b47c55776ac78e157c4bb6c8b43f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/console/zipball/70591cda56b4b47c55776ac78e157c4bb6c8b43f",
                "reference": "70591cda56b4b47c55776ac78e157c4bb6c8b43f",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/polyfill-mbstring": "~1.0"
            },
            "conflict": {
                "symfony/dependency-injection": "<3.4",
                "symfony/process": "<3.3"
            },
            "require-dev": {
                "psr/log": "~1.0",
                "symfony/config": "~3.4|~4.0",
                "symfony/dependency-injection": "~3.4|~4.0",
                "symfony/event-dispatcher": "~3.4|~4.0",
                "symfony/lock": "~3.4|~4.0",
                "symfony/process": "~3.4|~4.0"
            },
            "suggest": {
                "psr/log-implementation": "For using the console logger",
                "symfony/event-dispatcher": "",
                "symfony/lock": "",
                "symfony/process": ""
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Console\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Console Component",
            "homepage": "https://symfony.com",
            "time": "2018-05-31T10:17:53+00:00"
        },
        {
            "name": "symfony/filesystem",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/filesystem.git",
                "reference": "562bf7005b55fd80d26b582d28e3e10f2dd5ae9c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/filesystem/zipball/562bf7005b55fd80d26b582d28e3e10f2dd5ae9c",
                "reference": "562bf7005b55fd80d26b582d28e3e10f2dd5ae9c",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/polyfill-ctype": "~1.8"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Filesystem\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Filesystem Component",
            "homepage": "https://symfony.com",
            "time": "2018-05-30T07:26:09+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.8.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "7cc359f1b7b80fc25ed7796be7d96adc9b354bae"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/7cc359f1b7b80fc25ed7796be7d96adc9b354bae",
                "reference": "7cc359f1b7b80fc25ed7796be7d96adc9b354bae",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.8-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                },
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                },
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "time": "2018-04-30T19:57:29+00:00"
        },
        {
            "name": "symfony/polyfill-mbstring",
            "version": "v1.8.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-mbstring.git",
                "reference": "3296adf6a6454a050679cde90f95350ad604b171"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/3296adf6a6454a050679cde90f95350ad604b171",
                "reference": "3296adf6a6454a050679cde90f95350ad604b171",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "suggest": {
                "ext-mbstring": "For best performance"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.8-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Polyfill\\Mbstring\\": ""
                },
                "files": [
                    "bootstrap.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for the Mbstring extension",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "mbstring",
                "polyfill",
                "portable",
                "shim"
            ],
            "time": "2018-04-26T10:06:28+00:00"
        },
        {
            "name": "symfony/process",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/process.git",
                "reference": "1d1677391ecf00d1c5b9482d6050c0c27aa3ac3a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/process/zipball/1d1677391ecf00d1c5b9482d6050c0c27aa3ac3a",
                "reference": "1d1677391ecf00d1c5b9482d6050c0c27aa3ac3a",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Process\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Process Component",
            "homepage": "https://symfony.com",
            "time": "2018-05-31T10:17:53+00:00"
        },
        {
            "name": "symfony/serializer",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/serializer.git",
                "reference": "2ddc6ec084eba809aec92bf723e007bc3a8345c0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/serializer/zipball/2ddc6ec084eba809aec92bf723e007bc3a8345c0",
                "reference": "2ddc6ec084eba809aec92bf723e007bc3a8345c0",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3",
                "symfony/polyfill-ctype": "~1.8"
            },
            "conflict": {
                "phpdocumentor/type-resolver": "<0.2.1",
                "symfony/dependency-injection": "<3.4",
                "symfony/property-access": "<3.4",
                "symfony/property-info": "<3.4",
                "symfony/yaml": "<3.4"
            },
            "require-dev": {
                "doctrine/annotations": "~1.0",
                "doctrine/cache": "~1.0",
                "phpdocumentor/reflection-docblock": "^3.0|^4.0",
                "symfony/cache": "~3.4|~4.0",
                "symfony/config": "~3.4|~4.0",
                "symfony/dependency-injection": "~3.4|~4.0",
                "symfony/http-foundation": "~3.4|~4.0",
                "symfony/property-access": "~3.4|~4.0",
                "symfony/property-info": "~3.4|~4.0",
                "symfony/validator": "~3.4|~4.0",
                "symfony/yaml": "~3.4|~4.0"
            },
            "suggest": {
                "doctrine/annotations": "For using the annotation mapping. You will also need doctrine/cache.",
                "doctrine/cache": "For using the default cached annotation reader and metadata cache.",
                "psr/cache-implementation": "For using the metadata cache.",
                "symfony/config": "For using the XML mapping loader.",
                "symfony/http-foundation": "To use the DataUriNormalizer.",
                "symfony/property-access": "For using the ObjectNormalizer.",
                "symfony/property-info": "To deserialize relations.",
                "symfony/yaml": "For using the default YAML mapping loader."
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Serializer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Serializer Component",
            "homepage": "https://symfony.com",
            "time": "2018-06-22T08:59:39+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "doctrine/instantiator",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/instantiator.git",
                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "require-dev": {
                "athletic/athletic": "~0.1.8",
                "ext-pdo": "*",
                "ext-phar": "*",
                "phpunit/phpunit": "^6.2.3",
                "squizlabs/php_codesniffer": "^3.0.2"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com",
                    "homepage": "http://ocramius.github.com/"
                }
            ],
            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
            "homepage": "https://github.com/doctrine/instantiator",
            "keywords": [
                "constructor",
                "instantiate"
            ],
            "time": "2017-07-22T11:58:36+00:00"
        },
        {
            "name": "jean85/pretty-package-versions",
            "version": "1.2",
            "source": {
                "type": "git",
                "url": "https://github.com/Jean85/pretty-package-versions.git",
                "reference": "75c7effcf3f77501d0e0caa75111aff4daa0dd48"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Jean85/pretty-package-versions/zipball/75c7effcf3f77501d0e0caa75111aff4daa0dd48",
                "reference": "75c7effcf3f77501d0e0caa75111aff4daa0dd48",
                "shasum": ""
            },
            "require": {
                "ocramius/package-versions": "^1.2.0",
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Jean85\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Alessandro Lai",
                    "email": "alessandro.lai85@gmail.com"
                }
            ],
            "description": "A wrapper for ocramius/package-versions to get pretty versions strings",
            "keywords": [
                "composer",
                "package",
                "release",
                "versions"
            ],
            "time": "2018-06-13T13:22:40+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.8.1",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8",
                "reference": "3e01bdad3e18354c3dce54466b7fbe33a9f9f7f8",
                "shasum": ""
            },
            "require": {
                "php": "^7.1"
            },
            "replace": {
                "myclabs/deep-copy": "self.version"
            },
            "require-dev": {
                "doctrine/collections": "^1.0",
                "doctrine/common": "^2.6",
                "phpunit/phpunit": "^7.1"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                },
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "time": "2018-06-11T23:09:50+00:00"
        },
        {
            "name": "nette/bootstrap",
            "version": "v2.4.6",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/bootstrap.git",
                "reference": "268816e3f1bb7426c3a4ceec2bd38a036b532543"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/bootstrap/zipball/268816e3f1bb7426c3a4ceec2bd38a036b532543",
                "reference": "268816e3f1bb7426c3a4ceec2bd38a036b532543",
                "shasum": ""
            },
            "require": {
                "nette/di": "~2.4.7",
                "nette/utils": "~2.4",
                "php": ">=5.6.0"
            },
            "conflict": {
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "latte/latte": "~2.2",
                "nette/application": "~2.3",
                "nette/caching": "~2.3",
                "nette/database": "~2.3",
                "nette/forms": "~2.3",
                "nette/http": "~2.4.0",
                "nette/mail": "~2.3",
                "nette/robot-loader": "^2.4.2 || ^3.0",
                "nette/safe-stream": "~2.2",
                "nette/security": "~2.3",
                "nette/tester": "~2.0",
                "tracy/tracy": "^2.4.1"
            },
            "suggest": {
                "nette/robot-loader": "to use Configurator::createRobotLoader()",
                "tracy/tracy": "to use Configurator::enableTracy()"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.4-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🅱 Nette Bootstrap: the simple way to configure and bootstrap your Nette application.",
            "homepage": "https://nette.org",
            "keywords": [
                "bootstrapping",
                "configurator",
                "nette"
            ],
            "time": "2018-05-17T12:52:20+00:00"
        },
        {
            "name": "nette/di",
            "version": "v2.4.13",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/di.git",
                "reference": "3f8f212b02d5c17feb97a7e0a39ab306f40c06ca"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/di/zipball/3f8f212b02d5c17feb97a7e0a39ab306f40c06ca",
                "reference": "3f8f212b02d5c17feb97a7e0a39ab306f40c06ca",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "nette/neon": "^2.3.3 || ~3.0.0",
                "nette/php-generator": "^2.6.1 || ~3.0.0",
                "nette/utils": "^2.4.3 || ~3.0.0",
                "php": ">=5.6.0"
            },
            "conflict": {
                "nette/bootstrap": "<2.4",
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "nette/tester": "^2.0",
                "tracy/tracy": "^2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.4-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "💎 Nette Dependency Injection Container: Flexible, compiled and full-featured DIC with perfectly usable autowiring and support for all new PHP 7.1 features.",
            "homepage": "https://nette.org",
            "keywords": [
                "compiled",
                "di",
                "dic",
                "factory",
                "ioc",
                "nette",
                "static"
            ],
            "time": "2018-06-11T08:46:01+00:00"
        },
        {
            "name": "nette/finder",
            "version": "v2.4.2",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/finder.git",
                "reference": "ee951a656cb8ac622e5dd33474a01fd2470505a0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/finder/zipball/ee951a656cb8ac622e5dd33474a01fd2470505a0",
                "reference": "ee951a656cb8ac622e5dd33474a01fd2470505a0",
                "shasum": ""
            },
            "require": {
                "nette/utils": "~2.4",
                "php": ">=5.6.0"
            },
            "conflict": {
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "nette/tester": "~2.0",
                "tracy/tracy": "^2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.4-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🔍 Nette Finder: find files and directories with an intuitive API.",
            "homepage": "https://nette.org",
            "keywords": [
                "filesystem",
                "glob",
                "iterator",
                "nette"
            ],
            "time": "2018-06-28T11:49:23+00:00"
        },
        {
            "name": "nette/neon",
            "version": "v2.4.3",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/neon.git",
                "reference": "5e72b1dd3e2d34f0863c5561139a19df6a1ef398"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/neon/zipball/5e72b1dd3e2d34f0863c5561139a19df6a1ef398",
                "reference": "5e72b1dd3e2d34f0863c5561139a19df6a1ef398",
                "shasum": ""
            },
            "require": {
                "ext-iconv": "*",
                "ext-json": "*",
                "php": ">=5.6.0"
            },
            "require-dev": {
                "nette/tester": "~2.0",
                "tracy/tracy": "^2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.4-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🍸 Nette NEON: encodes and decodes NEON file format.",
            "homepage": "http://ne-on.org",
            "keywords": [
                "export",
                "import",
                "neon",
                "nette",
                "yaml"
            ],
            "time": "2018-03-21T12:12:21+00:00"
        },
        {
            "name": "nette/php-generator",
            "version": "v3.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/php-generator.git",
                "reference": "b381ecacbf5a0b5f99cc0b303d5b0578d409f446"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/php-generator/zipball/b381ecacbf5a0b5f99cc0b303d5b0578d409f446",
                "reference": "b381ecacbf5a0b5f99cc0b303d5b0578d409f446",
                "shasum": ""
            },
            "require": {
                "nette/utils": "^2.4.2 || ~3.0.0",
                "php": ">=7.0"
            },
            "conflict": {
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "nette/tester": "^2.0",
                "tracy/tracy": "^2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🐘 Nette PHP Generator: generates neat PHP code for you. Supports new PHP 7.2 features.",
            "homepage": "https://nette.org",
            "keywords": [
                "code",
                "nette",
                "php",
                "scaffolding"
            ],
            "time": "2018-04-26T16:48:20+00:00"
        },
        {
            "name": "nette/robot-loader",
            "version": "v3.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/robot-loader.git",
                "reference": "3cf88781a05e0bf4618ae605361afcbaa4d5b392"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/robot-loader/zipball/3cf88781a05e0bf4618ae605361afcbaa4d5b392",
                "reference": "3cf88781a05e0bf4618ae605361afcbaa4d5b392",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "nette/finder": "^2.3 || ^3.0",
                "nette/utils": "^2.4 || ^3.0",
                "php": ">=5.6.0"
            },
            "conflict": {
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "nette/tester": "^2.0",
                "tracy/tracy": "^2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🍀 Nette RobotLoader: high performance and comfortable autoloader that will search and autoload classes within your application.",
            "homepage": "https://nette.org",
            "keywords": [
                "autoload",
                "class",
                "interface",
                "nette",
                "trait"
            ],
            "time": "2018-06-22T09:34:04+00:00"
        },
        {
            "name": "nette/utils",
            "version": "v2.5.2",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/utils.git",
                "reference": "183069866dc477fcfbac393ed486aaa6d93d19a5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/utils/zipball/183069866dc477fcfbac393ed486aaa6d93d19a5",
                "reference": "183069866dc477fcfbac393ed486aaa6d93d19a5",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6.0"
            },
            "conflict": {
                "nette/nette": "<2.2"
            },
            "require-dev": {
                "nette/tester": "~2.0",
                "tracy/tracy": "^2.3"
            },
            "suggest": {
                "ext-gd": "to use Image",
                "ext-iconv": "to use Strings::webalize() and toAscii()",
                "ext-intl": "for script transliteration in Strings::webalize() and toAscii()",
                "ext-json": "to use Nette\\Utils\\Json",
                "ext-mbstring": "to use Strings::lower() etc...",
                "ext-xml": "to use Strings::length() etc. when mbstring is not available"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.5-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ],
                "files": [
                    "src/loader.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0",
                "GPL-3.0"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🛠 Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.",
            "homepage": "https://nette.org",
            "keywords": [
                "array",
                "core",
                "datetime",
                "images",
                "json",
                "nette",
                "paginator",
                "password",
                "slugify",
                "string",
                "unicode",
                "utf-8",
                "utility",
                "validation"
            ],
            "time": "2018-05-02T17:16:08+00:00"
        },
        {
            "name": "nikic/php-parser",
            "version": "v3.1.5",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/PHP-Parser.git",
                "reference": "bb87e28e7d7b8d9a7fda231d37457c9210faf6ce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/bb87e28e7d7b8d9a7fda231d37457c9210faf6ce",
                "reference": "bb87e28e7d7b8d9a7fda231d37457c9210faf6ce",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "php": ">=5.5"
            },
            "require-dev": {
                "phpunit/phpunit": "~4.0|~5.0"
            },
            "bin": [
                "bin/php-parse"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpParser\\": "lib/PhpParser"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov"
                }
            ],
            "description": "A PHP parser written in PHP",
            "keywords": [
                "parser",
                "php"
            ],
            "time": "2018-02-28T20:30:58+00:00"
        },
        {
            "name": "ocramius/package-versions",
            "version": "1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Ocramius/PackageVersions.git",
                "reference": "4489d5002c49d55576fa0ba786f42dbb009be46f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Ocramius/PackageVersions/zipball/4489d5002c49d55576fa0ba786f42dbb009be46f",
                "reference": "4489d5002c49d55576fa0ba786f42dbb009be46f",
                "shasum": ""
            },
            "require": {
                "composer-plugin-api": "^1.0.0",
                "php": "^7.1.0"
            },
            "require-dev": {
                "composer/composer": "^1.6.3",
                "ext-zip": "*",
                "infection/infection": "^0.7.1",
                "phpunit/phpunit": "^7.0.0"
            },
            "type": "composer-plugin",
            "extra": {
                "class": "PackageVersions\\Installer",
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PackageVersions\\": "src/PackageVersions"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com"
                }
            ],
            "description": "Composer plugin that provides efficient querying for installed package versions (no runtime IO)",
            "time": "2018-02-05T13:05:30+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "2df402786ab5368a0169091f61a7c1e0eb6852d0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/2df402786ab5368a0169091f61a7c1e0eb6852d0",
                "reference": "2df402786ab5368a0169091f61a7c1e0eb6852d0",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-phar": "*",
                "phar-io/version": "^1.0.1",
                "php": "^5.6 || ^7.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "time": "2017-03-05T18:14:27+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "a70c0ced4be299a63d32fa96d9281d03e94041df"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/a70c0ced4be299a63d32fa96d9281d03e94041df",
                "reference": "a70c0ced4be299a63d32fa96d9281d03e94041df",
                "shasum": ""
            },
            "require": {
                "php": "^5.6 || ^7.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "time": "2017-03-05T17:38:23+00:00"
        },
        {
            "name": "phpdocumentor/reflection-common",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/ReflectionCommon.git",
                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
                "shasum": ""
            },
            "require": {
                "php": ">=5.5"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.6"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jaap van Otterdijk",
                    "email": "opensource@ijaap.nl"
                }
            ],
            "description": "Common reflection classes used by phpdocumentor to reflect the code structure",
            "homepage": "http://www.phpdoc.org",
            "keywords": [
                "FQSEN",
                "phpDocumentor",
                "phpdoc",
                "reflection",
                "static analysis"
            ],
            "time": "2017-09-11T18:02:19+00:00"
        },
        {
            "name": "phpdocumentor/reflection-docblock",
            "version": "4.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/ReflectionDocBlock.git",
                "reference": "94fd0001232e47129dd3504189fa1c7225010d08"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/94fd0001232e47129dd3504189fa1c7225010d08",
                "reference": "94fd0001232e47129dd3504189fa1c7225010d08",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "phpdocumentor/reflection-common": "^1.0.0",
                "phpdocumentor/type-resolver": "^0.4.0",
                "webmozart/assert": "^1.0"
            },
            "require-dev": {
                "doctrine/instantiator": "~1.0.5",
                "mockery/mockery": "^1.0",
                "phpunit/phpunit": "^6.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Mike van Riel",
                    "email": "me@mikevanriel.com"
                }
            ],
            "description": "With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.",
            "time": "2017-11-30T07:14:17+00:00"
        },
        {
            "name": "phpdocumentor/type-resolver",
            "version": "0.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/phpDocumentor/TypeResolver.git",
                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/9c977708995954784726e25d0cd1dddf4e65b0f7",
                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7",
                "shasum": ""
            },
            "require": {
                "php": "^5.5 || ^7.0",
                "phpdocumentor/reflection-common": "^1.0"
            },
            "require-dev": {
                "mockery/mockery": "^0.9.4",
                "phpunit/phpunit": "^5.2||^4.8.24"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "phpDocumentor\\Reflection\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Mike van Riel",
                    "email": "me@mikevanriel.com"
                }
            ],
            "time": "2017-07-14T14:27:02+00:00"
        },
        {
            "name": "phpspec/prophecy",
            "version": "1.7.6",
            "source": {
                "type": "git",
                "url": "https://github.com/phpspec/prophecy.git",
                "reference": "33a7e3c4fda54e912ff6338c48823bd5c0f0b712"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/33a7e3c4fda54e912ff6338c48823bd5c0f0b712",
                "reference": "33a7e3c4fda54e912ff6338c48823bd5c0f0b712",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.0.2",
                "php": "^5.3|^7.0",
                "phpdocumentor/reflection-docblock": "^2.0|^3.0.2|^4.0",
                "sebastian/comparator": "^1.1|^2.0|^3.0",
                "sebastian/recursion-context": "^1.0|^2.0|^3.0"
            },
            "require-dev": {
                "phpspec/phpspec": "^2.5|^3.2",
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.7.x-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Prophecy\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Konstantin Kudryashov",
                    "email": "ever.zet@gmail.com",
                    "homepage": "http://everzet.com"
                },
                {
                    "name": "Marcello Duarte",
                    "email": "marcello.duarte@gmail.com"
                }
            ],
            "description": "Highly opinionated mocking framework for PHP 5.3+",
            "homepage": "https://github.com/phpspec/prophecy",
            "keywords": [
                "Double",
                "Dummy",
                "fake",
                "mock",
                "spy",
                "stub"
            ],
            "time": "2018-04-18T13:57:24+00:00"
        },
        {
            "name": "phpstan/phpdoc-parser",
            "version": "0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpdoc-parser.git",
                "reference": "02f909f134fe06f0cd4790d8627ee24efbe84d6a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpdoc-parser/zipball/02f909f134fe06f0cd4790d8627ee24efbe84d6a",
                "reference": "02f909f134fe06f0cd4790d8627ee24efbe84d6a",
                "shasum": ""
            },
            "require": {
                "php": "~7.0"
            },
            "require-dev": {
                "consistence/coding-standard": "^2.0.0",
                "jakub-onderka/php-parallel-lint": "^0.9.2",
                "phing/phing": "^2.16.0",
                "phpstan/phpstan": "^0.9",
                "phpunit/phpunit": "^6.3",
                "slevomat/coding-standard": "^3.3.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "0.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PHPStan\\PhpDocParser\\": [
                        "src/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPDoc parser with support for nullable, intersection and generic types",
            "time": "2018-01-13T18:19:41+00:00"
        },
        {
            "name": "phpstan/phpstan",
            "version": "0.9.2",
            "source": {
                "type": "git",
                "url": "https://github.com/phpstan/phpstan.git",
                "reference": "e59541bcc7cac9b35ca54db6365bf377baf4a488"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phpstan/phpstan/zipball/e59541bcc7cac9b35ca54db6365bf377baf4a488",
                "reference": "e59541bcc7cac9b35ca54db6365bf377baf4a488",
                "shasum": ""
            },
            "require": {
                "jean85/pretty-package-versions": "^1.0.3",
                "nette/bootstrap": "^2.4 || ^3.0",
                "nette/di": "^2.4.7 || ^3.0",
                "nette/robot-loader": "^3.0.1",
                "nette/utils": "^2.4.5 || ^3.0",
                "nikic/php-parser": "^3.1",
                "php": "~7.0",
                "phpstan/phpdoc-parser": "^0.2",
                "symfony/console": "~3.2 || ~4.0",
                "symfony/finder": "~3.2 || ~4.0"
            },
            "require-dev": {
                "consistence/coding-standard": "2.2.1",
                "ext-gd": "*",
                "ext-intl": "*",
                "ext-mysqli": "*",
                "jakub-onderka/php-parallel-lint": "^0.9.2",
                "phing/phing": "^2.16.0",
                "phpstan/phpstan-php-parser": "^0.9",
                "phpstan/phpstan-phpunit": "^0.9.3",
                "phpstan/phpstan-strict-rules": "^0.9",
                "phpunit/phpunit": "^6.5.4",
                "slevomat/coding-standard": "4.0.0"
            },
            "bin": [
                "bin/phpstan"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "0.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PHPStan\\": [
                        "src/",
                        "build/PHPStan"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHPStan - PHP Static Analysis Tool",
            "time": "2018-01-28T13:22:19+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "5.3.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "c89677919c5dd6d3b3852f230a663118762218ac"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/c89677919c5dd6d3b3852f230a663118762218ac",
                "reference": "c89677919c5dd6d3b3852f230a663118762218ac",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-xmlwriter": "*",
                "php": "^7.0",
                "phpunit/php-file-iterator": "^1.4.2",
                "phpunit/php-text-template": "^1.2.1",
                "phpunit/php-token-stream": "^2.0.1",
                "sebastian/code-unit-reverse-lookup": "^1.0.1",
                "sebastian/environment": "^3.0",
                "sebastian/version": "^2.0.1",
                "theseer/tokenizer": "^1.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "suggest": {
                "ext-xdebug": "^2.5.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.3.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "time": "2018-04-06T15:36:58+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "1.4.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "730b01bc3e867237eaac355e06a36b85dd93a8b4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/730b01bc3e867237eaac355e06a36b85dd93a8b4",
                "reference": "730b01bc3e867237eaac355e06a36b85dd93a8b4",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.4.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sb@sebastian-bergmann.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "time": "2017-11-27T13:52:08+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
                "reference": "31f8b717e51d9a2afca6c9f046f5d69fc27c8686",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "time": "2015-06-21T13:50:34+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "1.0.9",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "3dcf38ca72b158baf0bc245e9184d3fdffa9c46f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/3dcf38ca72b158baf0bc245e9184d3fdffa9c46f",
                "reference": "3dcf38ca72b158baf0bc245e9184d3fdffa9c46f",
                "shasum": ""
            },
            "require": {
                "php": "^5.3.3 || ^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sb@sebastian-bergmann.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "time": "2017-02-26T11:10:40+00:00"
        },
        {
            "name": "phpunit/php-token-stream",
            "version": "2.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-token-stream.git",
                "reference": "791198a2c6254db10131eecfe8c06670700904db"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/791198a2c6254db10131eecfe8c06670700904db",
                "reference": "791198a2c6254db10131eecfe8c06670700904db",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.2.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Wrapper around PHP's tokenizer extension.",
            "homepage": "https://github.com/sebastianbergmann/php-token-stream/",
            "keywords": [
                "tokenizer"
            ],
            "time": "2017-11-27T05:48:46+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "6.5.9",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "093ca5508174cd8ab8efe44fd1dde447adfdec8f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/093ca5508174cd8ab8efe44fd1dde447adfdec8f",
                "reference": "093ca5508174cd8ab8efe44fd1dde447adfdec8f",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "myclabs/deep-copy": "^1.6.1",
                "phar-io/manifest": "^1.0.1",
                "phar-io/version": "^1.0",
                "php": "^7.0",
                "phpspec/prophecy": "^1.7",
                "phpunit/php-code-coverage": "^5.3",
                "phpunit/php-file-iterator": "^1.4.3",
                "phpunit/php-text-template": "^1.2.1",
                "phpunit/php-timer": "^1.0.9",
                "phpunit/phpunit-mock-objects": "^5.0.5",
                "sebastian/comparator": "^2.1",
                "sebastian/diff": "^2.0",
                "sebastian/environment": "^3.1",
                "sebastian/exporter": "^3.1",
                "sebastian/global-state": "^2.0",
                "sebastian/object-enumerator": "^3.0.3",
                "sebastian/resource-operations": "^1.0",
                "sebastian/version": "^2.0.1"
            },
            "conflict": {
                "phpdocumentor/reflection-docblock": "3.0.2",
                "phpunit/dbunit": "<3.0"
            },
            "require-dev": {
                "ext-pdo": "*"
            },
            "suggest": {
                "ext-xdebug": "*",
                "phpunit/php-invoker": "^1.1"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "6.5.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "time": "2018-07-03T06:40:40+00:00"
        },
        {
            "name": "phpunit/phpunit-mock-objects",
            "version": "5.0.7",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit-mock-objects.git",
                "reference": "3eaf040f20154d27d6da59ca2c6e28ac8fd56dce"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit-mock-objects/zipball/3eaf040f20154d27d6da59ca2c6e28ac8fd56dce",
                "reference": "3eaf040f20154d27d6da59ca2c6e28ac8fd56dce",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.0.5",
                "php": "^7.0",
                "phpunit/php-text-template": "^1.2.1",
                "sebastian/exporter": "^3.1"
            },
            "conflict": {
                "phpunit/phpunit": "<6.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.5"
            },
            "suggest": {
                "ext-soap": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Mock Object library for PHPUnit",
            "homepage": "https://github.com/sebastianbergmann/phpunit-mock-objects/",
            "keywords": [
                "mock",
                "xunit"
            ],
            "time": "2018-05-29T13:50:43+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "1.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "4419fcdb5eabb9caa61a27c7a1db532a6b55dd18"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/4419fcdb5eabb9caa61a27c7a1db532a6b55dd18",
                "reference": "4419fcdb5eabb9caa61a27c7a1db532a6b55dd18",
                "shasum": ""
            },
            "require": {
                "php": "^5.6 || ^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^5.7 || ^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "time": "2017-03-04T06:30:41+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "2.1.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "34369daee48eafb2651bea869b4b15d75ccc35f9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/34369daee48eafb2651bea869b4b15d75ccc35f9",
                "reference": "34369daee48eafb2651bea869b4b15d75ccc35f9",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "sebastian/diff": "^2.0 || ^3.0",
                "sebastian/exporter": "^3.1"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.1.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "time": "2018-02-01T13:46:46+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "347c1d8b49c5c3ee30c7040ea6fc446790e6bddd"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/347c1d8b49c5c3ee30c7040ea6fc446790e6bddd",
                "reference": "347c1d8b49c5c3ee30c7040ea6fc446790e6bddd",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.2"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff"
            ],
            "time": "2017-08-03T08:09:46+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "3.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "cd0871b3975fb7fc44d11314fd1ee20925fce4f5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/cd0871b3975fb7fc44d11314fd1ee20925fce4f5",
                "reference": "cd0871b3975fb7fc44d11314fd1ee20925fce4f5",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "http://www.github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "time": "2017-07-01T08:51:00+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "3.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/234199f4528de6d12aaa58b612e98f7d36adb937",
                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "sebastian/recursion-context": "^3.0"
            },
            "require-dev": {
                "ext-mbstring": "*",
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "http://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "time": "2017-04-03T13:19:02+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "2.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "suggest": {
                "ext-uopz": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "http://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "time": "2017-04-27T15:39:26+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/7cfd9e65d11ffb5af41198476395774d4c8a84c5",
                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5",
                "shasum": ""
            },
            "require": {
                "php": "^7.0",
                "sebastian/object-reflector": "^1.1.1",
                "sebastian/recursion-context": "^3.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "time": "2017-08-03T12:35:26+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "1.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "773f97c67f28de00d397be301821b06708fca0be"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/773f97c67f28de00d397be301821b06708fca0be",
                "reference": "773f97c67f28de00d397be301821b06708fca0be",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "time": "2017-03-29T09:07:27+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "3.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
                "shasum": ""
            },
            "require": {
                "php": "^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
            "time": "2017-03-03T06:23:57+00:00"
        },
        {
            "name": "sebastian/resource-operations",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/resource-operations.git",
                "reference": "ce990bb21759f94aeafd30209e8cfcdfa8bc3f52"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/ce990bb21759f94aeafd30209e8cfcdfa8bc3f52",
                "reference": "ce990bb21759f94aeafd30209e8cfcdfa8bc3f52",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides a list of PHP built-in functions that operate on resources",
            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
            "time": "2015-07-28T20:34:47+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "2.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "99732be0ddb3361e16ad77b68ba41efc8e979019"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/99732be0ddb3361e16ad77b68ba41efc8e979019",
                "reference": "99732be0ddb3361e16ad77b68ba41efc8e979019",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "time": "2016-10-03T07:35:21+00:00"
        },
        {
            "name": "squizlabs/php_codesniffer",
            "version": "2.9.1",
            "source": {
                "type": "git",
                "url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                "reference": "dcbed1074f8244661eecddfc2a675430d8d33f62"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/zipball/dcbed1074f8244661eecddfc2a675430d8d33f62",
                "reference": "dcbed1074f8244661eecddfc2a675430d8d33f62",
                "shasum": ""
            },
            "require": {
                "ext-simplexml": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": ">=5.1.2"
            },
            "require-dev": {
                "phpunit/phpunit": "~4.0"
            },
            "bin": [
                "scripts/phpcs",
                "scripts/phpcbf"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "CodeSniffer.php",
                    "CodeSniffer/CLI.php",
                    "CodeSniffer/Exception.php",
                    "CodeSniffer/File.php",
                    "CodeSniffer/Fixer.php",
                    "CodeSniffer/Report.php",
                    "CodeSniffer/Reporting.php",
                    "CodeSniffer/Sniff.php",
                    "CodeSniffer/Tokens.php",
                    "CodeSniffer/Reports/",
                    "CodeSniffer/Tokenizers/",
                    "CodeSniffer/DocGenerators/",
                    "CodeSniffer/Standards/AbstractPatternSniff.php",
                    "CodeSniffer/Standards/AbstractScopeSniff.php",
                    "CodeSniffer/Standards/AbstractVariableSniff.php",
                    "CodeSniffer/Standards/IncorrectPatternException.php",
                    "CodeSniffer/Standards/Generic/Sniffs/",
                    "CodeSniffer/Standards/MySource/Sniffs/",
                    "CodeSniffer/Standards/PEAR/Sniffs/",
                    "CodeSniffer/Standards/PSR1/Sniffs/",
                    "CodeSniffer/Standards/PSR2/Sniffs/",
                    "CodeSniffer/Standards/Squiz/Sniffs/",
                    "CodeSniffer/Standards/Zend/Sniffs/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Greg Sherwood",
                    "role": "lead"
                }
            ],
            "description": "PHP_CodeSniffer tokenizes PHP, JavaScript and CSS files and detects violations of a defined set of coding standards.",
            "homepage": "http://www.squizlabs.com/php-codesniffer",
            "keywords": [
                "phpcs",
                "standards"
            ],
            "time": "2017-05-22T02:43:20+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v4.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "84714b8417d19e4ba02ea78a41a975b3efaafddb"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/84714b8417d19e4ba02ea78a41a975b3efaafddb",
                "reference": "84714b8417d19e4ba02ea78a41a975b3efaafddb",
                "shasum": ""
            },
            "require": {
                "php": "^7.1.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.1-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony Finder Component",
            "homepage": "https://symfony.com",
            "time": "2018-06-19T21:38:16+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/cb2f008f3f05af2893a87208fe6a6c4985483f8b",
                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "time": "2017-04-07T12:08:54+00:00"
        },
        {
            "name": "webmozart/assert",
            "version": "1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/webmozart/assert.git",
                "reference": "0df1908962e7a3071564e857d86874dad1ef204a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/webmozart/assert/zipball/0df1908962e7a3071564e857d86874dad1ef204a",
                "reference": "0df1908962e7a3071564e857d86874dad1ef204a",
                "shasum": ""
            },
            "require": {
                "php": "^5.3.3 || ^7.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.6",
                "sebastian/version": "^1.0.1"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.3-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Webmozart\\Assert\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Assertions to validate method input/output with nice error messages.",
            "keywords": [
                "assert",
                "check",
                "validate"
            ],
            "time": "2018-01-29T19:49:41+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": {
        "php": "~7.2"
    },
    "platform-dev": []
}


================================================
File: deploy.sh
================================================
#!/bin/bash
set -e

docker pull quay.io/keboola/developer-portal-cli-v2:latest
export REPOSITORY=`docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL \
    quay.io/keboola/developer-portal-cli-v2:latest ecr:get-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP}`
docker tag ${KBC_APP_REPOSITORY}:latest ${REPOSITORY}:${TRAVIS_TAG}
docker tag ${KBC_APP_REPOSITORY}:latest ${REPOSITORY}:latest
eval $(docker run --rm \
    -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL \
    quay.io/keboola/developer-portal-cli-v2:latest ecr:get-login ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP})
docker push ${REPOSITORY}:${TRAVIS_TAG}
docker push ${REPOSITORY}:latest

# Deploy to KBC -> update the tag in Keboola Developer Portal (needs $KBC_DEVELOPERPORTAL_VENDOR & $KBC_DEVELOPERPORTAL_APP)
docker run --rm -e KBC_DEVELOPERPORTAL_USERNAME -e KBC_DEVELOPERPORTAL_PASSWORD -e KBC_DEVELOPERPORTAL_URL \
    quay.io/keboola/developer-portal-cli-v2:latest update-app-repository ${KBC_DEVELOPERPORTAL_VENDOR} ${KBC_DEVELOPERPORTAL_APP} ${TRAVIS_TAG} \
    ecr ${REPOSITORY}

================================================
File: docker-compose.yml
================================================
version: "2"

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    volumes:
      - ./:/code
    environment:
      - KBC_CONFIGID
      - KBC_PROJECTID
      - KBC_DATADIR

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/code
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    entrypoint: /code/vendor/bin/phpunit
    environment:
      - "AWS_ACCESS_KEY_ID=${DEV_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${DEV_AWS_SECRET_ACCESS_KEY}"
      - "DYNAMO_TABLE=${DEV_DYNAMO_TABLE}"
      - "EMAIL_DOMAIN=${DEV_EMAIL_DOMAIN}"
      - "REGION=${DEV_REGION}"
      - "S3_BUCKET=${DEV_S3_BUCKET}"


================================================
File: phpstan.neon
================================================
parameters:
    ignoreErrors:
        - '#mailparse_rfc822_parse_addresses#'


================================================
File: phpunit.xml.dist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<phpunit backupGlobals="false"
         backupStaticAttributes="false"
         colors="true"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         processIsolation="false"
         stopOnFailure="false"
         syntaxCheck="false"
         bootstrap="tests/bootstrap.php">

    <testsuite name="ExEmailAttachments Test">
        <directory>tests</directory>
    </testsuite>

    <filter>
        <whitelist processUncoveredFilesFromWhitelist="true">
            <directory suffix=".php">.</directory>
            <exclude>
                <file>run.php</file>
                <directory suffix=".php">vendor</directory>
            </exclude>
        </whitelist>
    </filter>
</phpunit>


================================================
File: tests.sh
================================================
#!/bin/sh
php --version \
  && /code/vendor/bin/phpcs --standard=psr2 -n --ignore=/code/vendor /code \
  && /code/vendor/bin/phpstan analyse -l 5 /code/src /code/tests \
  && /code/vendor/bin/phpunit -c /code/phpunit.xml.dist

================================================
File: .codeclimate.yml
================================================
engines:
  duplication:
    enabled: true
    config:
      languages:
      - php
  fixme:
    enabled: true
  phpcodesniffer:
    enabled: true
    config:
      standard: "PSR1,PSR2"
  phpmd:
    enabled: true
    checks:
      CleanCode/ElseExpression:
        enabled: false
      CleanCode/StaticAccess:
        enabled: false
ratings:
  paths:
  - "**.php"
exclude_paths:
- .idea/**
- .git/**
- src/run.php
- tests/**
- vendor/**


================================================
File: .dockerignore
================================================
.git
.dpl

================================================
File: .travis.yml
================================================
sudo: required

language: bash

services:
  - docker

before_script:
  - docker -v
  - docker build -t keboola/ex-email-attachments .
  - docker run --rm  keboola/ex-email-attachments composer install
  - docker run --rm  keboola/ex-email-attachments /code/vendor/bin/phpcs --standard=psr2 -n --ignore=vendor --extensions=php .
  - docker run --rm  keboola/ex-email-attachments /code/vendor/bin/phpstan analyse -c phpstan.neon --level=7 ./src

script:
  - >-
    docker run --rm
    -e "AWS_ACCESS_KEY_ID=${CI_AWS_ACCESS_KEY_ID}"
    -e "AWS_SECRET_ACCESS_KEY=${CI_AWS_SECRET_ACCESS_KEY}"
    -e "DYNAMO_TABLE=${CI_DYNAMO_TABLE}"
    -e "EMAIL_DOMAIN=${CI_EMAIL_DOMAIN}"
    -e "REGION=${CI_REGION}"
    -e "S3_BUCKET=${CI_S3_BUCKET}"
    keboola/ex-email-attachments ./vendor/bin/phpunit

after_success:
  - docker images

deploy:
  provider: script
  skip_cleanup: true
  script: ./deploy.sh
  on:
    tags: true


================================================
File: docker/php/php.ini
================================================
; Maximum amount of memory a script may consume (128MB)
; http://php.net/memory-limit
memory_limit = -1

; Defines the default timezone used by the date functions
; http://php.net/date.timezone
date.timezone = UTC

extension=mailparse.so


================================================
File: docker/xdebug/Dockerfile
================================================
FROM php:7.2-cli

WORKDIR /code

RUN apt-get update && apt-get install -y \
        git \
        unzip \
   --no-install-recommends && rm -r /var/lib/apt/lists/*

RUN curl -sS https://getcomposer.org/installer | php \
  && mv /code/composer.phar /usr/local/bin/composer

RUN pecl install xdebug \
  && docker-php-ext-enable xdebug

COPY . /code/
COPY ./docker/php/php.ini /usr/local/etc/php/php.ini
COPY ./docker/xdebug/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

RUN composer install


================================================
File: docker/xdebug/xdebug.ini
================================================
xdebug.remote_enable=1
xdebug.remote_autostart=1
xdebug.remote_connect_back=0
xdebug.profiler_enable=0


================================================
File: src/bootstrap.php
================================================
<?php

ini_set('display_errors', true);

date_default_timezone_set('Europe/Prague');

set_error_handler(function ($errno, $errstr, $errfile, $errline) {
    if (0 === error_reporting()) {
        return false;
    }
    throw new ErrorException($errstr, 0, $errno, $errfile, $errline);
});

require_once __DIR__ . '/../vendor/autoload.php';


================================================
File: src/run.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

require __DIR__ . '/bootstrap.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Output\ConsoleOutput;

$application = new Application;
$application->add(new \Keboola\ExEmailAttachments\RunCommand);
$application->run(null, new ConsoleOutput());


================================================
File: src/Keboola/ExEmailAttachments/App.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments;

use Keboola\ExEmailAttachments\Exception\Exception;
use Keboola\Temp\Temp;
use Symfony\Component\Console\Output\OutputInterface;

class App
{
    public static function execute($appConfiguration, $userConfiguration, Temp $temp, OutputInterface $consoleOutput)
    {
        switch ($userConfiguration['action']) {
            case 'run':
                $action = new \Keboola\ExEmailAttachments\Action\RunAction($appConfiguration, $temp, $consoleOutput);
                return $action->execute($userConfiguration);
                break;
            case 'get':
                $action = new \Keboola\ExEmailAttachments\Action\GetAction($appConfiguration, $temp, $consoleOutput);
                return $action->execute($userConfiguration);
                break;
            case 'list':
                $action = new \Keboola\ExEmailAttachments\Action\ListAction($appConfiguration, $temp, $consoleOutput);
                return $action->execute($userConfiguration);
                break;
            default:
                throw new Exception("Action {$userConfiguration['action']} is not supported");
        }
    }
}


================================================
File: src/Keboola/ExEmailAttachments/RunCommand.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */
namespace Keboola\ExEmailAttachments;

use Keboola\ExEmailAttachments\Exception\Exception;
use Keboola\Temp\Temp;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Serializer\Encoder\JsonDecode;
use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class RunCommand extends Command
{
    protected function configure()
    {
        $this->setName('run');
        $this->setDescription('Runs Extractor');
        $this->addArgument('data directory', InputArgument::REQUIRED, 'Data directory');
    }

    protected function execute(InputInterface $input, OutputInterface $consoleOutput)
    {
        $dataDirectory = $input->getArgument('data directory');
        $config = $this->getConfig($dataDirectory);

        try {
            $outputPath = "${dataDirectory}/out/tables";
            (new Filesystem())->mkdir([$outputPath]);

            $appConfiguration = $this->validateAppConfiguration($config);

            $userConfiguration = $this->validateUserConfiguration($config);
            $userConfiguration['outputPath'] = $outputPath;
            $userConfiguration['state'] = $this->getState($dataDirectory);

            $result = App::execute($appConfiguration, $userConfiguration, new Temp(), $consoleOutput);
            $jsonEncode = new \Symfony\Component\Serializer\Encoder\JsonEncode();
            $consoleOutput->writeln(is_array($result)
                ? $jsonEncode->encode($result, JsonEncoder::FORMAT) : $result);

            return 0;
        } catch (Exception $e) {
            $consoleOutput->writeln($e->getMessage());
            return 1;
        } catch (\Exception $e) {
            if ($consoleOutput instanceof ConsoleOutput) {
                $consoleOutput->getErrorOutput()->writeln("{$e->getMessage()}\n{$e->getTraceAsString()}");
            } else {
                $consoleOutput->writeln("{$e->getMessage()}\n{$e->getTraceAsString()}");
            }
            return 2;
        }
    }

    protected function getConfig($dataDirectory)
    {
        $configFile = "${dataDirectory}/config.json";
        if (!file_exists($configFile)) {
            throw new \Exception("Config file not found at path $configFile");
        }
        $jsonDecode = new JsonDecode(true);
        return $jsonDecode->decode(file_get_contents($configFile), JsonEncoder::FORMAT);
    }

    protected function getState($dataDirectory)
    {
        $inputStateFile = "${dataDirectory}/in/state.json";
        if (file_exists($inputStateFile)) {
            $jsonDecode = new JsonDecode(true);
            return $jsonDecode->decode(file_get_contents($inputStateFile), JsonEncoder::FORMAT);
        }
        return [];
    }

    public function validateAppConfiguration($config)
    {
        $params = $this->getRequiredParameters(
            $config,
            ['access_key_id', '#secret_access_key', 'region', 'bucket', 'email_domain', 'dynamo_table'],
            'image_parameters'
        );
        return [
            'accessKeyId' => $params['access_key_id'],
            'secretAccessKey' => $params['#secret_access_key'],
            'region' => $params['region'],
            'bucket' => $params['bucket'],
            'emailDomain' => $params['email_domain'],
            'dynamoTable' => $params['dynamo_table'],
        ];
    }

    public function validateUserConfiguration($config)
    {
        $result = [
            'kbcProject' => getenv('KBC_PROJECTID'),
            'action' => isset($config['action']) ? $config['action'] : 'run',
        ];
        if ($result['action'] == 'run') {
            $result['config'] = getenv('KBC_CONFIGID');
            $result = array_merge($result, $this->getRequiredParameters($config, ['email'], 'parameters'));
            $result = array_merge(
                $result,
                $this->getOptionalParameters(
                    $config,
                    ['incremental', 'enclosure', 'delimiter', 'primaryKey'],
                    'parameters'
                )
            );
            if (isset($result['primaryKey']) && !is_array($result['primaryKey'])) {
                throw new Exception('Primary Key parameter must be an array');
            }
        } elseif ($result['action'] == 'get') {
            $result = array_merge($result, $this->getRequiredParameters($config, ['config'], 'parameters'));
        }
        return $result;
    }

    protected function getRequiredParameters($config, $required, $field)
    {
        $result = [];
        foreach ($required as $input) {
            if (!isset($config[$field][$input])) {
                throw new Exception("$input is missing from $field");
            }
            $result[$input] = $config[$field][$input];
        }
        return $result;
    }

    protected function getOptionalParameters($config, $optional, $field)
    {
        $result = [];
        foreach ($optional as $input) {
            if (isset($config[$field][$input])) {
                $result[$input] = $config[$field][$input];
            }
        }
        return $result;
    }
}


================================================
File: src/Keboola/ExEmailAttachments/Action/AbstractAction.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Action;

use Aws\DynamoDb\DynamoDbClient;
use Aws\S3\S3Client;
use Aws\Ses\SesClient;
use Keboola\ExEmailAttachments\Exception\Exception;
use Keboola\Temp\Temp;
use Symfony\Component\Console\Output\OutputInterface;

abstract class AbstractAction
{
    /** @var array */
    protected $appConfiguration;
    /** @var Temp */
    protected $temp;
    /** @var OutputInterface */
    protected $consoleOutput;

    protected $emailDomain;
    protected $bucketName;

    public function __construct($appConfiguration, Temp $temp, OutputInterface $consoleOutput)
    {
        $this->appConfiguration = $appConfiguration;
        $this->temp = $temp;
        $this->consoleOutput= $consoleOutput;
    }

    protected function getAwsCredentials()
    {
        return [
            'credentials'=> [
                'key' => $this->appConfiguration['accessKeyId'],
                'secret' => $this->appConfiguration['secretAccessKey'],
            ],
            'region' => $this->appConfiguration['region'],
        ];
    }

    protected function initSes()
    {
        return new SesClient(array_merge($this->getAwsCredentials(), [
            'version' => '2010-12-01',
        ]));
    }

    protected function initS3()
    {
        return new S3Client(array_merge($this->getAwsCredentials(), [
            'version' => '2006-03-01',
        ]));
    }

    protected function initDynamoDb()
    {
        return new DynamoDbClient(array_merge($this->getAwsCredentials(), [
            'version' => '2012-08-10',
        ]));
    }

    protected function getDbRecord(DynamoDbClient $dynamo, $kbcProject, $config)
    {
        $result = $dynamo->query([
            'TableName' => $this->appConfiguration['dynamoTable'],
            'KeyConditions' => [
                'Project' => [
                    'AttributeValueList' => [
                        ['N' => $kbcProject],
                    ],
                    'ComparisonOperator' => 'EQ',
                ],
                'Config' => [
                    'AttributeValueList' => [
                        ['S' => $config],
                    ],
                    'ComparisonOperator' => 'EQ',
                ],
            ],
        ]);
        if (!$result['Count']) {
            throw new Exception('Email address is not configured for the project');
        }
        return $result['Items'][0]['Email']['S'];
    }
}


================================================
File: src/Keboola/ExEmailAttachments/Action/GetAction.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Action;

use Keboola\ExEmailAttachments\Exception\Exception;

class GetAction extends AbstractAction
{
    public function execute($userConfiguration)
    {
        $dynamo = $this->initDynamoDb();
        try {
            $email = $this->getDbRecord($dynamo, $userConfiguration['kbcProject'], $userConfiguration['config']);
        } catch (Exception $e) {
            $emailId = uniqid();
            $email = sprintf(
                '%s-%s-%s@%s',
                $userConfiguration['kbcProject'],
                $userConfiguration['config'],
                $emailId,
                $this->appConfiguration['emailDomain']
            );
            $dynamo->putItem([
                'TableName' => $this->appConfiguration['dynamoTable'],
                'Item' => [
                    'Project' => ['N' => $userConfiguration['kbcProject']],
                    'Config' => ['S' => $userConfiguration['config']],
                    'Email' => ['S' => $email],
                ],
            ]);
        }

        return ['email' => $email];
    }
}


================================================
File: src/Keboola/ExEmailAttachments/Action/ListAction.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Action;

class ListAction extends AbstractAction
{
    public function execute($userConfiguration)
    {
        $dynamo = $this->initDynamoDb();
        $result = $dynamo->query([
            'TableName' => $this->appConfiguration['dynamoTable'],
            'KeyConditions' => [
                'Project' => [
                    'AttributeValueList' => [
                        ['N' => $userConfiguration['kbcProject']]
                    ],
                    'ComparisonOperator' => 'EQ'
                ],
            ],
        ]);
        return array_map(function ($row) {
            return $row['Email']['S'];
        }, $result['Items']);
    }
}


================================================
File: src/Keboola/ExEmailAttachments/Action/RunAction.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Action;

use Aws\Api\DateTimeResult;
use Aws\S3\Exception\S3Exception;
use Aws\S3\S3Client;
use Keboola\ExEmailAttachments\Exception\EmailException;
use Keboola\ExEmailAttachments\Exception\InvalidEmailRecipientException;
use Keboola\ExEmailAttachments\Exception\MoreAttachmentsInEmailException;
use Keboola\ExEmailAttachments\Exception\NoAttachmentInEmailException;
use PhpMimeMailParser\Parser;
use Symfony\Component\Serializer\Encoder\JsonEncoder;

class RunAction extends AbstractAction
{
    /** @var S3Client */
    protected $s3Client;
    protected $lastDownloadedFileTimestamp;
    protected $processedFilesInLastTimestampSecond;
    protected $attachmentFolder;

    public function setAttachmentFolder($attachmentFolder)
    {
        $this->attachmentFolder = $attachmentFolder;
    }

    public function execute(array $userConfiguration)
    {
        $dynamo = $this->initDynamoDb();
        $emailRecipient = $this->getDbRecord($dynamo, $userConfiguration['kbcProject'], $userConfiguration['config']);

        $this->temp->initRunFolder();
        $this->s3Client = $this->initS3();

        $this->readState($userConfiguration);
        $filesToDownload = $this->listS3Files($userConfiguration['kbcProject'], $userConfiguration['config']);

        // Filter out processed files
        $filesToDownload = array_filter($filesToDownload, function ($fileToDownload) {
            /** @var DateTimeResult $lastModified */
            if ($fileToDownload['timestamp'] < $this->lastDownloadedFileTimestamp) {
                return false;
            }
            if (in_array($fileToDownload['key'], $this->processedFilesInLastTimestampSecond)) {
                return false;
            }
            return true;
        });

        $csvFiles = [];
        foreach ($filesToDownload as $fileToDownload) {
            try {
                $this->setAttachmentFolder($this->temp->getTmpFolder() . '/' . uniqid());
                mkdir($this->attachmentFolder);
                $csvFiles[] = $this->downloadAttachmentFromS3File($fileToDownload['key'], $emailRecipient);
                $this->updateState($fileToDownload['key'], $fileToDownload['timestamp']);
            } catch (EmailException $e) {
                $this->consoleOutput->writeln($e->getMessage());
            }
        }

        $this->saveFiles($userConfiguration, $csvFiles);
        $this->saveState($userConfiguration);
    }

    protected function listS3Files($kbcProject, $config)
    {
        try {
            $objects = $this->s3Client->getIterator('ListObjects', [
                'Bucket' => $this->appConfiguration['bucket'],
                'Prefix' => "{$kbcProject}/{$config}/",
            ]);
            $filesToDownload = [];
            foreach ($objects as $object) {
                /** @noinspection PhpUndefinedMethodInspection */
                $filesToDownload[] = [
                    'timestamp' => $object['LastModified']->format('U'),
                    'key' => $object['Key'],
                ];
            }
            return $filesToDownload;
        } catch (S3Exception $e) {
            if ($e->getAwsErrorCode() != 'AccessDenied') {
                throw $e;
            }
            // If error code is AccessDenied, there probably is not any email yet and so the folder does not exist
            return [];
        }
    }

    public function downloadAttachmentFromS3File(string $fileKey, string $emailRecipient) : string
    {
        $tempFile = $this->downloadS3File($fileKey);
        $parser = $this->parseEmailFromS3File($tempFile, $emailRecipient);
        return $this->getTextAttachment($parser);
    }

    public function downloadS3File(string $fileKey) : string
    {
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        $this->s3Client->getObject([
            'Bucket' => $this->appConfiguration['bucket'],
            'Key' => $fileKey,
            'SaveAs' => $tempFile,
        ]);
        return $tempFile;
    }

    public function getAddressesFromEmailField(string $field) : array
    {
        $result = [];
        foreach (mailparse_rfc822_parse_addresses($field) as $item) {
            $result[] = trim($item['address']);
        }
        return $result;
    }

    public function checkEmailInRecipients(array $fields, string $email) : bool
    {
        foreach ($fields as $field) {
            if (in_array($email, $this->getAddressesFromEmailField($field))) {
                return true;
            }
        }
        return false;
    }

    public function parseEmailFromS3File(string $tempFile, string $emailRecipient) : Parser
    {
        $parser = new Parser();
        $parser->setPath($tempFile);
        $parser->saveAttachments($this->attachmentFolder . '/');
        if (!$this->checkEmailInRecipients([
            $parser->getHeader('to'),
            $parser->getHeader('cc'),
            $parser->getHeader('bcc'),
        ], $emailRecipient)) {
            throw new InvalidEmailRecipientException($this->getFromAndDateClause($parser) . ' has invalid recipient.');
        }

        return $parser;
    }

    public function getFromAndDateClause(Parser $parser) : string
    {
        $date = $parser->getHeader('Date');
        $from = $this->getAddressesFromEmailField($parser->getHeader('From'))[0];
        return "Email sent by $from received on $date";
    }

    public function getTextAttachment(Parser $parser) : string
    {
        $result = null;
        $attachments = $parser->getAttachments();
        foreach ($attachments as $attachment) {
            $file = "{$this->attachmentFolder}/{$attachment->getFilename()}";
            if (substr(mime_content_type($file), 0, 5) === 'text/') {
                if ($result) {
                    throw new MoreAttachmentsInEmailException($this->getFromAndDateClause($parser) . ' has more than one text attachment.');
                }
                $result = $file;
            }
        }
        if (!$result) {
            throw new NoAttachmentInEmailException($this->getFromAndDateClause($parser) . ' has no text attachment.');
        }

        $this->consoleOutput->writeln($this->getFromAndDateClause($parser) . ' was processed and saved a csv file with size ' . filesize($result));
        return $result;
    }

    public function saveFiles(array $userConfiguration, array $files) : void
    {
        if (!count($files)) {
            $this->consoleOutput->writeln('No emails processed.');
            return;
        }

        foreach ($files as $i => $file) {
            $counter = $i > 0 ? $i : '';
            $newFileName = "{$userConfiguration['outputPath']}/data{$counter}.csv";
            rename($file, $newFileName);
            $this->saveManifest($newFileName, $userConfiguration);
        }
    }

    public function saveManifest(string $filename, array $userConfiguration) : void
    {
        $manifest = [];
        if (isset($userConfiguration['incremental'])) {
            $manifest['incremental'] = (bool)$userConfiguration['incremental'];
        }
        if (!empty($userConfiguration['delimiter'])) {
            $manifest['delimiter'] = $userConfiguration['delimiter'];
        }
        if (!empty($userConfiguration['enclosure'])) {
            $manifest['enclosure'] = $userConfiguration['enclosure'];
        }
        if (!empty($userConfiguration['primaryKey'])) {
            $manifest['primary_key'] = $userConfiguration['primaryKey'];
        }
        file_put_contents("{$filename}.manifest", json_encode($manifest));
    }

    protected function readState(array $userConfiguration) : void
    {
        $this->lastDownloadedFileTimestamp = isset($userConfiguration['state']['lastDownloadedFileTimestamp'])
            ? $userConfiguration['state']['lastDownloadedFileTimestamp'] : 0;
        $this->processedFilesInLastTimestampSecond = isset($userConfiguration['state']['processedFilesInLastTimestampSecond'])
            ? $userConfiguration['state']['processedFilesInLastTimestampSecond'] : [];
    }

    protected function updateState($fileKey, $timestamp) : void
    {
        if ($this->lastDownloadedFileTimestamp != $timestamp) {
            $this->processedFilesInLastTimestampSecond = [];
        }
        $this->lastDownloadedFileTimestamp = max($this->lastDownloadedFileTimestamp, $timestamp);
        $this->processedFilesInLastTimestampSecond[] = $fileKey;
    }

    protected function saveState(array $userConfiguration) : void
    {
        $outputStateFile = "{$userConfiguration['outputPath']}/../state.json";
        $jsonEncode = new \Symfony\Component\Serializer\Encoder\JsonEncode();
        file_put_contents($outputStateFile, $jsonEncode->encode(
            [
                'lastDownloadedFileTimestamp' => $this->lastDownloadedFileTimestamp,
                'processedFilesInLastTimestampSecond' => $this->processedFilesInLastTimestampSecond,
            ],
            JsonEncoder::FORMAT
        ));
    }
}


================================================
File: src/Keboola/ExEmailAttachments/Exception/EmailException.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Exception;

class EmailException extends Exception
{

}


================================================
File: src/Keboola/ExEmailAttachments/Exception/Exception.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Exception;

class Exception extends \Exception
{

}


================================================
File: src/Keboola/ExEmailAttachments/Exception/InvalidEmailRecipientException.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Exception;

class InvalidEmailRecipientException extends EmailException
{

}


================================================
File: src/Keboola/ExEmailAttachments/Exception/MoreAttachmentsInEmailException.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Exception;

class MoreAttachmentsInEmailException extends EmailException
{

}


================================================
File: src/Keboola/ExEmailAttachments/Exception/NoAttachmentInEmailException.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Exception;

class NoAttachmentInEmailException extends EmailException
{

}


================================================
File: tests/bootstrap.php
================================================
<?php

defined('AWS_ACCESS_KEY_ID')
|| define('AWS_ACCESS_KEY_ID', getenv('AWS_ACCESS_KEY_ID') ? getenv('AWS_ACCESS_KEY_ID') : null);

defined('AWS_SECRET_ACCESS_KEY')
|| define('AWS_SECRET_ACCESS_KEY', getenv('AWS_SECRET_ACCESS_KEY') ? getenv('AWS_SECRET_ACCESS_KEY') : null);

defined('DYNAMO_TABLE')
|| define('DYNAMO_TABLE', getenv('DYNAMO_TABLE') ? getenv('DYNAMO_TABLE') : null);

defined('EMAIL_DOMAIN')
|| define('EMAIL_DOMAIN', getenv('EMAIL_DOMAIN') ? getenv('EMAIL_DOMAIN') : null);

defined('REGION')
|| define('REGION', getenv('REGION') ? getenv('REGION') : null);

defined('S3_BUCKET')
|| define('S3_BUCKET', getenv('S3_BUCKET') ? getenv('S3_BUCKET') : null);

require_once __DIR__ . '/../vendor/autoload.php';


================================================
File: tests/Keboola/ExEmailAttachments/email
================================================
Return-Path: <test@keboola.com>
Received: from mail-wm0-f46.google.com (mail-wm0-f46.google.com [74.125.82.46])
 by inbound-smtp.eu-west-1.amazonaws.com with SMTP id f3u5akod30enk979a0s57vep6b9ourvlv4985f01
 for 313-5a392b308694a@import.test.keboola.com;
 Tue, 19 Dec 2017 15:07:54 +0000 (UTC)
Received-SPF: permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
Authentication-Results: amazonses.com;
 spf=permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFHYnRpQUpKeEtiSU1YQ0k0MzlPeEU0bmFid2RpR0R0RXJ2aGpIamlRNzRaSklZK0FLeVZzQ0ZFaE9XakhWdHhVcFNBS2tpckYvSDliVHM2RlgrdWd5bEMza054bG05OEt1NmdwV1l5YjVXRkcrK2hnMHpWMEFnNmdWNDBOTmw3SjlvU1Z0cW5wSWdqenhzM0ZoUkJoODErMlpWdm5MRmpFRFJTeEkxeHVxZStjOXc2WjNNbXVWZUtWVkxyS0FuVWltQUdqQzNseVVNWXd2U0tObmJRSDRBcVdpVkd3cTF0T2FWRmpBS0N3NmN4QU1KdGJRbDhnaW9KMzdZWUYwRnZ0M3VCMEZEcFlocVZUVXhTTlhKZTd5R2pFQUdOTlI4SU1rZmRsMzRoRTZCdWR4eEVQcExURW5aN0JWdEVZWDJjSjQ9
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=OK6DWDU4FuKzyUzM48iKFx+92yKtEWg4Rk5fQo4BlGuG0QqZeMGoiLrIB1InH2Pul6MDGrFE0uL8aqYWfilZDVD+GK6nUqCuD4R9ggpG8qgPZTQG+qAmWRbcdKhKw/dqgM763Io0WxxIMjLPPSEvvPskLdkq2XaqeGUig0NGQ+U=; c=relaxed/simple; s=shh3fegwg5fppqsuzphvschd53n6ihuv; d=amazonses.com; t=1513696075; v=1; bh=aTQnkumdtbJiGBBLqD5F+fjlo83C4AjUxH6S7gDFayw=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wm0-f46.google.com with SMTP id y82so11788759wmg.1
        for <313-5a392b308694a@import.test.keboola.com>; Tue, 19 Dec 2017 07:07:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=ABz37TqAuxTgN3t2sxSS7rim28FM3mAVQ8wPQMmwqiUbNPutQ4KyfxV6+oVZ70N66X
         eYgiEUhW8lGOXXwwzby0Eks1aT08E/QwsVqJriwtcsG4ciRDKZyZ8JW02GWD5goU6Lun
         J1ebQnY9rdjwJozOBzt5Rl9caGroD1EZqQZ5JS87bAXBxJnPVhbf+SIXP9XM3pq6aBoB
         pAuaohSz5jYnQhqSvWNmAmJX6nwwpxJDcRJEN6NxKc/kD1Y1AbzUdEWX59n2rLoZehYV
         l/v5ZlLU0YiK6/oH7dzdHL6ux0jfEkv2s/v/tkbtBwmvPQ73LMtucq2t3Tnbasuwo/bJ
         12mw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:in-reply-to:references
         :subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=lkCsQDTOe2+oNlLMHBSodgkE9M4L9GBvh6KRWtP+oDn3KPZyV9tIxeRFJ+bjanPfW7
         uYw8/e+5VwLvEYxmJPWkclXZNZYhLPmyERb/H2hpToUPuDNWBbnj2TIxisrWH1O0X8ae
         +B0ncnr6q302nVTkUYZ1VJvCwCFfYlyQ+Bi3GuJ70Lva4RJ4UAzCVmLWZDeym4bZA+NM
         qwy8Kvi5gWpe6Vqx3JiMdLBQpDuEFBwsR3IQaNeC30rAjVcnah00AAXfZip7DNPEYWge
         Ym/9ukbe58imPocdNgoluTLRdPc3KjEIs9uaG8L00Bg11hsUdfeH4/J8xFuYneF8dd65
         qbCA==
X-Gm-Message-State: AKGB3mKFQAKDdzChOOZNkK6vOquCmpU6R38aWqw36uTVe4MpPrPCo+ir
	wWDAYIqk5fWr2Ehrdx/KlAEW+zeYkX+C8A==
X-Google-Smtp-Source: ACJfBovoyjehirHb7vbDcR7vqqEf0JXreLN0Z5QmwLIFk5rMC6+HebFs71+mYoNLHdhXBAxZEqa3MQ==
X-Received: by 10.80.170.136 with SMTP id q8mr980128edc.134.1513696074144;
        Tue, 19 Dec 2017 07:07:54 -0800 (PST)
Return-Path: <test@keboola.com>
Received: from [10.0.1.8] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id t23sm13503149edb.70.2017.12.19.07.07.51
        for <313-5a392b308694a@import.test.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 19 Dec 2017 07:07:52 -0800 (PST)
Date: Tue, 19 Dec 2017 16:07:40 +0100
From: =?utf-8?Q?Jakub_Mat=C4=9Bjka?= <test@keboola.com>
To: {{EMAIL}}
Message-ID: <7bac924c-d316-4379-9497-486c8712e039@Spark>
In-Reply-To: <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
References: <9bebd73c-544d-4e31-a7b4-7c8d3d6c5d3d@Spark>
 <0f85e001-ae01-4c6e-aa87-7a6ea0306bfb@Spark>
 <06c62dc0-2d59-4d85-9940-7bbae1d4a4ee@Spark>
 <fe9e96b9-dcfe-449f-b28d-8195d8a3b4ff@Spark>
 <cd4902ed-2c45-44fc-bada-b15cc0ade175@Spark>
 <9c29aeec-63a3-4e8e-9020-8eacb5d12b99@Spark>
 <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
Subject: test
X-Readdle-Message-ID: 7bac924c-d316-4379-9497-486c8712e039@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5a392b45_625558ec_449"

--5a392b45_625558ec_449
Content-Type: multipart/alternative; boundary="5a392b45_2ae8944a_449"

--5a392b45_2ae8944a_449
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Sending the test file..


--5a392b45_2ae8944a_449
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Sending the test=
 file..</div>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22><br />
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =231abc9c;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23e67e22;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =233498db;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23d35400;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =2334495e;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =232ecc71;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =239b59b6;=22></blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</body>
</html>

--5a392b45_2ae8944a_449--

--5a392b45_625558ec_449
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="=?utf-8?Q?out.c=5Fmain.categories.csv?="

ImlkIiwibmFtZSIsIm9yZGVyIgoiYzEiLCJDYXRlZ29yeSAxIiwiMSIKImMyIiwiQ2F0ZWdvcnkg
MiIsIjIiCiJjMyIsIkNhdGVnb3J5IDMiLCIzIgoiYzQiLCJDYXRlZ29yeSA0IiwiNCIKImM1Iiwi
Q2F0ZWdvcnkgNSIsIjUiCg==

--5a392b45_625558ec_449--



================================================
File: tests/Keboola/ExEmailAttachments/email-cc
================================================
Return-Path: <test@keboola.com>
Received: from mail-wm0-f46.google.com (mail-wm0-f46.google.com [74.125.82.46])
 by inbound-smtp.eu-west-1.amazonaws.com with SMTP id f3u5akod30enk979a0s57vep6b9ourvlv4985f01
 for 313-5a392b308694a@import.test.keboola.com;
 Tue, 19 Dec 2017 15:07:54 +0000 (UTC)
Received-SPF: permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
Authentication-Results: amazonses.com;
 spf=permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFHYnRpQUpKeEtiSU1YQ0k0MzlPeEU0bmFid2RpR0R0RXJ2aGpIamlRNzRaSklZK0FLeVZzQ0ZFaE9XakhWdHhVcFNBS2tpckYvSDliVHM2RlgrdWd5bEMza054bG05OEt1NmdwV1l5YjVXRkcrK2hnMHpWMEFnNmdWNDBOTmw3SjlvU1Z0cW5wSWdqenhzM0ZoUkJoODErMlpWdm5MRmpFRFJTeEkxeHVxZStjOXc2WjNNbXVWZUtWVkxyS0FuVWltQUdqQzNseVVNWXd2U0tObmJRSDRBcVdpVkd3cTF0T2FWRmpBS0N3NmN4QU1KdGJRbDhnaW9KMzdZWUYwRnZ0M3VCMEZEcFlocVZUVXhTTlhKZTd5R2pFQUdOTlI4SU1rZmRsMzRoRTZCdWR4eEVQcExURW5aN0JWdEVZWDJjSjQ9
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=OK6DWDU4FuKzyUzM48iKFx+92yKtEWg4Rk5fQo4BlGuG0QqZeMGoiLrIB1InH2Pul6MDGrFE0uL8aqYWfilZDVD+GK6nUqCuD4R9ggpG8qgPZTQG+qAmWRbcdKhKw/dqgM763Io0WxxIMjLPPSEvvPskLdkq2XaqeGUig0NGQ+U=; c=relaxed/simple; s=shh3fegwg5fppqsuzphvschd53n6ihuv; d=amazonses.com; t=1513696075; v=1; bh=aTQnkumdtbJiGBBLqD5F+fjlo83C4AjUxH6S7gDFayw=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wm0-f46.google.com with SMTP id y82so11788759wmg.1
        for <313-5a392b308694a@import.test.keboola.com>; Tue, 19 Dec 2017 07:07:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=ABz37TqAuxTgN3t2sxSS7rim28FM3mAVQ8wPQMmwqiUbNPutQ4KyfxV6+oVZ70N66X
         eYgiEUhW8lGOXXwwzby0Eks1aT08E/QwsVqJriwtcsG4ciRDKZyZ8JW02GWD5goU6Lun
         J1ebQnY9rdjwJozOBzt5Rl9caGroD1EZqQZ5JS87bAXBxJnPVhbf+SIXP9XM3pq6aBoB
         pAuaohSz5jYnQhqSvWNmAmJX6nwwpxJDcRJEN6NxKc/kD1Y1AbzUdEWX59n2rLoZehYV
         l/v5ZlLU0YiK6/oH7dzdHL6ux0jfEkv2s/v/tkbtBwmvPQ73LMtucq2t3Tnbasuwo/bJ
         12mw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:in-reply-to:references
         :subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=lkCsQDTOe2+oNlLMHBSodgkE9M4L9GBvh6KRWtP+oDn3KPZyV9tIxeRFJ+bjanPfW7
         uYw8/e+5VwLvEYxmJPWkclXZNZYhLPmyERb/H2hpToUPuDNWBbnj2TIxisrWH1O0X8ae
         +B0ncnr6q302nVTkUYZ1VJvCwCFfYlyQ+Bi3GuJ70Lva4RJ4UAzCVmLWZDeym4bZA+NM
         qwy8Kvi5gWpe6Vqx3JiMdLBQpDuEFBwsR3IQaNeC30rAjVcnah00AAXfZip7DNPEYWge
         Ym/9ukbe58imPocdNgoluTLRdPc3KjEIs9uaG8L00Bg11hsUdfeH4/J8xFuYneF8dd65
         qbCA==
X-Gm-Message-State: AKGB3mKFQAKDdzChOOZNkK6vOquCmpU6R38aWqw36uTVe4MpPrPCo+ir
	wWDAYIqk5fWr2Ehrdx/KlAEW+zeYkX+C8A==
X-Google-Smtp-Source: ACJfBovoyjehirHb7vbDcR7vqqEf0JXreLN0Z5QmwLIFk5rMC6+HebFs71+mYoNLHdhXBAxZEqa3MQ==
X-Received: by 10.80.170.136 with SMTP id q8mr980128edc.134.1513696074144;
        Tue, 19 Dec 2017 07:07:54 -0800 (PST)
Return-Path: <test@keboola.com>
Received: from [10.0.1.8] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id t23sm13503149edb.70.2017.12.19.07.07.51
        for <313-5a392b308694a@import.test.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 19 Dec 2017 07:07:52 -0800 (PST)
Date: Tue, 19 Dec 2017 16:07:40 +0100
From: Test <test@keboola.com>
To: Test <test@keboola.com>
CC: "Test User"
	<{{EMAIL}}>
Message-ID: <7bac924c-d316-4379-9497-486c8712e039@Spark>
In-Reply-To: <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
References: <9bebd73c-544d-4e31-a7b4-7c8d3d6c5d3d@Spark>
 <0f85e001-ae01-4c6e-aa87-7a6ea0306bfb@Spark>
 <06c62dc0-2d59-4d85-9940-7bbae1d4a4ee@Spark>
 <fe9e96b9-dcfe-449f-b28d-8195d8a3b4ff@Spark>
 <cd4902ed-2c45-44fc-bada-b15cc0ade175@Spark>
 <9c29aeec-63a3-4e8e-9020-8eacb5d12b99@Spark>
 <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
Subject: test
X-Readdle-Message-ID: 7bac924c-d316-4379-9497-486c8712e039@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5a392b45_625558ec_449"

--5a392b45_625558ec_449
Content-Type: multipart/alternative; boundary="5a392b45_2ae8944a_449"

--5a392b45_2ae8944a_449
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Sending the test file..


--5a392b45_2ae8944a_449
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Sending the test=
 file..</div>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22><br />
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =231abc9c;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23e67e22;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =233498db;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23d35400;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =2334495e;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =232ecc71;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =239b59b6;=22></blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</body>
</html>

--5a392b45_2ae8944a_449--

--5a392b45_625558ec_449
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="=?utf-8?Q?out.c=5Fmain.categories.csv?="

ImlkIiwibmFtZSIsIm9yZGVyIgoiYzEiLCJDYXRlZ29yeSAxIiwiMSIKImMyIiwiQ2F0ZWdvcnkg
MiIsIjIiCiJjMyIsIkNhdGVnb3J5IDMiLCIzIgoiYzQiLCJDYXRlZ29yeSA0IiwiNCIKImM1Iiwi
Q2F0ZWdvcnkgNSIsIjUiCg==

--5a392b45_625558ec_449--



================================================
File: tests/Keboola/ExEmailAttachments/email-just-image
================================================
Return-Path: <test@test.com>
Received: from mail-wr0-f171.google.com (mail-wr0-f171.google.com [209.85.128.171])
 by inbound-smtp.us-east-1.amazonaws.com with SMTP id 5rvo2irm7s1la9lu4727rda6mpbgvnqs62lji1o1
 for 313-364030205-5a9fdbc57ec76@import.keboola.com;
 Tue, 03 Jul 2018 08:35:43 +0000 (UTC)
X-SES-Spam-Verdict: PASS
X-SES-Virus-Verdict: PASS
Received-SPF: pass (spfCheck: domain of keboola.com designates 209.85.128.171 as permitted sender) client-ip=209.85.128.171; envelope-from=test@test.com; helo=mail-wr0-f171.google.com;
Authentication-Results: amazonses.com;
 spf=pass (spfCheck: domain of keboola.com designates 209.85.128.171 as permitted sender) client-ip=209.85.128.171; envelope-from=test@test.com; helo=mail-wr0-f171.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFIcm9OSm9uTWUyOU9xYjZNby9vWkxpQlhIVjlXRzhHNGZxL0MyOU5QQlZZNTdjekJQMmhFTmVJWUJSVk9NaWRRSmRqMnpWU0o2STFLc3BHaVhNRDlqdWFCcVJWRzdqVTNqb1UvdVYvazVVNzVuUEhla1QzdzV1aWhjcXVTQzgxK1MrbkJreWpnVVIxMUNWb1JaRlZVT3FPRkpXTFRnVlg3SDAxQjZ4enJjaDhtaEdpdmRVNkNTd3pkL21hNDdzTnI2SHEvNk9pZjVwTWt5U3lCa1ZCdURzZzJJSDZHSTlVNjVhcG9pMEtIRTFwNWtrc0w3T2Y1L3FLZ09lbmVKYkV1VVg0SGU1RStDNG1QSExqTXJ1OUl4b0c3Um5jdzM2ZitYdEdvTEN2OXNyM2c9PQ==
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=Fnrtu35LAEisBuJRLqbty4glTEJGaRaIFHbyZ1r+DNfXG7AZrmsVCw1D1iIvwJb8aCRItCxekQ8PtCj0UbavLw0WrDkSSTAV5yKkHe8WhKnt0N6LCinIO+tHZQ7QHaom8twj9FSsvB8HKgdlfn1/pWjVCL+WreYvFu/mWQOWsEc=; c=relaxed/simple; s=ug7nbtf4gccmlpwj322ax3p6ow6yfsug; d=amazonses.com; t=1530606944; v=1; bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wr0-f171.google.com with SMTP id k7-v6so1037886wrq.0
        for <313-364030205-5a9fdbc57ec76@import.keboola.com>; Tue, 03 Jul 2018 01:35:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:subject:mime-version;
        bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=;
        b=ItCctM20oLRzCwiT7gtWH/mmhae8oxgtWQ6me3W2HJ4fulPdUAzQI+gdTbg6Wwg9iX
         Sl5VMXR82JM1am3EdqJ75fFGPEibz8u2qnqjAjQtUPXdi0rlpgVn7Yi5ucvYizhXu8gM
         QjCySeRUTu0C+DGkOaOTuFEwIBYeSZS6nhwapp8QRNlKxcXtyp9CphNOiARGbEE7knZA
         Jq1lorHCp+khZ+ljh2EBNLE6bJQHE4wukUo2EKYh9tlotmwmMpZmfgOC5I+SNFcZdLCC
         Qf8dvniIG1xW2rkA252rWzgr9dagZUoH4icrH38VpMfRKoztXSn0KMSQ05NXPjm9yNqN
         m7ng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:subject:mime-version;
        bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=;
        b=K4sYmYhZAo5iGFcPobnWqmbQDa2lx6hPRIX2hZ+UNrw2gEctf1HRlO6KRy3+1BgTnG
         BfRKNu3HxJvkHLHv15AE9J9c9Fp2gchQ4SOsBKzdkC45RKQmdkwGq703mwKyQr+diiaV
         ymMOjwCV/aY4Yqs7Fwys2zodqu6xkBXTlXJcfT2aW1W3H462rzqrL4n4pqH187XBsGCp
         fuvRoPI06PA/XRbtnFcxz9jBqlSJ2IU+JxDc/PaEFiVBhhPRD94DNk8lelWsGzK6raRJ
         kYviX11ATTHmE0VRVyeOqmwSagloaYx836rGaSYxu3qhZLSt+scMPyju1UAwEbJ2mfDw
         /ySQ==
X-Gm-Message-State: APt69E1C9gftVW7wXrwfBzASDe4NCZ91fIuhmkOgE4mFmh3qLGSjymwR
	Vz1+/fzM8vEgM6b0tRavppNnWyEn+vTe/g==
X-Google-Smtp-Source: AAOMgpcH/lfy/0hC/OOQTOvrZU7gVOz8RG9qkJTSll5HZKzRn5loW4ItAVWnwt12TrOr3IrW0NNEMg==
X-Received: by 2002:adf:b05c:: with SMTP id g28-v6mr21733742wra.128.1530606941930;
        Tue, 03 Jul 2018 01:35:41 -0700 (PDT)
Return-Path: <test@test.com>
Received: from [10.0.1.3] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id e128-v6sm1331578wma.46.2018.07.03.01.35.39
        for <313-364030205-5a9fdbc57ec76@import.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 03 Jul 2018 01:35:40 -0700 (PDT)
Date: Tue, 3 Jul 2018 10:35:30 +0200
From: =?utf-8?Q?Jakub_Mat=C4=9Bjka?= <test@test.com>
To: 313-364030205-5a9fdbc57ec76@import.keboola.com
Message-ID: <d70ff753-324b-4200-8dc8-5d290ae63ce9@Spark>
Subject: test
X-Readdle-Message-ID: d70ff753-324b-4200-8dc8-5d290ae63ce9@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5b3b3557_7c83e458_1363c"

--5b3b3557_7c83e458_1363c
Content-Type: multipart/alternative; boundary="5b3b3557_3f2dba31_1363c"

--5b3b3557_3f2dba31_1363c
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Test email

--5b3b3557_3f2dba31_1363c
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Test email</div>=

</body>
</html>

--5b3b3557_3f2dba31_1363c--

--5b3b3557_7c83e458_1363c
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="icon.png"

iVBORw0KGgoAAAANSUhEUgAAAPAAAAFwCAYAAACGkvb+AAABemlDQ1BJQ0MgUHJvZmlsZQAAKJF9
kE0rRGEUx38GkZdmwcLC4oYsNDQzyssOkwZZaFDeNneuOzNqXm53rpCNsrC1mA2yIfEJ2Ei+gFIK
CynZW1A2mq7zGBov5dR5zu85zzn/nnPA49MtK1nmh1TasSPhAW1qekareMBDI3U00aMbWat/bGwU
sa/4016vKVHxql1p/X3/16rnzawBJZXCfYZlO8JDws1LjqVY6dXb8inhNcXxAucURwt89FEzEQkJ
nwprRkKfF74T9hkJOwUepd8S/VYT/8ap5KLx+R81SY2ZnhxX9eKNZIkQZgCNYQYJ0UWAXjm7aCdI
h9xwzGVHNYcy1oq9EE84Wr9swtSG00aHTwv6A92g9vp7X8VcRubpeYLSzWIuegAnm9BwX8y17IJ3
HY7PLN3WP1Kl4p5YDJ4PoXYa6i6hajYb6wwWJqoZgfJH131pg4odyG+47tue6+b3pfkWznOFHX1q
sX8DE6swegFb29Aq2t65d3rJZ41gBqaqAAAACXBIWXMAAC4jAAAuIwF4pT92AAABWWlUWHRYTUw6
Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4
bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cu
dzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9u
IHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29t
L3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRp
b24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpM
widZAABAAElEQVR4Ae19CWAcR5V2V/eMpJHsOIePhNzOHVuyjQOJCQEltuQkkMDuYq6QABsIZDnD
EXZZdnfYfxdYYJflCBAgJISQELRsgGSTWLId5cI5cGJJVm4HkzuxYzu2pdEx3fV/71W1NBqNrtF0
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

--5b3b3557_7c83e458_1363c--



================================================
File: tests/Keboola/ExEmailAttachments/email-more-texts
================================================
Return-Path: <test@keboola.com>
Received: from mail-wm0-f46.google.com (mail-wm0-f46.google.com [74.125.82.46])
 by inbound-smtp.eu-west-1.amazonaws.com with SMTP id f3u5akod30enk979a0s57vep6b9ourvlv4985f01
 for 313-5a392b308694a@import.test.keboola.com;
 Tue, 19 Dec 2017 15:07:54 +0000 (UTC)
Received-SPF: permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
Authentication-Results: amazonses.com;
 spf=permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFHYnRpQUpKeEtiSU1YQ0k0MzlPeEU0bmFid2RpR0R0RXJ2aGpIamlRNzRaSklZK0FLeVZzQ0ZFaE9XakhWdHhVcFNBS2tpckYvSDliVHM2RlgrdWd5bEMza054bG05OEt1NmdwV1l5YjVXRkcrK2hnMHpWMEFnNmdWNDBOTmw3SjlvU1Z0cW5wSWdqenhzM0ZoUkJoODErMlpWdm5MRmpFRFJTeEkxeHVxZStjOXc2WjNNbXVWZUtWVkxyS0FuVWltQUdqQzNseVVNWXd2U0tObmJRSDRBcVdpVkd3cTF0T2FWRmpBS0N3NmN4QU1KdGJRbDhnaW9KMzdZWUYwRnZ0M3VCMEZEcFlocVZUVXhTTlhKZTd5R2pFQUdOTlI4SU1rZmRsMzRoRTZCdWR4eEVQcExURW5aN0JWdEVZWDJjSjQ9
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=OK6DWDU4FuKzyUzM48iKFx+92yKtEWg4Rk5fQo4BlGuG0QqZeMGoiLrIB1InH2Pul6MDGrFE0uL8aqYWfilZDVD+GK6nUqCuD4R9ggpG8qgPZTQG+qAmWRbcdKhKw/dqgM763Io0WxxIMjLPPSEvvPskLdkq2XaqeGUig0NGQ+U=; c=relaxed/simple; s=shh3fegwg5fppqsuzphvschd53n6ihuv; d=amazonses.com; t=1513696075; v=1; bh=aTQnkumdtbJiGBBLqD5F+fjlo83C4AjUxH6S7gDFayw=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wm0-f46.google.com with SMTP id y82so11788759wmg.1
        for <313-5a392b308694a@import.test.keboola.com>; Tue, 19 Dec 2017 07:07:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=ABz37TqAuxTgN3t2sxSS7rim28FM3mAVQ8wPQMmwqiUbNPutQ4KyfxV6+oVZ70N66X
         eYgiEUhW8lGOXXwwzby0Eks1aT08E/QwsVqJriwtcsG4ciRDKZyZ8JW02GWD5goU6Lun
         J1ebQnY9rdjwJozOBzt5Rl9caGroD1EZqQZ5JS87bAXBxJnPVhbf+SIXP9XM3pq6aBoB
         pAuaohSz5jYnQhqSvWNmAmJX6nwwpxJDcRJEN6NxKc/kD1Y1AbzUdEWX59n2rLoZehYV
         l/v5ZlLU0YiK6/oH7dzdHL6ux0jfEkv2s/v/tkbtBwmvPQ73LMtucq2t3Tnbasuwo/bJ
         12mw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:in-reply-to:references
         :subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=lkCsQDTOe2+oNlLMHBSodgkE9M4L9GBvh6KRWtP+oDn3KPZyV9tIxeRFJ+bjanPfW7
         uYw8/e+5VwLvEYxmJPWkclXZNZYhLPmyERb/H2hpToUPuDNWBbnj2TIxisrWH1O0X8ae
         +B0ncnr6q302nVTkUYZ1VJvCwCFfYlyQ+Bi3GuJ70Lva4RJ4UAzCVmLWZDeym4bZA+NM
         qwy8Kvi5gWpe6Vqx3JiMdLBQpDuEFBwsR3IQaNeC30rAjVcnah00AAXfZip7DNPEYWge
         Ym/9ukbe58imPocdNgoluTLRdPc3KjEIs9uaG8L00Bg11hsUdfeH4/J8xFuYneF8dd65
         qbCA==
X-Gm-Message-State: AKGB3mKFQAKDdzChOOZNkK6vOquCmpU6R38aWqw36uTVe4MpPrPCo+ir
	wWDAYIqk5fWr2Ehrdx/KlAEW+zeYkX+C8A==
X-Google-Smtp-Source: ACJfBovoyjehirHb7vbDcR7vqqEf0JXreLN0Z5QmwLIFk5rMC6+HebFs71+mYoNLHdhXBAxZEqa3MQ==
X-Received: by 10.80.170.136 with SMTP id q8mr980128edc.134.1513696074144;
        Tue, 19 Dec 2017 07:07:54 -0800 (PST)
Return-Path: <test@keboola.com>
Received: from [10.0.1.8] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id t23sm13503149edb.70.2017.12.19.07.07.51
        for <313-5a392b308694a@import.test.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 19 Dec 2017 07:07:52 -0800 (PST)
Date: Tue, 19 Dec 2017 16:07:40 +0100
From: =?utf-8?Q?Jakub_Mat=C4=9Bjka?= <test@keboola.com>
To: {{EMAIL}}
Message-ID: <7bac924c-d316-4379-9497-486c8712e039@Spark>
In-Reply-To: <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
References: <9bebd73c-544d-4e31-a7b4-7c8d3d6c5d3d@Spark>
 <0f85e001-ae01-4c6e-aa87-7a6ea0306bfb@Spark>
 <06c62dc0-2d59-4d85-9940-7bbae1d4a4ee@Spark>
 <fe9e96b9-dcfe-449f-b28d-8195d8a3b4ff@Spark>
 <cd4902ed-2c45-44fc-bada-b15cc0ade175@Spark>
 <9c29aeec-63a3-4e8e-9020-8eacb5d12b99@Spark>
 <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
Subject: test
X-Readdle-Message-ID: 7bac924c-d316-4379-9497-486c8712e039@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5a392b45_625558ec_449"

--5a392b45_625558ec_449
Content-Type: multipart/alternative; boundary="5a392b45_2ae8944a_449"

--5a392b45_2ae8944a_449
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Sending the test file..


--5a392b45_2ae8944a_449
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Sending the test=
 file..</div>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22><br />
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =231abc9c;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23e67e22;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =233498db;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23d35400;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =2334495e;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =232ecc71;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =239b59b6;=22></blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</body>
</html>

--5a392b45_625558ec_449
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="=?utf-8?Q?out.c=5Fmain.categories.csv?="

ImlkIiwibmFtZSIsIm9yZGVyIgoiYzEiLCJDYXRlZ29yeSAxIiwiMSIKImMyIiwiQ2F0ZWdvcnkg
MiIsIjIiCiJjMyIsIkNhdGVnb3J5IDMiLCIzIgoiYzQiLCJDYXRlZ29yeSA0IiwiNCIKImM1Iiwi
Q2F0ZWdvcnkgNSIsIjUiCg==

--5a392b45_625558ec_449
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="=?utf-8?Q?out.c=5Fmain.categories2.csv?="

ImlkIiwibmFtZSIsIm9yZGVyIg0KImM2IiwiQ2F0ZWdvcnkgNiIsIjYiDQoiYzciLCJDYXRlZ29yeSA3IiwiNyINCiJjOCIsIkNhdGVnb3J5IDgiLCI4Ig0K

--5a392b45_625558ec_449--


================================================
File: tests/Keboola/ExEmailAttachments/email-multiple-to
================================================
Return-Path: <test@keboola.com>
Received: from mail-wm0-f46.google.com (mail-wm0-f46.google.com [74.125.82.46])
 by inbound-smtp.eu-west-1.amazonaws.com with SMTP id f3u5akod30enk979a0s57vep6b9ourvlv4985f01
 for 313-5a392b308694a@import.test.keboola.com;
 Tue, 19 Dec 2017 15:07:54 +0000 (UTC)
Received-SPF: permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
Authentication-Results: amazonses.com;
 spf=permerror (spfCheck: Error in processing SPF Record) client-ip=74.125.82.46; envelope-from=test@keboola.com; helo=mail-wm0-f46.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFHYnRpQUpKeEtiSU1YQ0k0MzlPeEU0bmFid2RpR0R0RXJ2aGpIamlRNzRaSklZK0FLeVZzQ0ZFaE9XakhWdHhVcFNBS2tpckYvSDliVHM2RlgrdWd5bEMza054bG05OEt1NmdwV1l5YjVXRkcrK2hnMHpWMEFnNmdWNDBOTmw3SjlvU1Z0cW5wSWdqenhzM0ZoUkJoODErMlpWdm5MRmpFRFJTeEkxeHVxZStjOXc2WjNNbXVWZUtWVkxyS0FuVWltQUdqQzNseVVNWXd2U0tObmJRSDRBcVdpVkd3cTF0T2FWRmpBS0N3NmN4QU1KdGJRbDhnaW9KMzdZWUYwRnZ0M3VCMEZEcFlocVZUVXhTTlhKZTd5R2pFQUdOTlI4SU1rZmRsMzRoRTZCdWR4eEVQcExURW5aN0JWdEVZWDJjSjQ9
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=OK6DWDU4FuKzyUzM48iKFx+92yKtEWg4Rk5fQo4BlGuG0QqZeMGoiLrIB1InH2Pul6MDGrFE0uL8aqYWfilZDVD+GK6nUqCuD4R9ggpG8qgPZTQG+qAmWRbcdKhKw/dqgM763Io0WxxIMjLPPSEvvPskLdkq2XaqeGUig0NGQ+U=; c=relaxed/simple; s=shh3fegwg5fppqsuzphvschd53n6ihuv; d=amazonses.com; t=1513696075; v=1; bh=aTQnkumdtbJiGBBLqD5F+fjlo83C4AjUxH6S7gDFayw=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wm0-f46.google.com with SMTP id y82so11788759wmg.1
        for <313-5a392b308694a@import.test.keboola.com>; Tue, 19 Dec 2017 07:07:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=ABz37TqAuxTgN3t2sxSS7rim28FM3mAVQ8wPQMmwqiUbNPutQ4KyfxV6+oVZ70N66X
         eYgiEUhW8lGOXXwwzby0Eks1aT08E/QwsVqJriwtcsG4ciRDKZyZ8JW02GWD5goU6Lun
         J1ebQnY9rdjwJozOBzt5Rl9caGroD1EZqQZ5JS87bAXBxJnPVhbf+SIXP9XM3pq6aBoB
         pAuaohSz5jYnQhqSvWNmAmJX6nwwpxJDcRJEN6NxKc/kD1Y1AbzUdEWX59n2rLoZehYV
         l/v5ZlLU0YiK6/oH7dzdHL6ux0jfEkv2s/v/tkbtBwmvPQ73LMtucq2t3Tnbasuwo/bJ
         12mw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:in-reply-to:references
         :subject:mime-version;
        bh=7pOt0o+zUj7JntCkM0QXIgbACeye97ijWcI3/Qot1IM=;
        b=lkCsQDTOe2+oNlLMHBSodgkE9M4L9GBvh6KRWtP+oDn3KPZyV9tIxeRFJ+bjanPfW7
         uYw8/e+5VwLvEYxmJPWkclXZNZYhLPmyERb/H2hpToUPuDNWBbnj2TIxisrWH1O0X8ae
         +B0ncnr6q302nVTkUYZ1VJvCwCFfYlyQ+Bi3GuJ70Lva4RJ4UAzCVmLWZDeym4bZA+NM
         qwy8Kvi5gWpe6Vqx3JiMdLBQpDuEFBwsR3IQaNeC30rAjVcnah00AAXfZip7DNPEYWge
         Ym/9ukbe58imPocdNgoluTLRdPc3KjEIs9uaG8L00Bg11hsUdfeH4/J8xFuYneF8dd65
         qbCA==
X-Gm-Message-State: AKGB3mKFQAKDdzChOOZNkK6vOquCmpU6R38aWqw36uTVe4MpPrPCo+ir
	wWDAYIqk5fWr2Ehrdx/KlAEW+zeYkX+C8A==
X-Google-Smtp-Source: ACJfBovoyjehirHb7vbDcR7vqqEf0JXreLN0Z5QmwLIFk5rMC6+HebFs71+mYoNLHdhXBAxZEqa3MQ==
X-Received: by 10.80.170.136 with SMTP id q8mr980128edc.134.1513696074144;
        Tue, 19 Dec 2017 07:07:54 -0800 (PST)
Return-Path: <test@keboola.com>
Received: from [10.0.1.8] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id t23sm13503149edb.70.2017.12.19.07.07.51
        for <313-5a392b308694a@import.test.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 19 Dec 2017 07:07:52 -0800 (PST)
Date: Tue, 19 Dec 2017 16:07:40 +0100
From: Test <test@keboola.com>
To: "Test1, Test2 / Test + Test3 / PRG ZV-C"
	<user1@test.com>, Name Surname
	<user2@test3.com>, "Importer"
	<{{EMAIL}}>
CC: "ccuser1@test.com" <ccuser1@test.com>, "User2, Name / John +
 Jack / User Group" <group1@test.com>, "Doe, John / Tom +
 Jerry / Name ZV-K" <jerry@test.com>
Message-ID: <7bac924c-d316-4379-9497-486c8712e039@Spark>
In-Reply-To: <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
References: <9bebd73c-544d-4e31-a7b4-7c8d3d6c5d3d@Spark>
 <0f85e001-ae01-4c6e-aa87-7a6ea0306bfb@Spark>
 <06c62dc0-2d59-4d85-9940-7bbae1d4a4ee@Spark>
 <fe9e96b9-dcfe-449f-b28d-8195d8a3b4ff@Spark>
 <cd4902ed-2c45-44fc-bada-b15cc0ade175@Spark>
 <9c29aeec-63a3-4e8e-9020-8eacb5d12b99@Spark>
 <b5ab5b8d-9b84-4f9c-a43f-3c79ced6e2cc@Spark>
Subject: test
X-Readdle-Message-ID: 7bac924c-d316-4379-9497-486c8712e039@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5a392b45_625558ec_449"

--5a392b45_625558ec_449
Content-Type: multipart/alternative; boundary="5a392b45_2ae8944a_449"

--5a392b45_2ae8944a_449
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Sending the test file..


--5a392b45_2ae8944a_449
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Sending the test=
 file..</div>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22><br />
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =231abc9c;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23e67e22;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =233498db;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =23d35400;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =2334495e;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =232ecc71;=22>
<div name=3D=22messageReplySection=22 style=3D=22font-size: 14px; font-fa=
mily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>
<blockquote type=3D=22cite=22 style=3D=22margin: 5px 5px; padding-left: 1=
0px; border-left: thin solid =239b59b6;=22></blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</blockquote>
</div>
</body>
</html>

--5a392b45_2ae8944a_449--

--5a392b45_625558ec_449
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="=?utf-8?Q?out.c=5Fmain.categories.csv?="

ImlkIiwibmFtZSIsIm9yZGVyIgoiYzEiLCJDYXRlZ29yeSAxIiwiMSIKImMyIiwiQ2F0ZWdvcnkg
MiIsIjIiCiJjMyIsIkNhdGVnb3J5IDMiLCIzIgoiYzQiLCJDYXRlZ29yeSA0IiwiNCIKImM1Iiwi
Q2F0ZWdvcnkgNSIsIjUiCg==

--5a392b45_625558ec_449--



================================================
File: tests/Keboola/ExEmailAttachments/email-with-image
================================================
Return-Path: <test@test.com>
Received: from mail-wr0-f171.google.com (mail-wr0-f171.google.com [209.85.128.171])
 by inbound-smtp.us-east-1.amazonaws.com with SMTP id 5rvo2irm7s1la9lu4727rda6mpbgvnqs62lji1o1
 for 313-364030205-5a9fdbc57ec76@import.keboola.com;
 Tue, 03 Jul 2018 08:35:43 +0000 (UTC)
X-SES-Spam-Verdict: PASS
X-SES-Virus-Verdict: PASS
Received-SPF: pass (spfCheck: domain of keboola.com designates 209.85.128.171 as permitted sender) client-ip=209.85.128.171; envelope-from=test@test.com; helo=mail-wr0-f171.google.com;
Authentication-Results: amazonses.com;
 spf=pass (spfCheck: domain of keboola.com designates 209.85.128.171 as permitted sender) client-ip=209.85.128.171; envelope-from=test@test.com; helo=mail-wr0-f171.google.com;
 dkim=pass header.i=@keboola-com.20150623.gappssmtp.com;
X-SES-RECEIPT: AEFBQUFBQUFBQUFIcm9OSm9uTWUyOU9xYjZNby9vWkxpQlhIVjlXRzhHNGZxL0MyOU5QQlZZNTdjekJQMmhFTmVJWUJSVk9NaWRRSmRqMnpWU0o2STFLc3BHaVhNRDlqdWFCcVJWRzdqVTNqb1UvdVYvazVVNzVuUEhla1QzdzV1aWhjcXVTQzgxK1MrbkJreWpnVVIxMUNWb1JaRlZVT3FPRkpXTFRnVlg3SDAxQjZ4enJjaDhtaEdpdmRVNkNTd3pkL21hNDdzTnI2SHEvNk9pZjVwTWt5U3lCa1ZCdURzZzJJSDZHSTlVNjVhcG9pMEtIRTFwNWtrc0w3T2Y1L3FLZ09lbmVKYkV1VVg0SGU1RStDNG1QSExqTXJ1OUl4b0c3Um5jdzM2ZitYdEdvTEN2OXNyM2c9PQ==
X-SES-DKIM-SIGNATURE: a=rsa-sha256; q=dns/txt; b=Fnrtu35LAEisBuJRLqbty4glTEJGaRaIFHbyZ1r+DNfXG7AZrmsVCw1D1iIvwJb8aCRItCxekQ8PtCj0UbavLw0WrDkSSTAV5yKkHe8WhKnt0N6LCinIO+tHZQ7QHaom8twj9FSsvB8HKgdlfn1/pWjVCL+WreYvFu/mWQOWsEc=; c=relaxed/simple; s=ug7nbtf4gccmlpwj322ax3p6ow6yfsug; d=amazonses.com; t=1530606944; v=1; bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=; h=From:To:Cc:Bcc:Subject:Date:Message-ID:MIME-Version:Content-Type:X-SES-RECEIPT;
Received: by mail-wr0-f171.google.com with SMTP id k7-v6so1037886wrq.0
        for <313-364030205-5a9fdbc57ec76@import.keboola.com>; Tue, 03 Jul 2018 01:35:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=keboola-com.20150623.gappssmtp.com; s=20150623;
        h=date:from:to:message-id:subject:mime-version;
        bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=;
        b=ItCctM20oLRzCwiT7gtWH/mmhae8oxgtWQ6me3W2HJ4fulPdUAzQI+gdTbg6Wwg9iX
         Sl5VMXR82JM1am3EdqJ75fFGPEibz8u2qnqjAjQtUPXdi0rlpgVn7Yi5ucvYizhXu8gM
         QjCySeRUTu0C+DGkOaOTuFEwIBYeSZS6nhwapp8QRNlKxcXtyp9CphNOiARGbEE7knZA
         Jq1lorHCp+khZ+ljh2EBNLE6bJQHE4wukUo2EKYh9tlotmwmMpZmfgOC5I+SNFcZdLCC
         Qf8dvniIG1xW2rkA252rWzgr9dagZUoH4icrH38VpMfRKoztXSn0KMSQ05NXPjm9yNqN
         m7ng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:message-id:subject:mime-version;
        bh=OATszLpUrte9ysfYKHLogsibXhmHGVtXXyeE1J7nm7U=;
        b=K4sYmYhZAo5iGFcPobnWqmbQDa2lx6hPRIX2hZ+UNrw2gEctf1HRlO6KRy3+1BgTnG
         BfRKNu3HxJvkHLHv15AE9J9c9Fp2gchQ4SOsBKzdkC45RKQmdkwGq703mwKyQr+diiaV
         ymMOjwCV/aY4Yqs7Fwys2zodqu6xkBXTlXJcfT2aW1W3H462rzqrL4n4pqH187XBsGCp
         fuvRoPI06PA/XRbtnFcxz9jBqlSJ2IU+JxDc/PaEFiVBhhPRD94DNk8lelWsGzK6raRJ
         kYviX11ATTHmE0VRVyeOqmwSagloaYx836rGaSYxu3qhZLSt+scMPyju1UAwEbJ2mfDw
         /ySQ==
X-Gm-Message-State: APt69E1C9gftVW7wXrwfBzASDe4NCZ91fIuhmkOgE4mFmh3qLGSjymwR
	Vz1+/fzM8vEgM6b0tRavppNnWyEn+vTe/g==
X-Google-Smtp-Source: AAOMgpcH/lfy/0hC/OOQTOvrZU7gVOz8RG9qkJTSll5HZKzRn5loW4ItAVWnwt12TrOr3IrW0NNEMg==
X-Received: by 2002:adf:b05c:: with SMTP id g28-v6mr21733742wra.128.1530606941930;
        Tue, 03 Jul 2018 01:35:41 -0700 (PDT)
Return-Path: <test@test.com>
Received: from [10.0.1.3] (ip-78-45-129-24.net.upcbroadband.cz. [78.45.129.24])
        by smtp.gmail.com with ESMTPSA id e128-v6sm1331578wma.46.2018.07.03.01.35.39
        for <313-364030205-5a9fdbc57ec76@import.keboola.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 03 Jul 2018 01:35:40 -0700 (PDT)
Date: Tue, 3 Jul 2018 10:35:30 +0200
From: =?utf-8?Q?Jakub_Mat=C4=9Bjka?= <test@test.com>
To: 313-364030205-5a9fdbc57ec76@import.keboola.com
Message-ID: <d70ff753-324b-4200-8dc8-5d290ae63ce9@Spark>
Subject: test
X-Readdle-Message-ID: d70ff753-324b-4200-8dc8-5d290ae63ce9@Spark
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="5b3b3557_7c83e458_1363c"

--5b3b3557_7c83e458_1363c
Content-Type: multipart/alternative; boundary="5b3b3557_3f2dba31_1363c"

--5b3b3557_3f2dba31_1363c
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Test email

--5b3b3557_3f2dba31_1363c
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<html xmlns=3D=22http://www.w3.org/1999/xhtml=22>
<head>
<title></title>
</head>
<body>
<div name=3D=22messageBodySection=22 style=3D=22font-size: 14px; font-fam=
ily: -apple-system, BlinkMacSystem=46ont, sans-serif;=22>Test email</div>=

</body>
</html>

--5b3b3557_3f2dba31_1363c--

--5b3b3557_7c83e458_1363c
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="icon.png"

iVBORw0KGgoAAAANSUhEUgAAAPAAAAFwCAYAAACGkvb+AAABemlDQ1BJQ0MgUHJvZmlsZQAAKJF9
kE0rRGEUx38GkZdmwcLC4oYsNDQzyssOkwZZaFDeNneuOzNqXm53rpCNsrC1mA2yIfEJ2Ei+gFIK
CynZW1A2mq7zGBov5dR5zu85zzn/nnPA49MtK1nmh1TasSPhAW1qekareMBDI3U00aMbWat/bGwU
sa/4016vKVHxql1p/X3/16rnzawBJZXCfYZlO8JDws1LjqVY6dXb8inhNcXxAucURwt89FEzEQkJ
nwprRkKfF74T9hkJOwUepd8S/VYT/8ap5KLx+R81SY2ZnhxX9eKNZIkQZgCNYQYJ0UWAXjm7aCdI
h9xwzGVHNYcy1oq9EE84Wr9swtSG00aHTwv6A92g9vp7X8VcRubpeYLSzWIuegAnm9BwX8y17IJ3
HY7PLN3WP1Kl4p5YDJ4PoXYa6i6hajYb6wwWJqoZgfJH131pg4odyG+47tue6+b3pfkWznOFHX1q
sX8DE6swegFb29Aq2t65d3rJZ41gBqaqAAAACXBIWXMAAC4jAAAuIwF4pT92AAABWWlUWHRYTUw6
Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4
bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cu
dzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9u
IHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29t
L3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRp
b24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpM
widZAABAAElEQVR4Ae19CWAcR5V2V/eMpJHsOIePhNzOHVuyjQOJCQEltuQkkMDuYq6QABsIZDnD
EXZZdnfYfxdYYJflCBAgJISQELRsgGSTWLId5cI5cGJJVm4HkzuxYzu2pdEx3fV/71W1NBqNrtF0
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

--5b3b3557_7c83e458_1363c
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="test.csv"

YSxiLGMKMSwyLDMKNCw1LDY=

--5b3b3557_7c83e458_1363c--



================================================
File: tests/Keboola/ExEmailAttachments/Functional/AbstractTest.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Tests\Functional;

use Aws\DynamoDb\DynamoDbClient;
use Aws\S3\S3Client;
use Aws\Ses\SesClient;
use Keboola\Temp\Temp;
use Symfony\Component\Filesystem\Filesystem;

abstract class AbstractTest extends \PHPUnit\Framework\TestCase
{
    protected $project;
    protected $outputPath;
    /** @var DynamoDbClient */
    protected $dynamo;
    /** @var SesClient */
    protected $ses;
    /** @var S3Client */
    protected $s3;
    protected $appConfiguration;
    /** @var Temp */
    protected $temp;

    protected function setUp()
    {
        parent::setUp();
        $this->dynamo = new DynamoDbClient([
            'credentials'=> [
                'key' => AWS_ACCESS_KEY_ID,
                'secret' => AWS_SECRET_ACCESS_KEY,
            ],
            'region' => REGION,
            'version' => '2012-08-10',
        ]);
        $this->ses = new SesClient([
            'credentials'=> [
                'key' => AWS_ACCESS_KEY_ID,
                'secret' => AWS_SECRET_ACCESS_KEY,
            ],
            'region' => REGION,
            'version' => '2010-12-01',
        ]);
        $this->s3 = new S3Client([
            'credentials'=> [
                'key' => AWS_ACCESS_KEY_ID,
                'secret' => AWS_SECRET_ACCESS_KEY,
            ],
            'region' => REGION,
            'version' => '2006-03-01',
        ]);
        $this->project = (string)rand(1100, 1200);

        $this->outputPath = '/data/out/tables';
        (new Filesystem())->mkdir([$this->outputPath]);
        $this->appConfiguration = [
            'accessKeyId' => AWS_ACCESS_KEY_ID,
            'secretAccessKey' => AWS_SECRET_ACCESS_KEY,
            'region' => REGION,
            'bucket' => S3_BUCKET,
            'emailDomain' => EMAIL_DOMAIN,
            'dynamoTable' => DYNAMO_TABLE,
        ];
        $this->temp = new Temp();

        $this->cleanDynamo();
        $this->cleanS3();
    }

    protected function tearDown()
    {
        parent::tearDown();

        $this->cleanDynamo();
        $this->cleanS3();
    }

    protected function cleanDynamo()
    {
        $result = $this->dynamo->query([
            'TableName' => DYNAMO_TABLE,
            'KeyConditions' => [
                'Project' => [
                    'AttributeValueList' => [
                        ['N' => $this->project],
                    ],
                    'ComparisonOperator' => 'EQ',
                ],
            ],
        ]);
        if (count($result['Items'])) {
            $this->dynamo->batchWriteItem([
                'RequestItems' => [
                    DYNAMO_TABLE => array_map(function ($row) {
                        return [
                            'DeleteRequest' => [
                                'Key' => [
                                    'Project' => ['N' => $this->project],
                                    'Config' => ['S' => $row['Config']['S']],
                                ],
                            ],
                        ];
                    }, $result['Items'])
                ],
            ]);
        }
    }

    protected function cleanS3()
    {
        $this->s3->deleteMatchingObjects(S3_BUCKET, "$this->project/");
    }
}


================================================
File: tests/Keboola/ExEmailAttachments/Functional/GetTest.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Tests\Functional;

use Keboola\ExEmailAttachments\App;
use Symfony\Component\Console\Output\NullOutput;

class GetTest extends AbstractTest
{
    public function testGet()
    {
        $config = uniqid();
        $result = App::execute(
            $this->appConfiguration,
            ['action' => 'get', 'kbcProject' => $this->project, 'config' => $config],
            $this->temp,
            new NullOutput()
        );
        $this->assertArrayHasKey('email', $result);
        $this->assertStringStartsWith($this->project, $result['email']);
        preg_match('/^\d+-(.+)@' . EMAIL_DOMAIN . '/', $result['email'], $match);

        $dbRow = $this->dynamo->query([
            'TableName' => DYNAMO_TABLE,
            'KeyConditions' => [
                'Project' => [
                    'AttributeValueList' => [
                        ['N' => $this->project]
                    ],
                    'ComparisonOperator' => 'EQ'
                ],
                'Config' => [
                    'AttributeValueList' => [
                        ['S' => $config]
                    ],
                    'ComparisonOperator' => 'EQ'
                ],
            ],
        ]);
        $this->assertArrayHasKey('Items', $dbRow);
        $this->assertCount(1, $dbRow['Items']);
        $this->assertArrayHasKey('Email', $dbRow['Items'][0]);
        $this->assertArrayHasKey('S', $dbRow['Items'][0]['Email']);
        $this->assertEquals($result['email'], $dbRow['Items'][0]['Email']['S']);

        // Call add once more but it should return the same email
        $result2 = App::execute(
            $this->appConfiguration,
            ['action' => 'get', 'kbcProject' => $this->project, 'config' => $config],
            $this->temp,
            new NullOutput()
        );
        $this->assertArrayHasKey('email', $result2);
        $this->assertEquals($result['email'], $result2['email']);
    }
}


================================================
File: tests/Keboola/ExEmailAttachments/Functional/ListTest.php
================================================
<?php
/**
 * @package ex-email-attachments
 * @copyright 2017 Keboola
 * @author Jakub Matejka <jakub@keboola.com>
 */

namespace Keboola\ExEmailAttachments\Tests\Functional;

use Keboola\ExEmailAttachments\App;
use Symfony\Component\Console\Output\NullOutput;

class ListTest extends AbstractTest
{
    public function testList()
    {
        $config1 = uniqid();
        $config2 = uniqid();
        $email1 = uniqid() . '@' . EMAIL_DOMAIN;
        $email2 = uniqid() . '@' . EMAIL_DOMAIN;
        $this->dynamo->putItem([
            'TableName' => DYNAMO_TABLE,
            'Item' => [
                'Project' => ['N' => $this->project],
                'Config' => ['S' => $config1],
                'Email' => ['S' => $email1],
            ],
        ]);
        $this->dynamo->putItem([
            'TableName' => DYNAMO_TABLE,
            'Item' => [
                'Project' => ['N' => $this->project],
                'Config' => ['S' => $config2],
                'Email' => ['S' => $email2],
            ],
        ]);

        $result = App::execute(
            $this->appConfiguration,
            ['action' => 'list', 'kbcProject' => $this->project],
            $this->temp,
            new NullOutput()
        );
        $this->assertCount(2, $result);
        $this->assertArraySubset([$email1, $email2], $result);
    }
}


================================================
File: tests/Keboola/ExEmailAttachments/Functional/RunTest.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Tests\Functional;

use Keboola\ExEmailAttachments\App;
use Symfony\Component\Console\Output\NullOutput;

class RunTest extends AbstractTest
{
    public function testRunOk()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;

        $emailBody = str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email'));
        $this->s3->putObject([
            'Bucket' => S3_BUCKET,
            'Key' => "{$this->project}/{$config}/{$id}0",
            'Body' => $emailBody,
        ]);
        sleep(2);
        $this->s3->putObject([
            'Bucket' => S3_BUCKET,
            'Key' => "{$this->project}/{$config}/{$id}",
            'Body' => $emailBody,
        ]);
        $object = $this->s3->headObject([
            'Bucket' => S3_BUCKET,
            'Key' => "{$this->project}/{$config}/{$id}",
        ]);
        $lastDownloadedFileTimestamp = $object['LastModified']->format('U') - 1;
        $this->dynamo->putItem([
            'TableName' => DYNAMO_TABLE,
            'Item' => [
                'Project' => ['N' => $this->project],
                'Config' => ['S' => $config],
                'Email' => ['S' => $email],
            ],
        ]);

        App::execute(
            $this->appConfiguration,
            [
                'action' => 'run',
                'config' => $config,
                'kbcProject' => $this->project,
                'outputPath' => $this->outputPath,
                'email' => $email,
                'incremental' => true,
                'enclosure' => '"',
                'delimiter' => ',',
                'primaryKey' => ['id'],
                'state' => ['lastDownloadedFileTimestamp' => $lastDownloadedFileTimestamp],
            ],
            $this->temp,
            new NullOutput()
        );
        $dataFolder = '/data/out/tables';
        $this->assertDirectoryExists($dataFolder);

        $this->assertFileExists("$dataFolder/data.csv.manifest");
        $manifest = json_decode(file_get_contents("$dataFolder/data.csv.manifest"), true);
        $this->assertArrayHasKey('incremental', $manifest);
        $this->assertArrayHasKey('enclosure', $manifest);
        $this->assertArrayHasKey('delimiter', $manifest);
        $this->assertEquals(true, $manifest['incremental']);
        $this->assertEquals('"', $manifest['enclosure']);
        $this->assertEquals(',', $manifest['delimiter']);

        $this->assertFileExists("$dataFolder/data.csv");
        $file = file("$dataFolder/data.csv");
        $this->assertCount(6, $file);
        $this->assertEquals('"id","name","order"', trim($file[0]));
    }
}


================================================
File: tests/Keboola/ExEmailAttachments/Unit/RunActionTest.php
================================================
<?php

namespace Keboola\ExEmailAttachments\Tests\Unit;

use Keboola\ExEmailAttachments\Action\RunAction;
use Keboola\ExEmailAttachments\Exception\InvalidEmailRecipientException;
use Keboola\ExEmailAttachments\Exception\MoreAttachmentsInEmailException;
use Keboola\ExEmailAttachments\Exception\NoAttachmentInEmailException;
use Keboola\Temp\Temp;
use PhpMimeMailParser\Parser;
use Symfony\Component\Console\Output\NullOutput;

class RunActionTest extends \PHPUnit\Framework\TestCase
{
    /** @var Temp */
    protected $temp;
    /** @var RunAction */
    protected $runAction;
    protected $project;
    protected $id;
    protected $config;
    protected $email;

    protected function setUp()
    {
        $this->temp = new Temp();
        $this->temp->initRunFolder();
        $this->runAction = new RunAction([
            'accessKeyId' => 'accessKeyId',
            'secretAccessKey' => 'secretAccessKey',
            'region' => 'us-wast-1',
            'bucket' => 'bucket',
            'emailDomain' => 'test.com',
            'dynamoTable' => 'table',
        ], $this->temp, new NullOutput());
        $this->project = rand(1, 1000);
        $this->id = uniqid();
        $this->config = uniqid();
        $this->email = "{$this->project}-{$this->config}-{$this->id}@" . EMAIL_DOMAIN;
    }

    public function testCheckEmailInRecipients()
    {
        $this->assertTrue($this->runAction->checkEmailInRecipients([$this->email], $this->email));
        $this->assertTrue($this->runAction->checkEmailInRecipients([$this->email, 'user@test.com'], $this->email));
        $this->assertTrue($this->runAction->checkEmailInRecipients([" {$this->email} "], $this->email));
        $this->assertFalse($this->runAction->checkEmailInRecipients([" {$this->email}x "], $this->email));
        $this->assertTrue($this->runAction->checkEmailInRecipients(["<{$this->email}> "], $this->email));
        $this->assertTrue($this->runAction->checkEmailInRecipients(["\"\" <{$this->email}>"], $this->email));
        $this->assertTrue($this->runAction->checkEmailInRecipients(["\"Test\" <{$this->email}>"], $this->email));
    }

    public function testCheckEmailInRecipientsWithParserCc()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-cc'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);

        $this->assertTrue($this->runAction->checkEmailInRecipients([
            $parser->getHeader('to'),
            $parser->getHeader('cc'),
            $parser->getHeader('bcc'),
        ], $email));
    }

    public function testCheckEmailInRecipientsWithParserMultipleTo()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-multiple-to'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);

        $this->assertTrue($this->runAction->checkEmailInRecipients([
            $parser->getHeader('to'),
            $parser->getHeader('cc'),
            $parser->getHeader('bcc'),
        ], $email));
    }

    public function testParseEmailFromS3FileInvalidRecipient()
    {
        $email = "xx@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();

        $this->expectException(InvalidEmailRecipientException::class);
        $this->runAction->parseEmailFromS3File($tempFile, $email);
    }

    public function testParseEmailFromS3FileOk()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-multiple-to'))
        );

        $result = $this->runAction->parseEmailFromS3File($tempFile, $email);
        $this->assertCount(1, $result->getAttachments());
    }

    public function testGetFromAndDateClause()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-multiple-to'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);
        $this->assertEquals(
            "Email sent by test@keboola.com received on Tue, 19 Dec 2017 16:07:40 +0100",
            $this->runAction->getFromAndDateClause($parser)
        );
    }

    public function testGetTextAttachmentOk()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-with-image'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);
        $parser->saveAttachments($this->temp->getTmpFolder() . '/');
        $this->runAction->setAttachmentFolder($this->temp->getTmpFolder());

        $this->assertStringEndsWith('test.csv', $this->runAction->getTextAttachment($parser));
    }

    public function testGetTextAttachmentNoText()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-just-image'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);
        $parser->saveAttachments($this->temp->getTmpFolder() . '/');
        $this->runAction->setAttachmentFolder($this->temp->getTmpFolder());

        $this->expectException(NoAttachmentInEmailException::class);
        $this->runAction->getTextAttachment($parser);
    }

    public function testGetTextAttachmentMoreTexts()
    {
        $id = uniqid();
        $config = uniqid();
        $email = "{$this->project}-{$config}-{$id}@" . EMAIL_DOMAIN;
        $tempFile = $this->temp->createTmpFile()->getRealPath();
        file_put_contents(
            $tempFile,
            str_replace('{{EMAIL}}', $email, file_get_contents(__DIR__ . '/../email-more-texts'))
        );

        $parser = new Parser();
        $parser->setPath($tempFile);
        $parser->saveAttachments($this->temp->getTmpFolder() . '/');
        $this->runAction->setAttachmentFolder($this->temp->getTmpFolder());

        $this->expectException(MoreAttachmentsInEmailException::class);
        $this->runAction->getTextAttachment($parser);
    }

    public function testSaveFiles()
    {
        $tempFile1 = $this->temp->createTmpFile()->getRealPath();
        file_put_contents($tempFile1, "id;name;order\n1;a;11\n2;b;22");
        $tempFile2 = $this->temp->createTmpFile()->getRealPath();
        file_put_contents($tempFile2, "id2;name2;order2\n3;c;33\n4;d;44");

        $this->runAction->saveFiles([
            'outputPath' => $this->temp->getTmpFolder(),
            'incremental' => true,
            'enclosure' => '"',
            'delimiter' => ';',
            'primaryKey' => ['id'],
        ], [$tempFile1, $tempFile2]);

        $this->assertFileExists("{$this->temp->getTmpFolder()}/data.csv.manifest");
        $manifest = json_decode(file_get_contents("{$this->temp->getTmpFolder()}/data.csv.manifest"), true);
        $this->assertArrayHasKey('delimiter', $manifest);
        $this->assertEquals(';', $manifest['delimiter']);

        $this->assertFileExists("{$this->temp->getTmpFolder()}/data1.csv.manifest");
        $manifest = json_decode(file_get_contents("{$this->temp->getTmpFolder()}/data1.csv.manifest"), true);
        $this->assertArrayHasKey('delimiter', $manifest);
        $this->assertEquals(';', $manifest['delimiter']);

        $this->assertFileExists("{$this->temp->getTmpFolder()}/data.csv");
        $file1 = file("{$this->temp->getTmpFolder()}/data.csv");
        $this->assertCount(3, $file1);
        $this->assertEquals('id;name;order', trim($file1[0]));

        $this->assertFileExists("{$this->temp->getTmpFolder()}/data1.csv");
        $file2 = file("{$this->temp->getTmpFolder()}/data1.csv");
        $this->assertCount(3, $file2);
        $this->assertEquals('id;name;order', trim($file1[0]));
    }
}


